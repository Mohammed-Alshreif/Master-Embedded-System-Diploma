/**
 ******************************************************************************
 * @file           : main.c
 * @author         : MOHAMMED Adel Alshreif
 * @brief          : Main program body
 ******************************************************************************
 ******************************************************************************
 */
#include "STM32_TIMERS_DRIVER.h"
#include "stm32_speed_DRIVER.h"
#include "Triac_drimmer.h"
#include "stm32f103c6_ADC.h"
#define clk 36000000

uint16_t arr[3][8]={
		{155,0,0,255,0,0,50,20},
		{155,155,0,0,255,0,50,100},
		{0,0,255,155,0,155,34,55}};

uint8_t A[8][5] = {
		{1, 1, 1, 1, 1},
		{1, 0, 0, 0, 1},
		{1, 0, 0, 0, 1},
		{1, 1, 1, 1, 1},
		{1, 0, 0, 0, 1},
		{1, 0, 0, 0, 1},
		{1, 0, 0, 0, 1},
		{1, 0, 0, 0, 1},
};
uint8_t O[8][5] = {
		{1, 1, 1, 1, 1},
		{1, 0, 0, 0, 1},
		{1, 0, 0, 0, 1},
		{1, 0, 0, 0, 1},
		{1, 0, 0, 0, 1},
		{1, 0, 0, 0, 1},
		{1, 0, 0, 0, 1},
		{1, 1, 1, 1, 1}
};
uint8_t H[8][5] = {
		{1, 0, 0, 0, 1},
		{1, 0, 0, 0, 1},
		{1, 0, 0, 0, 1},
		{1, 1, 1, 1, 1},
		{1, 1, 1, 1, 1},
		{1, 0, 0, 0, 1},
		{1, 0, 0, 0, 1},
		{1, 0, 0, 0, 1}
};
uint8_t E[8][5] = {
		{1, 1, 1, 1, 1},
		{1, 0, 0, 0, 0},
		{1, 0, 0, 0, 0},
		{1, 1, 1, 1, 1},
		{1, 1, 1, 1, 1},
		{1, 0, 0, 0, 0},
		{1, 0, 0, 0, 0},
		{1, 1, 1, 1, 1}
};
uint8_t M[8][5] = {
		{1, 1, 0, 1, 1},
		{1, 1, 0, 1, 1},
		{1, 1, 0, 1, 1},
		{1, 0, 1, 0, 1},
		{1, 0, 1, 0, 1},
		{1, 0, 0, 0, 1},
		{1, 0, 0, 0, 1},
		{1, 0, 0, 0, 1}
};
uint8_t D[8][5] = {
		{1, 1, 1, 0, 0},
		{1, 0, 0, 1, 0},
		{1, 0, 0, 0, 1},
		{1, 0, 0, 0, 1},
		{1, 0, 0, 0, 1},
		{1, 0, 0, 0, 1},
		{1, 0, 0, 1, 0},
		{1, 1, 1, 0, 0}
};
uint8_t sp[8][5] = {
		{0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0}
};
uint8_t R[8][5] = {
		{1, 1, 1, 1, 1},
		{1, 0, 0, 0, 1},
		{1, 0, 0, 0, 1},
		{1, 1, 1, 1, 1},
		{1, 1, 0, 0, 0},
		{1, 0, 1, 0, 0},
		{1, 0, 0, 1, 0},
		{1, 0, 0, 0, 1},
};
uint8_t T[8][5] = {
		{1, 1, 1, 1, 1},
		{0, 0, 1, 0, 0},
		{0, 0, 1, 0, 0},
		{0, 0, 1, 0, 0},
		{0, 0, 1, 0, 0},
		{0, 0, 1, 0, 0},
		{0, 0, 1, 0, 0},
		{0, 0, 1, 0, 0},
};
uint8_t S[8][5] = {
		{1, 1, 1, 1, 1},
		{1, 0, 0, 0, 0},
		{1, 0, 0, 0, 0},
		{1, 1, 1, 1, 1},
		{0, 0, 0, 0, 1},
		{0, 0, 0, 0, 1},
		{0, 0, 0, 0, 1},
		{1, 1, 1, 1, 1},
};
uint8_t C[8][5] = {
		{1, 1, 1, 1, 1},
		{1, 0, 0, 0, 0},
		{1, 0, 0, 0, 0},
		{1, 0, 0, 0, 0},
		{1, 0, 0, 0, 0},
		{1, 0, 0, 0, 0},
		{1, 0, 0, 0, 0},
		{1, 1, 1, 1, 1},
};
uint8_t L[8][5] =  {
		{1, 0, 0, 0, 0},
		{1, 0, 0, 0, 0},
		{1, 0, 0, 0, 0},
		{1, 0, 0, 0, 0},
		{1, 0, 0, 0, 0},
		{1, 0, 0, 0, 0},
		{1, 0, 0, 0, 0},
		{1, 1, 1, 1, 1}
};
uint8_t (*(POV_STRING[]))[8][5]={&M,&O,&H,&M,&M,&E,&D,(void*)0};
uint8_t INDEX;
//=====================================================

void sendByte(uint8_t byte) {

	for (int i = 0; i < 8; i++){

		//send bit
		if ((byte & (1 << i))) {
			GPIOA->GPIOx_ODR |=(1<<1);// time --> 800 ns high
			for(int i=0;i<1;i++);
			GPIOA->GPIOx_ODR &=~(1<<1);// time --> 880 ns low
		} else {
			GPIOA->GPIOx_ODR |=(1<<1);// time --> 320 ns high
			GPIOA->GPIOx_ODR &=~(1<<1);// time --> 880 ns low
		}

	}

}

void sendColor(uint8_t r, uint8_t g, uint8_t b) {
	sendByte(g);
	sendByte(r);
	sendByte(b);
	delay(5, U_us, clk);
	//time --> 40us
}
int main(void)
{
	MCAL_speed_init(CLK_SORC_IN_CLK8MHz, mood_FAST_MOOD_36MHzCORE);
	pinmode(GPIOA, pin1,GPIO_MODE_OUTPUT_push_pull_Speed50);
	pinmode(GPIOA, pin4,GPIO_MODE_INPUT_PU);
	//pinmode(GPIOA, pin5,GPIO_MODE_OUTPUT_push_pull_Speed10);
	while(1){

		if(!READ_PIN(GPIOA, pin4))
		{
			delay(1, U_us, clk);
			//=========PRINT===========
			while( (*POV_STRING[INDEX]))
			{
				for(int j=0;j<5;j++)
				{
					for (int i = 0; i < 8; i++)
					{
						if((*POV_STRING[INDEX])[i][j]){
							sendColor(255,0,0);//time --> 40us
						}
						else{
							sendColor(0,0,0);//time --> 40us
						}

					}//time --> 450us
					delay(100, U_us, clk);//note time mine 55 us
				}
				INDEX++;
			}
		}
		else
		{
			for (int i = 0; i < 8; i++)
			{
				sendColor(0,0,0);//time --> 40us
			}
			delay(100, U_us, clk);
		}
		INDEX=0;
	}
}
