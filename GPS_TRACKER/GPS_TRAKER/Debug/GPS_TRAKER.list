
GPS_TRAKER.axf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000073b0  08000130  08000130  00010130  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000004d0  080074e0  080074e0  000174e0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080079b0  080079b0  00020204  2**0
                  CONTENTS
  4 .ARM          00000000  080079b0  080079b0  00020204  2**0
                  CONTENTS
  5 .preinit_array 00000000  080079b0  080079b0  00020204  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080079b0  080079b0  000179b0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080079b4  080079b4  000179b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000204  20000000  080079b8  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000001a4  20000208  08007bbc  00020208  2**3
                  ALLOC
 10 ._user_heap_stack 00000604  200003ac  08007bbc  000203ac  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020204  2**0
                  CONTENTS, READONLY
 12 .debug_info   000072c9  00000000  00000000  0002022d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000012f9  00000000  00000000  000274f6  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000340  00000000  00000000  000287f0  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000002a8  00000000  00000000  00028b30  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00001819  00000000  00000000  00028dd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   000043cb  00000000  00000000  0002a5f1  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    0000be0e  00000000  00000000  0002e9bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0003a7ca  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001c04  00000000  00000000  0003a848  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000208 	.word	0x20000208
 800014c:	00000000 	.word	0x00000000
 8000150:	080074c8 	.word	0x080074c8

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	2000020c 	.word	0x2000020c
 800016c:	080074c8 	.word	0x080074c8

08000170 <strlen>:
 8000170:	4603      	mov	r3, r0
 8000172:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000176:	2a00      	cmp	r2, #0
 8000178:	d1fb      	bne.n	8000172 <strlen+0x2>
 800017a:	1a18      	subs	r0, r3, r0
 800017c:	3801      	subs	r0, #1
 800017e:	4770      	bx	lr

08000180 <__aeabi_drsub>:
 8000180:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000184:	e002      	b.n	800018c <__adddf3>
 8000186:	bf00      	nop

08000188 <__aeabi_dsub>:
 8000188:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800018c <__adddf3>:
 800018c:	b530      	push	{r4, r5, lr}
 800018e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000192:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000196:	ea94 0f05 	teq	r4, r5
 800019a:	bf08      	it	eq
 800019c:	ea90 0f02 	teqeq	r0, r2
 80001a0:	bf1f      	itttt	ne
 80001a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80001a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80001aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80001ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80001b2:	f000 80e2 	beq.w	800037a <__adddf3+0x1ee>
 80001b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80001ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80001be:	bfb8      	it	lt
 80001c0:	426d      	neglt	r5, r5
 80001c2:	dd0c      	ble.n	80001de <__adddf3+0x52>
 80001c4:	442c      	add	r4, r5
 80001c6:	ea80 0202 	eor.w	r2, r0, r2
 80001ca:	ea81 0303 	eor.w	r3, r1, r3
 80001ce:	ea82 0000 	eor.w	r0, r2, r0
 80001d2:	ea83 0101 	eor.w	r1, r3, r1
 80001d6:	ea80 0202 	eor.w	r2, r0, r2
 80001da:	ea81 0303 	eor.w	r3, r1, r3
 80001de:	2d36      	cmp	r5, #54	; 0x36
 80001e0:	bf88      	it	hi
 80001e2:	bd30      	pophi	{r4, r5, pc}
 80001e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80001e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80001f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001f4:	d002      	beq.n	80001fc <__adddf3+0x70>
 80001f6:	4240      	negs	r0, r0
 80001f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000200:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000204:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000208:	d002      	beq.n	8000210 <__adddf3+0x84>
 800020a:	4252      	negs	r2, r2
 800020c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000210:	ea94 0f05 	teq	r4, r5
 8000214:	f000 80a7 	beq.w	8000366 <__adddf3+0x1da>
 8000218:	f1a4 0401 	sub.w	r4, r4, #1
 800021c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000220:	db0d      	blt.n	800023e <__adddf3+0xb2>
 8000222:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000226:	fa22 f205 	lsr.w	r2, r2, r5
 800022a:	1880      	adds	r0, r0, r2
 800022c:	f141 0100 	adc.w	r1, r1, #0
 8000230:	fa03 f20e 	lsl.w	r2, r3, lr
 8000234:	1880      	adds	r0, r0, r2
 8000236:	fa43 f305 	asr.w	r3, r3, r5
 800023a:	4159      	adcs	r1, r3
 800023c:	e00e      	b.n	800025c <__adddf3+0xd0>
 800023e:	f1a5 0520 	sub.w	r5, r5, #32
 8000242:	f10e 0e20 	add.w	lr, lr, #32
 8000246:	2a01      	cmp	r2, #1
 8000248:	fa03 fc0e 	lsl.w	ip, r3, lr
 800024c:	bf28      	it	cs
 800024e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000252:	fa43 f305 	asr.w	r3, r3, r5
 8000256:	18c0      	adds	r0, r0, r3
 8000258:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800025c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000260:	d507      	bpl.n	8000272 <__adddf3+0xe6>
 8000262:	f04f 0e00 	mov.w	lr, #0
 8000266:	f1dc 0c00 	rsbs	ip, ip, #0
 800026a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800026e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000272:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000276:	d31b      	bcc.n	80002b0 <__adddf3+0x124>
 8000278:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800027c:	d30c      	bcc.n	8000298 <__adddf3+0x10c>
 800027e:	0849      	lsrs	r1, r1, #1
 8000280:	ea5f 0030 	movs.w	r0, r0, rrx
 8000284:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000288:	f104 0401 	add.w	r4, r4, #1
 800028c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000290:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000294:	f080 809a 	bcs.w	80003cc <__adddf3+0x240>
 8000298:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800029c:	bf08      	it	eq
 800029e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80002a2:	f150 0000 	adcs.w	r0, r0, #0
 80002a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80002aa:	ea41 0105 	orr.w	r1, r1, r5
 80002ae:	bd30      	pop	{r4, r5, pc}
 80002b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80002b4:	4140      	adcs	r0, r0
 80002b6:	eb41 0101 	adc.w	r1, r1, r1
 80002ba:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80002be:	f1a4 0401 	sub.w	r4, r4, #1
 80002c2:	d1e9      	bne.n	8000298 <__adddf3+0x10c>
 80002c4:	f091 0f00 	teq	r1, #0
 80002c8:	bf04      	itt	eq
 80002ca:	4601      	moveq	r1, r0
 80002cc:	2000      	moveq	r0, #0
 80002ce:	fab1 f381 	clz	r3, r1
 80002d2:	bf08      	it	eq
 80002d4:	3320      	addeq	r3, #32
 80002d6:	f1a3 030b 	sub.w	r3, r3, #11
 80002da:	f1b3 0220 	subs.w	r2, r3, #32
 80002de:	da0c      	bge.n	80002fa <__adddf3+0x16e>
 80002e0:	320c      	adds	r2, #12
 80002e2:	dd08      	ble.n	80002f6 <__adddf3+0x16a>
 80002e4:	f102 0c14 	add.w	ip, r2, #20
 80002e8:	f1c2 020c 	rsb	r2, r2, #12
 80002ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80002f0:	fa21 f102 	lsr.w	r1, r1, r2
 80002f4:	e00c      	b.n	8000310 <__adddf3+0x184>
 80002f6:	f102 0214 	add.w	r2, r2, #20
 80002fa:	bfd8      	it	le
 80002fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000300:	fa01 f102 	lsl.w	r1, r1, r2
 8000304:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000308:	bfdc      	itt	le
 800030a:	ea41 010c 	orrle.w	r1, r1, ip
 800030e:	4090      	lslle	r0, r2
 8000310:	1ae4      	subs	r4, r4, r3
 8000312:	bfa2      	ittt	ge
 8000314:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000318:	4329      	orrge	r1, r5
 800031a:	bd30      	popge	{r4, r5, pc}
 800031c:	ea6f 0404 	mvn.w	r4, r4
 8000320:	3c1f      	subs	r4, #31
 8000322:	da1c      	bge.n	800035e <__adddf3+0x1d2>
 8000324:	340c      	adds	r4, #12
 8000326:	dc0e      	bgt.n	8000346 <__adddf3+0x1ba>
 8000328:	f104 0414 	add.w	r4, r4, #20
 800032c:	f1c4 0220 	rsb	r2, r4, #32
 8000330:	fa20 f004 	lsr.w	r0, r0, r4
 8000334:	fa01 f302 	lsl.w	r3, r1, r2
 8000338:	ea40 0003 	orr.w	r0, r0, r3
 800033c:	fa21 f304 	lsr.w	r3, r1, r4
 8000340:	ea45 0103 	orr.w	r1, r5, r3
 8000344:	bd30      	pop	{r4, r5, pc}
 8000346:	f1c4 040c 	rsb	r4, r4, #12
 800034a:	f1c4 0220 	rsb	r2, r4, #32
 800034e:	fa20 f002 	lsr.w	r0, r0, r2
 8000352:	fa01 f304 	lsl.w	r3, r1, r4
 8000356:	ea40 0003 	orr.w	r0, r0, r3
 800035a:	4629      	mov	r1, r5
 800035c:	bd30      	pop	{r4, r5, pc}
 800035e:	fa21 f004 	lsr.w	r0, r1, r4
 8000362:	4629      	mov	r1, r5
 8000364:	bd30      	pop	{r4, r5, pc}
 8000366:	f094 0f00 	teq	r4, #0
 800036a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800036e:	bf06      	itte	eq
 8000370:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000374:	3401      	addeq	r4, #1
 8000376:	3d01      	subne	r5, #1
 8000378:	e74e      	b.n	8000218 <__adddf3+0x8c>
 800037a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800037e:	bf18      	it	ne
 8000380:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000384:	d029      	beq.n	80003da <__adddf3+0x24e>
 8000386:	ea94 0f05 	teq	r4, r5
 800038a:	bf08      	it	eq
 800038c:	ea90 0f02 	teqeq	r0, r2
 8000390:	d005      	beq.n	800039e <__adddf3+0x212>
 8000392:	ea54 0c00 	orrs.w	ip, r4, r0
 8000396:	bf04      	itt	eq
 8000398:	4619      	moveq	r1, r3
 800039a:	4610      	moveq	r0, r2
 800039c:	bd30      	pop	{r4, r5, pc}
 800039e:	ea91 0f03 	teq	r1, r3
 80003a2:	bf1e      	ittt	ne
 80003a4:	2100      	movne	r1, #0
 80003a6:	2000      	movne	r0, #0
 80003a8:	bd30      	popne	{r4, r5, pc}
 80003aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80003ae:	d105      	bne.n	80003bc <__adddf3+0x230>
 80003b0:	0040      	lsls	r0, r0, #1
 80003b2:	4149      	adcs	r1, r1
 80003b4:	bf28      	it	cs
 80003b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80003ba:	bd30      	pop	{r4, r5, pc}
 80003bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80003c0:	bf3c      	itt	cc
 80003c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80003c6:	bd30      	popcc	{r4, r5, pc}
 80003c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80003d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80003d4:	f04f 0000 	mov.w	r0, #0
 80003d8:	bd30      	pop	{r4, r5, pc}
 80003da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003de:	bf1a      	itte	ne
 80003e0:	4619      	movne	r1, r3
 80003e2:	4610      	movne	r0, r2
 80003e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003e8:	bf1c      	itt	ne
 80003ea:	460b      	movne	r3, r1
 80003ec:	4602      	movne	r2, r0
 80003ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003f2:	bf06      	itte	eq
 80003f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003f8:	ea91 0f03 	teqeq	r1, r3
 80003fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000400:	bd30      	pop	{r4, r5, pc}
 8000402:	bf00      	nop

08000404 <__aeabi_ui2d>:
 8000404:	f090 0f00 	teq	r0, #0
 8000408:	bf04      	itt	eq
 800040a:	2100      	moveq	r1, #0
 800040c:	4770      	bxeq	lr
 800040e:	b530      	push	{r4, r5, lr}
 8000410:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000414:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000418:	f04f 0500 	mov.w	r5, #0
 800041c:	f04f 0100 	mov.w	r1, #0
 8000420:	e750      	b.n	80002c4 <__adddf3+0x138>
 8000422:	bf00      	nop

08000424 <__aeabi_i2d>:
 8000424:	f090 0f00 	teq	r0, #0
 8000428:	bf04      	itt	eq
 800042a:	2100      	moveq	r1, #0
 800042c:	4770      	bxeq	lr
 800042e:	b530      	push	{r4, r5, lr}
 8000430:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000434:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000438:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800043c:	bf48      	it	mi
 800043e:	4240      	negmi	r0, r0
 8000440:	f04f 0100 	mov.w	r1, #0
 8000444:	e73e      	b.n	80002c4 <__adddf3+0x138>
 8000446:	bf00      	nop

08000448 <__aeabi_f2d>:
 8000448:	0042      	lsls	r2, r0, #1
 800044a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800044e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000452:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000456:	bf1f      	itttt	ne
 8000458:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800045c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000460:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000464:	4770      	bxne	lr
 8000466:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800046a:	bf08      	it	eq
 800046c:	4770      	bxeq	lr
 800046e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000472:	bf04      	itt	eq
 8000474:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000478:	4770      	bxeq	lr
 800047a:	b530      	push	{r4, r5, lr}
 800047c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000480:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000484:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000488:	e71c      	b.n	80002c4 <__adddf3+0x138>
 800048a:	bf00      	nop

0800048c <__aeabi_ul2d>:
 800048c:	ea50 0201 	orrs.w	r2, r0, r1
 8000490:	bf08      	it	eq
 8000492:	4770      	bxeq	lr
 8000494:	b530      	push	{r4, r5, lr}
 8000496:	f04f 0500 	mov.w	r5, #0
 800049a:	e00a      	b.n	80004b2 <__aeabi_l2d+0x16>

0800049c <__aeabi_l2d>:
 800049c:	ea50 0201 	orrs.w	r2, r0, r1
 80004a0:	bf08      	it	eq
 80004a2:	4770      	bxeq	lr
 80004a4:	b530      	push	{r4, r5, lr}
 80004a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80004aa:	d502      	bpl.n	80004b2 <__aeabi_l2d+0x16>
 80004ac:	4240      	negs	r0, r0
 80004ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80004b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80004be:	f43f aed8 	beq.w	8000272 <__adddf3+0xe6>
 80004c2:	f04f 0203 	mov.w	r2, #3
 80004c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004ca:	bf18      	it	ne
 80004cc:	3203      	addne	r2, #3
 80004ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004d2:	bf18      	it	ne
 80004d4:	3203      	addne	r2, #3
 80004d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004da:	f1c2 0320 	rsb	r3, r2, #32
 80004de:	fa00 fc03 	lsl.w	ip, r0, r3
 80004e2:	fa20 f002 	lsr.w	r0, r0, r2
 80004e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004ea:	ea40 000e 	orr.w	r0, r0, lr
 80004ee:	fa21 f102 	lsr.w	r1, r1, r2
 80004f2:	4414      	add	r4, r2
 80004f4:	e6bd      	b.n	8000272 <__adddf3+0xe6>
 80004f6:	bf00      	nop

080004f8 <__aeabi_dmul>:
 80004f8:	b570      	push	{r4, r5, r6, lr}
 80004fa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80004fe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000502:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000506:	bf1d      	ittte	ne
 8000508:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800050c:	ea94 0f0c 	teqne	r4, ip
 8000510:	ea95 0f0c 	teqne	r5, ip
 8000514:	f000 f8de 	bleq	80006d4 <__aeabi_dmul+0x1dc>
 8000518:	442c      	add	r4, r5
 800051a:	ea81 0603 	eor.w	r6, r1, r3
 800051e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000522:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000526:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800052a:	bf18      	it	ne
 800052c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000530:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000534:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000538:	d038      	beq.n	80005ac <__aeabi_dmul+0xb4>
 800053a:	fba0 ce02 	umull	ip, lr, r0, r2
 800053e:	f04f 0500 	mov.w	r5, #0
 8000542:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000546:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800054a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800054e:	f04f 0600 	mov.w	r6, #0
 8000552:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000556:	f09c 0f00 	teq	ip, #0
 800055a:	bf18      	it	ne
 800055c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000560:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000564:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000568:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800056c:	d204      	bcs.n	8000578 <__aeabi_dmul+0x80>
 800056e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000572:	416d      	adcs	r5, r5
 8000574:	eb46 0606 	adc.w	r6, r6, r6
 8000578:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800057c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000580:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000584:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000588:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800058c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000590:	bf88      	it	hi
 8000592:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000596:	d81e      	bhi.n	80005d6 <__aeabi_dmul+0xde>
 8000598:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800059c:	bf08      	it	eq
 800059e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80005a2:	f150 0000 	adcs.w	r0, r0, #0
 80005a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80005aa:	bd70      	pop	{r4, r5, r6, pc}
 80005ac:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80005b0:	ea46 0101 	orr.w	r1, r6, r1
 80005b4:	ea40 0002 	orr.w	r0, r0, r2
 80005b8:	ea81 0103 	eor.w	r1, r1, r3
 80005bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005c0:	bfc2      	ittt	gt
 80005c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005ca:	bd70      	popgt	{r4, r5, r6, pc}
 80005cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005d0:	f04f 0e00 	mov.w	lr, #0
 80005d4:	3c01      	subs	r4, #1
 80005d6:	f300 80ab 	bgt.w	8000730 <__aeabi_dmul+0x238>
 80005da:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80005de:	bfde      	ittt	le
 80005e0:	2000      	movle	r0, #0
 80005e2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80005e6:	bd70      	pople	{r4, r5, r6, pc}
 80005e8:	f1c4 0400 	rsb	r4, r4, #0
 80005ec:	3c20      	subs	r4, #32
 80005ee:	da35      	bge.n	800065c <__aeabi_dmul+0x164>
 80005f0:	340c      	adds	r4, #12
 80005f2:	dc1b      	bgt.n	800062c <__aeabi_dmul+0x134>
 80005f4:	f104 0414 	add.w	r4, r4, #20
 80005f8:	f1c4 0520 	rsb	r5, r4, #32
 80005fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000600:	fa20 f004 	lsr.w	r0, r0, r4
 8000604:	fa01 f205 	lsl.w	r2, r1, r5
 8000608:	ea40 0002 	orr.w	r0, r0, r2
 800060c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000610:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000614:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000618:	fa21 f604 	lsr.w	r6, r1, r4
 800061c:	eb42 0106 	adc.w	r1, r2, r6
 8000620:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000624:	bf08      	it	eq
 8000626:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800062a:	bd70      	pop	{r4, r5, r6, pc}
 800062c:	f1c4 040c 	rsb	r4, r4, #12
 8000630:	f1c4 0520 	rsb	r5, r4, #32
 8000634:	fa00 f304 	lsl.w	r3, r0, r4
 8000638:	fa20 f005 	lsr.w	r0, r0, r5
 800063c:	fa01 f204 	lsl.w	r2, r1, r4
 8000640:	ea40 0002 	orr.w	r0, r0, r2
 8000644:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000648:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800064c:	f141 0100 	adc.w	r1, r1, #0
 8000650:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000654:	bf08      	it	eq
 8000656:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800065a:	bd70      	pop	{r4, r5, r6, pc}
 800065c:	f1c4 0520 	rsb	r5, r4, #32
 8000660:	fa00 f205 	lsl.w	r2, r0, r5
 8000664:	ea4e 0e02 	orr.w	lr, lr, r2
 8000668:	fa20 f304 	lsr.w	r3, r0, r4
 800066c:	fa01 f205 	lsl.w	r2, r1, r5
 8000670:	ea43 0302 	orr.w	r3, r3, r2
 8000674:	fa21 f004 	lsr.w	r0, r1, r4
 8000678:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800067c:	fa21 f204 	lsr.w	r2, r1, r4
 8000680:	ea20 0002 	bic.w	r0, r0, r2
 8000684:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000688:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800068c:	bf08      	it	eq
 800068e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000692:	bd70      	pop	{r4, r5, r6, pc}
 8000694:	f094 0f00 	teq	r4, #0
 8000698:	d10f      	bne.n	80006ba <__aeabi_dmul+0x1c2>
 800069a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800069e:	0040      	lsls	r0, r0, #1
 80006a0:	eb41 0101 	adc.w	r1, r1, r1
 80006a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80006a8:	bf08      	it	eq
 80006aa:	3c01      	subeq	r4, #1
 80006ac:	d0f7      	beq.n	800069e <__aeabi_dmul+0x1a6>
 80006ae:	ea41 0106 	orr.w	r1, r1, r6
 80006b2:	f095 0f00 	teq	r5, #0
 80006b6:	bf18      	it	ne
 80006b8:	4770      	bxne	lr
 80006ba:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80006be:	0052      	lsls	r2, r2, #1
 80006c0:	eb43 0303 	adc.w	r3, r3, r3
 80006c4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80006c8:	bf08      	it	eq
 80006ca:	3d01      	subeq	r5, #1
 80006cc:	d0f7      	beq.n	80006be <__aeabi_dmul+0x1c6>
 80006ce:	ea43 0306 	orr.w	r3, r3, r6
 80006d2:	4770      	bx	lr
 80006d4:	ea94 0f0c 	teq	r4, ip
 80006d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006dc:	bf18      	it	ne
 80006de:	ea95 0f0c 	teqne	r5, ip
 80006e2:	d00c      	beq.n	80006fe <__aeabi_dmul+0x206>
 80006e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006e8:	bf18      	it	ne
 80006ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ee:	d1d1      	bne.n	8000694 <__aeabi_dmul+0x19c>
 80006f0:	ea81 0103 	eor.w	r1, r1, r3
 80006f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006f8:	f04f 0000 	mov.w	r0, #0
 80006fc:	bd70      	pop	{r4, r5, r6, pc}
 80006fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000702:	bf06      	itte	eq
 8000704:	4610      	moveq	r0, r2
 8000706:	4619      	moveq	r1, r3
 8000708:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800070c:	d019      	beq.n	8000742 <__aeabi_dmul+0x24a>
 800070e:	ea94 0f0c 	teq	r4, ip
 8000712:	d102      	bne.n	800071a <__aeabi_dmul+0x222>
 8000714:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000718:	d113      	bne.n	8000742 <__aeabi_dmul+0x24a>
 800071a:	ea95 0f0c 	teq	r5, ip
 800071e:	d105      	bne.n	800072c <__aeabi_dmul+0x234>
 8000720:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000724:	bf1c      	itt	ne
 8000726:	4610      	movne	r0, r2
 8000728:	4619      	movne	r1, r3
 800072a:	d10a      	bne.n	8000742 <__aeabi_dmul+0x24a>
 800072c:	ea81 0103 	eor.w	r1, r1, r3
 8000730:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000734:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000738:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800073c:	f04f 0000 	mov.w	r0, #0
 8000740:	bd70      	pop	{r4, r5, r6, pc}
 8000742:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000746:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800074a:	bd70      	pop	{r4, r5, r6, pc}

0800074c <__aeabi_ddiv>:
 800074c:	b570      	push	{r4, r5, r6, lr}
 800074e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000752:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000756:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800075a:	bf1d      	ittte	ne
 800075c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000760:	ea94 0f0c 	teqne	r4, ip
 8000764:	ea95 0f0c 	teqne	r5, ip
 8000768:	f000 f8a7 	bleq	80008ba <__aeabi_ddiv+0x16e>
 800076c:	eba4 0405 	sub.w	r4, r4, r5
 8000770:	ea81 0e03 	eor.w	lr, r1, r3
 8000774:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000778:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800077c:	f000 8088 	beq.w	8000890 <__aeabi_ddiv+0x144>
 8000780:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000784:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000788:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800078c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000790:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000794:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000798:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800079c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80007a0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80007a4:	429d      	cmp	r5, r3
 80007a6:	bf08      	it	eq
 80007a8:	4296      	cmpeq	r6, r2
 80007aa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80007ae:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80007b2:	d202      	bcs.n	80007ba <__aeabi_ddiv+0x6e>
 80007b4:	085b      	lsrs	r3, r3, #1
 80007b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80007ba:	1ab6      	subs	r6, r6, r2
 80007bc:	eb65 0503 	sbc.w	r5, r5, r3
 80007c0:	085b      	lsrs	r3, r3, #1
 80007c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007c6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80007ca:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80007ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80007d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007d6:	bf22      	ittt	cs
 80007d8:	1ab6      	subcs	r6, r6, r2
 80007da:	4675      	movcs	r5, lr
 80007dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80007e0:	085b      	lsrs	r3, r3, #1
 80007e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ee:	bf22      	ittt	cs
 80007f0:	1ab6      	subcs	r6, r6, r2
 80007f2:	4675      	movcs	r5, lr
 80007f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007f8:	085b      	lsrs	r3, r3, #1
 80007fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80007fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000802:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000806:	bf22      	ittt	cs
 8000808:	1ab6      	subcs	r6, r6, r2
 800080a:	4675      	movcs	r5, lr
 800080c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000810:	085b      	lsrs	r3, r3, #1
 8000812:	ea4f 0232 	mov.w	r2, r2, rrx
 8000816:	ebb6 0e02 	subs.w	lr, r6, r2
 800081a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800081e:	bf22      	ittt	cs
 8000820:	1ab6      	subcs	r6, r6, r2
 8000822:	4675      	movcs	r5, lr
 8000824:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000828:	ea55 0e06 	orrs.w	lr, r5, r6
 800082c:	d018      	beq.n	8000860 <__aeabi_ddiv+0x114>
 800082e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000832:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000836:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800083a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800083e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000842:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000846:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800084a:	d1c0      	bne.n	80007ce <__aeabi_ddiv+0x82>
 800084c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000850:	d10b      	bne.n	800086a <__aeabi_ddiv+0x11e>
 8000852:	ea41 0100 	orr.w	r1, r1, r0
 8000856:	f04f 0000 	mov.w	r0, #0
 800085a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800085e:	e7b6      	b.n	80007ce <__aeabi_ddiv+0x82>
 8000860:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000864:	bf04      	itt	eq
 8000866:	4301      	orreq	r1, r0
 8000868:	2000      	moveq	r0, #0
 800086a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800086e:	bf88      	it	hi
 8000870:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000874:	f63f aeaf 	bhi.w	80005d6 <__aeabi_dmul+0xde>
 8000878:	ebb5 0c03 	subs.w	ip, r5, r3
 800087c:	bf04      	itt	eq
 800087e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000882:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000886:	f150 0000 	adcs.w	r0, r0, #0
 800088a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800088e:	bd70      	pop	{r4, r5, r6, pc}
 8000890:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000894:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000898:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800089c:	bfc2      	ittt	gt
 800089e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80008a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80008a6:	bd70      	popgt	{r4, r5, r6, pc}
 80008a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80008ac:	f04f 0e00 	mov.w	lr, #0
 80008b0:	3c01      	subs	r4, #1
 80008b2:	e690      	b.n	80005d6 <__aeabi_dmul+0xde>
 80008b4:	ea45 0e06 	orr.w	lr, r5, r6
 80008b8:	e68d      	b.n	80005d6 <__aeabi_dmul+0xde>
 80008ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80008be:	ea94 0f0c 	teq	r4, ip
 80008c2:	bf08      	it	eq
 80008c4:	ea95 0f0c 	teqeq	r5, ip
 80008c8:	f43f af3b 	beq.w	8000742 <__aeabi_dmul+0x24a>
 80008cc:	ea94 0f0c 	teq	r4, ip
 80008d0:	d10a      	bne.n	80008e8 <__aeabi_ddiv+0x19c>
 80008d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008d6:	f47f af34 	bne.w	8000742 <__aeabi_dmul+0x24a>
 80008da:	ea95 0f0c 	teq	r5, ip
 80008de:	f47f af25 	bne.w	800072c <__aeabi_dmul+0x234>
 80008e2:	4610      	mov	r0, r2
 80008e4:	4619      	mov	r1, r3
 80008e6:	e72c      	b.n	8000742 <__aeabi_dmul+0x24a>
 80008e8:	ea95 0f0c 	teq	r5, ip
 80008ec:	d106      	bne.n	80008fc <__aeabi_ddiv+0x1b0>
 80008ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008f2:	f43f aefd 	beq.w	80006f0 <__aeabi_dmul+0x1f8>
 80008f6:	4610      	mov	r0, r2
 80008f8:	4619      	mov	r1, r3
 80008fa:	e722      	b.n	8000742 <__aeabi_dmul+0x24a>
 80008fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000900:	bf18      	it	ne
 8000902:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000906:	f47f aec5 	bne.w	8000694 <__aeabi_dmul+0x19c>
 800090a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 800090e:	f47f af0d 	bne.w	800072c <__aeabi_dmul+0x234>
 8000912:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000916:	f47f aeeb 	bne.w	80006f0 <__aeabi_dmul+0x1f8>
 800091a:	e712      	b.n	8000742 <__aeabi_dmul+0x24a>

0800091c <__gedf2>:
 800091c:	f04f 3cff 	mov.w	ip, #4294967295
 8000920:	e006      	b.n	8000930 <__cmpdf2+0x4>
 8000922:	bf00      	nop

08000924 <__ledf2>:
 8000924:	f04f 0c01 	mov.w	ip, #1
 8000928:	e002      	b.n	8000930 <__cmpdf2+0x4>
 800092a:	bf00      	nop

0800092c <__cmpdf2>:
 800092c:	f04f 0c01 	mov.w	ip, #1
 8000930:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000934:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000938:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800093c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000940:	bf18      	it	ne
 8000942:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000946:	d01b      	beq.n	8000980 <__cmpdf2+0x54>
 8000948:	b001      	add	sp, #4
 800094a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800094e:	bf0c      	ite	eq
 8000950:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000954:	ea91 0f03 	teqne	r1, r3
 8000958:	bf02      	ittt	eq
 800095a:	ea90 0f02 	teqeq	r0, r2
 800095e:	2000      	moveq	r0, #0
 8000960:	4770      	bxeq	lr
 8000962:	f110 0f00 	cmn.w	r0, #0
 8000966:	ea91 0f03 	teq	r1, r3
 800096a:	bf58      	it	pl
 800096c:	4299      	cmppl	r1, r3
 800096e:	bf08      	it	eq
 8000970:	4290      	cmpeq	r0, r2
 8000972:	bf2c      	ite	cs
 8000974:	17d8      	asrcs	r0, r3, #31
 8000976:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800097a:	f040 0001 	orr.w	r0, r0, #1
 800097e:	4770      	bx	lr
 8000980:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000984:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000988:	d102      	bne.n	8000990 <__cmpdf2+0x64>
 800098a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800098e:	d107      	bne.n	80009a0 <__cmpdf2+0x74>
 8000990:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000994:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000998:	d1d6      	bne.n	8000948 <__cmpdf2+0x1c>
 800099a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800099e:	d0d3      	beq.n	8000948 <__cmpdf2+0x1c>
 80009a0:	f85d 0b04 	ldr.w	r0, [sp], #4
 80009a4:	4770      	bx	lr
 80009a6:	bf00      	nop

080009a8 <__aeabi_cdrcmple>:
 80009a8:	4684      	mov	ip, r0
 80009aa:	4610      	mov	r0, r2
 80009ac:	4662      	mov	r2, ip
 80009ae:	468c      	mov	ip, r1
 80009b0:	4619      	mov	r1, r3
 80009b2:	4663      	mov	r3, ip
 80009b4:	e000      	b.n	80009b8 <__aeabi_cdcmpeq>
 80009b6:	bf00      	nop

080009b8 <__aeabi_cdcmpeq>:
 80009b8:	b501      	push	{r0, lr}
 80009ba:	f7ff ffb7 	bl	800092c <__cmpdf2>
 80009be:	2800      	cmp	r0, #0
 80009c0:	bf48      	it	mi
 80009c2:	f110 0f00 	cmnmi.w	r0, #0
 80009c6:	bd01      	pop	{r0, pc}

080009c8 <__aeabi_dcmpeq>:
 80009c8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009cc:	f7ff fff4 	bl	80009b8 <__aeabi_cdcmpeq>
 80009d0:	bf0c      	ite	eq
 80009d2:	2001      	moveq	r0, #1
 80009d4:	2000      	movne	r0, #0
 80009d6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009da:	bf00      	nop

080009dc <__aeabi_dcmplt>:
 80009dc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e0:	f7ff ffea 	bl	80009b8 <__aeabi_cdcmpeq>
 80009e4:	bf34      	ite	cc
 80009e6:	2001      	movcc	r0, #1
 80009e8:	2000      	movcs	r0, #0
 80009ea:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ee:	bf00      	nop

080009f0 <__aeabi_dcmple>:
 80009f0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009f4:	f7ff ffe0 	bl	80009b8 <__aeabi_cdcmpeq>
 80009f8:	bf94      	ite	ls
 80009fa:	2001      	movls	r0, #1
 80009fc:	2000      	movhi	r0, #0
 80009fe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a02:	bf00      	nop

08000a04 <__aeabi_dcmpge>:
 8000a04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a08:	f7ff ffce 	bl	80009a8 <__aeabi_cdrcmple>
 8000a0c:	bf94      	ite	ls
 8000a0e:	2001      	movls	r0, #1
 8000a10:	2000      	movhi	r0, #0
 8000a12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a16:	bf00      	nop

08000a18 <__aeabi_dcmpgt>:
 8000a18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a1c:	f7ff ffc4 	bl	80009a8 <__aeabi_cdrcmple>
 8000a20:	bf34      	ite	cc
 8000a22:	2001      	movcc	r0, #1
 8000a24:	2000      	movcs	r0, #0
 8000a26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a2a:	bf00      	nop

08000a2c <__aeabi_dcmpun>:
 8000a2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a34:	d102      	bne.n	8000a3c <__aeabi_dcmpun+0x10>
 8000a36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a3a:	d10a      	bne.n	8000a52 <__aeabi_dcmpun+0x26>
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a44:	d102      	bne.n	8000a4c <__aeabi_dcmpun+0x20>
 8000a46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a4a:	d102      	bne.n	8000a52 <__aeabi_dcmpun+0x26>
 8000a4c:	f04f 0000 	mov.w	r0, #0
 8000a50:	4770      	bx	lr
 8000a52:	f04f 0001 	mov.w	r0, #1
 8000a56:	4770      	bx	lr

08000a58 <__aeabi_d2iz>:
 8000a58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a5c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a60:	d215      	bcs.n	8000a8e <__aeabi_d2iz+0x36>
 8000a62:	d511      	bpl.n	8000a88 <__aeabi_d2iz+0x30>
 8000a64:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a6c:	d912      	bls.n	8000a94 <__aeabi_d2iz+0x3c>
 8000a6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a72:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a7a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000a7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000a82:	bf18      	it	ne
 8000a84:	4240      	negne	r0, r0
 8000a86:	4770      	bx	lr
 8000a88:	f04f 0000 	mov.w	r0, #0
 8000a8c:	4770      	bx	lr
 8000a8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a92:	d105      	bne.n	8000aa0 <__aeabi_d2iz+0x48>
 8000a94:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000a98:	bf08      	it	eq
 8000a9a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000a9e:	4770      	bx	lr
 8000aa0:	f04f 0000 	mov.w	r0, #0
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_d2uiz>:
 8000aa8:	004a      	lsls	r2, r1, #1
 8000aaa:	d211      	bcs.n	8000ad0 <__aeabi_d2uiz+0x28>
 8000aac:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ab0:	d211      	bcs.n	8000ad6 <__aeabi_d2uiz+0x2e>
 8000ab2:	d50d      	bpl.n	8000ad0 <__aeabi_d2uiz+0x28>
 8000ab4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ab8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000abc:	d40e      	bmi.n	8000adc <__aeabi_d2uiz+0x34>
 8000abe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ac2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000ac6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000aca:	fa23 f002 	lsr.w	r0, r3, r2
 8000ace:	4770      	bx	lr
 8000ad0:	f04f 0000 	mov.w	r0, #0
 8000ad4:	4770      	bx	lr
 8000ad6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ada:	d102      	bne.n	8000ae2 <__aeabi_d2uiz+0x3a>
 8000adc:	f04f 30ff 	mov.w	r0, #4294967295
 8000ae0:	4770      	bx	lr
 8000ae2:	f04f 0000 	mov.w	r0, #0
 8000ae6:	4770      	bx	lr

08000ae8 <__aeabi_d2f>:
 8000ae8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000aec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000af0:	bf24      	itt	cs
 8000af2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000af6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000afa:	d90d      	bls.n	8000b18 <__aeabi_d2f+0x30>
 8000afc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000b00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b08:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000b0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b10:	bf08      	it	eq
 8000b12:	f020 0001 	biceq.w	r0, r0, #1
 8000b16:	4770      	bx	lr
 8000b18:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000b1c:	d121      	bne.n	8000b62 <__aeabi_d2f+0x7a>
 8000b1e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000b22:	bfbc      	itt	lt
 8000b24:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000b28:	4770      	bxlt	lr
 8000b2a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b32:	f1c2 0218 	rsb	r2, r2, #24
 8000b36:	f1c2 0c20 	rsb	ip, r2, #32
 8000b3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000b42:	bf18      	it	ne
 8000b44:	f040 0001 	orrne.w	r0, r0, #1
 8000b48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b54:	ea40 000c 	orr.w	r0, r0, ip
 8000b58:	fa23 f302 	lsr.w	r3, r3, r2
 8000b5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b60:	e7cc      	b.n	8000afc <__aeabi_d2f+0x14>
 8000b62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b66:	d107      	bne.n	8000b78 <__aeabi_d2f+0x90>
 8000b68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b6c:	bf1e      	ittt	ne
 8000b6e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000b72:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000b76:	4770      	bxne	lr
 8000b78:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000b7c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000b80:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b84:	4770      	bx	lr
 8000b86:	bf00      	nop

08000b88 <__aeabi_frsub>:
 8000b88:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8000b8c:	e002      	b.n	8000b94 <__addsf3>
 8000b8e:	bf00      	nop

08000b90 <__aeabi_fsub>:
 8000b90:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000b94 <__addsf3>:
 8000b94:	0042      	lsls	r2, r0, #1
 8000b96:	bf1f      	itttt	ne
 8000b98:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000b9c:	ea92 0f03 	teqne	r2, r3
 8000ba0:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000ba4:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000ba8:	d06a      	beq.n	8000c80 <__addsf3+0xec>
 8000baa:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000bae:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000bb2:	bfc1      	itttt	gt
 8000bb4:	18d2      	addgt	r2, r2, r3
 8000bb6:	4041      	eorgt	r1, r0
 8000bb8:	4048      	eorgt	r0, r1
 8000bba:	4041      	eorgt	r1, r0
 8000bbc:	bfb8      	it	lt
 8000bbe:	425b      	neglt	r3, r3
 8000bc0:	2b19      	cmp	r3, #25
 8000bc2:	bf88      	it	hi
 8000bc4:	4770      	bxhi	lr
 8000bc6:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000bca:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000bce:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8000bd2:	bf18      	it	ne
 8000bd4:	4240      	negne	r0, r0
 8000bd6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bda:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8000bde:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8000be2:	bf18      	it	ne
 8000be4:	4249      	negne	r1, r1
 8000be6:	ea92 0f03 	teq	r2, r3
 8000bea:	d03f      	beq.n	8000c6c <__addsf3+0xd8>
 8000bec:	f1a2 0201 	sub.w	r2, r2, #1
 8000bf0:	fa41 fc03 	asr.w	ip, r1, r3
 8000bf4:	eb10 000c 	adds.w	r0, r0, ip
 8000bf8:	f1c3 0320 	rsb	r3, r3, #32
 8000bfc:	fa01 f103 	lsl.w	r1, r1, r3
 8000c00:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000c04:	d502      	bpl.n	8000c0c <__addsf3+0x78>
 8000c06:	4249      	negs	r1, r1
 8000c08:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000c0c:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8000c10:	d313      	bcc.n	8000c3a <__addsf3+0xa6>
 8000c12:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8000c16:	d306      	bcc.n	8000c26 <__addsf3+0x92>
 8000c18:	0840      	lsrs	r0, r0, #1
 8000c1a:	ea4f 0131 	mov.w	r1, r1, rrx
 8000c1e:	f102 0201 	add.w	r2, r2, #1
 8000c22:	2afe      	cmp	r2, #254	; 0xfe
 8000c24:	d251      	bcs.n	8000cca <__addsf3+0x136>
 8000c26:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8000c2a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000c2e:	bf08      	it	eq
 8000c30:	f020 0001 	biceq.w	r0, r0, #1
 8000c34:	ea40 0003 	orr.w	r0, r0, r3
 8000c38:	4770      	bx	lr
 8000c3a:	0049      	lsls	r1, r1, #1
 8000c3c:	eb40 0000 	adc.w	r0, r0, r0
 8000c40:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
 8000c44:	f1a2 0201 	sub.w	r2, r2, #1
 8000c48:	d1ed      	bne.n	8000c26 <__addsf3+0x92>
 8000c4a:	fab0 fc80 	clz	ip, r0
 8000c4e:	f1ac 0c08 	sub.w	ip, ip, #8
 8000c52:	ebb2 020c 	subs.w	r2, r2, ip
 8000c56:	fa00 f00c 	lsl.w	r0, r0, ip
 8000c5a:	bfaa      	itet	ge
 8000c5c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000c60:	4252      	neglt	r2, r2
 8000c62:	4318      	orrge	r0, r3
 8000c64:	bfbc      	itt	lt
 8000c66:	40d0      	lsrlt	r0, r2
 8000c68:	4318      	orrlt	r0, r3
 8000c6a:	4770      	bx	lr
 8000c6c:	f092 0f00 	teq	r2, #0
 8000c70:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000c74:	bf06      	itte	eq
 8000c76:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8000c7a:	3201      	addeq	r2, #1
 8000c7c:	3b01      	subne	r3, #1
 8000c7e:	e7b5      	b.n	8000bec <__addsf3+0x58>
 8000c80:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000c84:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000c88:	bf18      	it	ne
 8000c8a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000c8e:	d021      	beq.n	8000cd4 <__addsf3+0x140>
 8000c90:	ea92 0f03 	teq	r2, r3
 8000c94:	d004      	beq.n	8000ca0 <__addsf3+0x10c>
 8000c96:	f092 0f00 	teq	r2, #0
 8000c9a:	bf08      	it	eq
 8000c9c:	4608      	moveq	r0, r1
 8000c9e:	4770      	bx	lr
 8000ca0:	ea90 0f01 	teq	r0, r1
 8000ca4:	bf1c      	itt	ne
 8000ca6:	2000      	movne	r0, #0
 8000ca8:	4770      	bxne	lr
 8000caa:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8000cae:	d104      	bne.n	8000cba <__addsf3+0x126>
 8000cb0:	0040      	lsls	r0, r0, #1
 8000cb2:	bf28      	it	cs
 8000cb4:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000cb8:	4770      	bx	lr
 8000cba:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8000cbe:	bf3c      	itt	cc
 8000cc0:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000cc4:	4770      	bxcc	lr
 8000cc6:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000cca:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8000cce:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000cd2:	4770      	bx	lr
 8000cd4:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000cd8:	bf16      	itet	ne
 8000cda:	4608      	movne	r0, r1
 8000cdc:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000ce0:	4601      	movne	r1, r0
 8000ce2:	0242      	lsls	r2, r0, #9
 8000ce4:	bf06      	itte	eq
 8000ce6:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000cea:	ea90 0f01 	teqeq	r0, r1
 8000cee:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8000cf2:	4770      	bx	lr

08000cf4 <__aeabi_ui2f>:
 8000cf4:	f04f 0300 	mov.w	r3, #0
 8000cf8:	e004      	b.n	8000d04 <__aeabi_i2f+0x8>
 8000cfa:	bf00      	nop

08000cfc <__aeabi_i2f>:
 8000cfc:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8000d00:	bf48      	it	mi
 8000d02:	4240      	negmi	r0, r0
 8000d04:	ea5f 0c00 	movs.w	ip, r0
 8000d08:	bf08      	it	eq
 8000d0a:	4770      	bxeq	lr
 8000d0c:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8000d10:	4601      	mov	r1, r0
 8000d12:	f04f 0000 	mov.w	r0, #0
 8000d16:	e01c      	b.n	8000d52 <__aeabi_l2f+0x2a>

08000d18 <__aeabi_ul2f>:
 8000d18:	ea50 0201 	orrs.w	r2, r0, r1
 8000d1c:	bf08      	it	eq
 8000d1e:	4770      	bxeq	lr
 8000d20:	f04f 0300 	mov.w	r3, #0
 8000d24:	e00a      	b.n	8000d3c <__aeabi_l2f+0x14>
 8000d26:	bf00      	nop

08000d28 <__aeabi_l2f>:
 8000d28:	ea50 0201 	orrs.w	r2, r0, r1
 8000d2c:	bf08      	it	eq
 8000d2e:	4770      	bxeq	lr
 8000d30:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000d34:	d502      	bpl.n	8000d3c <__aeabi_l2f+0x14>
 8000d36:	4240      	negs	r0, r0
 8000d38:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d3c:	ea5f 0c01 	movs.w	ip, r1
 8000d40:	bf02      	ittt	eq
 8000d42:	4684      	moveq	ip, r0
 8000d44:	4601      	moveq	r1, r0
 8000d46:	2000      	moveq	r0, #0
 8000d48:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8000d4c:	bf08      	it	eq
 8000d4e:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000d52:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8000d56:	fabc f28c 	clz	r2, ip
 8000d5a:	3a08      	subs	r2, #8
 8000d5c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000d60:	db10      	blt.n	8000d84 <__aeabi_l2f+0x5c>
 8000d62:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d66:	4463      	add	r3, ip
 8000d68:	fa00 fc02 	lsl.w	ip, r0, r2
 8000d6c:	f1c2 0220 	rsb	r2, r2, #32
 8000d70:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000d74:	fa20 f202 	lsr.w	r2, r0, r2
 8000d78:	eb43 0002 	adc.w	r0, r3, r2
 8000d7c:	bf08      	it	eq
 8000d7e:	f020 0001 	biceq.w	r0, r0, #1
 8000d82:	4770      	bx	lr
 8000d84:	f102 0220 	add.w	r2, r2, #32
 8000d88:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d8c:	f1c2 0220 	rsb	r2, r2, #32
 8000d90:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000d94:	fa21 f202 	lsr.w	r2, r1, r2
 8000d98:	eb43 0002 	adc.w	r0, r3, r2
 8000d9c:	bf08      	it	eq
 8000d9e:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000da2:	4770      	bx	lr

08000da4 <__aeabi_fmul>:
 8000da4:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000da8:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000dac:	bf1e      	ittt	ne
 8000dae:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000db2:	ea92 0f0c 	teqne	r2, ip
 8000db6:	ea93 0f0c 	teqne	r3, ip
 8000dba:	d06f      	beq.n	8000e9c <__aeabi_fmul+0xf8>
 8000dbc:	441a      	add	r2, r3
 8000dbe:	ea80 0c01 	eor.w	ip, r0, r1
 8000dc2:	0240      	lsls	r0, r0, #9
 8000dc4:	bf18      	it	ne
 8000dc6:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000dca:	d01e      	beq.n	8000e0a <__aeabi_fmul+0x66>
 8000dcc:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8000dd0:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000dd4:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000dd8:	fba0 3101 	umull	r3, r1, r0, r1
 8000ddc:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000de0:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8000de4:	bf3e      	ittt	cc
 8000de6:	0049      	lslcc	r1, r1, #1
 8000de8:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000dec:	005b      	lslcc	r3, r3, #1
 8000dee:	ea40 0001 	orr.w	r0, r0, r1
 8000df2:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 8000df6:	2afd      	cmp	r2, #253	; 0xfd
 8000df8:	d81d      	bhi.n	8000e36 <__aeabi_fmul+0x92>
 8000dfa:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8000dfe:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000e02:	bf08      	it	eq
 8000e04:	f020 0001 	biceq.w	r0, r0, #1
 8000e08:	4770      	bx	lr
 8000e0a:	f090 0f00 	teq	r0, #0
 8000e0e:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000e12:	bf08      	it	eq
 8000e14:	0249      	lsleq	r1, r1, #9
 8000e16:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000e1a:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000e1e:	3a7f      	subs	r2, #127	; 0x7f
 8000e20:	bfc2      	ittt	gt
 8000e22:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000e26:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000e2a:	4770      	bxgt	lr
 8000e2c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000e30:	f04f 0300 	mov.w	r3, #0
 8000e34:	3a01      	subs	r2, #1
 8000e36:	dc5d      	bgt.n	8000ef4 <__aeabi_fmul+0x150>
 8000e38:	f112 0f19 	cmn.w	r2, #25
 8000e3c:	bfdc      	itt	le
 8000e3e:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8000e42:	4770      	bxle	lr
 8000e44:	f1c2 0200 	rsb	r2, r2, #0
 8000e48:	0041      	lsls	r1, r0, #1
 8000e4a:	fa21 f102 	lsr.w	r1, r1, r2
 8000e4e:	f1c2 0220 	rsb	r2, r2, #32
 8000e52:	fa00 fc02 	lsl.w	ip, r0, r2
 8000e56:	ea5f 0031 	movs.w	r0, r1, rrx
 8000e5a:	f140 0000 	adc.w	r0, r0, #0
 8000e5e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000e62:	bf08      	it	eq
 8000e64:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000e68:	4770      	bx	lr
 8000e6a:	f092 0f00 	teq	r2, #0
 8000e6e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000e72:	bf02      	ittt	eq
 8000e74:	0040      	lsleq	r0, r0, #1
 8000e76:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000e7a:	3a01      	subeq	r2, #1
 8000e7c:	d0f9      	beq.n	8000e72 <__aeabi_fmul+0xce>
 8000e7e:	ea40 000c 	orr.w	r0, r0, ip
 8000e82:	f093 0f00 	teq	r3, #0
 8000e86:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000e8a:	bf02      	ittt	eq
 8000e8c:	0049      	lsleq	r1, r1, #1
 8000e8e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000e92:	3b01      	subeq	r3, #1
 8000e94:	d0f9      	beq.n	8000e8a <__aeabi_fmul+0xe6>
 8000e96:	ea41 010c 	orr.w	r1, r1, ip
 8000e9a:	e78f      	b.n	8000dbc <__aeabi_fmul+0x18>
 8000e9c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000ea0:	ea92 0f0c 	teq	r2, ip
 8000ea4:	bf18      	it	ne
 8000ea6:	ea93 0f0c 	teqne	r3, ip
 8000eaa:	d00a      	beq.n	8000ec2 <__aeabi_fmul+0x11e>
 8000eac:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000eb0:	bf18      	it	ne
 8000eb2:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000eb6:	d1d8      	bne.n	8000e6a <__aeabi_fmul+0xc6>
 8000eb8:	ea80 0001 	eor.w	r0, r0, r1
 8000ebc:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000ec0:	4770      	bx	lr
 8000ec2:	f090 0f00 	teq	r0, #0
 8000ec6:	bf17      	itett	ne
 8000ec8:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8000ecc:	4608      	moveq	r0, r1
 8000ece:	f091 0f00 	teqne	r1, #0
 8000ed2:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8000ed6:	d014      	beq.n	8000f02 <__aeabi_fmul+0x15e>
 8000ed8:	ea92 0f0c 	teq	r2, ip
 8000edc:	d101      	bne.n	8000ee2 <__aeabi_fmul+0x13e>
 8000ede:	0242      	lsls	r2, r0, #9
 8000ee0:	d10f      	bne.n	8000f02 <__aeabi_fmul+0x15e>
 8000ee2:	ea93 0f0c 	teq	r3, ip
 8000ee6:	d103      	bne.n	8000ef0 <__aeabi_fmul+0x14c>
 8000ee8:	024b      	lsls	r3, r1, #9
 8000eea:	bf18      	it	ne
 8000eec:	4608      	movne	r0, r1
 8000eee:	d108      	bne.n	8000f02 <__aeabi_fmul+0x15e>
 8000ef0:	ea80 0001 	eor.w	r0, r0, r1
 8000ef4:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000ef8:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000efc:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000f00:	4770      	bx	lr
 8000f02:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000f06:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8000f0a:	4770      	bx	lr

08000f0c <__aeabi_fdiv>:
 8000f0c:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000f10:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000f14:	bf1e      	ittt	ne
 8000f16:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000f1a:	ea92 0f0c 	teqne	r2, ip
 8000f1e:	ea93 0f0c 	teqne	r3, ip
 8000f22:	d069      	beq.n	8000ff8 <__aeabi_fdiv+0xec>
 8000f24:	eba2 0203 	sub.w	r2, r2, r3
 8000f28:	ea80 0c01 	eor.w	ip, r0, r1
 8000f2c:	0249      	lsls	r1, r1, #9
 8000f2e:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000f32:	d037      	beq.n	8000fa4 <__aeabi_fdiv+0x98>
 8000f34:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8000f38:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000f3c:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000f40:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000f44:	428b      	cmp	r3, r1
 8000f46:	bf38      	it	cc
 8000f48:	005b      	lslcc	r3, r3, #1
 8000f4a:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8000f4e:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 8000f52:	428b      	cmp	r3, r1
 8000f54:	bf24      	itt	cs
 8000f56:	1a5b      	subcs	r3, r3, r1
 8000f58:	ea40 000c 	orrcs.w	r0, r0, ip
 8000f5c:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000f60:	bf24      	itt	cs
 8000f62:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000f66:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000f6a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000f6e:	bf24      	itt	cs
 8000f70:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000f74:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000f78:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000f7c:	bf24      	itt	cs
 8000f7e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000f82:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000f86:	011b      	lsls	r3, r3, #4
 8000f88:	bf18      	it	ne
 8000f8a:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000f8e:	d1e0      	bne.n	8000f52 <__aeabi_fdiv+0x46>
 8000f90:	2afd      	cmp	r2, #253	; 0xfd
 8000f92:	f63f af50 	bhi.w	8000e36 <__aeabi_fmul+0x92>
 8000f96:	428b      	cmp	r3, r1
 8000f98:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000f9c:	bf08      	it	eq
 8000f9e:	f020 0001 	biceq.w	r0, r0, #1
 8000fa2:	4770      	bx	lr
 8000fa4:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000fa8:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000fac:	327f      	adds	r2, #127	; 0x7f
 8000fae:	bfc2      	ittt	gt
 8000fb0:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000fb4:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000fb8:	4770      	bxgt	lr
 8000fba:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000fbe:	f04f 0300 	mov.w	r3, #0
 8000fc2:	3a01      	subs	r2, #1
 8000fc4:	e737      	b.n	8000e36 <__aeabi_fmul+0x92>
 8000fc6:	f092 0f00 	teq	r2, #0
 8000fca:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000fce:	bf02      	ittt	eq
 8000fd0:	0040      	lsleq	r0, r0, #1
 8000fd2:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000fd6:	3a01      	subeq	r2, #1
 8000fd8:	d0f9      	beq.n	8000fce <__aeabi_fdiv+0xc2>
 8000fda:	ea40 000c 	orr.w	r0, r0, ip
 8000fde:	f093 0f00 	teq	r3, #0
 8000fe2:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000fe6:	bf02      	ittt	eq
 8000fe8:	0049      	lsleq	r1, r1, #1
 8000fea:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000fee:	3b01      	subeq	r3, #1
 8000ff0:	d0f9      	beq.n	8000fe6 <__aeabi_fdiv+0xda>
 8000ff2:	ea41 010c 	orr.w	r1, r1, ip
 8000ff6:	e795      	b.n	8000f24 <__aeabi_fdiv+0x18>
 8000ff8:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000ffc:	ea92 0f0c 	teq	r2, ip
 8001000:	d108      	bne.n	8001014 <__aeabi_fdiv+0x108>
 8001002:	0242      	lsls	r2, r0, #9
 8001004:	f47f af7d 	bne.w	8000f02 <__aeabi_fmul+0x15e>
 8001008:	ea93 0f0c 	teq	r3, ip
 800100c:	f47f af70 	bne.w	8000ef0 <__aeabi_fmul+0x14c>
 8001010:	4608      	mov	r0, r1
 8001012:	e776      	b.n	8000f02 <__aeabi_fmul+0x15e>
 8001014:	ea93 0f0c 	teq	r3, ip
 8001018:	d104      	bne.n	8001024 <__aeabi_fdiv+0x118>
 800101a:	024b      	lsls	r3, r1, #9
 800101c:	f43f af4c 	beq.w	8000eb8 <__aeabi_fmul+0x114>
 8001020:	4608      	mov	r0, r1
 8001022:	e76e      	b.n	8000f02 <__aeabi_fmul+0x15e>
 8001024:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8001028:	bf18      	it	ne
 800102a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 800102e:	d1ca      	bne.n	8000fc6 <__aeabi_fdiv+0xba>
 8001030:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8001034:	f47f af5c 	bne.w	8000ef0 <__aeabi_fmul+0x14c>
 8001038:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 800103c:	f47f af3c 	bne.w	8000eb8 <__aeabi_fmul+0x114>
 8001040:	e75f      	b.n	8000f02 <__aeabi_fmul+0x15e>
 8001042:	bf00      	nop

08001044 <__gesf2>:
 8001044:	f04f 3cff 	mov.w	ip, #4294967295
 8001048:	e006      	b.n	8001058 <__cmpsf2+0x4>
 800104a:	bf00      	nop

0800104c <__lesf2>:
 800104c:	f04f 0c01 	mov.w	ip, #1
 8001050:	e002      	b.n	8001058 <__cmpsf2+0x4>
 8001052:	bf00      	nop

08001054 <__cmpsf2>:
 8001054:	f04f 0c01 	mov.w	ip, #1
 8001058:	f84d cd04 	str.w	ip, [sp, #-4]!
 800105c:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8001060:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8001064:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8001068:	bf18      	it	ne
 800106a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 800106e:	d011      	beq.n	8001094 <__cmpsf2+0x40>
 8001070:	b001      	add	sp, #4
 8001072:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8001076:	bf18      	it	ne
 8001078:	ea90 0f01 	teqne	r0, r1
 800107c:	bf58      	it	pl
 800107e:	ebb2 0003 	subspl.w	r0, r2, r3
 8001082:	bf88      	it	hi
 8001084:	17c8      	asrhi	r0, r1, #31
 8001086:	bf38      	it	cc
 8001088:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 800108c:	bf18      	it	ne
 800108e:	f040 0001 	orrne.w	r0, r0, #1
 8001092:	4770      	bx	lr
 8001094:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8001098:	d102      	bne.n	80010a0 <__cmpsf2+0x4c>
 800109a:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 800109e:	d105      	bne.n	80010ac <__cmpsf2+0x58>
 80010a0:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 80010a4:	d1e4      	bne.n	8001070 <__cmpsf2+0x1c>
 80010a6:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 80010aa:	d0e1      	beq.n	8001070 <__cmpsf2+0x1c>
 80010ac:	f85d 0b04 	ldr.w	r0, [sp], #4
 80010b0:	4770      	bx	lr
 80010b2:	bf00      	nop

080010b4 <__aeabi_cfrcmple>:
 80010b4:	4684      	mov	ip, r0
 80010b6:	4608      	mov	r0, r1
 80010b8:	4661      	mov	r1, ip
 80010ba:	e7ff      	b.n	80010bc <__aeabi_cfcmpeq>

080010bc <__aeabi_cfcmpeq>:
 80010bc:	b50f      	push	{r0, r1, r2, r3, lr}
 80010be:	f7ff ffc9 	bl	8001054 <__cmpsf2>
 80010c2:	2800      	cmp	r0, #0
 80010c4:	bf48      	it	mi
 80010c6:	f110 0f00 	cmnmi.w	r0, #0
 80010ca:	bd0f      	pop	{r0, r1, r2, r3, pc}

080010cc <__aeabi_fcmpeq>:
 80010cc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80010d0:	f7ff fff4 	bl	80010bc <__aeabi_cfcmpeq>
 80010d4:	bf0c      	ite	eq
 80010d6:	2001      	moveq	r0, #1
 80010d8:	2000      	movne	r0, #0
 80010da:	f85d fb08 	ldr.w	pc, [sp], #8
 80010de:	bf00      	nop

080010e0 <__aeabi_fcmplt>:
 80010e0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80010e4:	f7ff ffea 	bl	80010bc <__aeabi_cfcmpeq>
 80010e8:	bf34      	ite	cc
 80010ea:	2001      	movcc	r0, #1
 80010ec:	2000      	movcs	r0, #0
 80010ee:	f85d fb08 	ldr.w	pc, [sp], #8
 80010f2:	bf00      	nop

080010f4 <__aeabi_fcmple>:
 80010f4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80010f8:	f7ff ffe0 	bl	80010bc <__aeabi_cfcmpeq>
 80010fc:	bf94      	ite	ls
 80010fe:	2001      	movls	r0, #1
 8001100:	2000      	movhi	r0, #0
 8001102:	f85d fb08 	ldr.w	pc, [sp], #8
 8001106:	bf00      	nop

08001108 <__aeabi_fcmpge>:
 8001108:	f84d ed08 	str.w	lr, [sp, #-8]!
 800110c:	f7ff ffd2 	bl	80010b4 <__aeabi_cfrcmple>
 8001110:	bf94      	ite	ls
 8001112:	2001      	movls	r0, #1
 8001114:	2000      	movhi	r0, #0
 8001116:	f85d fb08 	ldr.w	pc, [sp], #8
 800111a:	bf00      	nop

0800111c <__aeabi_fcmpgt>:
 800111c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001120:	f7ff ffc8 	bl	80010b4 <__aeabi_cfrcmple>
 8001124:	bf34      	ite	cc
 8001126:	2001      	movcc	r0, #1
 8001128:	2000      	movcs	r0, #0
 800112a:	f85d fb08 	ldr.w	pc, [sp], #8
 800112e:	bf00      	nop

08001130 <__aeabi_f2uiz>:
 8001130:	0042      	lsls	r2, r0, #1
 8001132:	d20e      	bcs.n	8001152 <__aeabi_f2uiz+0x22>
 8001134:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8001138:	d30b      	bcc.n	8001152 <__aeabi_f2uiz+0x22>
 800113a:	f04f 039e 	mov.w	r3, #158	; 0x9e
 800113e:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8001142:	d409      	bmi.n	8001158 <__aeabi_f2uiz+0x28>
 8001144:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8001148:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 800114c:	fa23 f002 	lsr.w	r0, r3, r2
 8001150:	4770      	bx	lr
 8001152:	f04f 0000 	mov.w	r0, #0
 8001156:	4770      	bx	lr
 8001158:	f112 0f61 	cmn.w	r2, #97	; 0x61
 800115c:	d101      	bne.n	8001162 <__aeabi_f2uiz+0x32>
 800115e:	0242      	lsls	r2, r0, #9
 8001160:	d102      	bne.n	8001168 <__aeabi_f2uiz+0x38>
 8001162:	f04f 30ff 	mov.w	r0, #4294967295
 8001166:	4770      	bx	lr
 8001168:	f04f 0000 	mov.w	r0, #0
 800116c:	4770      	bx	lr
 800116e:	bf00      	nop

08001170 <getposition>:
#include "STM32f103c6.h"
#include "GPIO_DRIVER.h"
uint8_t getposition(uint16_t pin_num){
 8001170:	b480      	push	{r7}
 8001172:	b085      	sub	sp, #20
 8001174:	af00      	add	r7, sp, #0
 8001176:	4603      	mov	r3, r0
 8001178:	80fb      	strh	r3, [r7, #6]
	uint8_t rval;
	if(pin_num == pin0){
 800117a:	88fb      	ldrh	r3, [r7, #6]
 800117c:	2b00      	cmp	r3, #0
 800117e:	d101      	bne.n	8001184 <getposition+0x14>
		rval =0;
 8001180:	2300      	movs	r3, #0
 8001182:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == pin1){
 8001184:	88fb      	ldrh	r3, [r7, #6]
 8001186:	2b01      	cmp	r3, #1
 8001188:	d101      	bne.n	800118e <getposition+0x1e>
		rval =4;
 800118a:	2304      	movs	r3, #4
 800118c:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == pin2){
 800118e:	88fb      	ldrh	r3, [r7, #6]
 8001190:	2b02      	cmp	r3, #2
 8001192:	d101      	bne.n	8001198 <getposition+0x28>
		rval =8;
 8001194:	2308      	movs	r3, #8
 8001196:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == pin3){
 8001198:	88fb      	ldrh	r3, [r7, #6]
 800119a:	2b03      	cmp	r3, #3
 800119c:	d101      	bne.n	80011a2 <getposition+0x32>
		rval =12;
 800119e:	230c      	movs	r3, #12
 80011a0:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == pin4){
 80011a2:	88fb      	ldrh	r3, [r7, #6]
 80011a4:	2b04      	cmp	r3, #4
 80011a6:	d101      	bne.n	80011ac <getposition+0x3c>
		rval =16;
 80011a8:	2310      	movs	r3, #16
 80011aa:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == pin5){
 80011ac:	88fb      	ldrh	r3, [r7, #6]
 80011ae:	2b05      	cmp	r3, #5
 80011b0:	d101      	bne.n	80011b6 <getposition+0x46>
		rval =20;
 80011b2:	2314      	movs	r3, #20
 80011b4:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == pin6){
 80011b6:	88fb      	ldrh	r3, [r7, #6]
 80011b8:	2b06      	cmp	r3, #6
 80011ba:	d101      	bne.n	80011c0 <getposition+0x50>
		rval =24;
 80011bc:	2318      	movs	r3, #24
 80011be:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == pin7){
 80011c0:	88fb      	ldrh	r3, [r7, #6]
 80011c2:	2b07      	cmp	r3, #7
 80011c4:	d101      	bne.n	80011ca <getposition+0x5a>
		rval =28;
 80011c6:	231c      	movs	r3, #28
 80011c8:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == pin8){
 80011ca:	88fb      	ldrh	r3, [r7, #6]
 80011cc:	2b08      	cmp	r3, #8
 80011ce:	d101      	bne.n	80011d4 <getposition+0x64>
		rval =0;
 80011d0:	2300      	movs	r3, #0
 80011d2:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == pin9){
 80011d4:	88fb      	ldrh	r3, [r7, #6]
 80011d6:	2b09      	cmp	r3, #9
 80011d8:	d101      	bne.n	80011de <getposition+0x6e>
		rval =4;
 80011da:	2304      	movs	r3, #4
 80011dc:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == pin10){
 80011de:	88fb      	ldrh	r3, [r7, #6]
 80011e0:	2b0a      	cmp	r3, #10
 80011e2:	d101      	bne.n	80011e8 <getposition+0x78>
		rval =8;
 80011e4:	2308      	movs	r3, #8
 80011e6:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == pin11){
 80011e8:	88fb      	ldrh	r3, [r7, #6]
 80011ea:	2b0b      	cmp	r3, #11
 80011ec:	d101      	bne.n	80011f2 <getposition+0x82>
		rval =12;
 80011ee:	230c      	movs	r3, #12
 80011f0:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == pin12){
 80011f2:	88fb      	ldrh	r3, [r7, #6]
 80011f4:	2b0c      	cmp	r3, #12
 80011f6:	d101      	bne.n	80011fc <getposition+0x8c>
		rval =16;
 80011f8:	2310      	movs	r3, #16
 80011fa:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == pin13){
 80011fc:	88fb      	ldrh	r3, [r7, #6]
 80011fe:	2b0d      	cmp	r3, #13
 8001200:	d101      	bne.n	8001206 <getposition+0x96>
		rval =20;
 8001202:	2314      	movs	r3, #20
 8001204:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == pin14){
 8001206:	88fb      	ldrh	r3, [r7, #6]
 8001208:	2b0e      	cmp	r3, #14
 800120a:	d101      	bne.n	8001210 <getposition+0xa0>
		rval =24;
 800120c:	2318      	movs	r3, #24
 800120e:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == pin15){
 8001210:	88fb      	ldrh	r3, [r7, #6]
 8001212:	2b0f      	cmp	r3, #15
 8001214:	d101      	bne.n	800121a <getposition+0xaa>
		rval =28;
 8001216:	231c      	movs	r3, #28
 8001218:	73fb      	strb	r3, [r7, #15]
	}
	return rval;
 800121a:	7bfb      	ldrb	r3, [r7, #15]


}
 800121c:	4618      	mov	r0, r3
 800121e:	3714      	adds	r7, #20
 8001220:	46bd      	mov	sp, r7
 8001222:	bc80      	pop	{r7}
 8001224:	4770      	bx	lr
	...

08001228 <pinmode>:
// * @param [in] - GPIOx: where x can be (A...E Depending on device used) to select the GPIO Peripheral
// * @param [in] - pin: pin name
// * @param [in] - pinmode:mode of the pin
// * @retval -none
// * Note-
void pinmode(GPIO_typeDef* GPIOx,uint16_t pin,uint32_t pinmode){
 8001228:	b580      	push	{r7, lr}
 800122a:	b084      	sub	sp, #16
 800122c:	af00      	add	r7, sp, #0
 800122e:	60f8      	str	r0, [r7, #12]
 8001230:	460b      	mov	r3, r1
 8001232:	607a      	str	r2, [r7, #4]
 8001234:	817b      	strh	r3, [r7, #10]
	if(GPIOx==GPIOA){
 8001236:	68fb      	ldr	r3, [r7, #12]
 8001238:	4a69      	ldr	r2, [pc, #420]	; (80013e0 <pinmode+0x1b8>)
 800123a:	4293      	cmp	r3, r2
 800123c:	d106      	bne.n	800124c <pinmode+0x24>
		GPIOA_Clock_Enable();
 800123e:	4b69      	ldr	r3, [pc, #420]	; (80013e4 <pinmode+0x1bc>)
 8001240:	699b      	ldr	r3, [r3, #24]
 8001242:	4a68      	ldr	r2, [pc, #416]	; (80013e4 <pinmode+0x1bc>)
 8001244:	f043 0304 	orr.w	r3, r3, #4
 8001248:	6193      	str	r3, [r2, #24]
 800124a:	e010      	b.n	800126e <pinmode+0x46>

	}
	else if(GPIOx==GPIOB){
 800124c:	68fb      	ldr	r3, [r7, #12]
 800124e:	4a66      	ldr	r2, [pc, #408]	; (80013e8 <pinmode+0x1c0>)
 8001250:	4293      	cmp	r3, r2
 8001252:	d106      	bne.n	8001262 <pinmode+0x3a>
		GPIOB_Clock_Enable();
 8001254:	4b63      	ldr	r3, [pc, #396]	; (80013e4 <pinmode+0x1bc>)
 8001256:	699b      	ldr	r3, [r3, #24]
 8001258:	4a62      	ldr	r2, [pc, #392]	; (80013e4 <pinmode+0x1bc>)
 800125a:	f043 0308 	orr.w	r3, r3, #8
 800125e:	6193      	str	r3, [r2, #24]
 8001260:	e005      	b.n	800126e <pinmode+0x46>

	}
	else{
		GPIOC_Clock_Enable();
 8001262:	4b60      	ldr	r3, [pc, #384]	; (80013e4 <pinmode+0x1bc>)
 8001264:	699b      	ldr	r3, [r3, #24]
 8001266:	4a5f      	ldr	r2, [pc, #380]	; (80013e4 <pinmode+0x1bc>)
 8001268:	f043 0310 	orr.w	r3, r3, #16
 800126c:	6193      	str	r3, [r2, #24]
	}

	if(pin<8){
 800126e:	897b      	ldrh	r3, [r7, #10]
 8001270:	2b07      	cmp	r3, #7
 8001272:	d856      	bhi.n	8001322 <pinmode+0xfa>
		GPIOx->GPIOx_CRL &=~(0xf<<(getposition(pin)));
 8001274:	897b      	ldrh	r3, [r7, #10]
 8001276:	4618      	mov	r0, r3
 8001278:	f7ff ff7a 	bl	8001170 <getposition>
 800127c:	4603      	mov	r3, r0
 800127e:	461a      	mov	r2, r3
 8001280:	230f      	movs	r3, #15
 8001282:	4093      	lsls	r3, r2
 8001284:	43da      	mvns	r2, r3
 8001286:	68fb      	ldr	r3, [r7, #12]
 8001288:	681b      	ldr	r3, [r3, #0]
 800128a:	401a      	ands	r2, r3
 800128c:	68fb      	ldr	r3, [r7, #12]
 800128e:	601a      	str	r2, [r3, #0]

		if((pinmode==GPIO_MODE_INPUT_PD)||(pinmode==GPIO_MODE_INPUT_PU)){
 8001290:	687b      	ldr	r3, [r7, #4]
 8001292:	2b08      	cmp	r3, #8
 8001294:	d002      	beq.n	800129c <pinmode+0x74>
 8001296:	687b      	ldr	r3, [r7, #4]
 8001298:	2b18      	cmp	r3, #24
 800129a:	d133      	bne.n	8001304 <pinmode+0xdc>
			if(pinmode == GPIO_MODE_INPUT_PU){
 800129c:	687b      	ldr	r3, [r7, #4]
 800129e:	2b18      	cmp	r3, #24
 80012a0:	d117      	bne.n	80012d2 <pinmode+0xaa>
				GPIOx->GPIOx_CRL |=(0b1000<<(getposition(pin)));
 80012a2:	897b      	ldrh	r3, [r7, #10]
 80012a4:	4618      	mov	r0, r3
 80012a6:	f7ff ff63 	bl	8001170 <getposition>
 80012aa:	4603      	mov	r3, r0
 80012ac:	461a      	mov	r2, r3
 80012ae:	2308      	movs	r3, #8
 80012b0:	fa03 f202 	lsl.w	r2, r3, r2
 80012b4:	68fb      	ldr	r3, [r7, #12]
 80012b6:	681b      	ldr	r3, [r3, #0]
 80012b8:	431a      	orrs	r2, r3
 80012ba:	68fb      	ldr	r3, [r7, #12]
 80012bc:	601a      	str	r2, [r3, #0]
				GPIOx->GPIOx_ODR |= (1<<pin);
 80012be:	68fb      	ldr	r3, [r7, #12]
 80012c0:	68db      	ldr	r3, [r3, #12]
 80012c2:	897a      	ldrh	r2, [r7, #10]
 80012c4:	2101      	movs	r1, #1
 80012c6:	fa01 f202 	lsl.w	r2, r1, r2
 80012ca:	431a      	orrs	r2, r3
 80012cc:	68fb      	ldr	r3, [r7, #12]
 80012ce:	60da      	str	r2, [r3, #12]
			if(pinmode == GPIO_MODE_INPUT_PU){
 80012d0:	e081      	b.n	80013d6 <pinmode+0x1ae>
			}
			else{
				GPIOx->GPIOx_CRL |=(0b1000<<(getposition(pin)));
 80012d2:	897b      	ldrh	r3, [r7, #10]
 80012d4:	4618      	mov	r0, r3
 80012d6:	f7ff ff4b 	bl	8001170 <getposition>
 80012da:	4603      	mov	r3, r0
 80012dc:	461a      	mov	r2, r3
 80012de:	2308      	movs	r3, #8
 80012e0:	fa03 f202 	lsl.w	r2, r3, r2
 80012e4:	68fb      	ldr	r3, [r7, #12]
 80012e6:	681b      	ldr	r3, [r3, #0]
 80012e8:	431a      	orrs	r2, r3
 80012ea:	68fb      	ldr	r3, [r7, #12]
 80012ec:	601a      	str	r2, [r3, #0]
				GPIOx->GPIOx_ODR &=~(1<<pin);
 80012ee:	68fb      	ldr	r3, [r7, #12]
 80012f0:	68db      	ldr	r3, [r3, #12]
 80012f2:	897a      	ldrh	r2, [r7, #10]
 80012f4:	2101      	movs	r1, #1
 80012f6:	fa01 f202 	lsl.w	r2, r1, r2
 80012fa:	43d2      	mvns	r2, r2
 80012fc:	401a      	ands	r2, r3
 80012fe:	68fb      	ldr	r3, [r7, #12]
 8001300:	60da      	str	r2, [r3, #12]
			if(pinmode == GPIO_MODE_INPUT_PU){
 8001302:	e068      	b.n	80013d6 <pinmode+0x1ae>
			}

		}
		else GPIOx->GPIOx_CRL |=(pinmode<<(getposition(pin)));
 8001304:	897b      	ldrh	r3, [r7, #10]
 8001306:	4618      	mov	r0, r3
 8001308:	f7ff ff32 	bl	8001170 <getposition>
 800130c:	4603      	mov	r3, r0
 800130e:	461a      	mov	r2, r3
 8001310:	687b      	ldr	r3, [r7, #4]
 8001312:	fa03 f202 	lsl.w	r2, r3, r2
 8001316:	68fb      	ldr	r3, [r7, #12]
 8001318:	681b      	ldr	r3, [r3, #0]
 800131a:	431a      	orrs	r2, r3
 800131c:	68fb      	ldr	r3, [r7, #12]
 800131e:	601a      	str	r2, [r3, #0]

	}



}
 8001320:	e059      	b.n	80013d6 <pinmode+0x1ae>
	else if(pin>7){
 8001322:	897b      	ldrh	r3, [r7, #10]
 8001324:	2b07      	cmp	r3, #7
 8001326:	d956      	bls.n	80013d6 <pinmode+0x1ae>
		GPIOx->GPIOx_CRH &=~(0xf<<(getposition(pin)));
 8001328:	897b      	ldrh	r3, [r7, #10]
 800132a:	4618      	mov	r0, r3
 800132c:	f7ff ff20 	bl	8001170 <getposition>
 8001330:	4603      	mov	r3, r0
 8001332:	461a      	mov	r2, r3
 8001334:	230f      	movs	r3, #15
 8001336:	4093      	lsls	r3, r2
 8001338:	43da      	mvns	r2, r3
 800133a:	68fb      	ldr	r3, [r7, #12]
 800133c:	685b      	ldr	r3, [r3, #4]
 800133e:	401a      	ands	r2, r3
 8001340:	68fb      	ldr	r3, [r7, #12]
 8001342:	605a      	str	r2, [r3, #4]
		if((pinmode==GPIO_MODE_INPUT_PD)||(pinmode==GPIO_MODE_INPUT_PU)){
 8001344:	687b      	ldr	r3, [r7, #4]
 8001346:	2b08      	cmp	r3, #8
 8001348:	d002      	beq.n	8001350 <pinmode+0x128>
 800134a:	687b      	ldr	r3, [r7, #4]
 800134c:	2b18      	cmp	r3, #24
 800134e:	d133      	bne.n	80013b8 <pinmode+0x190>
			if(pinmode == GPIO_MODE_INPUT_PU){
 8001350:	687b      	ldr	r3, [r7, #4]
 8001352:	2b18      	cmp	r3, #24
 8001354:	d117      	bne.n	8001386 <pinmode+0x15e>
				GPIOx->GPIOx_CRH |=(0b1000<<(getposition(pin)));
 8001356:	897b      	ldrh	r3, [r7, #10]
 8001358:	4618      	mov	r0, r3
 800135a:	f7ff ff09 	bl	8001170 <getposition>
 800135e:	4603      	mov	r3, r0
 8001360:	461a      	mov	r2, r3
 8001362:	2308      	movs	r3, #8
 8001364:	fa03 f202 	lsl.w	r2, r3, r2
 8001368:	68fb      	ldr	r3, [r7, #12]
 800136a:	685b      	ldr	r3, [r3, #4]
 800136c:	431a      	orrs	r2, r3
 800136e:	68fb      	ldr	r3, [r7, #12]
 8001370:	605a      	str	r2, [r3, #4]
				GPIOx->GPIOx_ODR |= (1<<pin);
 8001372:	68fb      	ldr	r3, [r7, #12]
 8001374:	68db      	ldr	r3, [r3, #12]
 8001376:	897a      	ldrh	r2, [r7, #10]
 8001378:	2101      	movs	r1, #1
 800137a:	fa01 f202 	lsl.w	r2, r1, r2
 800137e:	431a      	orrs	r2, r3
 8001380:	68fb      	ldr	r3, [r7, #12]
 8001382:	60da      	str	r2, [r3, #12]
			if(pinmode == GPIO_MODE_INPUT_PU){
 8001384:	e027      	b.n	80013d6 <pinmode+0x1ae>
				GPIOx->GPIOx_CRH |=(0b1000<<(getposition(pin)));
 8001386:	897b      	ldrh	r3, [r7, #10]
 8001388:	4618      	mov	r0, r3
 800138a:	f7ff fef1 	bl	8001170 <getposition>
 800138e:	4603      	mov	r3, r0
 8001390:	461a      	mov	r2, r3
 8001392:	2308      	movs	r3, #8
 8001394:	fa03 f202 	lsl.w	r2, r3, r2
 8001398:	68fb      	ldr	r3, [r7, #12]
 800139a:	685b      	ldr	r3, [r3, #4]
 800139c:	431a      	orrs	r2, r3
 800139e:	68fb      	ldr	r3, [r7, #12]
 80013a0:	605a      	str	r2, [r3, #4]
				GPIOx->GPIOx_ODR &=~(1<<pin);
 80013a2:	68fb      	ldr	r3, [r7, #12]
 80013a4:	68db      	ldr	r3, [r3, #12]
 80013a6:	897a      	ldrh	r2, [r7, #10]
 80013a8:	2101      	movs	r1, #1
 80013aa:	fa01 f202 	lsl.w	r2, r1, r2
 80013ae:	43d2      	mvns	r2, r2
 80013b0:	401a      	ands	r2, r3
 80013b2:	68fb      	ldr	r3, [r7, #12]
 80013b4:	60da      	str	r2, [r3, #12]
			if(pinmode == GPIO_MODE_INPUT_PU){
 80013b6:	e00e      	b.n	80013d6 <pinmode+0x1ae>
		else GPIOx->GPIOx_CRH |=(pinmode<<(getposition(pin)));
 80013b8:	897b      	ldrh	r3, [r7, #10]
 80013ba:	4618      	mov	r0, r3
 80013bc:	f7ff fed8 	bl	8001170 <getposition>
 80013c0:	4603      	mov	r3, r0
 80013c2:	461a      	mov	r2, r3
 80013c4:	687b      	ldr	r3, [r7, #4]
 80013c6:	fa03 f202 	lsl.w	r2, r3, r2
 80013ca:	68fb      	ldr	r3, [r7, #12]
 80013cc:	685b      	ldr	r3, [r3, #4]
 80013ce:	431a      	orrs	r2, r3
 80013d0:	68fb      	ldr	r3, [r7, #12]
 80013d2:	605a      	str	r2, [r3, #4]
}
 80013d4:	e7ff      	b.n	80013d6 <pinmode+0x1ae>
 80013d6:	bf00      	nop
 80013d8:	3710      	adds	r7, #16
 80013da:	46bd      	mov	sp, r7
 80013dc:	bd80      	pop	{r7, pc}
 80013de:	bf00      	nop
 80013e0:	40010800 	.word	0x40010800
 80013e4:	40021000 	.word	0x40021000
 80013e8:	40010c00 	.word	0x40010c00

080013ec <pinwrite>:
 * @param [in] - pin: GPIOx PIN Number
 * @param [in] - status: The desired value to write
 * @retval - None
 * Note-
 */
void pinwrite(GPIO_typeDef* GPIOx,uint16_t pin,uint8_t status){
 80013ec:	b480      	push	{r7}
 80013ee:	b083      	sub	sp, #12
 80013f0:	af00      	add	r7, sp, #0
 80013f2:	6078      	str	r0, [r7, #4]
 80013f4:	460b      	mov	r3, r1
 80013f6:	807b      	strh	r3, [r7, #2]
 80013f8:	4613      	mov	r3, r2
 80013fa:	707b      	strb	r3, [r7, #1]
	if(status!=0){
 80013fc:	787b      	ldrb	r3, [r7, #1]
 80013fe:	2b00      	cmp	r3, #0
 8001400:	d009      	beq.n	8001416 <pinwrite+0x2a>
		GPIOx->GPIOx_ODR |=(1<<pin);
 8001402:	687b      	ldr	r3, [r7, #4]
 8001404:	68db      	ldr	r3, [r3, #12]
 8001406:	887a      	ldrh	r2, [r7, #2]
 8001408:	2101      	movs	r1, #1
 800140a:	fa01 f202 	lsl.w	r2, r1, r2
 800140e:	431a      	orrs	r2, r3
 8001410:	687b      	ldr	r3, [r7, #4]
 8001412:	60da      	str	r2, [r3, #12]
	}
	else GPIOx->GPIOx_ODR &=~(1<<pin);

}
 8001414:	e009      	b.n	800142a <pinwrite+0x3e>
	else GPIOx->GPIOx_ODR &=~(1<<pin);
 8001416:	687b      	ldr	r3, [r7, #4]
 8001418:	68db      	ldr	r3, [r3, #12]
 800141a:	887a      	ldrh	r2, [r7, #2]
 800141c:	2101      	movs	r1, #1
 800141e:	fa01 f202 	lsl.w	r2, r1, r2
 8001422:	43d2      	mvns	r2, r2
 8001424:	401a      	ands	r2, r3
 8001426:	687b      	ldr	r3, [r7, #4]
 8001428:	60da      	str	r2, [r3, #12]
}
 800142a:	bf00      	nop
 800142c:	370c      	adds	r7, #12
 800142e:	46bd      	mov	sp, r7
 8001430:	bc80      	pop	{r7}
 8001432:	4770      	bx	lr

08001434 <_12cdelay_ms>:
 *      Author: 20102
 */
static unsigned flag_init=0;
#include "I2C_LCD.h"
//============================================
void _12cdelay_ms(long x){
 8001434:	b480      	push	{r7}
 8001436:	b085      	sub	sp, #20
 8001438:	af00      	add	r7, sp, #0
 800143a:	6078      	str	r0, [r7, #4]
	for(long i=0;i<(x*65);i++);
 800143c:	2300      	movs	r3, #0
 800143e:	60fb      	str	r3, [r7, #12]
 8001440:	e002      	b.n	8001448 <_12cdelay_ms+0x14>
 8001442:	68fb      	ldr	r3, [r7, #12]
 8001444:	3301      	adds	r3, #1
 8001446:	60fb      	str	r3, [r7, #12]
 8001448:	687a      	ldr	r2, [r7, #4]
 800144a:	4613      	mov	r3, r2
 800144c:	019b      	lsls	r3, r3, #6
 800144e:	4413      	add	r3, r2
 8001450:	68fa      	ldr	r2, [r7, #12]
 8001452:	429a      	cmp	r2, r3
 8001454:	dbf5      	blt.n	8001442 <_12cdelay_ms+0xe>
}
 8001456:	bf00      	nop
 8001458:	3714      	adds	r7, #20
 800145a:	46bd      	mov	sp, r7
 800145c:	bc80      	pop	{r7}
 800145e:	4770      	bx	lr

08001460 <I2C_LCD_write_CMD>:

void I2C_LCD_write_CMD(I2C_TypeDef* I2Cx,char CMD,uint16_t address){
 8001460:	b580      	push	{r7, lr}
 8001462:	b086      	sub	sp, #24
 8001464:	af02      	add	r7, sp, #8
 8001466:	6078      	str	r0, [r7, #4]
 8001468:	460b      	mov	r3, r1
 800146a:	70fb      	strb	r3, [r7, #3]
 800146c:	4613      	mov	r3, r2
 800146e:	803b      	strh	r3, [r7, #0]

	unsigned char temp = 0x00;
 8001470:	2300      	movs	r3, #0
 8001472:	73fb      	strb	r3, [r7, #15]
	uint8_t lcd = 0x0C;//1100  RS=0 RW=0 E=1 backlight =1
 8001474:	230c      	movs	r3, #12
 8001476:	73bb      	strb	r3, [r7, #14]
	lcd &= 0x0F;
 8001478:	7bbb      	ldrb	r3, [r7, #14]
 800147a:	f003 030f 	and.w	r3, r3, #15
 800147e:	b2db      	uxtb	r3, r3
 8001480:	73bb      	strb	r3, [r7, #14]
	temp = (CMD & 0xF0);//4 MSB first //1111 0101//  1111 1100  //1111 0100
 8001482:	78fb      	ldrb	r3, [r7, #3]
 8001484:	f023 030f 	bic.w	r3, r3, #15
 8001488:	73fb      	strb	r3, [r7, #15]
	lcd |= (temp| 0x04);// 4 MSB of CMD + 1100  RS=0 RW=0 E=1 backlight =1
 800148a:	7bba      	ldrb	r2, [r7, #14]
 800148c:	7bfb      	ldrb	r3, [r7, #15]
 800148e:	4313      	orrs	r3, r2
 8001490:	b2db      	uxtb	r3, r3
 8001492:	f043 0304 	orr.w	r3, r3, #4
 8001496:	b2db      	uxtb	r3, r3
 8001498:	73bb      	strb	r3, [r7, #14]

	I2C_Master_Send(I2Cx, &lcd, 1, address, WithStop, Start);//send to i2C
 800149a:	883a      	ldrh	r2, [r7, #0]
 800149c:	f107 010e 	add.w	r1, r7, #14
 80014a0:	2300      	movs	r3, #0
 80014a2:	9301      	str	r3, [sp, #4]
 80014a4:	2300      	movs	r3, #0
 80014a6:	9300      	str	r3, [sp, #0]
 80014a8:	4613      	mov	r3, r2
 80014aa:	2201      	movs	r2, #1
 80014ac:	6878      	ldr	r0, [r7, #4]
 80014ae:	f000 fa2d 	bl	800190c <I2C_Master_Send>

	_12cdelay_ms(10);
 80014b2:	200a      	movs	r0, #10
 80014b4:	f7ff ffbe 	bl	8001434 <_12cdelay_ms>
	lcd &= ~(0x04);//E=0
 80014b8:	7bbb      	ldrb	r3, [r7, #14]
 80014ba:	f023 0304 	bic.w	r3, r3, #4
 80014be:	b2db      	uxtb	r3, r3
 80014c0:	73bb      	strb	r3, [r7, #14]
	I2C_Master_Send(I2Cx, &lcd, 1, address, WithStop, Start);// 4 MSB of CMD + 1100  RS=0 RW=0 E=0 backlight =1
 80014c2:	883a      	ldrh	r2, [r7, #0]
 80014c4:	f107 010e 	add.w	r1, r7, #14
 80014c8:	2300      	movs	r3, #0
 80014ca:	9301      	str	r3, [sp, #4]
 80014cc:	2300      	movs	r3, #0
 80014ce:	9300      	str	r3, [sp, #0]
 80014d0:	4613      	mov	r3, r2
 80014d2:	2201      	movs	r2, #1
 80014d4:	6878      	ldr	r0, [r7, #4]
 80014d6:	f000 fa19 	bl	800190c <I2C_Master_Send>
	_12cdelay_ms(10);
 80014da:	200a      	movs	r0, #10
 80014dc:	f7ff ffaa 	bl	8001434 <_12cdelay_ms>




	if(flag_init)
 80014e0:	4b1d      	ldr	r3, [pc, #116]	; (8001558 <I2C_LCD_write_CMD+0xf8>)
 80014e2:	681b      	ldr	r3, [r3, #0]
 80014e4:	2b00      	cmp	r3, #0
 80014e6:	d02f      	beq.n	8001548 <I2C_LCD_write_CMD+0xe8>
	{

		temp = ((CMD & 0x0F)<<4);//4 LSB first
 80014e8:	78fb      	ldrb	r3, [r7, #3]
 80014ea:	011b      	lsls	r3, r3, #4
 80014ec:	73fb      	strb	r3, [r7, #15]
		lcd = 0x0C;//1100  RS=0 RW=0 E=1 backlight =1
 80014ee:	230c      	movs	r3, #12
 80014f0:	73bb      	strb	r3, [r7, #14]
		lcd |= (temp| 0x04);// 4 LSB of CMD + 1100  RS=0 RW=0 E=1 backlight =1
 80014f2:	7bba      	ldrb	r2, [r7, #14]
 80014f4:	7bfb      	ldrb	r3, [r7, #15]
 80014f6:	4313      	orrs	r3, r2
 80014f8:	b2db      	uxtb	r3, r3
 80014fa:	f043 0304 	orr.w	r3, r3, #4
 80014fe:	b2db      	uxtb	r3, r3
 8001500:	73bb      	strb	r3, [r7, #14]

		I2C_Master_Send(I2Cx, &lcd, 1, address, WithStop, Start);//send to i2C
 8001502:	883a      	ldrh	r2, [r7, #0]
 8001504:	f107 010e 	add.w	r1, r7, #14
 8001508:	2300      	movs	r3, #0
 800150a:	9301      	str	r3, [sp, #4]
 800150c:	2300      	movs	r3, #0
 800150e:	9300      	str	r3, [sp, #0]
 8001510:	4613      	mov	r3, r2
 8001512:	2201      	movs	r2, #1
 8001514:	6878      	ldr	r0, [r7, #4]
 8001516:	f000 f9f9 	bl	800190c <I2C_Master_Send>
		_12cdelay_ms(10);
 800151a:	200a      	movs	r0, #10
 800151c:	f7ff ff8a 	bl	8001434 <_12cdelay_ms>
		lcd &= ~(0x04);//E=0
 8001520:	7bbb      	ldrb	r3, [r7, #14]
 8001522:	f023 0304 	bic.w	r3, r3, #4
 8001526:	b2db      	uxtb	r3, r3
 8001528:	73bb      	strb	r3, [r7, #14]
		I2C_Master_Send(I2Cx, &lcd, 1, address, WithStop, Start);// 4 LSB of CMD + 1100  RS=0 RW=0 E=0 backlight =1
 800152a:	883a      	ldrh	r2, [r7, #0]
 800152c:	f107 010e 	add.w	r1, r7, #14
 8001530:	2300      	movs	r3, #0
 8001532:	9301      	str	r3, [sp, #4]
 8001534:	2300      	movs	r3, #0
 8001536:	9300      	str	r3, [sp, #0]
 8001538:	4613      	mov	r3, r2
 800153a:	2201      	movs	r2, #1
 800153c:	6878      	ldr	r0, [r7, #4]
 800153e:	f000 f9e5 	bl	800190c <I2C_Master_Send>
		_12cdelay_ms(5);
 8001542:	2005      	movs	r0, #5
 8001544:	f7ff ff76 	bl	8001434 <_12cdelay_ms>
	}
	_12cdelay_ms(2);
 8001548:	2002      	movs	r0, #2
 800154a:	f7ff ff73 	bl	8001434 <_12cdelay_ms>
}
 800154e:	bf00      	nop
 8001550:	3710      	adds	r7, #16
 8001552:	46bd      	mov	sp, r7
 8001554:	bd80      	pop	{r7, pc}
 8001556:	bf00      	nop
 8001558:	20000224 	.word	0x20000224

0800155c <I2C_LCD_Init>:
void I2C_LCD_Init(I2C_TypeDef* I2Cx,uint16_t address){
 800155c:	b580      	push	{r7, lr}
 800155e:	b082      	sub	sp, #8
 8001560:	af00      	add	r7, sp, #0
 8001562:	6078      	str	r0, [r7, #4]
 8001564:	460b      	mov	r3, r1
 8001566:	807b      	strh	r3, [r7, #2]
	I2C_INIT(I2C1,8000000);
 8001568:	492a      	ldr	r1, [pc, #168]	; (8001614 <I2C_LCD_Init+0xb8>)
 800156a:	482b      	ldr	r0, [pc, #172]	; (8001618 <I2C_LCD_Init+0xbc>)
 800156c:	f000 f92a 	bl	80017c4 <I2C_INIT>
	flag_init=0;
 8001570:	4b2a      	ldr	r3, [pc, #168]	; (800161c <I2C_LCD_Init+0xc0>)
 8001572:	2200      	movs	r2, #0
 8001574:	601a      	str	r2, [r3, #0]
	_12cdelay_ms(90);
 8001576:	205a      	movs	r0, #90	; 0x5a
 8001578:	f7ff ff5c 	bl	8001434 <_12cdelay_ms>
	I2C_LCD_write_CMD(I2Cx,0x03, address);//--- Initialize Sequence
 800157c:	887b      	ldrh	r3, [r7, #2]
 800157e:	461a      	mov	r2, r3
 8001580:	2103      	movs	r1, #3
 8001582:	6878      	ldr	r0, [r7, #4]
 8001584:	f7ff ff6c 	bl	8001460 <I2C_LCD_write_CMD>
	I2C_LCD_write_CMD(I2Cx,0x03, address);
 8001588:	887b      	ldrh	r3, [r7, #2]
 800158a:	461a      	mov	r2, r3
 800158c:	2103      	movs	r1, #3
 800158e:	6878      	ldr	r0, [r7, #4]
 8001590:	f7ff ff66 	bl	8001460 <I2C_LCD_write_CMD>
	I2C_LCD_write_CMD(I2Cx,0x03, address);
 8001594:	887b      	ldrh	r3, [r7, #2]
 8001596:	461a      	mov	r2, r3
 8001598:	2103      	movs	r1, #3
 800159a:	6878      	ldr	r0, [r7, #4]
 800159c:	f7ff ff60 	bl	8001460 <I2C_LCD_write_CMD>
	I2C_LCD_write_CMD(I2Cx,0x20, address);//--- Return to Home
 80015a0:	887b      	ldrh	r3, [r7, #2]
 80015a2:	461a      	mov	r2, r3
 80015a4:	2120      	movs	r1, #32
 80015a6:	6878      	ldr	r0, [r7, #4]
 80015a8:	f7ff ff5a 	bl	8001460 <I2C_LCD_write_CMD>
	I2C_LCD_write_CMD(I2Cx,0x20, address);//--- Return to Home
 80015ac:	887b      	ldrh	r3, [r7, #2]
 80015ae:	461a      	mov	r2, r3
 80015b0:	2120      	movs	r1, #32
 80015b2:	6878      	ldr	r0, [r7, #4]
 80015b4:	f7ff ff54 	bl	8001460 <I2C_LCD_write_CMD>
	I2C_LCD_write_CMD(I2Cx,0x80, address);// 2 line and 5x7 pixel N=1 f=0
 80015b8:	887b      	ldrh	r3, [r7, #2]
 80015ba:	461a      	mov	r2, r3
 80015bc:	2180      	movs	r1, #128	; 0x80
 80015be:	6878      	ldr	r0, [r7, #4]
 80015c0:	f7ff ff4e 	bl	8001460 <I2C_LCD_write_CMD>
	_12cdelay_ms(2);
 80015c4:	2002      	movs	r0, #2
 80015c6:	f7ff ff35 	bl	8001434 <_12cdelay_ms>
	I2C_LCD_write_CMD(I2Cx,0x00, address);
 80015ca:	887b      	ldrh	r3, [r7, #2]
 80015cc:	461a      	mov	r2, r3
 80015ce:	2100      	movs	r1, #0
 80015d0:	6878      	ldr	r0, [r7, #4]
 80015d2:	f7ff ff45 	bl	8001460 <I2C_LCD_write_CMD>
	I2C_LCD_write_CMD(I2Cx,0xC0, address);//cerser
 80015d6:	887b      	ldrh	r3, [r7, #2]
 80015d8:	461a      	mov	r2, r3
 80015da:	21c0      	movs	r1, #192	; 0xc0
 80015dc:	6878      	ldr	r0, [r7, #4]
 80015de:	f7ff ff3f 	bl	8001460 <I2C_LCD_write_CMD>
	_12cdelay_ms(2);
 80015e2:	2002      	movs	r0, #2
 80015e4:	f7ff ff26 	bl	8001434 <_12cdelay_ms>
	I2C_LCD_write_CMD(I2Cx,0x00, address);
 80015e8:	887b      	ldrh	r3, [r7, #2]
 80015ea:	461a      	mov	r2, r3
 80015ec:	2100      	movs	r1, #0
 80015ee:	6878      	ldr	r0, [r7, #4]
 80015f0:	f7ff ff36 	bl	8001460 <I2C_LCD_write_CMD>
	I2C_LCD_write_CMD(I2Cx,0x10, address);//--- Clear LCD
 80015f4:	887b      	ldrh	r3, [r7, #2]
 80015f6:	461a      	mov	r2, r3
 80015f8:	2110      	movs	r1, #16
 80015fa:	6878      	ldr	r0, [r7, #4]
 80015fc:	f7ff ff30 	bl	8001460 <I2C_LCD_write_CMD>
	_12cdelay_ms(30);
 8001600:	201e      	movs	r0, #30
 8001602:	f7ff ff17 	bl	8001434 <_12cdelay_ms>
flag_init=1;
 8001606:	4b05      	ldr	r3, [pc, #20]	; (800161c <I2C_LCD_Init+0xc0>)
 8001608:	2201      	movs	r2, #1
 800160a:	601a      	str	r2, [r3, #0]
}
 800160c:	bf00      	nop
 800160e:	3708      	adds	r7, #8
 8001610:	46bd      	mov	sp, r7
 8001612:	bd80      	pop	{r7, pc}
 8001614:	007a1200 	.word	0x007a1200
 8001618:	40005400 	.word	0x40005400
 800161c:	20000224 	.word	0x20000224

08001620 <I2C_LCD_write_data>:
void I2C_LCD_write_data(I2C_TypeDef* I2Cx ,char data,uint16_t address){
 8001620:	b580      	push	{r7, lr}
 8001622:	b086      	sub	sp, #24
 8001624:	af02      	add	r7, sp, #8
 8001626:	6078      	str	r0, [r7, #4]
 8001628:	460b      	mov	r3, r1
 800162a:	70fb      	strb	r3, [r7, #3]
 800162c:	4613      	mov	r3, r2
 800162e:	803b      	strh	r3, [r7, #0]

	unsigned char temp = 0x00;
 8001630:	2300      	movs	r3, #0
 8001632:	73fb      	strb	r3, [r7, #15]
	uint8_t lcd = 0x0D;//1101  RS=1 RW=0 E=1 backlight =1
 8001634:	230d      	movs	r3, #13
 8001636:	73bb      	strb	r3, [r7, #14]
	temp = (data & 0xF0);
 8001638:	78fb      	ldrb	r3, [r7, #3]
 800163a:	f023 030f 	bic.w	r3, r3, #15
 800163e:	73fb      	strb	r3, [r7, #15]
	lcd |= (temp| 0x04);
 8001640:	7bba      	ldrb	r2, [r7, #14]
 8001642:	7bfb      	ldrb	r3, [r7, #15]
 8001644:	4313      	orrs	r3, r2
 8001646:	b2db      	uxtb	r3, r3
 8001648:	f043 0304 	orr.w	r3, r3, #4
 800164c:	b2db      	uxtb	r3, r3
 800164e:	73bb      	strb	r3, [r7, #14]

	I2C_Master_Send(I2Cx, &lcd, 1, address, WithStop, Start)	;
 8001650:	883a      	ldrh	r2, [r7, #0]
 8001652:	f107 010e 	add.w	r1, r7, #14
 8001656:	2300      	movs	r3, #0
 8001658:	9301      	str	r3, [sp, #4]
 800165a:	2300      	movs	r3, #0
 800165c:	9300      	str	r3, [sp, #0]
 800165e:	4613      	mov	r3, r2
 8001660:	2201      	movs	r2, #1
 8001662:	6878      	ldr	r0, [r7, #4]
 8001664:	f000 f952 	bl	800190c <I2C_Master_Send>

	_12cdelay_ms(1);
 8001668:	2001      	movs	r0, #1
 800166a:	f7ff fee3 	bl	8001434 <_12cdelay_ms>
	lcd &= ~(0x04);
 800166e:	7bbb      	ldrb	r3, [r7, #14]
 8001670:	f023 0304 	bic.w	r3, r3, #4
 8001674:	b2db      	uxtb	r3, r3
 8001676:	73bb      	strb	r3, [r7, #14]
	I2C_Master_Send(I2Cx, &lcd, 1, address, WithStop, Start);
 8001678:	883a      	ldrh	r2, [r7, #0]
 800167a:	f107 010e 	add.w	r1, r7, #14
 800167e:	2300      	movs	r3, #0
 8001680:	9301      	str	r3, [sp, #4]
 8001682:	2300      	movs	r3, #0
 8001684:	9300      	str	r3, [sp, #0]
 8001686:	4613      	mov	r3, r2
 8001688:	2201      	movs	r2, #1
 800168a:	6878      	ldr	r0, [r7, #4]
 800168c:	f000 f93e 	bl	800190c <I2C_Master_Send>
	_12cdelay_ms(1);
 8001690:	2001      	movs	r0, #1
 8001692:	f7ff fecf 	bl	8001434 <_12cdelay_ms>


	temp = ((data & 0x0F)<<4);
 8001696:	78fb      	ldrb	r3, [r7, #3]
 8001698:	011b      	lsls	r3, r3, #4
 800169a:	73fb      	strb	r3, [r7, #15]
	lcd = 0x0D;//1101  RS=1 RW=0 E=1 backlight =1
 800169c:	230d      	movs	r3, #13
 800169e:	73bb      	strb	r3, [r7, #14]
	lcd |= (temp|0x04);
 80016a0:	7bba      	ldrb	r2, [r7, #14]
 80016a2:	7bfb      	ldrb	r3, [r7, #15]
 80016a4:	4313      	orrs	r3, r2
 80016a6:	b2db      	uxtb	r3, r3
 80016a8:	f043 0304 	orr.w	r3, r3, #4
 80016ac:	b2db      	uxtb	r3, r3
 80016ae:	73bb      	strb	r3, [r7, #14]
	I2C_Master_Send(I2Cx, &lcd, 1, address, WithStop, Start);
 80016b0:	883a      	ldrh	r2, [r7, #0]
 80016b2:	f107 010e 	add.w	r1, r7, #14
 80016b6:	2300      	movs	r3, #0
 80016b8:	9301      	str	r3, [sp, #4]
 80016ba:	2300      	movs	r3, #0
 80016bc:	9300      	str	r3, [sp, #0]
 80016be:	4613      	mov	r3, r2
 80016c0:	2201      	movs	r2, #1
 80016c2:	6878      	ldr	r0, [r7, #4]
 80016c4:	f000 f922 	bl	800190c <I2C_Master_Send>
	_12cdelay_ms(1);
 80016c8:	2001      	movs	r0, #1
 80016ca:	f7ff feb3 	bl	8001434 <_12cdelay_ms>
	lcd &= ~(0x04);//E=0
 80016ce:	7bbb      	ldrb	r3, [r7, #14]
 80016d0:	f023 0304 	bic.w	r3, r3, #4
 80016d4:	b2db      	uxtb	r3, r3
 80016d6:	73bb      	strb	r3, [r7, #14]
	I2C_Master_Send(I2Cx, &lcd, 1, address, WithStop, Start);
 80016d8:	883a      	ldrh	r2, [r7, #0]
 80016da:	f107 010e 	add.w	r1, r7, #14
 80016de:	2300      	movs	r3, #0
 80016e0:	9301      	str	r3, [sp, #4]
 80016e2:	2300      	movs	r3, #0
 80016e4:	9300      	str	r3, [sp, #0]
 80016e6:	4613      	mov	r3, r2
 80016e8:	2201      	movs	r2, #1
 80016ea:	6878      	ldr	r0, [r7, #4]
 80016ec:	f000 f90e 	bl	800190c <I2C_Master_Send>
	_12cdelay_ms(5);
 80016f0:	2005      	movs	r0, #5
 80016f2:	f7ff fe9f 	bl	8001434 <_12cdelay_ms>

}
 80016f6:	bf00      	nop
 80016f8:	3710      	adds	r7, #16
 80016fa:	46bd      	mov	sp, r7
 80016fc:	bd80      	pop	{r7, pc}

080016fe <I2C_LCD_write_string>:
void I2C_LCD_write_string(I2C_TypeDef* I2Cx ,char* data,uint16_t address){
 80016fe:	b580      	push	{r7, lr}
 8001700:	b084      	sub	sp, #16
 8001702:	af00      	add	r7, sp, #0
 8001704:	60f8      	str	r0, [r7, #12]
 8001706:	60b9      	str	r1, [r7, #8]
 8001708:	4613      	mov	r3, r2
 800170a:	80fb      	strh	r3, [r7, #6]
	while((*data)!=0){
 800170c:	e009      	b.n	8001722 <I2C_LCD_write_string+0x24>

		I2C_LCD_write_data(I2Cx, *data, address);
 800170e:	68bb      	ldr	r3, [r7, #8]
 8001710:	781b      	ldrb	r3, [r3, #0]
 8001712:	88fa      	ldrh	r2, [r7, #6]
 8001714:	4619      	mov	r1, r3
 8001716:	68f8      	ldr	r0, [r7, #12]
 8001718:	f7ff ff82 	bl	8001620 <I2C_LCD_write_data>
		data++;
 800171c:	68bb      	ldr	r3, [r7, #8]
 800171e:	3301      	adds	r3, #1
 8001720:	60bb      	str	r3, [r7, #8]
	while((*data)!=0){
 8001722:	68bb      	ldr	r3, [r7, #8]
 8001724:	781b      	ldrb	r3, [r3, #0]
 8001726:	2b00      	cmp	r3, #0
 8001728:	d1f1      	bne.n	800170e <I2C_LCD_write_string+0x10>
	}

}
 800172a:	bf00      	nop
 800172c:	3710      	adds	r7, #16
 800172e:	46bd      	mov	sp, r7
 8001730:	bd80      	pop	{r7, pc}

08001732 <I2C_LCD_setcerser>:
void I2C_LCD_setcerser(I2C_TypeDef* I2Cx,uint16_t address,char ROW , char COL){
 8001732:	b580      	push	{r7, lr}
 8001734:	b084      	sub	sp, #16
 8001736:	af00      	add	r7, sp, #0
 8001738:	6078      	str	r0, [r7, #4]
 800173a:	4608      	mov	r0, r1
 800173c:	4611      	mov	r1, r2
 800173e:	461a      	mov	r2, r3
 8001740:	4603      	mov	r3, r0
 8001742:	807b      	strh	r3, [r7, #2]
 8001744:	460b      	mov	r3, r1
 8001746:	707b      	strb	r3, [r7, #1]
 8001748:	4613      	mov	r3, r2
 800174a:	703b      	strb	r3, [r7, #0]
	volatile unsigned char location ;
	if(ROW<2 && COL<16){
 800174c:	787b      	ldrb	r3, [r7, #1]
 800174e:	2b01      	cmp	r3, #1
 8001750:	d80f      	bhi.n	8001772 <I2C_LCD_setcerser+0x40>
 8001752:	783b      	ldrb	r3, [r7, #0]
 8001754:	2b0f      	cmp	r3, #15
 8001756:	d80c      	bhi.n	8001772 <I2C_LCD_setcerser+0x40>
		location =(0x40 * ROW) + COL ;
 8001758:	787b      	ldrb	r3, [r7, #1]
 800175a:	019b      	lsls	r3, r3, #6
 800175c:	b2da      	uxtb	r2, r3
 800175e:	783b      	ldrb	r3, [r7, #0]
 8001760:	4413      	add	r3, r2
 8001762:	b2db      	uxtb	r3, r3
 8001764:	73fb      	strb	r3, [r7, #15]
		location |=(1<<7);
 8001766:	7bfb      	ldrb	r3, [r7, #15]
 8001768:	b2db      	uxtb	r3, r3
 800176a:	f063 037f 	orn	r3, r3, #127	; 0x7f
 800176e:	b2db      	uxtb	r3, r3
 8001770:	73fb      	strb	r3, [r7, #15]
	}

	I2C_LCD_write_CMD(I2Cx,location,address);
 8001772:	7bfb      	ldrb	r3, [r7, #15]
 8001774:	b2db      	uxtb	r3, r3
 8001776:	887a      	ldrh	r2, [r7, #2]
 8001778:	4619      	mov	r1, r3
 800177a:	6878      	ldr	r0, [r7, #4]
 800177c:	f7ff fe70 	bl	8001460 <I2C_LCD_write_CMD>
}
 8001780:	bf00      	nop
 8001782:	3710      	adds	r7, #16
 8001784:	46bd      	mov	sp, r7
 8001786:	bd80      	pop	{r7, pc}

08001788 <I2C_LCD_write_FLOATnumber>:
void I2C_LCD_clear(I2C_TypeDef* I2Cx,uint16_t address){
	I2C_LCD_write_CMD(I2Cx, LCD_CLEAR_SCREEN, address);
}

void I2C_LCD_write_FLOATnumber(I2C_TypeDef* I2Cx,uint16_t address,float num,unsigned char digit){
 8001788:	b580      	push	{r7, lr}
 800178a:	b08a      	sub	sp, #40	; 0x28
 800178c:	af00      	add	r7, sp, #0
 800178e:	60f8      	str	r0, [r7, #12]
 8001790:	607a      	str	r2, [r7, #4]
 8001792:	461a      	mov	r2, r3
 8001794:	460b      	mov	r3, r1
 8001796:	817b      	strh	r3, [r7, #10]
 8001798:	4613      	mov	r3, r2
 800179a:	727b      	strb	r3, [r7, #9]
	char text[20];
	gcvt(num,digit,text);
 800179c:	6878      	ldr	r0, [r7, #4]
 800179e:	f7fe fe53 	bl	8000448 <__aeabi_f2d>
 80017a2:	7a7a      	ldrb	r2, [r7, #9]
 80017a4:	f107 0314 	add.w	r3, r7, #20
 80017a8:	f001 fc8e 	bl	80030c8 <gcvt>
	I2C_LCD_write_string(I2Cx, text, address);
 80017ac:	897a      	ldrh	r2, [r7, #10]
 80017ae:	f107 0314 	add.w	r3, r7, #20
 80017b2:	4619      	mov	r1, r3
 80017b4:	68f8      	ldr	r0, [r7, #12]
 80017b6:	f7ff ffa2 	bl	80016fe <I2C_LCD_write_string>
}
 80017ba:	bf00      	nop
 80017bc:	3728      	adds	r7, #40	; 0x28
 80017be:	46bd      	mov	sp, r7
 80017c0:	bd80      	pop	{r7, pc}
	...

080017c4 <I2C_INIT>:
#include "STM32_I2C_DRIVER.h"
//SM 100K
//master only
//no stretch

void I2C_INIT(I2C_TypeDef* I2Cx,uint32_t APB_clock){
 80017c4:	b580      	push	{r7, lr}
 80017c6:	b082      	sub	sp, #8
 80017c8:	af00      	add	r7, sp, #0
 80017ca:	6078      	str	r0, [r7, #4]
 80017cc:	6039      	str	r1, [r7, #0]
	if(I2Cx==I2C1){
 80017ce:	687b      	ldr	r3, [r7, #4]
 80017d0:	4a3a      	ldr	r2, [pc, #232]	; (80018bc <I2C_INIT+0xf8>)
 80017d2:	4293      	cmp	r3, r2
 80017d4:	d116      	bne.n	8001804 <I2C_INIT+0x40>
		I2C1_Clock_Enable();
 80017d6:	4b3a      	ldr	r3, [pc, #232]	; (80018c0 <I2C_INIT+0xfc>)
 80017d8:	69db      	ldr	r3, [r3, #28]
 80017da:	4a39      	ldr	r2, [pc, #228]	; (80018c0 <I2C_INIT+0xfc>)
 80017dc:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80017e0:	61d3      	str	r3, [r2, #28]
		GPIOB_Clock_Enable();
 80017e2:	4b37      	ldr	r3, [pc, #220]	; (80018c0 <I2C_INIT+0xfc>)
 80017e4:	699b      	ldr	r3, [r3, #24]
 80017e6:	4a36      	ldr	r2, [pc, #216]	; (80018c0 <I2C_INIT+0xfc>)
 80017e8:	f043 0308 	orr.w	r3, r3, #8
 80017ec:	6193      	str	r3, [r2, #24]
		//PB6 I2C SCL
		//PB7 IC2 SDA
		pinmode(GPIOB, pin6,GPIO_MODE_OUTPUT_AF_Open_drain_Speed10);
 80017ee:	220d      	movs	r2, #13
 80017f0:	2106      	movs	r1, #6
 80017f2:	4834      	ldr	r0, [pc, #208]	; (80018c4 <I2C_INIT+0x100>)
 80017f4:	f7ff fd18 	bl	8001228 <pinmode>
		pinmode(GPIOB, pin7,GPIO_MODE_OUTPUT_AF_Open_drain_Speed10);
 80017f8:	220d      	movs	r2, #13
 80017fa:	2107      	movs	r1, #7
 80017fc:	4831      	ldr	r0, [pc, #196]	; (80018c4 <I2C_INIT+0x100>)
 80017fe:	f7ff fd13 	bl	8001228 <pinmode>
 8001802:	e019      	b.n	8001838 <I2C_INIT+0x74>

	}
	else if(I2Cx==I2C2){
 8001804:	687b      	ldr	r3, [r7, #4]
 8001806:	4a30      	ldr	r2, [pc, #192]	; (80018c8 <I2C_INIT+0x104>)
 8001808:	4293      	cmp	r3, r2
 800180a:	d115      	bne.n	8001838 <I2C_INIT+0x74>
		I2C2_Clock_Enable();
 800180c:	4b2c      	ldr	r3, [pc, #176]	; (80018c0 <I2C_INIT+0xfc>)
 800180e:	69db      	ldr	r3, [r3, #28]
 8001810:	4a2b      	ldr	r2, [pc, #172]	; (80018c0 <I2C_INIT+0xfc>)
 8001812:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8001816:	61d3      	str	r3, [r2, #28]
		GPIOB_Clock_Enable();
 8001818:	4b29      	ldr	r3, [pc, #164]	; (80018c0 <I2C_INIT+0xfc>)
 800181a:	699b      	ldr	r3, [r3, #24]
 800181c:	4a28      	ldr	r2, [pc, #160]	; (80018c0 <I2C_INIT+0xfc>)
 800181e:	f043 0308 	orr.w	r3, r3, #8
 8001822:	6193      	str	r3, [r2, #24]
		//PB10 I2C SCL
		//PB11 IC2 SDA
		pinmode(GPIOB, pin10,GPIO_MODE_OUTPUT_AF_Open_drain_Speed10);
 8001824:	220d      	movs	r2, #13
 8001826:	210a      	movs	r1, #10
 8001828:	4826      	ldr	r0, [pc, #152]	; (80018c4 <I2C_INIT+0x100>)
 800182a:	f7ff fcfd 	bl	8001228 <pinmode>
		pinmode(GPIOB, pin11,GPIO_MODE_OUTPUT_AF_Open_drain_Speed10);
 800182e:	220d      	movs	r2, #13
 8001830:	210b      	movs	r1, #11
 8001832:	4824      	ldr	r0, [pc, #144]	; (80018c4 <I2C_INIT+0x100>)
 8001834:	f7ff fcf8 	bl	8001228 <pinmode>
	}

	//• Program the peripheral input clock in I2C_CR2 Register in order to generate correct timings
	//Bits 5:0 FREQ[5:0]: Peripheral clock frequency
	I2Cx->CR2 &=~(0b111111<<0);
 8001838:	687b      	ldr	r3, [r7, #4]
 800183a:	685b      	ldr	r3, [r3, #4]
 800183c:	f023 023f 	bic.w	r2, r3, #63	; 0x3f
 8001840:	687b      	ldr	r3, [r7, #4]
 8001842:	605a      	str	r2, [r3, #4]
	I2Cx->CR2 |=((APB_clock/1000000)<<0);
 8001844:	687b      	ldr	r3, [r7, #4]
 8001846:	685a      	ldr	r2, [r3, #4]
 8001848:	683b      	ldr	r3, [r7, #0]
 800184a:	4920      	ldr	r1, [pc, #128]	; (80018cc <I2C_INIT+0x108>)
 800184c:	fba1 1303 	umull	r1, r3, r1, r3
 8001850:	0c9b      	lsrs	r3, r3, #18
 8001852:	431a      	orrs	r2, r3
 8001854:	687b      	ldr	r3, [r7, #4]
 8001856:	605a      	str	r2, [r3, #4]
	//Bits 11:0 CCR[11:0]: Clock control register in Fm/Sm mode (Master mode)
	//• Configure the clock control registers
	I2Cx->CCR &=~(0b11111111111<<0);
 8001858:	687b      	ldr	r3, [r7, #4]
 800185a:	69db      	ldr	r3, [r3, #28]
 800185c:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8001860:	f023 0307 	bic.w	r3, r3, #7
 8001864:	687a      	ldr	r2, [r7, #4]
 8001866:	61d3      	str	r3, [r2, #28]
	I2Cx->CCR |=((APB_clock/1000)/(2*100));
 8001868:	687b      	ldr	r3, [r7, #4]
 800186a:	69da      	ldr	r2, [r3, #28]
 800186c:	683b      	ldr	r3, [r7, #0]
 800186e:	099b      	lsrs	r3, r3, #6
 8001870:	4917      	ldr	r1, [pc, #92]	; (80018d0 <I2C_INIT+0x10c>)
 8001872:	fba1 1303 	umull	r1, r3, r1, r3
 8001876:	099b      	lsrs	r3, r3, #6
 8001878:	431a      	orrs	r2, r3
 800187a:	687b      	ldr	r3, [r7, #4]
 800187c:	61da      	str	r2, [r3, #28]
	//• Configure the rise time register
	//Bits 5:0 TRISE[5:0]: Maximum rise time in Fm/Sm mode (Master mode)
	I2Cx->TRISE &=(0b111111<<0);
 800187e:	687b      	ldr	r3, [r7, #4]
 8001880:	6a1b      	ldr	r3, [r3, #32]
 8001882:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8001886:	687b      	ldr	r3, [r7, #4]
 8001888:	621a      	str	r2, [r3, #32]
	I2Cx->TRISE |=(((APB_clock/1000000)/2)+1);
 800188a:	687b      	ldr	r3, [r7, #4]
 800188c:	6a1a      	ldr	r2, [r3, #32]
 800188e:	683b      	ldr	r3, [r7, #0]
 8001890:	490e      	ldr	r1, [pc, #56]	; (80018cc <I2C_INIT+0x108>)
 8001892:	fba1 1303 	umull	r1, r3, r1, r3
 8001896:	0cdb      	lsrs	r3, r3, #19
 8001898:	3301      	adds	r3, #1
 800189a:	431a      	orrs	r2, r3
 800189c:	687b      	ldr	r3, [r7, #4]
 800189e:	621a      	str	r2, [r3, #32]

	I2C_Acknowledge(I2Cx,ENABLE);
 80018a0:	2101      	movs	r1, #1
 80018a2:	6878      	ldr	r0, [r7, #4]
 80018a4:	f000 f937 	bl	8001b16 <I2C_Acknowledge>
	//• Program the I2C_CR1 register to enable the peripheral
	//Bit 0 PE: Peripheral enable
	I2Cx->CR1|=(1<<0);
 80018a8:	687b      	ldr	r3, [r7, #4]
 80018aa:	681b      	ldr	r3, [r3, #0]
 80018ac:	f043 0201 	orr.w	r2, r3, #1
 80018b0:	687b      	ldr	r3, [r7, #4]
 80018b2:	601a      	str	r2, [r3, #0]

}
 80018b4:	bf00      	nop
 80018b6:	3708      	adds	r7, #8
 80018b8:	46bd      	mov	sp, r7
 80018ba:	bd80      	pop	{r7, pc}
 80018bc:	40005400 	.word	0x40005400
 80018c0:	40021000 	.word	0x40021000
 80018c4:	40010c00 	.word	0x40010c00
 80018c8:	40005800 	.word	0x40005800
 80018cc:	431bde83 	.word	0x431bde83
 80018d0:	053e2d63 	.word	0x053e2d63

080018d4 <I2C_Start_PIT>:
void I2C_Start_PIT(I2C_TypeDef* I2Cx,Repeated_Start Start){
 80018d4:	b580      	push	{r7, lr}
 80018d6:	b082      	sub	sp, #8
 80018d8:	af00      	add	r7, sp, #0
 80018da:	6078      	str	r0, [r7, #4]
 80018dc:	460b      	mov	r3, r1
 80018de:	70fb      	strb	r3, [r7, #3]

	if(Start !=RepeatedSart){
 80018e0:	78fb      	ldrb	r3, [r7, #3]
 80018e2:	2b01      	cmp	r3, #1
 80018e4:	d007      	beq.n	80018f6 <I2C_Start_PIT+0x22>
		//check the buss
		while(I2C_GetFlagStatus(I2Cx,I2C_FLAG_BUSY));
 80018e6:	bf00      	nop
 80018e8:	2100      	movs	r1, #0
 80018ea:	6878      	ldr	r0, [r7, #4]
 80018ec:	f000 f860 	bl	80019b0 <I2C_GetFlagStatus>
 80018f0:	4603      	mov	r3, r0
 80018f2:	2b00      	cmp	r3, #0
 80018f4:	d1f8      	bne.n	80018e8 <I2C_Start_PIT+0x14>

	}
	//Bit 8 START: Start generation
	I2Cx->CR1 |=(1<<8);
 80018f6:	687b      	ldr	r3, [r7, #4]
 80018f8:	681b      	ldr	r3, [r3, #0]
 80018fa:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 80018fe:	687b      	ldr	r3, [r7, #4]
 8001900:	601a      	str	r2, [r3, #0]
}
 8001902:	bf00      	nop
 8001904:	3708      	adds	r7, #8
 8001906:	46bd      	mov	sp, r7
 8001908:	bd80      	pop	{r7, pc}
	...

0800190c <I2C_Master_Send>:

void I2C_Master_Send(I2C_TypeDef* I2Cx,uint8_t* data, uint32_t dataLen,uint16_t devAdd,Stop_Condition Stop , Repeated_Start start){
 800190c:	b580      	push	{r7, lr}
 800190e:	b086      	sub	sp, #24
 8001910:	af00      	add	r7, sp, #0
 8001912:	60f8      	str	r0, [r7, #12]
 8001914:	60b9      	str	r1, [r7, #8]
 8001916:	607a      	str	r2, [r7, #4]
 8001918:	807b      	strh	r3, [r7, #2]
	int i=0;
 800191a:	2300      	movs	r3, #0
 800191c:	617b      	str	r3, [r7, #20]
	I2C_Start_PIT(I2Cx,start);//start
 800191e:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 8001922:	4619      	mov	r1, r3
 8001924:	68f8      	ldr	r0, [r7, #12]
 8001926:	f7ff ffd5 	bl	80018d4 <I2C_Start_PIT>
	while(!I2C_GetFlagStatus(I2Cx, EV5));//Start condition generated.
 800192a:	bf00      	nop
 800192c:	2101      	movs	r1, #1
 800192e:	68f8      	ldr	r0, [r7, #12]
 8001930:	f000 f83e 	bl	80019b0 <I2C_GetFlagStatus>
 8001934:	4603      	mov	r3, r0
 8001936:	2b00      	cmp	r3, #0
 8001938:	d0f8      	beq.n	800192c <I2C_Master_Send+0x20>
	I2C_SEND_ADRRESS(I2Cx, devAdd, i2c_direction_Write);
 800193a:	887b      	ldrh	r3, [r7, #2]
 800193c:	b2db      	uxtb	r3, r3
 800193e:	2200      	movs	r2, #0
 8001940:	4619      	mov	r1, r3
 8001942:	68f8      	ldr	r0, [r7, #12]
 8001944:	f000 f8c4 	bl	8001ad0 <I2C_SEND_ADRRESS>
	//2.Wait for EV6
	//EV6: ADDR=1, cleared by reading SR1 register followed by reading SR2.
	while( !(I2C_GetFlagStatus( I2Cx, EV6)));
 8001948:	bf00      	nop
 800194a:	2102      	movs	r1, #2
 800194c:	68f8      	ldr	r0, [r7, #12]
 800194e:	f000 f82f 	bl	80019b0 <I2C_GetFlagStatus>
 8001952:	4603      	mov	r3, r0
 8001954:	2b00      	cmp	r3, #0
 8001956:	d0f8      	beq.n	800194a <I2C_Master_Send+0x3e>

	while( !(I2C_GetFlagStatus( I2Cx, MASTER_BYTE_TRANSMITING)));//Busy MSL TXE TRA
 8001958:	bf00      	nop
 800195a:	4914      	ldr	r1, [pc, #80]	; (80019ac <I2C_Master_Send+0xa0>)
 800195c:	68f8      	ldr	r0, [r7, #12]
 800195e:	f000 f827 	bl	80019b0 <I2C_GetFlagStatus>
 8001962:	4603      	mov	r3, r0
 8001964:	2b00      	cmp	r3, #0
 8001966:	d0f8      	beq.n	800195a <I2C_Master_Send+0x4e>
	for(;i<dataLen;i++){
 8001968:	e011      	b.n	800198e <I2C_Master_Send+0x82>
		I2Cx->DR=data[i];
 800196a:	697b      	ldr	r3, [r7, #20]
 800196c:	68ba      	ldr	r2, [r7, #8]
 800196e:	4413      	add	r3, r2
 8001970:	781b      	ldrb	r3, [r3, #0]
 8001972:	461a      	mov	r2, r3
 8001974:	68fb      	ldr	r3, [r7, #12]
 8001976:	611a      	str	r2, [r3, #16]
		while(!(I2C_GetFlagStatus( I2Cx, EV8)));
 8001978:	bf00      	nop
 800197a:	2103      	movs	r1, #3
 800197c:	68f8      	ldr	r0, [r7, #12]
 800197e:	f000 f817 	bl	80019b0 <I2C_GetFlagStatus>
 8001982:	4603      	mov	r3, r0
 8001984:	2b00      	cmp	r3, #0
 8001986:	d0f8      	beq.n	800197a <I2C_Master_Send+0x6e>
	for(;i<dataLen;i++){
 8001988:	697b      	ldr	r3, [r7, #20]
 800198a:	3301      	adds	r3, #1
 800198c:	617b      	str	r3, [r7, #20]
 800198e:	697b      	ldr	r3, [r7, #20]
 8001990:	687a      	ldr	r2, [r7, #4]
 8001992:	429a      	cmp	r2, r3
 8001994:	d8e9      	bhi.n	800196a <I2C_Master_Send+0x5e>
	}
	if(Stop == WithStop){
 8001996:	f897 3020 	ldrb.w	r3, [r7, #32]
 800199a:	2b00      	cmp	r3, #0
 800199c:	d102      	bne.n	80019a4 <I2C_Master_Send+0x98>
		//Send Stop Condition
		I2C_Stop_PIT(I2Cx);
 800199e:	68f8      	ldr	r0, [r7, #12]
 80019a0:	f000 f8aa 	bl	8001af8 <I2C_Stop_PIT>
	}

}
 80019a4:	bf00      	nop
 80019a6:	3718      	adds	r7, #24
 80019a8:	46bd      	mov	sp, r7
 80019aa:	bd80      	pop	{r7, pc}
 80019ac:	00070080 	.word	0x00070080

080019b0 <I2C_GetFlagStatus>:
}



FlagStatus I2C_GetFlagStatus(I2C_TypeDef* I2Cx, Status Flag)
{
 80019b0:	b480      	push	{r7}
 80019b2:	b089      	sub	sp, #36	; 0x24
 80019b4:	af00      	add	r7, sp, #0
 80019b6:	6078      	str	r0, [r7, #4]
 80019b8:	6039      	str	r1, [r7, #0]
	FlagStatus bitstatus = RESET;
 80019ba:	2300      	movs	r3, #0
 80019bc:	77fb      	strb	r3, [r7, #31]
	volatile uint32_t dummy_Read;
	uint32_t flag1 = 0 ,flag2 =0 , lastevent =0;
 80019be:	2300      	movs	r3, #0
 80019c0:	61bb      	str	r3, [r7, #24]
 80019c2:	2300      	movs	r3, #0
 80019c4:	617b      	str	r3, [r7, #20]
 80019c6:	2300      	movs	r3, #0
 80019c8:	613b      	str	r3, [r7, #16]


	switch(Flag)
 80019ca:	683b      	ldr	r3, [r7, #0]
 80019cc:	2b04      	cmp	r3, #4
 80019ce:	d806      	bhi.n	80019de <I2C_GetFlagStatus+0x2e>
 80019d0:	2b03      	cmp	r3, #3
 80019d2:	d235      	bcs.n	8001a40 <I2C_GetFlagStatus+0x90>
 80019d4:	2b01      	cmp	r3, #1
 80019d6:	d017      	beq.n	8001a08 <I2C_GetFlagStatus+0x58>
 80019d8:	2b01      	cmp	r3, #1
 80019da:	d821      	bhi.n	8001a20 <I2C_GetFlagStatus+0x70>
 80019dc:	e007      	b.n	80019ee <I2C_GetFlagStatus+0x3e>
 80019de:	2b06      	cmp	r3, #6
 80019e0:	d048      	beq.n	8001a74 <I2C_GetFlagStatus+0xc4>
 80019e2:	2b06      	cmp	r3, #6
 80019e4:	d339      	bcc.n	8001a5a <I2C_GetFlagStatus+0xaa>
 80019e6:	4a39      	ldr	r2, [pc, #228]	; (8001acc <I2C_GetFlagStatus+0x11c>)
 80019e8:	4293      	cmp	r3, r2
 80019ea:	d050      	beq.n	8001a8e <I2C_GetFlagStatus+0xde>
 80019ec:	e067      	b.n	8001abe <I2C_GetFlagStatus+0x10e>
		//		– Set by hardware on detection of SDA or SCL low
		//		– cleared by hardware on detection of a Stop condition.
		//		It indicates a communication in progress on the bus. This information is still updated when
		//		the interface is disabled (PE=0).

		if(((I2Cx->SR2)>>1) & 1 )
 80019ee:	687b      	ldr	r3, [r7, #4]
 80019f0:	699b      	ldr	r3, [r3, #24]
 80019f2:	085b      	lsrs	r3, r3, #1
 80019f4:	f003 0301 	and.w	r3, r3, #1
 80019f8:	2b00      	cmp	r3, #0
 80019fa:	d002      	beq.n	8001a02 <I2C_GetFlagStatus+0x52>
			bitstatus = SET;
 80019fc:	2301      	movs	r3, #1
 80019fe:	77fb      	strb	r3, [r7, #31]
		else
			bitstatus = RESET;
		break;
 8001a00:	e05d      	b.n	8001abe <I2C_GetFlagStatus+0x10e>
			bitstatus = RESET;
 8001a02:	2300      	movs	r3, #0
 8001a04:	77fb      	strb	r3, [r7, #31]
		break;
 8001a06:	e05a      	b.n	8001abe <I2C_GetFlagStatus+0x10e>
		//		1: Start condition generated.
		//		– Set when a Start condition generated.
		//		– Cleared by software by reading the SR1 register followed by writing the DR register, or by
		//		hardware when PE=0		the interface is disabled (PE=0).

		if( (I2Cx->SR1>>0) & 1 )
 8001a08:	687b      	ldr	r3, [r7, #4]
 8001a0a:	695b      	ldr	r3, [r3, #20]
 8001a0c:	f003 0301 	and.w	r3, r3, #1
 8001a10:	2b00      	cmp	r3, #0
 8001a12:	d002      	beq.n	8001a1a <I2C_GetFlagStatus+0x6a>
			bitstatus = SET;
 8001a14:	2301      	movs	r3, #1
 8001a16:	77fb      	strb	r3, [r7, #31]
		else
			bitstatus = RESET;
		break;
 8001a18:	e051      	b.n	8001abe <I2C_GetFlagStatus+0x10e>
			bitstatus = RESET;
 8001a1a:	2300      	movs	r3, #0
 8001a1c:	77fb      	strb	r3, [r7, #31]
		break;
 8001a1e:	e04e      	b.n	8001abe <I2C_GetFlagStatus+0x10e>
		//			0: No end of address transmission
		//			1: End of address transmission
		//			– For 10-bit addressing, the bit is set after the ACK of the 2nd byte.
		//			– For 7-bit addressing, the bit is set after the ACK of the byte.
		//			Note: ADDR is not set after a NACK reception
		if( (I2Cx->SR1>>1) & 1 )
 8001a20:	687b      	ldr	r3, [r7, #4]
 8001a22:	695b      	ldr	r3, [r3, #20]
 8001a24:	085b      	lsrs	r3, r3, #1
 8001a26:	f003 0301 	and.w	r3, r3, #1
 8001a2a:	2b00      	cmp	r3, #0
 8001a2c:	d002      	beq.n	8001a34 <I2C_GetFlagStatus+0x84>
			bitstatus = SET;
 8001a2e:	2301      	movs	r3, #1
 8001a30:	77fb      	strb	r3, [r7, #31]
 8001a32:	e001      	b.n	8001a38 <I2C_GetFlagStatus+0x88>
		else
			bitstatus = RESET;
 8001a34:	2300      	movs	r3, #0
 8001a36:	77fb      	strb	r3, [r7, #31]
		dummy_Read = I2Cx->SR2;
 8001a38:	687b      	ldr	r3, [r7, #4]
 8001a3a:	699b      	ldr	r3, [r3, #24]
 8001a3c:	60fb      	str	r3, [r7, #12]

		break;
 8001a3e:	e03e      	b.n	8001abe <I2C_GetFlagStatus+0x10e>
		//				– Cleared by software writing to the DR register or by hardware after a start or a stop condition
		//				or when PE=0.
		//				TxE is not set if either a NACK is received, or if next byte to be transmitted is PEC (PEC=1)
		//				Note: TxE is not cleared by writing the first data being transmitted, or by writing data when
		//				BTF is set, as in both cases the data register is still empty
		if( (I2Cx->SR1>>7) & 1 )
 8001a40:	687b      	ldr	r3, [r7, #4]
 8001a42:	695b      	ldr	r3, [r3, #20]
 8001a44:	09db      	lsrs	r3, r3, #7
 8001a46:	f003 0301 	and.w	r3, r3, #1
 8001a4a:	2b00      	cmp	r3, #0
 8001a4c:	d002      	beq.n	8001a54 <I2C_GetFlagStatus+0xa4>
			bitstatus = SET;
 8001a4e:	2301      	movs	r3, #1
 8001a50:	77fb      	strb	r3, [r7, #31]
		else
			bitstatus = RESET;


		break;
 8001a52:	e034      	b.n	8001abe <I2C_GetFlagStatus+0x10e>
			bitstatus = RESET;
 8001a54:	2300      	movs	r3, #0
 8001a56:	77fb      	strb	r3, [r7, #31]
		break;
 8001a58:	e031      	b.n	8001abe <I2C_GetFlagStatus+0x10e>
		//					– Cleared by software reading SR1 followed by either a read or write in the DR register or by
		//					hardware after a start or a stop condition in transmission or when PE=0.
		//					Note: The BTF bit is not set after a NACK reception
		//					The BTF bit is not set if next byte to be transmitted is the PEC (TRA=1 in I2C_SR2
		//					register and PEC=1 in I2C_CR1 register)
		if( (I2Cx->SR1>>2) & 1 )
 8001a5a:	687b      	ldr	r3, [r7, #4]
 8001a5c:	695b      	ldr	r3, [r3, #20]
 8001a5e:	089b      	lsrs	r3, r3, #2
 8001a60:	f003 0301 	and.w	r3, r3, #1
 8001a64:	2b00      	cmp	r3, #0
 8001a66:	d002      	beq.n	8001a6e <I2C_GetFlagStatus+0xbe>
			bitstatus = SET;
 8001a68:	2301      	movs	r3, #1
 8001a6a:	77fb      	strb	r3, [r7, #31]
		else
			bitstatus = RESET;


		break;
 8001a6c:	e027      	b.n	8001abe <I2C_GetFlagStatus+0x10e>
			bitstatus = RESET;
 8001a6e:	2300      	movs	r3, #0
 8001a70:	77fb      	strb	r3, [r7, #31]
		break;
 8001a72:	e024      	b.n	8001abe <I2C_GetFlagStatus+0x10e>
		//					– Set when data register is not empty in receiver mode. RxNE is not set during address phase.
		//					– Cleared by software reading or writing the DR register or by hardware when PE=0.
		//					RxNE is not set in case of ARLO event.
		//					Note: RxNE is not cleared by reading data when BTF is set, as the data register is still full

		if( (I2Cx->SR1>>6) & 1 )
 8001a74:	687b      	ldr	r3, [r7, #4]
 8001a76:	695b      	ldr	r3, [r3, #20]
 8001a78:	099b      	lsrs	r3, r3, #6
 8001a7a:	f003 0301 	and.w	r3, r3, #1
 8001a7e:	2b00      	cmp	r3, #0
 8001a80:	d002      	beq.n	8001a88 <I2C_GetFlagStatus+0xd8>
			bitstatus = SET;
 8001a82:	2301      	movs	r3, #1
 8001a84:	77fb      	strb	r3, [r7, #31]
		else
			bitstatus = RESET;


		break;
 8001a86:	e01a      	b.n	8001abe <I2C_GetFlagStatus+0x10e>
			bitstatus = RESET;
 8001a88:	2300      	movs	r3, #0
 8001a8a:	77fb      	strb	r3, [r7, #31]
		break;
 8001a8c:	e017      	b.n	8001abe <I2C_GetFlagStatus+0x10e>
	}
	case MASTER_BYTE_TRANSMITING:
	{

		/*Read The I2Cx Statu Register*/
		flag1 = I2Cx->SR1;
 8001a8e:	687b      	ldr	r3, [r7, #4]
 8001a90:	695b      	ldr	r3, [r3, #20]
 8001a92:	61bb      	str	r3, [r7, #24]
		flag2 = I2Cx->SR2;
 8001a94:	687b      	ldr	r3, [r7, #4]
 8001a96:	699b      	ldr	r3, [r3, #24]
 8001a98:	617b      	str	r3, [r7, #20]
		flag2 = flag2<<16;
 8001a9a:	697b      	ldr	r3, [r7, #20]
 8001a9c:	041b      	lsls	r3, r3, #16
 8001a9e:	617b      	str	r3, [r7, #20]
		/*Get the last Event value from I2C Statu Register*/
		lastevent = (flag1 | flag2) & ((uint32_t) 0xffffffff);
 8001aa0:	69ba      	ldr	r2, [r7, #24]
 8001aa2:	697b      	ldr	r3, [r7, #20]
 8001aa4:	4313      	orrs	r3, r2
 8001aa6:	613b      	str	r3, [r7, #16]
		//Check whether lastevent contain THE I2C_EVENT
		if((lastevent & MASTER_BYTE_TRANSMITING) == MASTER_BYTE_TRANSMITING)
 8001aa8:	693a      	ldr	r2, [r7, #16]
 8001aaa:	4b08      	ldr	r3, [pc, #32]	; (8001acc <I2C_GetFlagStatus+0x11c>)
 8001aac:	4013      	ands	r3, r2
 8001aae:	4a07      	ldr	r2, [pc, #28]	; (8001acc <I2C_GetFlagStatus+0x11c>)
 8001ab0:	4293      	cmp	r3, r2
 8001ab2:	d102      	bne.n	8001aba <I2C_GetFlagStatus+0x10a>
			bitstatus = SET;
 8001ab4:	2301      	movs	r3, #1
 8001ab6:	77fb      	strb	r3, [r7, #31]
 8001ab8:	e001      	b.n	8001abe <I2C_GetFlagStatus+0x10e>
		else
			bitstatus = RESET;
 8001aba:	2300      	movs	r3, #0
 8001abc:	77fb      	strb	r3, [r7, #31]
	}
	}
	return bitstatus;
 8001abe:	7ffb      	ldrb	r3, [r7, #31]
}
 8001ac0:	4618      	mov	r0, r3
 8001ac2:	3724      	adds	r7, #36	; 0x24
 8001ac4:	46bd      	mov	sp, r7
 8001ac6:	bc80      	pop	{r7}
 8001ac8:	4770      	bx	lr
 8001aca:	bf00      	nop
 8001acc:	00070080 	.word	0x00070080

08001ad0 <I2C_SEND_ADRRESS>:

void I2C_SEND_ADRRESS(I2C_TypeDef* I2Cx,uint8_t address,uint8_t i2c_direction){
 8001ad0:	b480      	push	{r7}
 8001ad2:	b083      	sub	sp, #12
 8001ad4:	af00      	add	r7, sp, #0
 8001ad6:	6078      	str	r0, [r7, #4]
 8001ad8:	460b      	mov	r3, r1
 8001ada:	70fb      	strb	r3, [r7, #3]
 8001adc:	4613      	mov	r3, r2
 8001ade:	70bb      	strb	r3, [r7, #2]

	I2Cx->DR = (address << 1 | i2c_direction);
 8001ae0:	78fb      	ldrb	r3, [r7, #3]
 8001ae2:	005a      	lsls	r2, r3, #1
 8001ae4:	78bb      	ldrb	r3, [r7, #2]
 8001ae6:	4313      	orrs	r3, r2
 8001ae8:	461a      	mov	r2, r3
 8001aea:	687b      	ldr	r3, [r7, #4]
 8001aec:	611a      	str	r2, [r3, #16]

}
 8001aee:	bf00      	nop
 8001af0:	370c      	adds	r7, #12
 8001af2:	46bd      	mov	sp, r7
 8001af4:	bc80      	pop	{r7}
 8001af6:	4770      	bx	lr

08001af8 <I2C_Stop_PIT>:
void I2C_Stop_PIT(I2C_TypeDef* I2Cx){
 8001af8:	b480      	push	{r7}
 8001afa:	b083      	sub	sp, #12
 8001afc:	af00      	add	r7, sp, #0
 8001afe:	6078      	str	r0, [r7, #4]
	//	0: No Stop generation.
	//	1: Stop generation after the current byte transfer or after the current Start condition is sent.
	//	In Slave mode:
	//	0: No Stop generation.
	//	1: Release the SCL and SDA lines after the current byte transfer
	I2Cx->CR1 |= (1<<9);
 8001b00:	687b      	ldr	r3, [r7, #4]
 8001b02:	681b      	ldr	r3, [r3, #0]
 8001b04:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 8001b08:	687b      	ldr	r3, [r7, #4]
 8001b0a:	601a      	str	r2, [r3, #0]
}
 8001b0c:	bf00      	nop
 8001b0e:	370c      	adds	r7, #12
 8001b10:	46bd      	mov	sp, r7
 8001b12:	bc80      	pop	{r7}
 8001b14:	4770      	bx	lr

08001b16 <I2C_Acknowledge>:

void I2C_Acknowledge(I2C_TypeDef *I2Cx,FunctionalState State)
{
 8001b16:	b480      	push	{r7}
 8001b18:	b083      	sub	sp, #12
 8001b1a:	af00      	add	r7, sp, #0
 8001b1c:	6078      	str	r0, [r7, #4]
 8001b1e:	460b      	mov	r3, r1
 8001b20:	70fb      	strb	r3, [r7, #3]
	//	Bit 10 ACK: Acknowledge enable
	//	This bit is set and cleared by software and cleared by hardware when PE=0.
	//	0: No acknowledge returned
	//	1: Acknowledge returned after a byte is received (matched address or data)

	if(State != DISABLE)
 8001b22:	78fb      	ldrb	r3, [r7, #3]
 8001b24:	2b00      	cmp	r3, #0
 8001b26:	d006      	beq.n	8001b36 <I2C_Acknowledge+0x20>
	{
		/*Generate Stop Condition*/
		I2Cx->CR1 |= (1<<10);
 8001b28:	687b      	ldr	r3, [r7, #4]
 8001b2a:	681b      	ldr	r3, [r3, #0]
 8001b2c:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 8001b30:	687b      	ldr	r3, [r7, #4]
 8001b32:	601a      	str	r2, [r3, #0]
	else
	{
		/*Disable  Stop Condition Generation*/
		I2Cx->CR1 &= ~(1<<10);
	}
}
 8001b34:	e005      	b.n	8001b42 <I2C_Acknowledge+0x2c>
		I2Cx->CR1 &= ~(1<<10);
 8001b36:	687b      	ldr	r3, [r7, #4]
 8001b38:	681b      	ldr	r3, [r3, #0]
 8001b3a:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 8001b3e:	687b      	ldr	r3, [r7, #4]
 8001b40:	601a      	str	r2, [r3, #0]
}
 8001b42:	bf00      	nop
 8001b44:	370c      	adds	r7, #12
 8001b46:	46bd      	mov	sp, r7
 8001b48:	bc80      	pop	{r7}
 8001b4a:	4770      	bx	lr

08001b4c <delay>:

	TIM3->TIMx_CR1 |=(1<<0);//enable the timer

}
//=======================================================================================
void delay(float time,uint8_t U,uint32_t clk){
 8001b4c:	b590      	push	{r4, r7, lr}
 8001b4e:	b08b      	sub	sp, #44	; 0x2c
 8001b50:	af00      	add	r7, sp, #0
 8001b52:	60f8      	str	r0, [r7, #12]
 8001b54:	460b      	mov	r3, r1
 8001b56:	607a      	str	r2, [r7, #4]
 8001b58:	72fb      	strb	r3, [r7, #11]

	TIMER2_CLOCK_Enable();//enable timer2 clock
 8001b5a:	4b5b      	ldr	r3, [pc, #364]	; (8001cc8 <delay+0x17c>)
 8001b5c:	69db      	ldr	r3, [r3, #28]
 8001b5e:	4a5a      	ldr	r2, [pc, #360]	; (8001cc8 <delay+0x17c>)
 8001b60:	f043 0301 	orr.w	r3, r3, #1
 8001b64:	61d3      	str	r3, [r2, #28]

	delay_TIMER->TIMx_CR1 &=~(1<<0);//timer off
 8001b66:	4b59      	ldr	r3, [pc, #356]	; (8001ccc <delay+0x180>)
 8001b68:	681b      	ldr	r3, [r3, #0]
 8001b6a:	681a      	ldr	r2, [r3, #0]
 8001b6c:	4b57      	ldr	r3, [pc, #348]	; (8001ccc <delay+0x180>)
 8001b6e:	681b      	ldr	r3, [r3, #0]
 8001b70:	f022 0201 	bic.w	r2, r2, #1
 8001b74:	601a      	str	r2, [r3, #0]
	///TIMERS_typeDef* TIMERx=TIM2;
	char user_flage=1;
 8001b76:	2301      	movs	r3, #1
 8001b78:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	uint32_t user_top=0;
 8001b7c:	2300      	movs	r3, #0
 8001b7e:	623b      	str	r3, [r7, #32]
	uint32_t user_pre=1;
 8001b80:	2301      	movs	r3, #1
 8001b82:	61fb      	str	r3, [r7, #28]
	uint32_t unit =1000;
 8001b84:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001b88:	61bb      	str	r3, [r7, #24]
	uint8_t  increase=2;
 8001b8a:	2302      	movs	r3, #2
 8001b8c:	75fb      	strb	r3, [r7, #23]

	if (U == 0){
 8001b8e:	7afb      	ldrb	r3, [r7, #11]
 8001b90:	2b00      	cmp	r3, #0
 8001b92:	d10f      	bne.n	8001bb4 <delay+0x68>
		unit = 1000;
 8001b94:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001b98:	61bb      	str	r3, [r7, #24]
		if (time > 3000)increase = 100;
 8001b9a:	494d      	ldr	r1, [pc, #308]	; (8001cd0 <delay+0x184>)
 8001b9c:	68f8      	ldr	r0, [r7, #12]
 8001b9e:	f7ff fabd 	bl	800111c <__aeabi_fcmpgt>
 8001ba2:	4603      	mov	r3, r0
 8001ba4:	2b00      	cmp	r3, #0
 8001ba6:	d002      	beq.n	8001bae <delay+0x62>
 8001ba8:	2364      	movs	r3, #100	; 0x64
 8001baa:	75fb      	strb	r3, [r7, #23]
 8001bac:	e045      	b.n	8001c3a <delay+0xee>
		else increase = 10;
 8001bae:	230a      	movs	r3, #10
 8001bb0:	75fb      	strb	r3, [r7, #23]
 8001bb2:	e042      	b.n	8001c3a <delay+0xee>
	}
	else {
		unit = 1000000;
 8001bb4:	4b47      	ldr	r3, [pc, #284]	; (8001cd4 <delay+0x188>)
 8001bb6:	61bb      	str	r3, [r7, #24]
		if (time > 3000)increase = 10;
 8001bb8:	4945      	ldr	r1, [pc, #276]	; (8001cd0 <delay+0x184>)
 8001bba:	68f8      	ldr	r0, [r7, #12]
 8001bbc:	f7ff faae 	bl	800111c <__aeabi_fcmpgt>
 8001bc0:	4603      	mov	r3, r0
 8001bc2:	2b00      	cmp	r3, #0
 8001bc4:	d002      	beq.n	8001bcc <delay+0x80>
 8001bc6:	230a      	movs	r3, #10
 8001bc8:	75fb      	strb	r3, [r7, #23]
 8001bca:	e036      	b.n	8001c3a <delay+0xee>
		else increase = 5;
 8001bcc:	2305      	movs	r3, #5
 8001bce:	75fb      	strb	r3, [r7, #23]
	}

	while(user_flage==1){
 8001bd0:	e033      	b.n	8001c3a <delay+0xee>
		user_top = (clk/unit*time)/( user_pre );
 8001bd2:	687a      	ldr	r2, [r7, #4]
 8001bd4:	69bb      	ldr	r3, [r7, #24]
 8001bd6:	fbb2 f3f3 	udiv	r3, r2, r3
 8001bda:	4618      	mov	r0, r3
 8001bdc:	f7ff f88a 	bl	8000cf4 <__aeabi_ui2f>
 8001be0:	4603      	mov	r3, r0
 8001be2:	68f9      	ldr	r1, [r7, #12]
 8001be4:	4618      	mov	r0, r3
 8001be6:	f7ff f8dd 	bl	8000da4 <__aeabi_fmul>
 8001bea:	4603      	mov	r3, r0
 8001bec:	461c      	mov	r4, r3
 8001bee:	69f8      	ldr	r0, [r7, #28]
 8001bf0:	f7ff f880 	bl	8000cf4 <__aeabi_ui2f>
 8001bf4:	4603      	mov	r3, r0
 8001bf6:	4619      	mov	r1, r3
 8001bf8:	4620      	mov	r0, r4
 8001bfa:	f7ff f987 	bl	8000f0c <__aeabi_fdiv>
 8001bfe:	4603      	mov	r3, r0
 8001c00:	4618      	mov	r0, r3
 8001c02:	f7ff fa95 	bl	8001130 <__aeabi_f2uiz>
 8001c06:	4603      	mov	r3, r0
 8001c08:	623b      	str	r3, [r7, #32]
		if(user_top>=32000){
 8001c0a:	6a3b      	ldr	r3, [r7, #32]
 8001c0c:	f5b3 4ffa 	cmp.w	r3, #32000	; 0x7d00
 8001c10:	d310      	bcc.n	8001c34 <delay+0xe8>

			if(user_pre>65530){
 8001c12:	69fb      	ldr	r3, [r7, #28]
 8001c14:	f64f 72fa 	movw	r2, #65530	; 0xfffa
 8001c18:	4293      	cmp	r3, r2
 8001c1a:	d906      	bls.n	8001c2a <delay+0xde>
				user_pre=65530;
 8001c1c:	f64f 73fa 	movw	r3, #65530	; 0xfffa
 8001c20:	61fb      	str	r3, [r7, #28]
				user_flage=0;
 8001c22:	2300      	movs	r3, #0
 8001c24:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8001c28:	e007      	b.n	8001c3a <delay+0xee>
			}
			else user_pre+=increase;
 8001c2a:	7dfb      	ldrb	r3, [r7, #23]
 8001c2c:	69fa      	ldr	r2, [r7, #28]
 8001c2e:	4413      	add	r3, r2
 8001c30:	61fb      	str	r3, [r7, #28]
 8001c32:	e002      	b.n	8001c3a <delay+0xee>

		}
		else{
			user_flage=0;
 8001c34:	2300      	movs	r3, #0
 8001c36:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	while(user_flage==1){
 8001c3a:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8001c3e:	2b01      	cmp	r3, #1
 8001c40:	d0c7      	beq.n	8001bd2 <delay+0x86>
		}
	}


	delay_TIMER->TIMx_CR1 &=~(1<<0);//timer off
 8001c42:	4b22      	ldr	r3, [pc, #136]	; (8001ccc <delay+0x180>)
 8001c44:	681b      	ldr	r3, [r3, #0]
 8001c46:	681a      	ldr	r2, [r3, #0]
 8001c48:	4b20      	ldr	r3, [pc, #128]	; (8001ccc <delay+0x180>)
 8001c4a:	681b      	ldr	r3, [r3, #0]
 8001c4c:	f022 0201 	bic.w	r2, r2, #1
 8001c50:	601a      	str	r2, [r3, #0]

	delay_TIMER->TIMx_CR1  |=(1<<2);//Only counter overflow/underflow generates an update
 8001c52:	4b1e      	ldr	r3, [pc, #120]	; (8001ccc <delay+0x180>)
 8001c54:	681b      	ldr	r3, [r3, #0]
 8001c56:	681a      	ldr	r2, [r3, #0]
 8001c58:	4b1c      	ldr	r3, [pc, #112]	; (8001ccc <delay+0x180>)
 8001c5a:	681b      	ldr	r3, [r3, #0]
 8001c5c:	f042 0204 	orr.w	r2, r2, #4
 8001c60:	601a      	str	r2, [r3, #0]

	delay_TIMER->TIMx_DIER |=(1<<0);//Update interrupt enabled
 8001c62:	4b1a      	ldr	r3, [pc, #104]	; (8001ccc <delay+0x180>)
 8001c64:	681b      	ldr	r3, [r3, #0]
 8001c66:	68da      	ldr	r2, [r3, #12]
 8001c68:	4b18      	ldr	r3, [pc, #96]	; (8001ccc <delay+0x180>)
 8001c6a:	681b      	ldr	r3, [r3, #0]
 8001c6c:	f042 0201 	orr.w	r2, r2, #1
 8001c70:	60da      	str	r2, [r3, #12]



	delay_TIMER->TIMx_ARR=user_top;//frec peak value
 8001c72:	4b16      	ldr	r3, [pc, #88]	; (8001ccc <delay+0x180>)
 8001c74:	681b      	ldr	r3, [r3, #0]
 8001c76:	6a3a      	ldr	r2, [r7, #32]
 8001c78:	62da      	str	r2, [r3, #44]	; 0x2c

	delay_TIMER->TIMx_PSC=(user_pre-1);//prescaller
 8001c7a:	4b14      	ldr	r3, [pc, #80]	; (8001ccc <delay+0x180>)
 8001c7c:	681b      	ldr	r3, [r3, #0]
 8001c7e:	69fa      	ldr	r2, [r7, #28]
 8001c80:	3a01      	subs	r2, #1
 8001c82:	629a      	str	r2, [r3, #40]	; 0x28

	delay_TIMER->TIMx_EGR |=(1<<0);//1: Re-initialize the counter and generates an update of the registers. Note that the prescaler
 8001c84:	4b11      	ldr	r3, [pc, #68]	; (8001ccc <delay+0x180>)
 8001c86:	681b      	ldr	r3, [r3, #0]
 8001c88:	695a      	ldr	r2, [r3, #20]
 8001c8a:	4b10      	ldr	r3, [pc, #64]	; (8001ccc <delay+0x180>)
 8001c8c:	681b      	ldr	r3, [r3, #0]
 8001c8e:	f042 0201 	orr.w	r2, r2, #1
 8001c92:	615a      	str	r2, [r3, #20]

	delay_TIMER->TIMx_CR1 |=(1<<0);//enable the timer
 8001c94:	4b0d      	ldr	r3, [pc, #52]	; (8001ccc <delay+0x180>)
 8001c96:	681b      	ldr	r3, [r3, #0]
 8001c98:	681a      	ldr	r2, [r3, #0]
 8001c9a:	4b0c      	ldr	r3, [pc, #48]	; (8001ccc <delay+0x180>)
 8001c9c:	681b      	ldr	r3, [r3, #0]
 8001c9e:	f042 0201 	orr.w	r2, r2, #1
 8001ca2:	601a      	str	r2, [r3, #0]



	delay_flag=1;
 8001ca4:	4b0c      	ldr	r3, [pc, #48]	; (8001cd8 <delay+0x18c>)
 8001ca6:	2201      	movs	r2, #1
 8001ca8:	701a      	strb	r2, [r3, #0]
	NVIC_TIM2_global_interrupt_Enable;
 8001caa:	4b0c      	ldr	r3, [pc, #48]	; (8001cdc <delay+0x190>)
 8001cac:	681b      	ldr	r3, [r3, #0]
 8001cae:	4a0b      	ldr	r2, [pc, #44]	; (8001cdc <delay+0x190>)
 8001cb0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001cb4:	6013      	str	r3, [r2, #0]
	while(delay_flag){
 8001cb6:	bf00      	nop
 8001cb8:	4b07      	ldr	r3, [pc, #28]	; (8001cd8 <delay+0x18c>)
 8001cba:	781b      	ldrb	r3, [r3, #0]
 8001cbc:	2b00      	cmp	r3, #0
 8001cbe:	d1fb      	bne.n	8001cb8 <delay+0x16c>

	}
}
 8001cc0:	bf00      	nop
 8001cc2:	372c      	adds	r7, #44	; 0x2c
 8001cc4:	46bd      	mov	sp, r7
 8001cc6:	bd90      	pop	{r4, r7, pc}
 8001cc8:	40021000 	.word	0x40021000
 8001ccc:	2000001c 	.word	0x2000001c
 8001cd0:	453b8000 	.word	0x453b8000
 8001cd4:	000f4240 	.word	0x000f4240
 8001cd8:	20000018 	.word	0x20000018
 8001cdc:	e000e100 	.word	0xe000e100

08001ce0 <SPWM_timer_INIT>:
	c=top=user_top;
	x=(top/numper_waves);
	SPWM_timer_INIT(presc,x,top,SPWM_MOOD_INIT);

}
void SPWM_timer_INIT(uint32_t pre ,uint32_t duty_cycle,uint32_t peak ,uint8_t SPWM_MOOD_){
 8001ce0:	b480      	push	{r7}
 8001ce2:	b085      	sub	sp, #20
 8001ce4:	af00      	add	r7, sp, #0
 8001ce6:	60f8      	str	r0, [r7, #12]
 8001ce8:	60b9      	str	r1, [r7, #8]
 8001cea:	607a      	str	r2, [r7, #4]
 8001cec:	70fb      	strb	r3, [r7, #3]

	pwm->TIMx_CR1 &=~(1<<0);
 8001cee:	4b3c      	ldr	r3, [pc, #240]	; (8001de0 <SPWM_timer_INIT+0x100>)
 8001cf0:	681b      	ldr	r3, [r3, #0]
 8001cf2:	681a      	ldr	r2, [r3, #0]
 8001cf4:	4b3a      	ldr	r3, [pc, #232]	; (8001de0 <SPWM_timer_INIT+0x100>)
 8001cf6:	681b      	ldr	r3, [r3, #0]
 8001cf8:	f022 0201 	bic.w	r2, r2, #1
 8001cfc:	601a      	str	r2, [r3, #0]

	if(SPWM_MOOD_==SPWM_MOOD_INIT){
 8001cfe:	78fb      	ldrb	r3, [r7, #3]
 8001d00:	2b00      	cmp	r3, #0
 8001d02:	d12f      	bne.n	8001d64 <SPWM_timer_INIT+0x84>
		//CH 2
		pwm->TIMx_CCMR1 |=(1<<11); //Bit 11 OC2PE: Output Compare 2 preload enable
 8001d04:	4b36      	ldr	r3, [pc, #216]	; (8001de0 <SPWM_timer_INIT+0x100>)
 8001d06:	681b      	ldr	r3, [r3, #0]
 8001d08:	699a      	ldr	r2, [r3, #24]
 8001d0a:	4b35      	ldr	r3, [pc, #212]	; (8001de0 <SPWM_timer_INIT+0x100>)
 8001d0c:	681b      	ldr	r3, [r3, #0]
 8001d0e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8001d12:	619a      	str	r2, [r3, #24]
		pwm->TIMx_CCMR1 |=(0b110<<12);//110: PWM mode 1 - In upcounting, channel 1 is active as long as TIMx_CNT<TIMx_CCR1
 8001d14:	4b32      	ldr	r3, [pc, #200]	; (8001de0 <SPWM_timer_INIT+0x100>)
 8001d16:	681b      	ldr	r3, [r3, #0]
 8001d18:	699a      	ldr	r2, [r3, #24]
 8001d1a:	4b31      	ldr	r3, [pc, #196]	; (8001de0 <SPWM_timer_INIT+0x100>)
 8001d1c:	681b      	ldr	r3, [r3, #0]
 8001d1e:	f442 42c0 	orr.w	r2, r2, #24576	; 0x6000
 8001d22:	619a      	str	r2, [r3, #24]
		//else inactive. In downcounting, channel 1 is inactive (OC1REF=‘0’) as long as
		//TIMx_CNT>TIMx_CCR1 else active (OC1REF=’1’).
		//CH 1
		pwm->TIMx_CCMR1 |=(1<<3);//Bit 3 OC1PE: Output Compare 1 preload enable
 8001d24:	4b2e      	ldr	r3, [pc, #184]	; (8001de0 <SPWM_timer_INIT+0x100>)
 8001d26:	681b      	ldr	r3, [r3, #0]
 8001d28:	699a      	ldr	r2, [r3, #24]
 8001d2a:	4b2d      	ldr	r3, [pc, #180]	; (8001de0 <SPWM_timer_INIT+0x100>)
 8001d2c:	681b      	ldr	r3, [r3, #0]
 8001d2e:	f042 0208 	orr.w	r2, r2, #8
 8001d32:	619a      	str	r2, [r3, #24]
		pwm->TIMx_CCMR1 |=(0b110<<4);//Bits 6:4 OC1M: Output Compare 1 mode
 8001d34:	4b2a      	ldr	r3, [pc, #168]	; (8001de0 <SPWM_timer_INIT+0x100>)
 8001d36:	681b      	ldr	r3, [r3, #0]
 8001d38:	699a      	ldr	r2, [r3, #24]
 8001d3a:	4b29      	ldr	r3, [pc, #164]	; (8001de0 <SPWM_timer_INIT+0x100>)
 8001d3c:	681b      	ldr	r3, [r3, #0]
 8001d3e:	f042 0260 	orr.w	r2, r2, #96	; 0x60
 8001d42:	619a      	str	r2, [r3, #24]


		//	1: On - OC1 signal is output on the corresponding output pin depending on MOE, OSSI,
		//	OSSR, OIS1, OIS1N and CC1NE bits.
		pwm->TIMx_CCER |=(1<<4);//Bit 4 CC2E: Capture/Compare 2 output enable
 8001d44:	4b26      	ldr	r3, [pc, #152]	; (8001de0 <SPWM_timer_INIT+0x100>)
 8001d46:	681b      	ldr	r3, [r3, #0]
 8001d48:	6a1a      	ldr	r2, [r3, #32]
 8001d4a:	4b25      	ldr	r3, [pc, #148]	; (8001de0 <SPWM_timer_INIT+0x100>)
 8001d4c:	681b      	ldr	r3, [r3, #0]
 8001d4e:	f042 0210 	orr.w	r2, r2, #16
 8001d52:	621a      	str	r2, [r3, #32]
		pwm->TIMx_CCER |=(1<<0);//Bit 0 CC2E: Capture/Compare 1 output enable
 8001d54:	4b22      	ldr	r3, [pc, #136]	; (8001de0 <SPWM_timer_INIT+0x100>)
 8001d56:	681b      	ldr	r3, [r3, #0]
 8001d58:	6a1a      	ldr	r2, [r3, #32]
 8001d5a:	4b21      	ldr	r3, [pc, #132]	; (8001de0 <SPWM_timer_INIT+0x100>)
 8001d5c:	681b      	ldr	r3, [r3, #0]
 8001d5e:	f042 0201 	orr.w	r2, r2, #1
 8001d62:	621a      	str	r2, [r3, #32]
	}

	//	ARPE: Auto-reload preload enable
	//	0: TIMx_ARR register is not buffered
	//	1: TIMx_ARR register is buffered
	pwm->TIMx_CR1 |=(1<<7);
 8001d64:	4b1e      	ldr	r3, [pc, #120]	; (8001de0 <SPWM_timer_INIT+0x100>)
 8001d66:	681b      	ldr	r3, [r3, #0]
 8001d68:	681a      	ldr	r2, [r3, #0]
 8001d6a:	4b1d      	ldr	r3, [pc, #116]	; (8001de0 <SPWM_timer_INIT+0x100>)
 8001d6c:	681b      	ldr	r3, [r3, #0]
 8001d6e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8001d72:	601a      	str	r2, [r3, #0]



	pwm->TIMx_ARR=peak;//frec peak value
 8001d74:	4b1a      	ldr	r3, [pc, #104]	; (8001de0 <SPWM_timer_INIT+0x100>)
 8001d76:	681b      	ldr	r3, [r3, #0]
 8001d78:	687a      	ldr	r2, [r7, #4]
 8001d7a:	62da      	str	r2, [r3, #44]	; 0x2c
	pwm->TIMx_CCR2=(duty_cycle);//duty cycle
 8001d7c:	4b18      	ldr	r3, [pc, #96]	; (8001de0 <SPWM_timer_INIT+0x100>)
 8001d7e:	681b      	ldr	r3, [r3, #0]
 8001d80:	68ba      	ldr	r2, [r7, #8]
 8001d82:	639a      	str	r2, [r3, #56]	; 0x38
	pwm->TIMx_CCR1=(duty_cycle);//duty cycle
 8001d84:	4b16      	ldr	r3, [pc, #88]	; (8001de0 <SPWM_timer_INIT+0x100>)
 8001d86:	681b      	ldr	r3, [r3, #0]
 8001d88:	68ba      	ldr	r2, [r7, #8]
 8001d8a:	635a      	str	r2, [r3, #52]	; 0x34
	pwm->TIMx_PSC=pre;//prescaller
 8001d8c:	4b14      	ldr	r3, [pc, #80]	; (8001de0 <SPWM_timer_INIT+0x100>)
 8001d8e:	681b      	ldr	r3, [r3, #0]
 8001d90:	68fa      	ldr	r2, [r7, #12]
 8001d92:	629a      	str	r2, [r3, #40]	; 0x28
	//	which are configured in output.
	//	0: OC and OCN outputs are disabled or forced to idle state.
	//	1: OC and OCN outputs are enabled if their respective enable bits are set (CCxE, CCxNE in
	//	TIMx_CCER register).
	//	See OC/OCN enable description for more details
	pwm->TIMx_BDTR |=(1<<15);//	Bit 15 MOE: Main output enable
 8001d94:	4b12      	ldr	r3, [pc, #72]	; (8001de0 <SPWM_timer_INIT+0x100>)
 8001d96:	681b      	ldr	r3, [r3, #0]
 8001d98:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001d9a:	4b11      	ldr	r3, [pc, #68]	; (8001de0 <SPWM_timer_INIT+0x100>)
 8001d9c:	681b      	ldr	r3, [r3, #0]
 8001d9e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8001da2:	645a      	str	r2, [r3, #68]	; 0x44


	//	Bit 0 UIE: Update interrupt enable
	//	0: Update interrupt disabled
	//	1: Update interrupt enabled
	pwm->TIMx_DIER |=(0b1<<0);
 8001da4:	4b0e      	ldr	r3, [pc, #56]	; (8001de0 <SPWM_timer_INIT+0x100>)
 8001da6:	681b      	ldr	r3, [r3, #0]
 8001da8:	68da      	ldr	r2, [r3, #12]
 8001daa:	4b0d      	ldr	r3, [pc, #52]	; (8001de0 <SPWM_timer_INIT+0x100>)
 8001dac:	681b      	ldr	r3, [r3, #0]
 8001dae:	f042 0201 	orr.w	r2, r2, #1
 8001db2:	60da      	str	r2, [r3, #12]
	//	0: No action
	//	1: Reinitialize the counter and generates an update of the registers. Note that the prescaler
	//	counter is cleared too (anyway the prescaler ratio is not affected). The counter is cleared if
	//	the center-aligned mode is selected or if DIR=0 (upcounting), else it takes the auto-reload
	//	value (TIMx_ARR) if DIR=1 (downcounting).
	pwm->TIMx_EGR |=(1<<0);
 8001db4:	4b0a      	ldr	r3, [pc, #40]	; (8001de0 <SPWM_timer_INIT+0x100>)
 8001db6:	681b      	ldr	r3, [r3, #0]
 8001db8:	695a      	ldr	r2, [r3, #20]
 8001dba:	4b09      	ldr	r3, [pc, #36]	; (8001de0 <SPWM_timer_INIT+0x100>)
 8001dbc:	681b      	ldr	r3, [r3, #0]
 8001dbe:	f042 0201 	orr.w	r2, r2, #1
 8001dc2:	615a      	str	r2, [r3, #20]

	pwm->TIMx_CR1 |=(1<<0);//enable the timer
 8001dc4:	4b06      	ldr	r3, [pc, #24]	; (8001de0 <SPWM_timer_INIT+0x100>)
 8001dc6:	681b      	ldr	r3, [r3, #0]
 8001dc8:	681a      	ldr	r2, [r3, #0]
 8001dca:	4b05      	ldr	r3, [pc, #20]	; (8001de0 <SPWM_timer_INIT+0x100>)
 8001dcc:	681b      	ldr	r3, [r3, #0]
 8001dce:	f042 0201 	orr.w	r2, r2, #1
 8001dd2:	601a      	str	r2, [r3, #0]
}
 8001dd4:	bf00      	nop
 8001dd6:	3714      	adds	r7, #20
 8001dd8:	46bd      	mov	sp, r7
 8001dda:	bc80      	pop	{r7}
 8001ddc:	4770      	bx	lr
 8001dde:	bf00      	nop
 8001de0:	20000000 	.word	0x20000000

08001de4 <TIM2_IRQHandler>:
	x=(top/numper_waves);
	SPWM_timer_INIT(presc,x,top,SPWM_MOOD_INIT);
}
//========<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  ISR  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

void TIM2_IRQHandler(){
 8001de4:	b480      	push	{r7}
 8001de6:	af00      	add	r7, sp, #0
	delay_TIMER->TIMx_SR &=~(1<<0);//Bit 0 UIF: Update interrupt flag
 8001de8:	4b0b      	ldr	r3, [pc, #44]	; (8001e18 <TIM2_IRQHandler+0x34>)
 8001dea:	681b      	ldr	r3, [r3, #0]
 8001dec:	691a      	ldr	r2, [r3, #16]
 8001dee:	4b0a      	ldr	r3, [pc, #40]	; (8001e18 <TIM2_IRQHandler+0x34>)
 8001df0:	681b      	ldr	r3, [r3, #0]
 8001df2:	f022 0201 	bic.w	r2, r2, #1
 8001df6:	611a      	str	r2, [r3, #16]
	delay_flag=0;
 8001df8:	4b08      	ldr	r3, [pc, #32]	; (8001e1c <TIM2_IRQHandler+0x38>)
 8001dfa:	2200      	movs	r2, #0
 8001dfc:	701a      	strb	r2, [r3, #0]
	//NVIC_TIM2_global_interrupt_Disable;
	delay_TIMER->TIMx_CR1 &=~(1<<0);//timer off
 8001dfe:	4b06      	ldr	r3, [pc, #24]	; (8001e18 <TIM2_IRQHandler+0x34>)
 8001e00:	681b      	ldr	r3, [r3, #0]
 8001e02:	681a      	ldr	r2, [r3, #0]
 8001e04:	4b04      	ldr	r3, [pc, #16]	; (8001e18 <TIM2_IRQHandler+0x34>)
 8001e06:	681b      	ldr	r3, [r3, #0]
 8001e08:	f022 0201 	bic.w	r2, r2, #1
 8001e0c:	601a      	str	r2, [r3, #0]

}
 8001e0e:	bf00      	nop
 8001e10:	46bd      	mov	sp, r7
 8001e12:	bc80      	pop	{r7}
 8001e14:	4770      	bx	lr
 8001e16:	bf00      	nop
 8001e18:	2000001c 	.word	0x2000001c
 8001e1c:	20000018 	.word	0x20000018

08001e20 <TIM3_IRQHandler>:
void TIM3_IRQHandler(){
 8001e20:	b580      	push	{r7, lr}
 8001e22:	af00      	add	r7, sp, #0
	if(stepper_flage==1){
 8001e24:	4b19      	ldr	r3, [pc, #100]	; (8001e8c <TIM3_IRQHandler+0x6c>)
 8001e26:	781b      	ldrb	r3, [r3, #0]
 8001e28:	2b01      	cmp	r3, #1
 8001e2a:	d119      	bne.n	8001e60 <TIM3_IRQHandler+0x40>
		TIM3->TIMx_SR &=~(1<<0);
 8001e2c:	4b18      	ldr	r3, [pc, #96]	; (8001e90 <TIM3_IRQHandler+0x70>)
 8001e2e:	691b      	ldr	r3, [r3, #16]
 8001e30:	4a17      	ldr	r2, [pc, #92]	; (8001e90 <TIM3_IRQHandler+0x70>)
 8001e32:	f023 0301 	bic.w	r3, r3, #1
 8001e36:	6113      	str	r3, [r2, #16]

		if(stepper_steps !=0){
 8001e38:	4b16      	ldr	r3, [pc, #88]	; (8001e94 <TIM3_IRQHandler+0x74>)
 8001e3a:	681b      	ldr	r3, [r3, #0]
 8001e3c:	2b00      	cmp	r3, #0
 8001e3e:	d005      	beq.n	8001e4c <TIM3_IRQHandler+0x2c>
			stepper_steps--;
 8001e40:	4b14      	ldr	r3, [pc, #80]	; (8001e94 <TIM3_IRQHandler+0x74>)
 8001e42:	681b      	ldr	r3, [r3, #0]
 8001e44:	3b01      	subs	r3, #1
 8001e46:	4a13      	ldr	r2, [pc, #76]	; (8001e94 <TIM3_IRQHandler+0x74>)
 8001e48:	6013      	str	r3, [r2, #0]
		ISRcalback[0]();
		//NVIC_TIM3_global_interrupt_Disable;
		//pinwrite(GPIOB, pin10,HIGH);
	}

}
 8001e4a:	e01c      	b.n	8001e86 <TIM3_IRQHandler+0x66>
			stepper_flage=0;
 8001e4c:	4b0f      	ldr	r3, [pc, #60]	; (8001e8c <TIM3_IRQHandler+0x6c>)
 8001e4e:	2200      	movs	r2, #0
 8001e50:	701a      	strb	r2, [r3, #0]
			TIM3->TIMx_CR1 &=~(1<<0);//Counter disabled
 8001e52:	4b0f      	ldr	r3, [pc, #60]	; (8001e90 <TIM3_IRQHandler+0x70>)
 8001e54:	681b      	ldr	r3, [r3, #0]
 8001e56:	4a0e      	ldr	r2, [pc, #56]	; (8001e90 <TIM3_IRQHandler+0x70>)
 8001e58:	f023 0301 	bic.w	r3, r3, #1
 8001e5c:	6013      	str	r3, [r2, #0]
}
 8001e5e:	e012      	b.n	8001e86 <TIM3_IRQHandler+0x66>
		ISR_TIMER_COPY->TIMx_CR1 &=~(1<<0);
 8001e60:	4b0d      	ldr	r3, [pc, #52]	; (8001e98 <TIM3_IRQHandler+0x78>)
 8001e62:	681b      	ldr	r3, [r3, #0]
 8001e64:	681a      	ldr	r2, [r3, #0]
 8001e66:	4b0c      	ldr	r3, [pc, #48]	; (8001e98 <TIM3_IRQHandler+0x78>)
 8001e68:	681b      	ldr	r3, [r3, #0]
 8001e6a:	f022 0201 	bic.w	r2, r2, #1
 8001e6e:	601a      	str	r2, [r3, #0]
		ISR_TIMER_COPY->TIMx_SR &=~(1<<0);
 8001e70:	4b09      	ldr	r3, [pc, #36]	; (8001e98 <TIM3_IRQHandler+0x78>)
 8001e72:	681b      	ldr	r3, [r3, #0]
 8001e74:	691a      	ldr	r2, [r3, #16]
 8001e76:	4b08      	ldr	r3, [pc, #32]	; (8001e98 <TIM3_IRQHandler+0x78>)
 8001e78:	681b      	ldr	r3, [r3, #0]
 8001e7a:	f022 0201 	bic.w	r2, r2, #1
 8001e7e:	611a      	str	r2, [r3, #16]
		ISRcalback[0]();
 8001e80:	4b06      	ldr	r3, [pc, #24]	; (8001e9c <TIM3_IRQHandler+0x7c>)
 8001e82:	681b      	ldr	r3, [r3, #0]
 8001e84:	4798      	blx	r3
}
 8001e86:	bf00      	nop
 8001e88:	bd80      	pop	{r7, pc}
 8001e8a:	bf00      	nop
 8001e8c:	20000230 	.word	0x20000230
 8001e90:	40000400 	.word	0x40000400
 8001e94:	2000022c 	.word	0x2000022c
 8001e98:	20000250 	.word	0x20000250
 8001e9c:	20000244 	.word	0x20000244

08001ea0 <TIM4_IRQHandler>:

void TIM4_IRQHandler(){
 8001ea0:	b480      	push	{r7}
 8001ea2:	af00      	add	r7, sp, #0
	TIM4->TIMx_SR &=~(1<<0);
 8001ea4:	4b07      	ldr	r3, [pc, #28]	; (8001ec4 <TIM4_IRQHandler+0x24>)
 8001ea6:	691b      	ldr	r3, [r3, #16]
 8001ea8:	4a06      	ldr	r2, [pc, #24]	; (8001ec4 <TIM4_IRQHandler+0x24>)
 8001eaa:	f023 0301 	bic.w	r3, r3, #1
 8001eae:	6113      	str	r3, [r2, #16]
	overflowtims++;
 8001eb0:	4b05      	ldr	r3, [pc, #20]	; (8001ec8 <TIM4_IRQHandler+0x28>)
 8001eb2:	881b      	ldrh	r3, [r3, #0]
 8001eb4:	3301      	adds	r3, #1
 8001eb6:	b29a      	uxth	r2, r3
 8001eb8:	4b03      	ldr	r3, [pc, #12]	; (8001ec8 <TIM4_IRQHandler+0x28>)
 8001eba:	801a      	strh	r2, [r3, #0]
}
 8001ebc:	bf00      	nop
 8001ebe:	46bd      	mov	sp, r7
 8001ec0:	bc80      	pop	{r7}
 8001ec2:	4770      	bx	lr
 8001ec4:	40000800 	.word	0x40000800
 8001ec8:	2000022a 	.word	0x2000022a

08001ecc <TIM1_UP_IRQHandler>:



void TIM1_UP_IRQHandler(){
 8001ecc:	b580      	push	{r7, lr}
 8001ece:	af00      	add	r7, sp, #0

	//algorithm who select the action
	if(x>top){
 8001ed0:	4b5d      	ldr	r3, [pc, #372]	; (8002048 <TIM1_UP_IRQHandler+0x17c>)
 8001ed2:	681a      	ldr	r2, [r3, #0]
 8001ed4:	4b5d      	ldr	r3, [pc, #372]	; (800204c <TIM1_UP_IRQHandler+0x180>)
 8001ed6:	681b      	ldr	r3, [r3, #0]
 8001ed8:	429a      	cmp	r2, r3
 8001eda:	d911      	bls.n	8001f00 <TIM1_UP_IRQHandler+0x34>
		flage2=1;
 8001edc:	4b5c      	ldr	r3, [pc, #368]	; (8002050 <TIM1_UP_IRQHandler+0x184>)
 8001ede:	2201      	movs	r2, #1
 8001ee0:	701a      	strb	r2, [r3, #0]
		flage1=0;
 8001ee2:	4b5c      	ldr	r3, [pc, #368]	; (8002054 <TIM1_UP_IRQHandler+0x188>)
 8001ee4:	2200      	movs	r2, #0
 8001ee6:	701a      	strb	r2, [r3, #0]
		x=top+(top/numper_waves);
 8001ee8:	4b58      	ldr	r3, [pc, #352]	; (800204c <TIM1_UP_IRQHandler+0x180>)
 8001eea:	681b      	ldr	r3, [r3, #0]
 8001eec:	4a5a      	ldr	r2, [pc, #360]	; (8002058 <TIM1_UP_IRQHandler+0x18c>)
 8001eee:	7812      	ldrb	r2, [r2, #0]
 8001ef0:	fbb3 f2f2 	udiv	r2, r3, r2
 8001ef4:	4b55      	ldr	r3, [pc, #340]	; (800204c <TIM1_UP_IRQHandler+0x180>)
 8001ef6:	681b      	ldr	r3, [r3, #0]
 8001ef8:	4413      	add	r3, r2
 8001efa:	4a53      	ldr	r2, [pc, #332]	; (8002048 <TIM1_UP_IRQHandler+0x17c>)
 8001efc:	6013      	str	r3, [r2, #0]
 8001efe:	e018      	b.n	8001f32 <TIM1_UP_IRQHandler+0x66>
	}
	else if(x<100)
 8001f00:	4b51      	ldr	r3, [pc, #324]	; (8002048 <TIM1_UP_IRQHandler+0x17c>)
 8001f02:	681b      	ldr	r3, [r3, #0]
 8001f04:	2b63      	cmp	r3, #99	; 0x63
 8001f06:	d814      	bhi.n	8001f32 <TIM1_UP_IRQHandler+0x66>
	{
		flage2=0;
 8001f08:	4b51      	ldr	r3, [pc, #324]	; (8002050 <TIM1_UP_IRQHandler+0x184>)
 8001f0a:	2200      	movs	r2, #0
 8001f0c:	701a      	strb	r2, [r3, #0]
		flage1=1;
 8001f0e:	4b51      	ldr	r3, [pc, #324]	; (8002054 <TIM1_UP_IRQHandler+0x188>)
 8001f10:	2201      	movs	r2, #1
 8001f12:	701a      	strb	r2, [r3, #0]
		flage3 ^=(1<<0);
 8001f14:	4b51      	ldr	r3, [pc, #324]	; (800205c <TIM1_UP_IRQHandler+0x190>)
 8001f16:	781b      	ldrb	r3, [r3, #0]
 8001f18:	f083 0301 	eor.w	r3, r3, #1
 8001f1c:	b2da      	uxtb	r2, r3
 8001f1e:	4b4f      	ldr	r3, [pc, #316]	; (800205c <TIM1_UP_IRQHandler+0x190>)
 8001f20:	701a      	strb	r2, [r3, #0]
		x=(top/numper_waves);//reset incremental variable
 8001f22:	4b4a      	ldr	r3, [pc, #296]	; (800204c <TIM1_UP_IRQHandler+0x180>)
 8001f24:	681b      	ldr	r3, [r3, #0]
 8001f26:	4a4c      	ldr	r2, [pc, #304]	; (8002058 <TIM1_UP_IRQHandler+0x18c>)
 8001f28:	7812      	ldrb	r2, [r2, #0]
 8001f2a:	fbb3 f3f2 	udiv	r3, r3, r2
 8001f2e:	4a46      	ldr	r2, [pc, #280]	; (8002048 <TIM1_UP_IRQHandler+0x17c>)
 8001f30:	6013      	str	r3, [r2, #0]
		//for(volatile int s=0;s<300;s++);//delay between the two half waves

	}

	//select first or second half wave
	if(flage3==1){
 8001f32:	4b4a      	ldr	r3, [pc, #296]	; (800205c <TIM1_UP_IRQHandler+0x190>)
 8001f34:	781b      	ldrb	r3, [r3, #0]
 8001f36:	2b01      	cmp	r3, #1
 8001f38:	d110      	bne.n	8001f5c <TIM1_UP_IRQHandler+0x90>
		pwm->TIMx_CCER &=~(1<<0);//ch1_off
 8001f3a:	4b49      	ldr	r3, [pc, #292]	; (8002060 <TIM1_UP_IRQHandler+0x194>)
 8001f3c:	681b      	ldr	r3, [r3, #0]
 8001f3e:	6a1a      	ldr	r2, [r3, #32]
 8001f40:	4b47      	ldr	r3, [pc, #284]	; (8002060 <TIM1_UP_IRQHandler+0x194>)
 8001f42:	681b      	ldr	r3, [r3, #0]
 8001f44:	f022 0201 	bic.w	r2, r2, #1
 8001f48:	621a      	str	r2, [r3, #32]
		pwm->TIMx_CCER |=(1<<4);//ch2_on
 8001f4a:	4b45      	ldr	r3, [pc, #276]	; (8002060 <TIM1_UP_IRQHandler+0x194>)
 8001f4c:	681b      	ldr	r3, [r3, #0]
 8001f4e:	6a1a      	ldr	r2, [r3, #32]
 8001f50:	4b43      	ldr	r3, [pc, #268]	; (8002060 <TIM1_UP_IRQHandler+0x194>)
 8001f52:	681b      	ldr	r3, [r3, #0]
 8001f54:	f042 0210 	orr.w	r2, r2, #16
 8001f58:	621a      	str	r2, [r3, #32]
 8001f5a:	e013      	b.n	8001f84 <TIM1_UP_IRQHandler+0xb8>
	}
	else if(flage3==0){
 8001f5c:	4b3f      	ldr	r3, [pc, #252]	; (800205c <TIM1_UP_IRQHandler+0x190>)
 8001f5e:	781b      	ldrb	r3, [r3, #0]
 8001f60:	2b00      	cmp	r3, #0
 8001f62:	d10f      	bne.n	8001f84 <TIM1_UP_IRQHandler+0xb8>
		pwm->TIMx_CCER &=~(1<<4);//ch2_off
 8001f64:	4b3e      	ldr	r3, [pc, #248]	; (8002060 <TIM1_UP_IRQHandler+0x194>)
 8001f66:	681b      	ldr	r3, [r3, #0]
 8001f68:	6a1a      	ldr	r2, [r3, #32]
 8001f6a:	4b3d      	ldr	r3, [pc, #244]	; (8002060 <TIM1_UP_IRQHandler+0x194>)
 8001f6c:	681b      	ldr	r3, [r3, #0]
 8001f6e:	f022 0210 	bic.w	r2, r2, #16
 8001f72:	621a      	str	r2, [r3, #32]
		pwm->TIMx_CCER |=(1<<0);//ch1_on
 8001f74:	4b3a      	ldr	r3, [pc, #232]	; (8002060 <TIM1_UP_IRQHandler+0x194>)
 8001f76:	681b      	ldr	r3, [r3, #0]
 8001f78:	6a1a      	ldr	r2, [r3, #32]
 8001f7a:	4b39      	ldr	r3, [pc, #228]	; (8002060 <TIM1_UP_IRQHandler+0x194>)
 8001f7c:	681b      	ldr	r3, [r3, #0]
 8001f7e:	f042 0201 	orr.w	r2, r2, #1
 8001f82:	621a      	str	r2, [r3, #32]
	}

	//make this wave and increment/decrement the next value of next wave
	if((flage1==1)&&(flage2==0)){
 8001f84:	4b33      	ldr	r3, [pc, #204]	; (8002054 <TIM1_UP_IRQHandler+0x188>)
 8001f86:	781b      	ldrb	r3, [r3, #0]
 8001f88:	2b01      	cmp	r3, #1
 8001f8a:	d11c      	bne.n	8001fc6 <TIM1_UP_IRQHandler+0xfa>
 8001f8c:	4b30      	ldr	r3, [pc, #192]	; (8002050 <TIM1_UP_IRQHandler+0x184>)
 8001f8e:	781b      	ldrb	r3, [r3, #0]
 8001f90:	2b00      	cmp	r3, #0
 8001f92:	d118      	bne.n	8001fc6 <TIM1_UP_IRQHandler+0xfa>
		top=c;
 8001f94:	4b33      	ldr	r3, [pc, #204]	; (8002064 <TIM1_UP_IRQHandler+0x198>)
 8001f96:	681b      	ldr	r3, [r3, #0]
 8001f98:	4a2c      	ldr	r2, [pc, #176]	; (800204c <TIM1_UP_IRQHandler+0x180>)
 8001f9a:	6013      	str	r3, [r2, #0]
		SPWM_timer_INIT(presc,x,top,SPWM_MOOD_START);
 8001f9c:	4b32      	ldr	r3, [pc, #200]	; (8002068 <TIM1_UP_IRQHandler+0x19c>)
 8001f9e:	6818      	ldr	r0, [r3, #0]
 8001fa0:	4b29      	ldr	r3, [pc, #164]	; (8002048 <TIM1_UP_IRQHandler+0x17c>)
 8001fa2:	6819      	ldr	r1, [r3, #0]
 8001fa4:	4b29      	ldr	r3, [pc, #164]	; (800204c <TIM1_UP_IRQHandler+0x180>)
 8001fa6:	681a      	ldr	r2, [r3, #0]
 8001fa8:	2301      	movs	r3, #1
 8001faa:	f7ff fe99 	bl	8001ce0 <SPWM_timer_INIT>
		x+=(top/numper_waves);
 8001fae:	4b27      	ldr	r3, [pc, #156]	; (800204c <TIM1_UP_IRQHandler+0x180>)
 8001fb0:	681b      	ldr	r3, [r3, #0]
 8001fb2:	4a29      	ldr	r2, [pc, #164]	; (8002058 <TIM1_UP_IRQHandler+0x18c>)
 8001fb4:	7812      	ldrb	r2, [r2, #0]
 8001fb6:	fbb3 f2f2 	udiv	r2, r3, r2
 8001fba:	4b23      	ldr	r3, [pc, #140]	; (8002048 <TIM1_UP_IRQHandler+0x17c>)
 8001fbc:	681b      	ldr	r3, [r3, #0]
 8001fbe:	4413      	add	r3, r2
 8001fc0:	4a21      	ldr	r2, [pc, #132]	; (8002048 <TIM1_UP_IRQHandler+0x17c>)
 8001fc2:	6013      	str	r3, [r2, #0]
 8001fc4:	e035      	b.n	8002032 <TIM1_UP_IRQHandler+0x166>
	}
	else if ((flage2==1)&&(flage1==0)){
 8001fc6:	4b22      	ldr	r3, [pc, #136]	; (8002050 <TIM1_UP_IRQHandler+0x184>)
 8001fc8:	781b      	ldrb	r3, [r3, #0]
 8001fca:	2b01      	cmp	r3, #1
 8001fcc:	d129      	bne.n	8002022 <TIM1_UP_IRQHandler+0x156>
 8001fce:	4b21      	ldr	r3, [pc, #132]	; (8002054 <TIM1_UP_IRQHandler+0x188>)
 8001fd0:	781b      	ldrb	r3, [r3, #0]
 8001fd2:	2b00      	cmp	r3, #0
 8001fd4:	d125      	bne.n	8002022 <TIM1_UP_IRQHandler+0x156>
		top=c;
 8001fd6:	4b23      	ldr	r3, [pc, #140]	; (8002064 <TIM1_UP_IRQHandler+0x198>)
 8001fd8:	681b      	ldr	r3, [r3, #0]
 8001fda:	4a1c      	ldr	r2, [pc, #112]	; (800204c <TIM1_UP_IRQHandler+0x180>)
 8001fdc:	6013      	str	r3, [r2, #0]
		x=x-(top/numper_waves);
 8001fde:	4b1a      	ldr	r3, [pc, #104]	; (8002048 <TIM1_UP_IRQHandler+0x17c>)
 8001fe0:	681a      	ldr	r2, [r3, #0]
 8001fe2:	4b1a      	ldr	r3, [pc, #104]	; (800204c <TIM1_UP_IRQHandler+0x180>)
 8001fe4:	681b      	ldr	r3, [r3, #0]
 8001fe6:	491c      	ldr	r1, [pc, #112]	; (8002058 <TIM1_UP_IRQHandler+0x18c>)
 8001fe8:	7809      	ldrb	r1, [r1, #0]
 8001fea:	fbb3 f3f1 	udiv	r3, r3, r1
 8001fee:	1ad3      	subs	r3, r2, r3
 8001ff0:	4a15      	ldr	r2, [pc, #84]	; (8002048 <TIM1_UP_IRQHandler+0x17c>)
 8001ff2:	6013      	str	r3, [r2, #0]
		SPWM_timer_INIT(presc,x,top,SPWM_MOOD_START);
 8001ff4:	4b1c      	ldr	r3, [pc, #112]	; (8002068 <TIM1_UP_IRQHandler+0x19c>)
 8001ff6:	6818      	ldr	r0, [r3, #0]
 8001ff8:	4b13      	ldr	r3, [pc, #76]	; (8002048 <TIM1_UP_IRQHandler+0x17c>)
 8001ffa:	6819      	ldr	r1, [r3, #0]
 8001ffc:	4b13      	ldr	r3, [pc, #76]	; (800204c <TIM1_UP_IRQHandler+0x180>)
 8001ffe:	681a      	ldr	r2, [r3, #0]
 8002000:	2301      	movs	r3, #1
 8002002:	f7ff fe6d 	bl	8001ce0 <SPWM_timer_INIT>
		if(x==(top/numper_waves))x=0;
 8002006:	4b11      	ldr	r3, [pc, #68]	; (800204c <TIM1_UP_IRQHandler+0x180>)
 8002008:	681b      	ldr	r3, [r3, #0]
 800200a:	4a13      	ldr	r2, [pc, #76]	; (8002058 <TIM1_UP_IRQHandler+0x18c>)
 800200c:	7812      	ldrb	r2, [r2, #0]
 800200e:	fbb3 f2f2 	udiv	r2, r3, r2
 8002012:	4b0d      	ldr	r3, [pc, #52]	; (8002048 <TIM1_UP_IRQHandler+0x17c>)
 8002014:	681b      	ldr	r3, [r3, #0]
 8002016:	429a      	cmp	r2, r3
 8002018:	d10b      	bne.n	8002032 <TIM1_UP_IRQHandler+0x166>
 800201a:	4b0b      	ldr	r3, [pc, #44]	; (8002048 <TIM1_UP_IRQHandler+0x17c>)
 800201c:	2200      	movs	r2, #0
 800201e:	601a      	str	r2, [r3, #0]
 8002020:	e007      	b.n	8002032 <TIM1_UP_IRQHandler+0x166>
	}
	else pwm->TIMx_CR1 &=~(1<<0);//disable counter
 8002022:	4b0f      	ldr	r3, [pc, #60]	; (8002060 <TIM1_UP_IRQHandler+0x194>)
 8002024:	681b      	ldr	r3, [r3, #0]
 8002026:	681a      	ldr	r2, [r3, #0]
 8002028:	4b0d      	ldr	r3, [pc, #52]	; (8002060 <TIM1_UP_IRQHandler+0x194>)
 800202a:	681b      	ldr	r3, [r3, #0]
 800202c:	f022 0201 	bic.w	r2, r2, #1
 8002030:	601a      	str	r2, [r3, #0]

	pwm->TIMx_SR &=~(1<<0);//flag off
 8002032:	4b0b      	ldr	r3, [pc, #44]	; (8002060 <TIM1_UP_IRQHandler+0x194>)
 8002034:	681b      	ldr	r3, [r3, #0]
 8002036:	691a      	ldr	r2, [r3, #16]
 8002038:	4b09      	ldr	r3, [pc, #36]	; (8002060 <TIM1_UP_IRQHandler+0x194>)
 800203a:	681b      	ldr	r3, [r3, #0]
 800203c:	f022 0201 	bic.w	r2, r2, #1
 8002040:	611a      	str	r2, [r3, #16]
}
 8002042:	bf00      	nop
 8002044:	bd80      	pop	{r7, pc}
 8002046:	bf00      	nop
 8002048:	20000014 	.word	0x20000014
 800204c:	20000008 	.word	0x20000008
 8002050:	20000228 	.word	0x20000228
 8002054:	20000004 	.word	0x20000004
 8002058:	2000024c 	.word	0x2000024c
 800205c:	20000005 	.word	0x20000005
 8002060:	20000000 	.word	0x20000000
 8002064:	20000010 	.word	0x20000010
 8002068:	2000000c 	.word	0x2000000c

0800206c <EXTI0_IRQHandler>:
	Enable_NVIC(pin);
}



void EXTI0_IRQHandler(void){
 800206c:	b580      	push	{r7, lr}
 800206e:	af00      	add	r7, sp, #0
	// clear bit in pending register (EXTI_PR)
	EXIT->EXTI_PR |= (1<<0);
 8002070:	4b06      	ldr	r3, [pc, #24]	; (800208c <EXTI0_IRQHandler+0x20>)
 8002072:	695b      	ldr	r3, [r3, #20]
 8002074:	4a05      	ldr	r2, [pc, #20]	; (800208c <EXTI0_IRQHandler+0x20>)
 8002076:	f043 0301 	orr.w	r3, r3, #1
 800207a:	6153      	str	r3, [r2, #20]
	GP_IRQ_Callback[0](ARR_INTERRUPT_TRACK,0);
 800207c:	4b04      	ldr	r3, [pc, #16]	; (8002090 <EXTI0_IRQHandler+0x24>)
 800207e:	681b      	ldr	r3, [r3, #0]
 8002080:	2100      	movs	r1, #0
 8002082:	4804      	ldr	r0, [pc, #16]	; (8002094 <EXTI0_IRQHandler+0x28>)
 8002084:	4798      	blx	r3
}
 8002086:	bf00      	nop
 8002088:	bd80      	pop	{r7, pc}
 800208a:	bf00      	nop
 800208c:	40010400 	.word	0x40010400
 8002090:	20000254 	.word	0x20000254
 8002094:	20000290 	.word	0x20000290

08002098 <EXTI1_IRQHandler>:

void EXTI1_IRQHandler(void){
 8002098:	b580      	push	{r7, lr}
 800209a:	af00      	add	r7, sp, #0
	EXIT->EXTI_PR |= (1<<1);
 800209c:	4b06      	ldr	r3, [pc, #24]	; (80020b8 <EXTI1_IRQHandler+0x20>)
 800209e:	695b      	ldr	r3, [r3, #20]
 80020a0:	4a05      	ldr	r2, [pc, #20]	; (80020b8 <EXTI1_IRQHandler+0x20>)
 80020a2:	f043 0302 	orr.w	r3, r3, #2
 80020a6:	6153      	str	r3, [r2, #20]
	GP_IRQ_Callback[1](ARR_INTERRUPT_TRACK,1);
 80020a8:	4b04      	ldr	r3, [pc, #16]	; (80020bc <EXTI1_IRQHandler+0x24>)
 80020aa:	685b      	ldr	r3, [r3, #4]
 80020ac:	2101      	movs	r1, #1
 80020ae:	4804      	ldr	r0, [pc, #16]	; (80020c0 <EXTI1_IRQHandler+0x28>)
 80020b0:	4798      	blx	r3

}
 80020b2:	bf00      	nop
 80020b4:	bd80      	pop	{r7, pc}
 80020b6:	bf00      	nop
 80020b8:	40010400 	.word	0x40010400
 80020bc:	20000254 	.word	0x20000254
 80020c0:	20000290 	.word	0x20000290

080020c4 <EXTI2_IRQHandler>:

void EXTI2_IRQHandler(void){
 80020c4:	b580      	push	{r7, lr}
 80020c6:	af00      	add	r7, sp, #0
	EXIT->EXTI_PR |= (1<<2);
 80020c8:	4b06      	ldr	r3, [pc, #24]	; (80020e4 <EXTI2_IRQHandler+0x20>)
 80020ca:	695b      	ldr	r3, [r3, #20]
 80020cc:	4a05      	ldr	r2, [pc, #20]	; (80020e4 <EXTI2_IRQHandler+0x20>)
 80020ce:	f043 0304 	orr.w	r3, r3, #4
 80020d2:	6153      	str	r3, [r2, #20]
	GP_IRQ_Callback[2](ARR_INTERRUPT_TRACK,2);
 80020d4:	4b04      	ldr	r3, [pc, #16]	; (80020e8 <EXTI2_IRQHandler+0x24>)
 80020d6:	689b      	ldr	r3, [r3, #8]
 80020d8:	2102      	movs	r1, #2
 80020da:	4804      	ldr	r0, [pc, #16]	; (80020ec <EXTI2_IRQHandler+0x28>)
 80020dc:	4798      	blx	r3
}
 80020de:	bf00      	nop
 80020e0:	bd80      	pop	{r7, pc}
 80020e2:	bf00      	nop
 80020e4:	40010400 	.word	0x40010400
 80020e8:	20000254 	.word	0x20000254
 80020ec:	20000290 	.word	0x20000290

080020f0 <EXTI3_IRQHandler>:

void EXTI3_IRQHandler(void){
 80020f0:	b580      	push	{r7, lr}
 80020f2:	af00      	add	r7, sp, #0
	EXIT->EXTI_PR |= (1<<3);
 80020f4:	4b06      	ldr	r3, [pc, #24]	; (8002110 <EXTI3_IRQHandler+0x20>)
 80020f6:	695b      	ldr	r3, [r3, #20]
 80020f8:	4a05      	ldr	r2, [pc, #20]	; (8002110 <EXTI3_IRQHandler+0x20>)
 80020fa:	f043 0308 	orr.w	r3, r3, #8
 80020fe:	6153      	str	r3, [r2, #20]
	GP_IRQ_Callback[3](ARR_INTERRUPT_TRACK,3);
 8002100:	4b04      	ldr	r3, [pc, #16]	; (8002114 <EXTI3_IRQHandler+0x24>)
 8002102:	68db      	ldr	r3, [r3, #12]
 8002104:	2103      	movs	r1, #3
 8002106:	4804      	ldr	r0, [pc, #16]	; (8002118 <EXTI3_IRQHandler+0x28>)
 8002108:	4798      	blx	r3
}
 800210a:	bf00      	nop
 800210c:	bd80      	pop	{r7, pc}
 800210e:	bf00      	nop
 8002110:	40010400 	.word	0x40010400
 8002114:	20000254 	.word	0x20000254
 8002118:	20000290 	.word	0x20000290

0800211c <EXTI4_IRQHandler>:

void EXTI4_IRQHandler(void){
 800211c:	b580      	push	{r7, lr}
 800211e:	af00      	add	r7, sp, #0
	EXIT->EXTI_PR |= (1<<4);
 8002120:	4b06      	ldr	r3, [pc, #24]	; (800213c <EXTI4_IRQHandler+0x20>)
 8002122:	695b      	ldr	r3, [r3, #20]
 8002124:	4a05      	ldr	r2, [pc, #20]	; (800213c <EXTI4_IRQHandler+0x20>)
 8002126:	f043 0310 	orr.w	r3, r3, #16
 800212a:	6153      	str	r3, [r2, #20]
	GP_IRQ_Callback[4](ARR_INTERRUPT_TRACK,4);
 800212c:	4b04      	ldr	r3, [pc, #16]	; (8002140 <EXTI4_IRQHandler+0x24>)
 800212e:	691b      	ldr	r3, [r3, #16]
 8002130:	2104      	movs	r1, #4
 8002132:	4804      	ldr	r0, [pc, #16]	; (8002144 <EXTI4_IRQHandler+0x28>)
 8002134:	4798      	blx	r3
}
 8002136:	bf00      	nop
 8002138:	bd80      	pop	{r7, pc}
 800213a:	bf00      	nop
 800213c:	40010400 	.word	0x40010400
 8002140:	20000254 	.word	0x20000254
 8002144:	20000290 	.word	0x20000290

08002148 <EXTI9_5_IRQHandler>:

void EXTI9_5_IRQHandler(void){
 8002148:	b580      	push	{r7, lr}
 800214a:	af00      	add	r7, sp, #0
	if(EXIT->EXTI_PR & (1<<5)) {EXIT->EXTI_PR |= (1<<5); GP_IRQ_Callback[5](ARR_INTERRUPT_TRACK,5);  }
 800214c:	4b2b      	ldr	r3, [pc, #172]	; (80021fc <EXTI9_5_IRQHandler+0xb4>)
 800214e:	695b      	ldr	r3, [r3, #20]
 8002150:	f003 0320 	and.w	r3, r3, #32
 8002154:	2b00      	cmp	r3, #0
 8002156:	d00a      	beq.n	800216e <EXTI9_5_IRQHandler+0x26>
 8002158:	4b28      	ldr	r3, [pc, #160]	; (80021fc <EXTI9_5_IRQHandler+0xb4>)
 800215a:	695b      	ldr	r3, [r3, #20]
 800215c:	4a27      	ldr	r2, [pc, #156]	; (80021fc <EXTI9_5_IRQHandler+0xb4>)
 800215e:	f043 0320 	orr.w	r3, r3, #32
 8002162:	6153      	str	r3, [r2, #20]
 8002164:	4b26      	ldr	r3, [pc, #152]	; (8002200 <EXTI9_5_IRQHandler+0xb8>)
 8002166:	695b      	ldr	r3, [r3, #20]
 8002168:	2105      	movs	r1, #5
 800216a:	4826      	ldr	r0, [pc, #152]	; (8002204 <EXTI9_5_IRQHandler+0xbc>)
 800216c:	4798      	blx	r3
	if(EXIT->EXTI_PR & (1<<6)) {EXIT->EXTI_PR |= (1<<6); GP_IRQ_Callback[6](ARR_INTERRUPT_TRACK,6);  }
 800216e:	4b23      	ldr	r3, [pc, #140]	; (80021fc <EXTI9_5_IRQHandler+0xb4>)
 8002170:	695b      	ldr	r3, [r3, #20]
 8002172:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002176:	2b00      	cmp	r3, #0
 8002178:	d00a      	beq.n	8002190 <EXTI9_5_IRQHandler+0x48>
 800217a:	4b20      	ldr	r3, [pc, #128]	; (80021fc <EXTI9_5_IRQHandler+0xb4>)
 800217c:	695b      	ldr	r3, [r3, #20]
 800217e:	4a1f      	ldr	r2, [pc, #124]	; (80021fc <EXTI9_5_IRQHandler+0xb4>)
 8002180:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002184:	6153      	str	r3, [r2, #20]
 8002186:	4b1e      	ldr	r3, [pc, #120]	; (8002200 <EXTI9_5_IRQHandler+0xb8>)
 8002188:	699b      	ldr	r3, [r3, #24]
 800218a:	2106      	movs	r1, #6
 800218c:	481d      	ldr	r0, [pc, #116]	; (8002204 <EXTI9_5_IRQHandler+0xbc>)
 800218e:	4798      	blx	r3
	if(EXIT->EXTI_PR & (1<<7)) {EXIT->EXTI_PR |= (1<<7); GP_IRQ_Callback[7](ARR_INTERRUPT_TRACK,7);  }
 8002190:	4b1a      	ldr	r3, [pc, #104]	; (80021fc <EXTI9_5_IRQHandler+0xb4>)
 8002192:	695b      	ldr	r3, [r3, #20]
 8002194:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002198:	2b00      	cmp	r3, #0
 800219a:	d00a      	beq.n	80021b2 <EXTI9_5_IRQHandler+0x6a>
 800219c:	4b17      	ldr	r3, [pc, #92]	; (80021fc <EXTI9_5_IRQHandler+0xb4>)
 800219e:	695b      	ldr	r3, [r3, #20]
 80021a0:	4a16      	ldr	r2, [pc, #88]	; (80021fc <EXTI9_5_IRQHandler+0xb4>)
 80021a2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80021a6:	6153      	str	r3, [r2, #20]
 80021a8:	4b15      	ldr	r3, [pc, #84]	; (8002200 <EXTI9_5_IRQHandler+0xb8>)
 80021aa:	69db      	ldr	r3, [r3, #28]
 80021ac:	2107      	movs	r1, #7
 80021ae:	4815      	ldr	r0, [pc, #84]	; (8002204 <EXTI9_5_IRQHandler+0xbc>)
 80021b0:	4798      	blx	r3
	if(EXIT->EXTI_PR & (1<<8)) {EXIT->EXTI_PR |= (1<<8); GP_IRQ_Callback[8](ARR_INTERRUPT_TRACK,8);  }
 80021b2:	4b12      	ldr	r3, [pc, #72]	; (80021fc <EXTI9_5_IRQHandler+0xb4>)
 80021b4:	695b      	ldr	r3, [r3, #20]
 80021b6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80021ba:	2b00      	cmp	r3, #0
 80021bc:	d00a      	beq.n	80021d4 <EXTI9_5_IRQHandler+0x8c>
 80021be:	4b0f      	ldr	r3, [pc, #60]	; (80021fc <EXTI9_5_IRQHandler+0xb4>)
 80021c0:	695b      	ldr	r3, [r3, #20]
 80021c2:	4a0e      	ldr	r2, [pc, #56]	; (80021fc <EXTI9_5_IRQHandler+0xb4>)
 80021c4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80021c8:	6153      	str	r3, [r2, #20]
 80021ca:	4b0d      	ldr	r3, [pc, #52]	; (8002200 <EXTI9_5_IRQHandler+0xb8>)
 80021cc:	6a1b      	ldr	r3, [r3, #32]
 80021ce:	2108      	movs	r1, #8
 80021d0:	480c      	ldr	r0, [pc, #48]	; (8002204 <EXTI9_5_IRQHandler+0xbc>)
 80021d2:	4798      	blx	r3
	if(EXIT->EXTI_PR & (1<<9)) {EXIT->EXTI_PR |= (1<<9); GP_IRQ_Callback[9](ARR_INTERRUPT_TRACK,9);  }
 80021d4:	4b09      	ldr	r3, [pc, #36]	; (80021fc <EXTI9_5_IRQHandler+0xb4>)
 80021d6:	695b      	ldr	r3, [r3, #20]
 80021d8:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80021dc:	2b00      	cmp	r3, #0
 80021de:	d00a      	beq.n	80021f6 <EXTI9_5_IRQHandler+0xae>
 80021e0:	4b06      	ldr	r3, [pc, #24]	; (80021fc <EXTI9_5_IRQHandler+0xb4>)
 80021e2:	695b      	ldr	r3, [r3, #20]
 80021e4:	4a05      	ldr	r2, [pc, #20]	; (80021fc <EXTI9_5_IRQHandler+0xb4>)
 80021e6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80021ea:	6153      	str	r3, [r2, #20]
 80021ec:	4b04      	ldr	r3, [pc, #16]	; (8002200 <EXTI9_5_IRQHandler+0xb8>)
 80021ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80021f0:	2109      	movs	r1, #9
 80021f2:	4804      	ldr	r0, [pc, #16]	; (8002204 <EXTI9_5_IRQHandler+0xbc>)
 80021f4:	4798      	blx	r3
}
 80021f6:	bf00      	nop
 80021f8:	bd80      	pop	{r7, pc}
 80021fa:	bf00      	nop
 80021fc:	40010400 	.word	0x40010400
 8002200:	20000254 	.word	0x20000254
 8002204:	20000290 	.word	0x20000290

08002208 <EXTI15_10_IRQHandler>:

void EXTI15_10_IRQHandler(void){
 8002208:	b580      	push	{r7, lr}
 800220a:	af00      	add	r7, sp, #0
	if(EXIT->EXTI_PR & (1<<10)) {EXIT->EXTI_PR |= (1<<10); GP_IRQ_Callback[10](ARR_INTERRUPT_TRACK,10);  }
 800220c:	4b33      	ldr	r3, [pc, #204]	; (80022dc <EXTI15_10_IRQHandler+0xd4>)
 800220e:	695b      	ldr	r3, [r3, #20]
 8002210:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002214:	2b00      	cmp	r3, #0
 8002216:	d00a      	beq.n	800222e <EXTI15_10_IRQHandler+0x26>
 8002218:	4b30      	ldr	r3, [pc, #192]	; (80022dc <EXTI15_10_IRQHandler+0xd4>)
 800221a:	695b      	ldr	r3, [r3, #20]
 800221c:	4a2f      	ldr	r2, [pc, #188]	; (80022dc <EXTI15_10_IRQHandler+0xd4>)
 800221e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8002222:	6153      	str	r3, [r2, #20]
 8002224:	4b2e      	ldr	r3, [pc, #184]	; (80022e0 <EXTI15_10_IRQHandler+0xd8>)
 8002226:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002228:	210a      	movs	r1, #10
 800222a:	482e      	ldr	r0, [pc, #184]	; (80022e4 <EXTI15_10_IRQHandler+0xdc>)
 800222c:	4798      	blx	r3
	if(EXIT->EXTI_PR & (1<<11)) {EXIT->EXTI_PR |= (1<<11); GP_IRQ_Callback[11](ARR_INTERRUPT_TRACK,11);  }
 800222e:	4b2b      	ldr	r3, [pc, #172]	; (80022dc <EXTI15_10_IRQHandler+0xd4>)
 8002230:	695b      	ldr	r3, [r3, #20]
 8002232:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8002236:	2b00      	cmp	r3, #0
 8002238:	d00a      	beq.n	8002250 <EXTI15_10_IRQHandler+0x48>
 800223a:	4b28      	ldr	r3, [pc, #160]	; (80022dc <EXTI15_10_IRQHandler+0xd4>)
 800223c:	695b      	ldr	r3, [r3, #20]
 800223e:	4a27      	ldr	r2, [pc, #156]	; (80022dc <EXTI15_10_IRQHandler+0xd4>)
 8002240:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8002244:	6153      	str	r3, [r2, #20]
 8002246:	4b26      	ldr	r3, [pc, #152]	; (80022e0 <EXTI15_10_IRQHandler+0xd8>)
 8002248:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800224a:	210b      	movs	r1, #11
 800224c:	4825      	ldr	r0, [pc, #148]	; (80022e4 <EXTI15_10_IRQHandler+0xdc>)
 800224e:	4798      	blx	r3
	if(EXIT->EXTI_PR & (1<<12)) {EXIT->EXTI_PR |= (1<<12); GP_IRQ_Callback[12](ARR_INTERRUPT_TRACK,12);  }
 8002250:	4b22      	ldr	r3, [pc, #136]	; (80022dc <EXTI15_10_IRQHandler+0xd4>)
 8002252:	695b      	ldr	r3, [r3, #20]
 8002254:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8002258:	2b00      	cmp	r3, #0
 800225a:	d00a      	beq.n	8002272 <EXTI15_10_IRQHandler+0x6a>
 800225c:	4b1f      	ldr	r3, [pc, #124]	; (80022dc <EXTI15_10_IRQHandler+0xd4>)
 800225e:	695b      	ldr	r3, [r3, #20]
 8002260:	4a1e      	ldr	r2, [pc, #120]	; (80022dc <EXTI15_10_IRQHandler+0xd4>)
 8002262:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8002266:	6153      	str	r3, [r2, #20]
 8002268:	4b1d      	ldr	r3, [pc, #116]	; (80022e0 <EXTI15_10_IRQHandler+0xd8>)
 800226a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800226c:	210c      	movs	r1, #12
 800226e:	481d      	ldr	r0, [pc, #116]	; (80022e4 <EXTI15_10_IRQHandler+0xdc>)
 8002270:	4798      	blx	r3
	if(EXIT->EXTI_PR & (1<<13)) {EXIT->EXTI_PR |= (1<<13); GP_IRQ_Callback[13](ARR_INTERRUPT_TRACK,13);  }
 8002272:	4b1a      	ldr	r3, [pc, #104]	; (80022dc <EXTI15_10_IRQHandler+0xd4>)
 8002274:	695b      	ldr	r3, [r3, #20]
 8002276:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 800227a:	2b00      	cmp	r3, #0
 800227c:	d00a      	beq.n	8002294 <EXTI15_10_IRQHandler+0x8c>
 800227e:	4b17      	ldr	r3, [pc, #92]	; (80022dc <EXTI15_10_IRQHandler+0xd4>)
 8002280:	695b      	ldr	r3, [r3, #20]
 8002282:	4a16      	ldr	r2, [pc, #88]	; (80022dc <EXTI15_10_IRQHandler+0xd4>)
 8002284:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8002288:	6153      	str	r3, [r2, #20]
 800228a:	4b15      	ldr	r3, [pc, #84]	; (80022e0 <EXTI15_10_IRQHandler+0xd8>)
 800228c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800228e:	210d      	movs	r1, #13
 8002290:	4814      	ldr	r0, [pc, #80]	; (80022e4 <EXTI15_10_IRQHandler+0xdc>)
 8002292:	4798      	blx	r3
	if(EXIT->EXTI_PR & (1<<14)) {EXIT->EXTI_PR |= (1<<14); GP_IRQ_Callback[14](ARR_INTERRUPT_TRACK,14);  }
 8002294:	4b11      	ldr	r3, [pc, #68]	; (80022dc <EXTI15_10_IRQHandler+0xd4>)
 8002296:	695b      	ldr	r3, [r3, #20]
 8002298:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800229c:	2b00      	cmp	r3, #0
 800229e:	d00a      	beq.n	80022b6 <EXTI15_10_IRQHandler+0xae>
 80022a0:	4b0e      	ldr	r3, [pc, #56]	; (80022dc <EXTI15_10_IRQHandler+0xd4>)
 80022a2:	695b      	ldr	r3, [r3, #20]
 80022a4:	4a0d      	ldr	r2, [pc, #52]	; (80022dc <EXTI15_10_IRQHandler+0xd4>)
 80022a6:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80022aa:	6153      	str	r3, [r2, #20]
 80022ac:	4b0c      	ldr	r3, [pc, #48]	; (80022e0 <EXTI15_10_IRQHandler+0xd8>)
 80022ae:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80022b0:	210e      	movs	r1, #14
 80022b2:	480c      	ldr	r0, [pc, #48]	; (80022e4 <EXTI15_10_IRQHandler+0xdc>)
 80022b4:	4798      	blx	r3
	if(EXIT->EXTI_PR & (1<<15)) {EXIT->EXTI_PR |= (1<<15); GP_IRQ_Callback[15](ARR_INTERRUPT_TRACK,15);  }
 80022b6:	4b09      	ldr	r3, [pc, #36]	; (80022dc <EXTI15_10_IRQHandler+0xd4>)
 80022b8:	695b      	ldr	r3, [r3, #20]
 80022ba:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80022be:	2b00      	cmp	r3, #0
 80022c0:	d00a      	beq.n	80022d8 <EXTI15_10_IRQHandler+0xd0>
 80022c2:	4b06      	ldr	r3, [pc, #24]	; (80022dc <EXTI15_10_IRQHandler+0xd4>)
 80022c4:	695b      	ldr	r3, [r3, #20]
 80022c6:	4a05      	ldr	r2, [pc, #20]	; (80022dc <EXTI15_10_IRQHandler+0xd4>)
 80022c8:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80022cc:	6153      	str	r3, [r2, #20]
 80022ce:	4b04      	ldr	r3, [pc, #16]	; (80022e0 <EXTI15_10_IRQHandler+0xd8>)
 80022d0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80022d2:	210f      	movs	r1, #15
 80022d4:	4803      	ldr	r0, [pc, #12]	; (80022e4 <EXTI15_10_IRQHandler+0xdc>)
 80022d6:	4798      	blx	r3

}
 80022d8:	bf00      	nop
 80022da:	bd80      	pop	{r7, pc}
 80022dc:	40010400 	.word	0x40010400
 80022e0:	20000254 	.word	0x20000254
 80022e4:	20000290 	.word	0x20000290

080022e8 <SPI1_IRQHandler>:
	while( (((SPIx->SPI_SR)>>7)&1) );
	pinwrite(gpiox_SS, pin, HIGH);
}


void SPI1_IRQHandler(){
 80022e8:	b480      	push	{r7}
 80022ea:	af00      	add	r7, sp, #0
	//slave only todo
}
 80022ec:	bf00      	nop
 80022ee:	46bd      	mov	sp, r7
 80022f0:	bc80      	pop	{r7}
 80022f2:	4770      	bx	lr

080022f4 <SPI2_IRQHandler>:
void SPI2_IRQHandler(){
 80022f4:	b480      	push	{r7}
 80022f6:	af00      	add	r7, sp, #0
	//slave only todo
}
 80022f8:	bf00      	nop
 80022fa:	46bd      	mov	sp, r7
 80022fc:	bc80      	pop	{r7}
 80022fe:	4770      	bx	lr

08002300 <USART_INIT>:
//===============================================================
void send_string (){

}
//===============================================================
void USART_INIT(USART_typeDef* USARTx,uint32_t mode,uint32_t word_length,uint32_t stop_bits,uint32_t baud_rate,uint32_t parity,uint32_t CLCK){
 8002300:	b580      	push	{r7, lr}
 8002302:	b086      	sub	sp, #24
 8002304:	af00      	add	r7, sp, #0
 8002306:	60f8      	str	r0, [r7, #12]
 8002308:	60b9      	str	r1, [r7, #8]
 800230a:	607a      	str	r2, [r7, #4]
 800230c:	603b      	str	r3, [r7, #0]

	if(USARTx ==USART1){
 800230e:	68fb      	ldr	r3, [r7, #12]
 8002310:	4a55      	ldr	r2, [pc, #340]	; (8002468 <USART_INIT+0x168>)
 8002312:	4293      	cmp	r3, r2
 8002314:	d11f      	bne.n	8002356 <USART_INIT+0x56>
		USART1_Clock_Enable();
 8002316:	4b55      	ldr	r3, [pc, #340]	; (800246c <USART_INIT+0x16c>)
 8002318:	699b      	ldr	r3, [r3, #24]
 800231a:	4a54      	ldr	r2, [pc, #336]	; (800246c <USART_INIT+0x16c>)
 800231c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002320:	6193      	str	r3, [r2, #24]
		GPIOA_Clock_Enable();
 8002322:	4b52      	ldr	r3, [pc, #328]	; (800246c <USART_INIT+0x16c>)
 8002324:	699b      	ldr	r3, [r3, #24]
 8002326:	4a51      	ldr	r2, [pc, #324]	; (800246c <USART_INIT+0x16c>)
 8002328:	f043 0304 	orr.w	r3, r3, #4
 800232c:	6193      	str	r3, [r2, #24]
		NVIC_USART1_interrupt_Enable;
 800232e:	4b50      	ldr	r3, [pc, #320]	; (8002470 <USART_INIT+0x170>)
 8002330:	681b      	ldr	r3, [r3, #0]
 8002332:	4a4f      	ldr	r2, [pc, #316]	; (8002470 <USART_INIT+0x170>)
 8002334:	f043 0320 	orr.w	r3, r3, #32
 8002338:	6013      	str	r3, [r2, #0]
		//TX
		pinmode(GPIOA, pin9,GPIO_MODE_OUTPUT_AF_push_pull_Speed10);
 800233a:	2209      	movs	r2, #9
 800233c:	2109      	movs	r1, #9
 800233e:	484d      	ldr	r0, [pc, #308]	; (8002474 <USART_INIT+0x174>)
 8002340:	f7fe ff72 	bl	8001228 <pinmode>
		//RX
		pinmode(GPIOA, pin10,GPIO_MODE_INTPUT_AF);
 8002344:	2204      	movs	r2, #4
 8002346:	210a      	movs	r1, #10
 8002348:	484a      	ldr	r0, [pc, #296]	; (8002474 <USART_INIT+0x174>)
 800234a:	f7fe ff6d 	bl	8001228 <pinmode>
		arr[0]=USART1;
 800234e:	4b4a      	ldr	r3, [pc, #296]	; (8002478 <USART_INIT+0x178>)
 8002350:	4a45      	ldr	r2, [pc, #276]	; (8002468 <USART_INIT+0x168>)
 8002352:	601a      	str	r2, [r3, #0]
 8002354:	e042      	b.n	80023dc <USART_INIT+0xdc>
	}
	else if(USARTx ==USART2){
 8002356:	68fb      	ldr	r3, [r7, #12]
 8002358:	4a48      	ldr	r2, [pc, #288]	; (800247c <USART_INIT+0x17c>)
 800235a:	4293      	cmp	r3, r2
 800235c:	d11f      	bne.n	800239e <USART_INIT+0x9e>
		USART2_Clock_Enable();
 800235e:	4b43      	ldr	r3, [pc, #268]	; (800246c <USART_INIT+0x16c>)
 8002360:	69db      	ldr	r3, [r3, #28]
 8002362:	4a42      	ldr	r2, [pc, #264]	; (800246c <USART_INIT+0x16c>)
 8002364:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002368:	61d3      	str	r3, [r2, #28]
		GPIOA_Clock_Enable();
 800236a:	4b40      	ldr	r3, [pc, #256]	; (800246c <USART_INIT+0x16c>)
 800236c:	699b      	ldr	r3, [r3, #24]
 800236e:	4a3f      	ldr	r2, [pc, #252]	; (800246c <USART_INIT+0x16c>)
 8002370:	f043 0304 	orr.w	r3, r3, #4
 8002374:	6193      	str	r3, [r2, #24]
		NVIC_USART2_interrupt_Enable;
 8002376:	4b3e      	ldr	r3, [pc, #248]	; (8002470 <USART_INIT+0x170>)
 8002378:	681b      	ldr	r3, [r3, #0]
 800237a:	4a3d      	ldr	r2, [pc, #244]	; (8002470 <USART_INIT+0x170>)
 800237c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002380:	6013      	str	r3, [r2, #0]
		//TX
		pinmode(GPIOA, pin2,GPIO_MODE_OUTPUT_AF_push_pull_Speed10);
 8002382:	2209      	movs	r2, #9
 8002384:	2102      	movs	r1, #2
 8002386:	483b      	ldr	r0, [pc, #236]	; (8002474 <USART_INIT+0x174>)
 8002388:	f7fe ff4e 	bl	8001228 <pinmode>
		//RX
		pinmode(GPIOA, pin3,GPIO_MODE_INTPUT_AF);
 800238c:	2204      	movs	r2, #4
 800238e:	2103      	movs	r1, #3
 8002390:	4838      	ldr	r0, [pc, #224]	; (8002474 <USART_INIT+0x174>)
 8002392:	f7fe ff49 	bl	8001228 <pinmode>
		arr[1]=USART2;
 8002396:	4b38      	ldr	r3, [pc, #224]	; (8002478 <USART_INIT+0x178>)
 8002398:	4a38      	ldr	r2, [pc, #224]	; (800247c <USART_INIT+0x17c>)
 800239a:	605a      	str	r2, [r3, #4]
 800239c:	e01e      	b.n	80023dc <USART_INIT+0xdc>
	}
	else{
		USART3_Clock_Enable();
 800239e:	4b33      	ldr	r3, [pc, #204]	; (800246c <USART_INIT+0x16c>)
 80023a0:	69db      	ldr	r3, [r3, #28]
 80023a2:	4a32      	ldr	r2, [pc, #200]	; (800246c <USART_INIT+0x16c>)
 80023a4:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80023a8:	61d3      	str	r3, [r2, #28]
		GPIOB_Clock_Enable();
 80023aa:	4b30      	ldr	r3, [pc, #192]	; (800246c <USART_INIT+0x16c>)
 80023ac:	699b      	ldr	r3, [r3, #24]
 80023ae:	4a2f      	ldr	r2, [pc, #188]	; (800246c <USART_INIT+0x16c>)
 80023b0:	f043 0308 	orr.w	r3, r3, #8
 80023b4:	6193      	str	r3, [r2, #24]
		NVIC_USART3_interrupt_Enable;
 80023b6:	4b2e      	ldr	r3, [pc, #184]	; (8002470 <USART_INIT+0x170>)
 80023b8:	681b      	ldr	r3, [r3, #0]
 80023ba:	4a2d      	ldr	r2, [pc, #180]	; (8002470 <USART_INIT+0x170>)
 80023bc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80023c0:	6013      	str	r3, [r2, #0]
		//TX
		pinmode(GPIOB, pin10,GPIO_MODE_OUTPUT_AF_push_pull_Speed10);
 80023c2:	2209      	movs	r2, #9
 80023c4:	210a      	movs	r1, #10
 80023c6:	482e      	ldr	r0, [pc, #184]	; (8002480 <USART_INIT+0x180>)
 80023c8:	f7fe ff2e 	bl	8001228 <pinmode>
		//RX
		pinmode(GPIOB, pin11,GPIO_MODE_INTPUT_AF);
 80023cc:	2204      	movs	r2, #4
 80023ce:	210b      	movs	r1, #11
 80023d0:	482b      	ldr	r0, [pc, #172]	; (8002480 <USART_INIT+0x180>)
 80023d2:	f7fe ff29 	bl	8001228 <pinmode>
		arr[2]=USART3;
 80023d6:	4b28      	ldr	r3, [pc, #160]	; (8002478 <USART_INIT+0x178>)
 80023d8:	4a2a      	ldr	r2, [pc, #168]	; (8002484 <USART_INIT+0x184>)
 80023da:	609a      	str	r2, [r3, #8]
	//	When this bit is cleared the USART prescalers and outputs are stopped and the end of the
	//	current
	//	byte transfer in order to reduce power consumption. This bit is set and cleared by software.
	//	0: USART prescaler and outputs disabled
	//	1: USART enabled
	USARTx->USART_CR1 |=(1<<13);
 80023dc:	68fb      	ldr	r3, [r7, #12]
 80023de:	68db      	ldr	r3, [r3, #12]
 80023e0:	f443 5200 	orr.w	r2, r3, #8192	; 0x2000
 80023e4:	68fb      	ldr	r3, [r7, #12]
 80023e6:	60da      	str	r2, [r3, #12]
	//STEP 2
	//	Bit 12 M: Word length
	//	This bit determines the word length. It is set or cleared by software.
	//	0: 1 Start bit, 8 Data bits, n Stop bit
	//	1: 1 Start bit, 9 Data bits, n Stop bit
	USARTx->USART_CR1 |=word_length;
 80023e8:	68fb      	ldr	r3, [r7, #12]
 80023ea:	68da      	ldr	r2, [r3, #12]
 80023ec:	687b      	ldr	r3, [r7, #4]
 80023ee:	431a      	orrs	r2, r3
 80023f0:	68fb      	ldr	r3, [r7, #12]
 80023f2:	60da      	str	r2, [r3, #12]
	//	These bits are used for programming the stop bits.
	//	00: 1 Stop bit
	//	01: 0.5 Stop bit
	//	10: 2 Stop bits
	//	11: 1.5 Stop bit
	USARTx->USART_CR2 |=stop_bits;
 80023f4:	68fb      	ldr	r3, [r7, #12]
 80023f6:	691a      	ldr	r2, [r3, #16]
 80023f8:	683b      	ldr	r3, [r7, #0]
 80023fa:	431a      	orrs	r2, r3
 80023fc:	68fb      	ldr	r3, [r7, #12]
 80023fe:	611a      	str	r2, [r3, #16]
	//	2: When TE is set there is a 1 bit-time delay before the transmission starts.
	//	Bit 2 RE: Receiver enable
	//	This bit enables the receiver. It is set and cleared by software.
	//	0: Receiver is disabled
	//	1: Receiver is enabled and begins searching for a start bit
	USARTx->USART_CR1 |=mode;
 8002400:	68fb      	ldr	r3, [r7, #12]
 8002402:	68da      	ldr	r2, [r3, #12]
 8002404:	68bb      	ldr	r3, [r7, #8]
 8002406:	431a      	orrs	r2, r3
 8002408:	68fb      	ldr	r3, [r7, #12]
 800240a:	60da      	str	r2, [r3, #12]
	//	Bit 9 PS: Parity selection
	//	This bit selects the odd or even parity when the parity generation/detection is enabled (PCE
	//	bit set). It is set and cleared by software. The parity will be selected after the current byte.
	//	0: Even parity
	//	1: Odd parity
	USARTx->USART_CR1 |=parity;
 800240c:	68fb      	ldr	r3, [r7, #12]
 800240e:	68da      	ldr	r2, [r3, #12]
 8002410:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002412:	431a      	orrs	r2, r3
 8002414:	68fb      	ldr	r3, [r7, #12]
 8002416:	60da      	str	r2, [r3, #12]
	//	Bits 15:4 DIV_Mantissa[11:0]: mantissa of USARTDIV
	//	These 12 bits define the mantissa of the USART Divider (USARTDIV)
	//	Bits 3:0 DIV_Fraction[3:0]: fraction of USARTDIV
	//	These 4 bits define the fraction of the USART Divider (USARTDIV)

	uint16_t DIV_Mantissa =CLCK /(baud_rate*16);
 8002418:	6a3b      	ldr	r3, [r7, #32]
 800241a:	011b      	lsls	r3, r3, #4
 800241c:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800241e:	fbb2 f3f3 	udiv	r3, r2, r3
 8002422:	82fb      	strh	r3, [r7, #22]
	uint16_t DIV_Fraction =(((CLCK /((baud_rate*16)/100)) - DIV_Mantissa*100)*16)/100;
 8002424:	6a3b      	ldr	r3, [r7, #32]
 8002426:	011b      	lsls	r3, r3, #4
 8002428:	4a17      	ldr	r2, [pc, #92]	; (8002488 <USART_INIT+0x188>)
 800242a:	fba2 2303 	umull	r2, r3, r2, r3
 800242e:	095b      	lsrs	r3, r3, #5
 8002430:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8002432:	fbb2 f3f3 	udiv	r3, r2, r3
 8002436:	8afa      	ldrh	r2, [r7, #22]
 8002438:	2164      	movs	r1, #100	; 0x64
 800243a:	fb01 f202 	mul.w	r2, r1, r2
 800243e:	1a9b      	subs	r3, r3, r2
 8002440:	011b      	lsls	r3, r3, #4
 8002442:	4a11      	ldr	r2, [pc, #68]	; (8002488 <USART_INIT+0x188>)
 8002444:	fba2 2303 	umull	r2, r3, r2, r3
 8002448:	095b      	lsrs	r3, r3, #5
 800244a:	82bb      	strh	r3, [r7, #20]
	USARTx->USART_BRR =( (DIV_Mantissa<<4) | ((DIV_Fraction)& 0xf) );
 800244c:	8afb      	ldrh	r3, [r7, #22]
 800244e:	011a      	lsls	r2, r3, #4
 8002450:	8abb      	ldrh	r3, [r7, #20]
 8002452:	f003 030f 	and.w	r3, r3, #15
 8002456:	4313      	orrs	r3, r2
 8002458:	461a      	mov	r2, r3
 800245a:	68fb      	ldr	r3, [r7, #12]
 800245c:	609a      	str	r2, [r3, #8]


}
 800245e:	bf00      	nop
 8002460:	3718      	adds	r7, #24
 8002462:	46bd      	mov	sp, r7
 8002464:	bd80      	pop	{r7, pc}
 8002466:	bf00      	nop
 8002468:	40013800 	.word	0x40013800
 800246c:	40021000 	.word	0x40021000
 8002470:	e000e104 	.word	0xe000e104
 8002474:	40010800 	.word	0x40010800
 8002478:	200002b0 	.word	0x200002b0
 800247c:	40004400 	.word	0x40004400
 8002480:	40010c00 	.word	0x40010c00
 8002484:	40004800 	.word	0x40004800
 8002488:	51eb851f 	.word	0x51eb851f

0800248c <USART_SEND>:
void USART_SEND(USART_typeDef* USARTx,uint16_t* data){
 800248c:	b480      	push	{r7}
 800248e:	b083      	sub	sp, #12
 8002490:	af00      	add	r7, sp, #0
 8002492:	6078      	str	r0, [r7, #4]
 8002494:	6039      	str	r1, [r7, #0]

	if(((USARTx->USART_CR1>>12)&1)==1){
 8002496:	687b      	ldr	r3, [r7, #4]
 8002498:	68db      	ldr	r3, [r3, #12]
 800249a:	0b1b      	lsrs	r3, r3, #12
 800249c:	f003 0301 	and.w	r3, r3, #1
 80024a0:	2b01      	cmp	r3, #1
 80024a2:	d106      	bne.n	80024b2 <USART_SEND+0x26>
		//	Bit 12 M: Word length
		//	1: 1 Start bit, 9 Data bits, n Stop bit
		USARTx->USART_DR=((*data)&(uint16_t)0x01ff);
 80024a4:	683b      	ldr	r3, [r7, #0]
 80024a6:	881b      	ldrh	r3, [r3, #0]
 80024a8:	f3c3 0208 	ubfx	r2, r3, #0, #9
 80024ac:	687b      	ldr	r3, [r7, #4]
 80024ae:	605a      	str	r2, [r3, #4]
		//	0: 1 Start bit, 8 Data bits, n Stop bit
		USARTx->USART_DR=((*data)&(uint16_t)0xff);
	}


}
 80024b0:	e004      	b.n	80024bc <USART_SEND+0x30>
		USARTx->USART_DR=((*data)&(uint16_t)0xff);
 80024b2:	683b      	ldr	r3, [r7, #0]
 80024b4:	881b      	ldrh	r3, [r3, #0]
 80024b6:	b2da      	uxtb	r2, r3
 80024b8:	687b      	ldr	r3, [r7, #4]
 80024ba:	605a      	str	r2, [r3, #4]
}
 80024bc:	bf00      	nop
 80024be:	370c      	adds	r7, #12
 80024c0:	46bd      	mov	sp, r7
 80024c2:	bc80      	pop	{r7}
 80024c4:	4770      	bx	lr
	...

080024c8 <USART_READ>:

void USART_READ(USART_typeDef* USARTx,uint16_t* data){
 80024c8:	b480      	push	{r7}
 80024ca:	b083      	sub	sp, #12
 80024cc:	af00      	add	r7, sp, #0
 80024ce:	6078      	str	r0, [r7, #4]
 80024d0:	6039      	str	r1, [r7, #0]

	if(USARTx==USART1){
 80024d2:	687b      	ldr	r3, [r7, #4]
 80024d4:	4a0d      	ldr	r2, [pc, #52]	; (800250c <USART_READ+0x44>)
 80024d6:	4293      	cmp	r3, r2
 80024d8:	d103      	bne.n	80024e2 <USART_READ+0x1a>
		*data=arr_data_RES[0];
 80024da:	4b0d      	ldr	r3, [pc, #52]	; (8002510 <USART_READ+0x48>)
 80024dc:	881a      	ldrh	r2, [r3, #0]
 80024de:	683b      	ldr	r3, [r7, #0]
 80024e0:	801a      	strh	r2, [r3, #0]
	}
	if(USARTx==USART2){
 80024e2:	687b      	ldr	r3, [r7, #4]
 80024e4:	4a0b      	ldr	r2, [pc, #44]	; (8002514 <USART_READ+0x4c>)
 80024e6:	4293      	cmp	r3, r2
 80024e8:	d103      	bne.n	80024f2 <USART_READ+0x2a>
		*data=arr_data_RES[1];
 80024ea:	4b09      	ldr	r3, [pc, #36]	; (8002510 <USART_READ+0x48>)
 80024ec:	885a      	ldrh	r2, [r3, #2]
 80024ee:	683b      	ldr	r3, [r7, #0]
 80024f0:	801a      	strh	r2, [r3, #0]
	}
	if(USARTx==USART3){
 80024f2:	687b      	ldr	r3, [r7, #4]
 80024f4:	4a08      	ldr	r2, [pc, #32]	; (8002518 <USART_READ+0x50>)
 80024f6:	4293      	cmp	r3, r2
 80024f8:	d103      	bne.n	8002502 <USART_READ+0x3a>
		*data=arr_data_RES[2];
 80024fa:	4b05      	ldr	r3, [pc, #20]	; (8002510 <USART_READ+0x48>)
 80024fc:	889a      	ldrh	r2, [r3, #4]
 80024fe:	683b      	ldr	r3, [r7, #0]
 8002500:	801a      	strh	r2, [r3, #0]
	}

}
 8002502:	bf00      	nop
 8002504:	370c      	adds	r7, #12
 8002506:	46bd      	mov	sp, r7
 8002508:	bc80      	pop	{r7}
 800250a:	4770      	bx	lr
 800250c:	40013800 	.word	0x40013800
 8002510:	200002bc 	.word	0x200002bc
 8002514:	40004400 	.word	0x40004400
 8002518:	40004800 	.word	0x40004800

0800251c <USART_READ_INTERRUPT_EN>:
	//0: Interrupt is inhibited
	//1: A USART interrupt is generated whenever TXE=1 in the USART_SR register
	USARTx->USART_CR1 |=Transmit_data_register_empty;//open flage of interrupt
}

void USART_READ_INTERRUPT_EN(USART_typeDef* USARTx,void (*calback) (void)){
 800251c:	b480      	push	{r7}
 800251e:	b083      	sub	sp, #12
 8002520:	af00      	add	r7, sp, #0
 8002522:	6078      	str	r0, [r7, #4]
 8002524:	6039      	str	r1, [r7, #0]

	if(USARTx==USART1){
 8002526:	687b      	ldr	r3, [r7, #4]
 8002528:	4a0e      	ldr	r2, [pc, #56]	; (8002564 <USART_READ_INTERRUPT_EN+0x48>)
 800252a:	4293      	cmp	r3, r2
 800252c:	d103      	bne.n	8002536 <USART_READ_INTERRUPT_EN+0x1a>
		GP_reseve_Callback[0] = calback;
 800252e:	4a0e      	ldr	r2, [pc, #56]	; (8002568 <USART_READ_INTERRUPT_EN+0x4c>)
 8002530:	683b      	ldr	r3, [r7, #0]
 8002532:	6013      	str	r3, [r2, #0]
 8002534:	e00a      	b.n	800254c <USART_READ_INTERRUPT_EN+0x30>
	}
	else if(USARTx==USART2){
 8002536:	687b      	ldr	r3, [r7, #4]
 8002538:	4a0c      	ldr	r2, [pc, #48]	; (800256c <USART_READ_INTERRUPT_EN+0x50>)
 800253a:	4293      	cmp	r3, r2
 800253c:	d103      	bne.n	8002546 <USART_READ_INTERRUPT_EN+0x2a>
		GP_reseve_Callback[1] = calback;
 800253e:	4a0a      	ldr	r2, [pc, #40]	; (8002568 <USART_READ_INTERRUPT_EN+0x4c>)
 8002540:	683b      	ldr	r3, [r7, #0]
 8002542:	6053      	str	r3, [r2, #4]
 8002544:	e002      	b.n	800254c <USART_READ_INTERRUPT_EN+0x30>
	}
	else{
		GP_reseve_Callback[2] = calback;
 8002546:	4a08      	ldr	r2, [pc, #32]	; (8002568 <USART_READ_INTERRUPT_EN+0x4c>)
 8002548:	683b      	ldr	r3, [r7, #0]
 800254a:	6093      	str	r3, [r2, #8]
	//RX INTRRUPT
	//Bit 5 RXNEIE: RXNE interrupt enable
	//This bit is set and cleared by software.
	//0: Interrupt is inhibited
	//1: A USART interrupt is generated whenever ORE=1 or RXNE=1 in the USART_SR register
	USARTx->USART_CR1 |=Received_data_ready_to_be_read;
 800254c:	687b      	ldr	r3, [r7, #4]
 800254e:	68db      	ldr	r3, [r3, #12]
 8002550:	f043 0220 	orr.w	r2, r3, #32
 8002554:	687b      	ldr	r3, [r7, #4]
 8002556:	60da      	str	r2, [r3, #12]
}
 8002558:	bf00      	nop
 800255a:	370c      	adds	r7, #12
 800255c:	46bd      	mov	sp, r7
 800255e:	bc80      	pop	{r7}
 8002560:	4770      	bx	lr
 8002562:	bf00      	nop
 8002564:	40013800 	.word	0x40013800
 8002568:	200002d0 	.word	0x200002d0
 800256c:	40004400 	.word	0x40004400

08002570 <USART1_IRQHandler>:
	//This bit is set and cleared by software.
	//0: Interrupt is inhibited
	//1: A USART interrupt is generated whenever ORE=1 or RXNE=1 in the USART_SR register
	USARTx->USART_CR1 &=~Received_data_ready_to_be_read;
}
void USART1_IRQHandler(){
 8002570:	b580      	push	{r7, lr}
 8002572:	b082      	sub	sp, #8
 8002574:	af00      	add	r7, sp, #0
	////pinwrite(GPIOB, pin1,HIGH);
	//arr[0]->USART_SR &=~(1<<6);
	if(  (( (arr[0]->USART_SR>>7) & 1) ==1)&&(((arr[0]->USART_CR1 >>7)&1)==1) ){   //Transmit data register empty
 8002576:	4b51      	ldr	r3, [pc, #324]	; (80026bc <USART1_IRQHandler+0x14c>)
 8002578:	681b      	ldr	r3, [r3, #0]
 800257a:	681b      	ldr	r3, [r3, #0]
 800257c:	09db      	lsrs	r3, r3, #7
 800257e:	f003 0301 	and.w	r3, r3, #1
 8002582:	2b01      	cmp	r3, #1
 8002584:	d122      	bne.n	80025cc <USART1_IRQHandler+0x5c>
 8002586:	4b4d      	ldr	r3, [pc, #308]	; (80026bc <USART1_IRQHandler+0x14c>)
 8002588:	681b      	ldr	r3, [r3, #0]
 800258a:	68db      	ldr	r3, [r3, #12]
 800258c:	09db      	lsrs	r3, r3, #7
 800258e:	f003 0301 	and.w	r3, r3, #1
 8002592:	2b01      	cmp	r3, #1
 8002594:	d11a      	bne.n	80025cc <USART1_IRQHandler+0x5c>

		if((*arr_data[0])!=0){
 8002596:	4b4a      	ldr	r3, [pc, #296]	; (80026c0 <USART1_IRQHandler+0x150>)
 8002598:	681b      	ldr	r3, [r3, #0]
 800259a:	781b      	ldrb	r3, [r3, #0]
 800259c:	2b00      	cmp	r3, #0
 800259e:	d00d      	beq.n	80025bc <USART1_IRQHandler+0x4c>
			USART_SEND(arr[0],(uint16_t*)arr_data[0]);
 80025a0:	4b46      	ldr	r3, [pc, #280]	; (80026bc <USART1_IRQHandler+0x14c>)
 80025a2:	681a      	ldr	r2, [r3, #0]
 80025a4:	4b46      	ldr	r3, [pc, #280]	; (80026c0 <USART1_IRQHandler+0x150>)
 80025a6:	681b      	ldr	r3, [r3, #0]
 80025a8:	4619      	mov	r1, r3
 80025aa:	4610      	mov	r0, r2
 80025ac:	f7ff ff6e 	bl	800248c <USART_SEND>
			++arr_data[0];
 80025b0:	4b43      	ldr	r3, [pc, #268]	; (80026c0 <USART1_IRQHandler+0x150>)
 80025b2:	681b      	ldr	r3, [r3, #0]
 80025b4:	3301      	adds	r3, #1
 80025b6:	4a42      	ldr	r2, [pc, #264]	; (80026c0 <USART1_IRQHandler+0x150>)
 80025b8:	6013      	str	r3, [r2, #0]
 80025ba:	e007      	b.n	80025cc <USART1_IRQHandler+0x5c>
		else {
			//Bit 7 TXEIE: TXE interrupt enable
			//This bit is set and cleared by software.
			//0: Interrupt is inhibited
			//1: A USART interrupt is generated whenever TXE=1 in the USART_SR register
			arr[0]->USART_CR1 &=~Transmit_data_register_empty;
 80025bc:	4b3f      	ldr	r3, [pc, #252]	; (80026bc <USART1_IRQHandler+0x14c>)
 80025be:	681b      	ldr	r3, [r3, #0]
 80025c0:	68da      	ldr	r2, [r3, #12]
 80025c2:	4b3e      	ldr	r3, [pc, #248]	; (80026bc <USART1_IRQHandler+0x14c>)
 80025c4:	681b      	ldr	r3, [r3, #0]
 80025c6:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80025ca:	60da      	str	r2, [r3, #12]

	}

	//===========================================================================

	if(  (( (arr[0]->USART_SR>>5) & 1) ==1)&&(( (arr[0]->USART_CR1 >>5) &1)==1) ){
 80025cc:	4b3b      	ldr	r3, [pc, #236]	; (80026bc <USART1_IRQHandler+0x14c>)
 80025ce:	681b      	ldr	r3, [r3, #0]
 80025d0:	681b      	ldr	r3, [r3, #0]
 80025d2:	095b      	lsrs	r3, r3, #5
 80025d4:	f003 0301 	and.w	r3, r3, #1
 80025d8:	2b01      	cmp	r3, #1
 80025da:	d15b      	bne.n	8002694 <USART1_IRQHandler+0x124>
 80025dc:	4b37      	ldr	r3, [pc, #220]	; (80026bc <USART1_IRQHandler+0x14c>)
 80025de:	681b      	ldr	r3, [r3, #0]
 80025e0:	68db      	ldr	r3, [r3, #12]
 80025e2:	095b      	lsrs	r3, r3, #5
 80025e4:	f003 0301 	and.w	r3, r3, #1
 80025e8:	2b01      	cmp	r3, #1
 80025ea:	d153      	bne.n	8002694 <USART1_IRQHandler+0x124>



		//	Bit 12 M: Word length
		//	This bit determines the word length. It is set or cleared by software.
		if(((arr[0]->USART_CR1>>12)&1) ==1){
 80025ec:	4b33      	ldr	r3, [pc, #204]	; (80026bc <USART1_IRQHandler+0x14c>)
 80025ee:	681b      	ldr	r3, [r3, #0]
 80025f0:	68db      	ldr	r3, [r3, #12]
 80025f2:	0b1b      	lsrs	r3, r3, #12
 80025f4:	f003 0301 	and.w	r3, r3, #1
 80025f8:	2b01      	cmp	r3, #1
 80025fa:	d117      	bne.n	800262c <USART1_IRQHandler+0xbc>
			//	1: 1 Start bit, 9 Data bits, n Stop bit

			if(((arr[0]->USART_CR1>>10)&1) ==1){
 80025fc:	4b2f      	ldr	r3, [pc, #188]	; (80026bc <USART1_IRQHandler+0x14c>)
 80025fe:	681b      	ldr	r3, [r3, #0]
 8002600:	68db      	ldr	r3, [r3, #12]
 8002602:	0a9b      	lsrs	r3, r3, #10
 8002604:	f003 0301 	and.w	r3, r3, #1
 8002608:	2b01      	cmp	r3, #1
 800260a:	d108      	bne.n	800261e <USART1_IRQHandler+0xae>
				//Bit 10 PCE: Parity control enable
				// 1: Parity control enabled
				arr_data_RES[0] =(arr[0]->USART_DR & (uint16_t)0xff);
 800260c:	4b2b      	ldr	r3, [pc, #172]	; (80026bc <USART1_IRQHandler+0x14c>)
 800260e:	681b      	ldr	r3, [r3, #0]
 8002610:	685b      	ldr	r3, [r3, #4]
 8002612:	b29b      	uxth	r3, r3
 8002614:	b2db      	uxtb	r3, r3
 8002616:	b29a      	uxth	r2, r3
 8002618:	4b2a      	ldr	r3, [pc, #168]	; (80026c4 <USART1_IRQHandler+0x154>)
 800261a:	801a      	strh	r2, [r3, #0]
 800261c:	e020      	b.n	8002660 <USART1_IRQHandler+0xf0>
			}
			else{
				//0: Parity control disabled
				arr_data_RES[0]=arr[0]->USART_DR;
 800261e:	4b27      	ldr	r3, [pc, #156]	; (80026bc <USART1_IRQHandler+0x14c>)
 8002620:	681b      	ldr	r3, [r3, #0]
 8002622:	685b      	ldr	r3, [r3, #4]
 8002624:	b29a      	uxth	r2, r3
 8002626:	4b27      	ldr	r3, [pc, #156]	; (80026c4 <USART1_IRQHandler+0x154>)
 8002628:	801a      	strh	r2, [r3, #0]
 800262a:	e019      	b.n	8002660 <USART1_IRQHandler+0xf0>
			}
		}
		else{
			//	0: 1 Start bit, 8 Data bits, n Stop bit

			if(((arr[0]->USART_CR1>>10)&1) ==1){
 800262c:	4b23      	ldr	r3, [pc, #140]	; (80026bc <USART1_IRQHandler+0x14c>)
 800262e:	681b      	ldr	r3, [r3, #0]
 8002630:	68db      	ldr	r3, [r3, #12]
 8002632:	0a9b      	lsrs	r3, r3, #10
 8002634:	f003 0301 	and.w	r3, r3, #1
 8002638:	2b01      	cmp	r3, #1
 800263a:	d109      	bne.n	8002650 <USART1_IRQHandler+0xe0>
				//Bit 10 PCE: Parity control enable
				// 1: Parity control enabled
				arr_data_RES[0] =(arr[0]->USART_DR & (uint16_t)0x7f);
 800263c:	4b1f      	ldr	r3, [pc, #124]	; (80026bc <USART1_IRQHandler+0x14c>)
 800263e:	681b      	ldr	r3, [r3, #0]
 8002640:	685b      	ldr	r3, [r3, #4]
 8002642:	b29b      	uxth	r3, r3
 8002644:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8002648:	b29a      	uxth	r2, r3
 800264a:	4b1e      	ldr	r3, [pc, #120]	; (80026c4 <USART1_IRQHandler+0x154>)
 800264c:	801a      	strh	r2, [r3, #0]
 800264e:	e007      	b.n	8002660 <USART1_IRQHandler+0xf0>
			}
			else{
				//0: Parity control disabled
				arr_data_RES[0] =(arr[0]->USART_DR & (uint16_t)0xff);
 8002650:	4b1a      	ldr	r3, [pc, #104]	; (80026bc <USART1_IRQHandler+0x14c>)
 8002652:	681b      	ldr	r3, [r3, #0]
 8002654:	685b      	ldr	r3, [r3, #4]
 8002656:	b29b      	uxth	r3, r3
 8002658:	b2db      	uxtb	r3, r3
 800265a:	b29a      	uxth	r2, r3
 800265c:	4b19      	ldr	r3, [pc, #100]	; (80026c4 <USART1_IRQHandler+0x154>)
 800265e:	801a      	strh	r2, [r3, #0]
			}
		}
		//pinwrite(GPIOB, pin1,HIGH);

		GP_reseve_Callback[0]();
 8002660:	4b19      	ldr	r3, [pc, #100]	; (80026c8 <USART1_IRQHandler+0x158>)
 8002662:	681b      	ldr	r3, [r3, #0]
 8002664:	4798      	blx	r3

		//pinwrite(GPIOB, pin1,LOW);
		arr[0]->USART_SR &=~(1<<5);//clear
 8002666:	4b15      	ldr	r3, [pc, #84]	; (80026bc <USART1_IRQHandler+0x14c>)
 8002668:	681b      	ldr	r3, [r3, #0]
 800266a:	681a      	ldr	r2, [r3, #0]
 800266c:	4b13      	ldr	r3, [pc, #76]	; (80026bc <USART1_IRQHandler+0x14c>)
 800266e:	681b      	ldr	r3, [r3, #0]
 8002670:	f022 0220 	bic.w	r2, r2, #32
 8002674:	601a      	str	r2, [r3, #0]
		//arr[0]->USART_CR1 &=~Received_data_ready_to_be_read;
		if(((arr[0]->USART_SR>>3)&1)|1){
 8002676:	4b11      	ldr	r3, [pc, #68]	; (80026bc <USART1_IRQHandler+0x14c>)
 8002678:	681b      	ldr	r3, [r3, #0]
 800267a:	681b      	ldr	r3, [r3, #0]
			volatile uint16_t d=USART1->USART_DR;
 800267c:	4b13      	ldr	r3, [pc, #76]	; (80026cc <USART1_IRQHandler+0x15c>)
 800267e:	685b      	ldr	r3, [r3, #4]
 8002680:	b29b      	uxth	r3, r3
 8002682:	80fb      	strh	r3, [r7, #6]
			arr[0]->USART_SR &=~(1<<5);
 8002684:	4b0d      	ldr	r3, [pc, #52]	; (80026bc <USART1_IRQHandler+0x14c>)
 8002686:	681b      	ldr	r3, [r3, #0]
 8002688:	681a      	ldr	r2, [r3, #0]
 800268a:	4b0c      	ldr	r3, [pc, #48]	; (80026bc <USART1_IRQHandler+0x14c>)
 800268c:	681b      	ldr	r3, [r3, #0]
 800268e:	f022 0220 	bic.w	r2, r2, #32
 8002692:	601a      	str	r2, [r3, #0]
		}
	}
	if(((arr[0]->USART_SR>>3)&1)|1){
 8002694:	4b09      	ldr	r3, [pc, #36]	; (80026bc <USART1_IRQHandler+0x14c>)
 8002696:	681b      	ldr	r3, [r3, #0]
 8002698:	681b      	ldr	r3, [r3, #0]
		volatile uint16_t w =USART1->USART_DR;
 800269a:	4b0c      	ldr	r3, [pc, #48]	; (80026cc <USART1_IRQHandler+0x15c>)
 800269c:	685b      	ldr	r3, [r3, #4]
 800269e:	b29b      	uxth	r3, r3
 80026a0:	80bb      	strh	r3, [r7, #4]
		arr[0]->USART_SR &=~(1<<5);
 80026a2:	4b06      	ldr	r3, [pc, #24]	; (80026bc <USART1_IRQHandler+0x14c>)
 80026a4:	681b      	ldr	r3, [r3, #0]
 80026a6:	681a      	ldr	r2, [r3, #0]
 80026a8:	4b04      	ldr	r3, [pc, #16]	; (80026bc <USART1_IRQHandler+0x14c>)
 80026aa:	681b      	ldr	r3, [r3, #0]
 80026ac:	f022 0220 	bic.w	r2, r2, #32
 80026b0:	601a      	str	r2, [r3, #0]
	}

}
 80026b2:	bf00      	nop
 80026b4:	3708      	adds	r7, #8
 80026b6:	46bd      	mov	sp, r7
 80026b8:	bd80      	pop	{r7, pc}
 80026ba:	bf00      	nop
 80026bc:	200002b0 	.word	0x200002b0
 80026c0:	200002c4 	.word	0x200002c4
 80026c4:	200002bc 	.word	0x200002bc
 80026c8:	200002d0 	.word	0x200002d0
 80026cc:	40013800 	.word	0x40013800

080026d0 <USART2_IRQHandler>:
void USART2_IRQHandler(){
 80026d0:	b580      	push	{r7, lr}
 80026d2:	b082      	sub	sp, #8
 80026d4:	af00      	add	r7, sp, #0
	//pinwrite(GPIOB, pin1,HIGH);
	//arr[0]->USART_SR &=~(1<<6);
	if(  (( (arr[1]->USART_SR>>7) & 1) ==1)&&(((arr[1]->USART_CR1 >>7)&1)==1) ){   //Transmit data register empty
 80026d6:	4b51      	ldr	r3, [pc, #324]	; (800281c <USART2_IRQHandler+0x14c>)
 80026d8:	685b      	ldr	r3, [r3, #4]
 80026da:	681b      	ldr	r3, [r3, #0]
 80026dc:	09db      	lsrs	r3, r3, #7
 80026de:	f003 0301 	and.w	r3, r3, #1
 80026e2:	2b01      	cmp	r3, #1
 80026e4:	d122      	bne.n	800272c <USART2_IRQHandler+0x5c>
 80026e6:	4b4d      	ldr	r3, [pc, #308]	; (800281c <USART2_IRQHandler+0x14c>)
 80026e8:	685b      	ldr	r3, [r3, #4]
 80026ea:	68db      	ldr	r3, [r3, #12]
 80026ec:	09db      	lsrs	r3, r3, #7
 80026ee:	f003 0301 	and.w	r3, r3, #1
 80026f2:	2b01      	cmp	r3, #1
 80026f4:	d11a      	bne.n	800272c <USART2_IRQHandler+0x5c>

		if((*arr_data[1])!=0){
 80026f6:	4b4a      	ldr	r3, [pc, #296]	; (8002820 <USART2_IRQHandler+0x150>)
 80026f8:	685b      	ldr	r3, [r3, #4]
 80026fa:	781b      	ldrb	r3, [r3, #0]
 80026fc:	2b00      	cmp	r3, #0
 80026fe:	d00d      	beq.n	800271c <USART2_IRQHandler+0x4c>
			USART_SEND(arr[1],(uint16_t*)arr_data[1]);
 8002700:	4b46      	ldr	r3, [pc, #280]	; (800281c <USART2_IRQHandler+0x14c>)
 8002702:	685a      	ldr	r2, [r3, #4]
 8002704:	4b46      	ldr	r3, [pc, #280]	; (8002820 <USART2_IRQHandler+0x150>)
 8002706:	685b      	ldr	r3, [r3, #4]
 8002708:	4619      	mov	r1, r3
 800270a:	4610      	mov	r0, r2
 800270c:	f7ff febe 	bl	800248c <USART_SEND>
			++arr_data[1];
 8002710:	4b43      	ldr	r3, [pc, #268]	; (8002820 <USART2_IRQHandler+0x150>)
 8002712:	685b      	ldr	r3, [r3, #4]
 8002714:	3301      	adds	r3, #1
 8002716:	4a42      	ldr	r2, [pc, #264]	; (8002820 <USART2_IRQHandler+0x150>)
 8002718:	6053      	str	r3, [r2, #4]
 800271a:	e007      	b.n	800272c <USART2_IRQHandler+0x5c>
		else {
			//Bit 7 TXEIE: TXE interrupt enable
			//This bit is set and cleared by software.
			//0: Interrupt is inhibited
			//1: A USART interrupt is generated whenever TXE=1 in the USART_SR register
			arr[1]->USART_CR1 &=~Transmit_data_register_empty;
 800271c:	4b3f      	ldr	r3, [pc, #252]	; (800281c <USART2_IRQHandler+0x14c>)
 800271e:	685b      	ldr	r3, [r3, #4]
 8002720:	68da      	ldr	r2, [r3, #12]
 8002722:	4b3e      	ldr	r3, [pc, #248]	; (800281c <USART2_IRQHandler+0x14c>)
 8002724:	685b      	ldr	r3, [r3, #4]
 8002726:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800272a:	60da      	str	r2, [r3, #12]

	}

	//===========================================================================

	if(  (( (arr[1]->USART_SR>>5) & 1) ==1)&&(( (arr[1]->USART_CR1 >>5) &1)==1) ){
 800272c:	4b3b      	ldr	r3, [pc, #236]	; (800281c <USART2_IRQHandler+0x14c>)
 800272e:	685b      	ldr	r3, [r3, #4]
 8002730:	681b      	ldr	r3, [r3, #0]
 8002732:	095b      	lsrs	r3, r3, #5
 8002734:	f003 0301 	and.w	r3, r3, #1
 8002738:	2b01      	cmp	r3, #1
 800273a:	d15b      	bne.n	80027f4 <USART2_IRQHandler+0x124>
 800273c:	4b37      	ldr	r3, [pc, #220]	; (800281c <USART2_IRQHandler+0x14c>)
 800273e:	685b      	ldr	r3, [r3, #4]
 8002740:	68db      	ldr	r3, [r3, #12]
 8002742:	095b      	lsrs	r3, r3, #5
 8002744:	f003 0301 	and.w	r3, r3, #1
 8002748:	2b01      	cmp	r3, #1
 800274a:	d153      	bne.n	80027f4 <USART2_IRQHandler+0x124>



		//	Bit 12 M: Word length
		//	This bit determines the word length. It is set or cleared by software.
		if(((arr[1]->USART_CR1>>12)&1) ==1){
 800274c:	4b33      	ldr	r3, [pc, #204]	; (800281c <USART2_IRQHandler+0x14c>)
 800274e:	685b      	ldr	r3, [r3, #4]
 8002750:	68db      	ldr	r3, [r3, #12]
 8002752:	0b1b      	lsrs	r3, r3, #12
 8002754:	f003 0301 	and.w	r3, r3, #1
 8002758:	2b01      	cmp	r3, #1
 800275a:	d117      	bne.n	800278c <USART2_IRQHandler+0xbc>
			//	1: 1 Start bit, 9 Data bits, n Stop bit

			if(((arr[1]->USART_CR1>>10)&1) ==1){
 800275c:	4b2f      	ldr	r3, [pc, #188]	; (800281c <USART2_IRQHandler+0x14c>)
 800275e:	685b      	ldr	r3, [r3, #4]
 8002760:	68db      	ldr	r3, [r3, #12]
 8002762:	0a9b      	lsrs	r3, r3, #10
 8002764:	f003 0301 	and.w	r3, r3, #1
 8002768:	2b01      	cmp	r3, #1
 800276a:	d108      	bne.n	800277e <USART2_IRQHandler+0xae>
				//Bit 10 PCE: Parity control enable
				// 1: Parity control enabled
				arr_data_RES[1] =(arr[1]->USART_DR & (uint16_t)0xff);
 800276c:	4b2b      	ldr	r3, [pc, #172]	; (800281c <USART2_IRQHandler+0x14c>)
 800276e:	685b      	ldr	r3, [r3, #4]
 8002770:	685b      	ldr	r3, [r3, #4]
 8002772:	b29b      	uxth	r3, r3
 8002774:	b2db      	uxtb	r3, r3
 8002776:	b29a      	uxth	r2, r3
 8002778:	4b2a      	ldr	r3, [pc, #168]	; (8002824 <USART2_IRQHandler+0x154>)
 800277a:	805a      	strh	r2, [r3, #2]
 800277c:	e020      	b.n	80027c0 <USART2_IRQHandler+0xf0>
			}
			else{
				//0: Parity control disabled
				arr_data_RES[1]=arr[1]->USART_DR;
 800277e:	4b27      	ldr	r3, [pc, #156]	; (800281c <USART2_IRQHandler+0x14c>)
 8002780:	685b      	ldr	r3, [r3, #4]
 8002782:	685b      	ldr	r3, [r3, #4]
 8002784:	b29a      	uxth	r2, r3
 8002786:	4b27      	ldr	r3, [pc, #156]	; (8002824 <USART2_IRQHandler+0x154>)
 8002788:	805a      	strh	r2, [r3, #2]
 800278a:	e019      	b.n	80027c0 <USART2_IRQHandler+0xf0>
			}
		}
		else{
			//	0: 1 Start bit, 8 Data bits, n Stop bit

			if(((arr[1]->USART_CR1>>10)&1) ==1){
 800278c:	4b23      	ldr	r3, [pc, #140]	; (800281c <USART2_IRQHandler+0x14c>)
 800278e:	685b      	ldr	r3, [r3, #4]
 8002790:	68db      	ldr	r3, [r3, #12]
 8002792:	0a9b      	lsrs	r3, r3, #10
 8002794:	f003 0301 	and.w	r3, r3, #1
 8002798:	2b01      	cmp	r3, #1
 800279a:	d109      	bne.n	80027b0 <USART2_IRQHandler+0xe0>
				//Bit 10 PCE: Parity control enable
				// 1: Parity control enabled
				arr_data_RES[1] =(arr[1]->USART_DR & (uint16_t)0x7f);
 800279c:	4b1f      	ldr	r3, [pc, #124]	; (800281c <USART2_IRQHandler+0x14c>)
 800279e:	685b      	ldr	r3, [r3, #4]
 80027a0:	685b      	ldr	r3, [r3, #4]
 80027a2:	b29b      	uxth	r3, r3
 80027a4:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80027a8:	b29a      	uxth	r2, r3
 80027aa:	4b1e      	ldr	r3, [pc, #120]	; (8002824 <USART2_IRQHandler+0x154>)
 80027ac:	805a      	strh	r2, [r3, #2]
 80027ae:	e007      	b.n	80027c0 <USART2_IRQHandler+0xf0>
			}
			else{
				//0: Parity control disabled
				arr_data_RES[1] =(arr[1]->USART_DR & (uint16_t)0xff);
 80027b0:	4b1a      	ldr	r3, [pc, #104]	; (800281c <USART2_IRQHandler+0x14c>)
 80027b2:	685b      	ldr	r3, [r3, #4]
 80027b4:	685b      	ldr	r3, [r3, #4]
 80027b6:	b29b      	uxth	r3, r3
 80027b8:	b2db      	uxtb	r3, r3
 80027ba:	b29a      	uxth	r2, r3
 80027bc:	4b19      	ldr	r3, [pc, #100]	; (8002824 <USART2_IRQHandler+0x154>)
 80027be:	805a      	strh	r2, [r3, #2]
			}
		}
		//pinwrite(GPIOB, pin1,HIGH);

		GP_reseve_Callback[1]();
 80027c0:	4b19      	ldr	r3, [pc, #100]	; (8002828 <USART2_IRQHandler+0x158>)
 80027c2:	685b      	ldr	r3, [r3, #4]
 80027c4:	4798      	blx	r3
		//pinwrite(GPIOB, pin1,LOW);
		arr[1]->USART_SR &=~(1<<5);//clear
 80027c6:	4b15      	ldr	r3, [pc, #84]	; (800281c <USART2_IRQHandler+0x14c>)
 80027c8:	685b      	ldr	r3, [r3, #4]
 80027ca:	681a      	ldr	r2, [r3, #0]
 80027cc:	4b13      	ldr	r3, [pc, #76]	; (800281c <USART2_IRQHandler+0x14c>)
 80027ce:	685b      	ldr	r3, [r3, #4]
 80027d0:	f022 0220 	bic.w	r2, r2, #32
 80027d4:	601a      	str	r2, [r3, #0]
		//arr[1]->USART_CR1 &=~Received_data_ready_to_be_read;
		if(((arr[1]->USART_SR>>3)&1)|1){
 80027d6:	4b11      	ldr	r3, [pc, #68]	; (800281c <USART2_IRQHandler+0x14c>)
 80027d8:	685b      	ldr	r3, [r3, #4]
 80027da:	681b      	ldr	r3, [r3, #0]
			volatile uint16_t d =USART2->USART_DR;
 80027dc:	4b13      	ldr	r3, [pc, #76]	; (800282c <USART2_IRQHandler+0x15c>)
 80027de:	685b      	ldr	r3, [r3, #4]
 80027e0:	b29b      	uxth	r3, r3
 80027e2:	80fb      	strh	r3, [r7, #6]
			arr[1]->USART_SR &=~(1<<5);
 80027e4:	4b0d      	ldr	r3, [pc, #52]	; (800281c <USART2_IRQHandler+0x14c>)
 80027e6:	685b      	ldr	r3, [r3, #4]
 80027e8:	681a      	ldr	r2, [r3, #0]
 80027ea:	4b0c      	ldr	r3, [pc, #48]	; (800281c <USART2_IRQHandler+0x14c>)
 80027ec:	685b      	ldr	r3, [r3, #4]
 80027ee:	f022 0220 	bic.w	r2, r2, #32
 80027f2:	601a      	str	r2, [r3, #0]
		}
	}
	if(((arr[1]->USART_SR>>3)&1)|1){
 80027f4:	4b09      	ldr	r3, [pc, #36]	; (800281c <USART2_IRQHandler+0x14c>)
 80027f6:	685b      	ldr	r3, [r3, #4]
 80027f8:	681b      	ldr	r3, [r3, #0]
		volatile uint16_t w =USART2->USART_DR;
 80027fa:	4b0c      	ldr	r3, [pc, #48]	; (800282c <USART2_IRQHandler+0x15c>)
 80027fc:	685b      	ldr	r3, [r3, #4]
 80027fe:	b29b      	uxth	r3, r3
 8002800:	80bb      	strh	r3, [r7, #4]
		arr[1]->USART_SR &=~(1<<5);
 8002802:	4b06      	ldr	r3, [pc, #24]	; (800281c <USART2_IRQHandler+0x14c>)
 8002804:	685b      	ldr	r3, [r3, #4]
 8002806:	681a      	ldr	r2, [r3, #0]
 8002808:	4b04      	ldr	r3, [pc, #16]	; (800281c <USART2_IRQHandler+0x14c>)
 800280a:	685b      	ldr	r3, [r3, #4]
 800280c:	f022 0220 	bic.w	r2, r2, #32
 8002810:	601a      	str	r2, [r3, #0]
	}
	//	_delay_ms(500);
	//	pinwrite(GPIOB, pin1,LOW);
}
 8002812:	bf00      	nop
 8002814:	3708      	adds	r7, #8
 8002816:	46bd      	mov	sp, r7
 8002818:	bd80      	pop	{r7, pc}
 800281a:	bf00      	nop
 800281c:	200002b0 	.word	0x200002b0
 8002820:	200002c4 	.word	0x200002c4
 8002824:	200002bc 	.word	0x200002bc
 8002828:	200002d0 	.word	0x200002d0
 800282c:	40004400 	.word	0x40004400

08002830 <USART3_IRQHandler>:
void USART3_IRQHandler(){
 8002830:	b580      	push	{r7, lr}
 8002832:	b082      	sub	sp, #8
 8002834:	af00      	add	r7, sp, #0
	//pinwrite(GPIOB, pin1,HIGH);
	//arr[2]->USART_SR &=~(1<<6);
	if(  (( (arr[2]->USART_SR>>7) & 1) ==1)&&(((arr[2]->USART_CR1 >>7)&1)==1) ){   //Transmit data register empty
 8002836:	4b51      	ldr	r3, [pc, #324]	; (800297c <USART3_IRQHandler+0x14c>)
 8002838:	689b      	ldr	r3, [r3, #8]
 800283a:	681b      	ldr	r3, [r3, #0]
 800283c:	09db      	lsrs	r3, r3, #7
 800283e:	f003 0301 	and.w	r3, r3, #1
 8002842:	2b01      	cmp	r3, #1
 8002844:	d122      	bne.n	800288c <USART3_IRQHandler+0x5c>
 8002846:	4b4d      	ldr	r3, [pc, #308]	; (800297c <USART3_IRQHandler+0x14c>)
 8002848:	689b      	ldr	r3, [r3, #8]
 800284a:	68db      	ldr	r3, [r3, #12]
 800284c:	09db      	lsrs	r3, r3, #7
 800284e:	f003 0301 	and.w	r3, r3, #1
 8002852:	2b01      	cmp	r3, #1
 8002854:	d11a      	bne.n	800288c <USART3_IRQHandler+0x5c>

		if((*arr_data[2])!=0){
 8002856:	4b4a      	ldr	r3, [pc, #296]	; (8002980 <USART3_IRQHandler+0x150>)
 8002858:	689b      	ldr	r3, [r3, #8]
 800285a:	781b      	ldrb	r3, [r3, #0]
 800285c:	2b00      	cmp	r3, #0
 800285e:	d00d      	beq.n	800287c <USART3_IRQHandler+0x4c>
			USART_SEND(arr[2],(uint16_t*)arr_data[2]);
 8002860:	4b46      	ldr	r3, [pc, #280]	; (800297c <USART3_IRQHandler+0x14c>)
 8002862:	689a      	ldr	r2, [r3, #8]
 8002864:	4b46      	ldr	r3, [pc, #280]	; (8002980 <USART3_IRQHandler+0x150>)
 8002866:	689b      	ldr	r3, [r3, #8]
 8002868:	4619      	mov	r1, r3
 800286a:	4610      	mov	r0, r2
 800286c:	f7ff fe0e 	bl	800248c <USART_SEND>
			++arr_data[2];
 8002870:	4b43      	ldr	r3, [pc, #268]	; (8002980 <USART3_IRQHandler+0x150>)
 8002872:	689b      	ldr	r3, [r3, #8]
 8002874:	3301      	adds	r3, #1
 8002876:	4a42      	ldr	r2, [pc, #264]	; (8002980 <USART3_IRQHandler+0x150>)
 8002878:	6093      	str	r3, [r2, #8]
 800287a:	e007      	b.n	800288c <USART3_IRQHandler+0x5c>
		else {
			//Bit 7 TXEIE: TXE interrupt enable
			//This bit is set and cleared by software.
			//0: Interrupt is inhibited
			//1: A USART interrupt is generated whenever TXE=1 in the USART_SR register
			arr[2]->USART_CR1 &=~Transmit_data_register_empty;
 800287c:	4b3f      	ldr	r3, [pc, #252]	; (800297c <USART3_IRQHandler+0x14c>)
 800287e:	689b      	ldr	r3, [r3, #8]
 8002880:	68da      	ldr	r2, [r3, #12]
 8002882:	4b3e      	ldr	r3, [pc, #248]	; (800297c <USART3_IRQHandler+0x14c>)
 8002884:	689b      	ldr	r3, [r3, #8]
 8002886:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800288a:	60da      	str	r2, [r3, #12]

	}

	//===========================================================================

	if(  (( (arr[2]->USART_SR>>5) & 1) ==1)&&(( (arr[2]->USART_CR1 >>5) &1)==1) ){
 800288c:	4b3b      	ldr	r3, [pc, #236]	; (800297c <USART3_IRQHandler+0x14c>)
 800288e:	689b      	ldr	r3, [r3, #8]
 8002890:	681b      	ldr	r3, [r3, #0]
 8002892:	095b      	lsrs	r3, r3, #5
 8002894:	f003 0301 	and.w	r3, r3, #1
 8002898:	2b01      	cmp	r3, #1
 800289a:	d15b      	bne.n	8002954 <USART3_IRQHandler+0x124>
 800289c:	4b37      	ldr	r3, [pc, #220]	; (800297c <USART3_IRQHandler+0x14c>)
 800289e:	689b      	ldr	r3, [r3, #8]
 80028a0:	68db      	ldr	r3, [r3, #12]
 80028a2:	095b      	lsrs	r3, r3, #5
 80028a4:	f003 0301 	and.w	r3, r3, #1
 80028a8:	2b01      	cmp	r3, #1
 80028aa:	d153      	bne.n	8002954 <USART3_IRQHandler+0x124>



		//	Bit 12 M: Word length
		//	This bit determines the word length. It is set or cleared by software.
		if(((arr[2]->USART_CR1>>12)&1) ==1){
 80028ac:	4b33      	ldr	r3, [pc, #204]	; (800297c <USART3_IRQHandler+0x14c>)
 80028ae:	689b      	ldr	r3, [r3, #8]
 80028b0:	68db      	ldr	r3, [r3, #12]
 80028b2:	0b1b      	lsrs	r3, r3, #12
 80028b4:	f003 0301 	and.w	r3, r3, #1
 80028b8:	2b01      	cmp	r3, #1
 80028ba:	d117      	bne.n	80028ec <USART3_IRQHandler+0xbc>
			//	1: 1 Start bit, 9 Data bits, n Stop bit

			if(((arr[2]->USART_CR1>>10)&1) ==1){
 80028bc:	4b2f      	ldr	r3, [pc, #188]	; (800297c <USART3_IRQHandler+0x14c>)
 80028be:	689b      	ldr	r3, [r3, #8]
 80028c0:	68db      	ldr	r3, [r3, #12]
 80028c2:	0a9b      	lsrs	r3, r3, #10
 80028c4:	f003 0301 	and.w	r3, r3, #1
 80028c8:	2b01      	cmp	r3, #1
 80028ca:	d108      	bne.n	80028de <USART3_IRQHandler+0xae>
				//Bit 10 PCE: Parity control enable
				// 1: Parity control enabled
				arr_data_RES[2] =(arr[2]->USART_DR & (uint16_t)0xff);
 80028cc:	4b2b      	ldr	r3, [pc, #172]	; (800297c <USART3_IRQHandler+0x14c>)
 80028ce:	689b      	ldr	r3, [r3, #8]
 80028d0:	685b      	ldr	r3, [r3, #4]
 80028d2:	b29b      	uxth	r3, r3
 80028d4:	b2db      	uxtb	r3, r3
 80028d6:	b29a      	uxth	r2, r3
 80028d8:	4b2a      	ldr	r3, [pc, #168]	; (8002984 <USART3_IRQHandler+0x154>)
 80028da:	809a      	strh	r2, [r3, #4]
 80028dc:	e020      	b.n	8002920 <USART3_IRQHandler+0xf0>
			}
			else{
				//0: Parity control disabled
				arr_data_RES[2]=arr[2]->USART_DR;
 80028de:	4b27      	ldr	r3, [pc, #156]	; (800297c <USART3_IRQHandler+0x14c>)
 80028e0:	689b      	ldr	r3, [r3, #8]
 80028e2:	685b      	ldr	r3, [r3, #4]
 80028e4:	b29a      	uxth	r2, r3
 80028e6:	4b27      	ldr	r3, [pc, #156]	; (8002984 <USART3_IRQHandler+0x154>)
 80028e8:	809a      	strh	r2, [r3, #4]
 80028ea:	e019      	b.n	8002920 <USART3_IRQHandler+0xf0>
			}
		}
		else{
			//	0: 1 Start bit, 8 Data bits, n Stop bit

			if(((arr[2]->USART_CR1>>10)&1) ==1){
 80028ec:	4b23      	ldr	r3, [pc, #140]	; (800297c <USART3_IRQHandler+0x14c>)
 80028ee:	689b      	ldr	r3, [r3, #8]
 80028f0:	68db      	ldr	r3, [r3, #12]
 80028f2:	0a9b      	lsrs	r3, r3, #10
 80028f4:	f003 0301 	and.w	r3, r3, #1
 80028f8:	2b01      	cmp	r3, #1
 80028fa:	d109      	bne.n	8002910 <USART3_IRQHandler+0xe0>
				//Bit 10 PCE: Parity control enable
				// 1: Parity control enabled
				arr_data_RES[2] =(arr[2]->USART_DR & (uint16_t)0x7f);
 80028fc:	4b1f      	ldr	r3, [pc, #124]	; (800297c <USART3_IRQHandler+0x14c>)
 80028fe:	689b      	ldr	r3, [r3, #8]
 8002900:	685b      	ldr	r3, [r3, #4]
 8002902:	b29b      	uxth	r3, r3
 8002904:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8002908:	b29a      	uxth	r2, r3
 800290a:	4b1e      	ldr	r3, [pc, #120]	; (8002984 <USART3_IRQHandler+0x154>)
 800290c:	809a      	strh	r2, [r3, #4]
 800290e:	e007      	b.n	8002920 <USART3_IRQHandler+0xf0>
			}
			else{
				//0: Parity control disabled
				arr_data_RES[2] =(arr[2]->USART_DR & (uint16_t)0xff);
 8002910:	4b1a      	ldr	r3, [pc, #104]	; (800297c <USART3_IRQHandler+0x14c>)
 8002912:	689b      	ldr	r3, [r3, #8]
 8002914:	685b      	ldr	r3, [r3, #4]
 8002916:	b29b      	uxth	r3, r3
 8002918:	b2db      	uxtb	r3, r3
 800291a:	b29a      	uxth	r2, r3
 800291c:	4b19      	ldr	r3, [pc, #100]	; (8002984 <USART3_IRQHandler+0x154>)
 800291e:	809a      	strh	r2, [r3, #4]
			}
		}
		//pinwrite(GPIOB, pin1,HIGH);

		GP_reseve_Callback[2]();
 8002920:	4b19      	ldr	r3, [pc, #100]	; (8002988 <USART3_IRQHandler+0x158>)
 8002922:	689b      	ldr	r3, [r3, #8]
 8002924:	4798      	blx	r3
		//pinwrite(GPIOB, pin1,LOW);
		arr[2]->USART_SR &=~(1<<5);//clear
 8002926:	4b15      	ldr	r3, [pc, #84]	; (800297c <USART3_IRQHandler+0x14c>)
 8002928:	689b      	ldr	r3, [r3, #8]
 800292a:	681a      	ldr	r2, [r3, #0]
 800292c:	4b13      	ldr	r3, [pc, #76]	; (800297c <USART3_IRQHandler+0x14c>)
 800292e:	689b      	ldr	r3, [r3, #8]
 8002930:	f022 0220 	bic.w	r2, r2, #32
 8002934:	601a      	str	r2, [r3, #0]
		//arr[2]->USART_CR1 &=~Received_data_ready_to_be_read;
		if(((arr[2]->USART_SR>>3)&1)|1){
 8002936:	4b11      	ldr	r3, [pc, #68]	; (800297c <USART3_IRQHandler+0x14c>)
 8002938:	689b      	ldr	r3, [r3, #8]
 800293a:	681b      	ldr	r3, [r3, #0]
			volatile uint16_t d =USART3->USART_DR;
 800293c:	4b13      	ldr	r3, [pc, #76]	; (800298c <USART3_IRQHandler+0x15c>)
 800293e:	685b      	ldr	r3, [r3, #4]
 8002940:	b29b      	uxth	r3, r3
 8002942:	80fb      	strh	r3, [r7, #6]
			arr[2]->USART_SR &=~(1<<5);
 8002944:	4b0d      	ldr	r3, [pc, #52]	; (800297c <USART3_IRQHandler+0x14c>)
 8002946:	689b      	ldr	r3, [r3, #8]
 8002948:	681a      	ldr	r2, [r3, #0]
 800294a:	4b0c      	ldr	r3, [pc, #48]	; (800297c <USART3_IRQHandler+0x14c>)
 800294c:	689b      	ldr	r3, [r3, #8]
 800294e:	f022 0220 	bic.w	r2, r2, #32
 8002952:	601a      	str	r2, [r3, #0]
		}
	}
	if(((arr[2]->USART_SR>>3)&1)|1){
 8002954:	4b09      	ldr	r3, [pc, #36]	; (800297c <USART3_IRQHandler+0x14c>)
 8002956:	689b      	ldr	r3, [r3, #8]
 8002958:	681b      	ldr	r3, [r3, #0]
		volatile uint16_t w =USART3->USART_DR;
 800295a:	4b0c      	ldr	r3, [pc, #48]	; (800298c <USART3_IRQHandler+0x15c>)
 800295c:	685b      	ldr	r3, [r3, #4]
 800295e:	b29b      	uxth	r3, r3
 8002960:	80bb      	strh	r3, [r7, #4]
		arr[2]->USART_SR &=~(1<<5);
 8002962:	4b06      	ldr	r3, [pc, #24]	; (800297c <USART3_IRQHandler+0x14c>)
 8002964:	689b      	ldr	r3, [r3, #8]
 8002966:	681a      	ldr	r2, [r3, #0]
 8002968:	4b04      	ldr	r3, [pc, #16]	; (800297c <USART3_IRQHandler+0x14c>)
 800296a:	689b      	ldr	r3, [r3, #8]
 800296c:	f022 0220 	bic.w	r2, r2, #32
 8002970:	601a      	str	r2, [r3, #0]
	}
	//	_delay_ms(500);
	//	pinwrite(GPIOB, pin1,LOW);
}
 8002972:	bf00      	nop
 8002974:	3708      	adds	r7, #8
 8002976:	46bd      	mov	sp, r7
 8002978:	bd80      	pop	{r7, pc}
 800297a:	bf00      	nop
 800297c:	200002b0 	.word	0x200002b0
 8002980:	200002c4 	.word	0x200002c4
 8002984:	200002bc 	.word	0x200002bc
 8002988:	200002d0 	.word	0x200002d0
 800298c:	40004800 	.word	0x40004800

08002990 <main>:
double degrees_to_radians(double degrees);
//*******************************************************
//======================= -main- ========================
//*******************************************************
int main(void)
{
 8002990:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002994:	b085      	sub	sp, #20
 8002996:	af04      	add	r7, sp, #16
	delay(200, U_ms,8000000);
 8002998:	4a35      	ldr	r2, [pc, #212]	; (8002a70 <main+0xe0>)
 800299a:	2100      	movs	r1, #0
 800299c:	4835      	ldr	r0, [pc, #212]	; (8002a74 <main+0xe4>)
 800299e:	f7ff f8d5 	bl	8001b4c <delay>
	I2C_LCD_Init(I2C1,address);
 80029a2:	213f      	movs	r1, #63	; 0x3f
 80029a4:	4834      	ldr	r0, [pc, #208]	; (8002a78 <main+0xe8>)
 80029a6:	f7fe fdd9 	bl	800155c <I2C_LCD_Init>
	I2C_LCD_write_string(I2C1,"MLS,SLM",address);
 80029aa:	223f      	movs	r2, #63	; 0x3f
 80029ac:	4933      	ldr	r1, [pc, #204]	; (8002a7c <main+0xec>)
 80029ae:	4832      	ldr	r0, [pc, #200]	; (8002a78 <main+0xe8>)
 80029b0:	f7fe fea5 	bl	80016fe <I2C_LCD_write_string>
	I2C_LCD_setcerser(I2C1, address,1,0);
 80029b4:	2300      	movs	r3, #0
 80029b6:	2201      	movs	r2, #1
 80029b8:	213f      	movs	r1, #63	; 0x3f
 80029ba:	482f      	ldr	r0, [pc, #188]	; (8002a78 <main+0xe8>)
 80029bc:	f7fe feb9 	bl	8001732 <I2C_LCD_setcerser>
	USART_INIT(USART1, mode_RX_TX_ENABLE, word_length_8, stop_bits_1, baud_rate_9600, parity_none,clk);
 80029c0:	4b2b      	ldr	r3, [pc, #172]	; (8002a70 <main+0xe0>)
 80029c2:	9302      	str	r3, [sp, #8]
 80029c4:	2300      	movs	r3, #0
 80029c6:	9301      	str	r3, [sp, #4]
 80029c8:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 80029cc:	9300      	str	r3, [sp, #0]
 80029ce:	2300      	movs	r3, #0
 80029d0:	2200      	movs	r2, #0
 80029d2:	210c      	movs	r1, #12
 80029d4:	482a      	ldr	r0, [pc, #168]	; (8002a80 <main+0xf0>)
 80029d6:	f7ff fc93 	bl	8002300 <USART_INIT>
	USART_READ_INTERRUPT_EN(USART1, read_string);
 80029da:	492a      	ldr	r1, [pc, #168]	; (8002a84 <main+0xf4>)
 80029dc:	4828      	ldr	r0, [pc, #160]	; (8002a80 <main+0xf0>)
 80029de:	f7ff fd9d 	bl	800251c <USART_READ_INTERRUPT_EN>
	pinmode(GPIOC, pin13, GPIO_MODE_OUTPUT_push_pull_Speed2);
 80029e2:	2202      	movs	r2, #2
 80029e4:	210d      	movs	r1, #13
 80029e6:	4828      	ldr	r0, [pc, #160]	; (8002a88 <main+0xf8>)
 80029e8:	f7fe fc1e 	bl	8001228 <pinmode>
	pinwrite(GPIOC, pin13,LOW);
 80029ec:	2200      	movs	r2, #0
 80029ee:	210d      	movs	r1, #13
 80029f0:	4825      	ldr	r0, [pc, #148]	; (8002a88 <main+0xf8>)
 80029f2:	f7fe fcfb 	bl	80013ec <pinwrite>
	while(1){

		GET_LOCATION();
 80029f6:	f000 f8e5 	bl	8002bc4 <GET_LOCATION>
		distance = haversine(Decimal_degrees_Latitude, Decimal_degrees_Longitude, lat_center, lon_Center);
 80029fa:	4b24      	ldr	r3, [pc, #144]	; (8002a8c <main+0xfc>)
 80029fc:	681b      	ldr	r3, [r3, #0]
 80029fe:	4618      	mov	r0, r3
 8002a00:	f7fd fd22 	bl	8000448 <__aeabi_f2d>
 8002a04:	4605      	mov	r5, r0
 8002a06:	460e      	mov	r6, r1
 8002a08:	4b21      	ldr	r3, [pc, #132]	; (8002a90 <main+0x100>)
 8002a0a:	681b      	ldr	r3, [r3, #0]
 8002a0c:	4618      	mov	r0, r3
 8002a0e:	f7fd fd1b 	bl	8000448 <__aeabi_f2d>
 8002a12:	4680      	mov	r8, r0
 8002a14:	4689      	mov	r9, r1
 8002a16:	4b1f      	ldr	r3, [pc, #124]	; (8002a94 <main+0x104>)
 8002a18:	cb18      	ldmia	r3, {r3, r4}
 8002a1a:	4a1f      	ldr	r2, [pc, #124]	; (8002a98 <main+0x108>)
 8002a1c:	e9d2 1200 	ldrd	r1, r2, [r2]
 8002a20:	e9cd 1202 	strd	r1, r2, [sp, #8]
 8002a24:	e9cd 3400 	strd	r3, r4, [sp]
 8002a28:	4642      	mov	r2, r8
 8002a2a:	464b      	mov	r3, r9
 8002a2c:	4628      	mov	r0, r5
 8002a2e:	4631      	mov	r1, r6
 8002a30:	f000 f9ae 	bl	8002d90 <haversine>
 8002a34:	4603      	mov	r3, r0
 8002a36:	460c      	mov	r4, r1
 8002a38:	4a18      	ldr	r2, [pc, #96]	; (8002a9c <main+0x10c>)
 8002a3a:	e9c2 3400 	strd	r3, r4, [r2]
		Display();
 8002a3e:	f000 fa8b 	bl	8002f58 <Display>
		if(distance>1486){
 8002a42:	4b16      	ldr	r3, [pc, #88]	; (8002a9c <main+0x10c>)
 8002a44:	e9d3 0100 	ldrd	r0, r1, [r3]
 8002a48:	a307      	add	r3, pc, #28	; (adr r3, 8002a68 <main+0xd8>)
 8002a4a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002a4e:	f7fd ffe3 	bl	8000a18 <__aeabi_dcmpgt>
 8002a52:	4603      	mov	r3, r0
 8002a54:	2b00      	cmp	r3, #0
 8002a56:	d003      	beq.n	8002a60 <main+0xd0>
			//action
			action_on=1;
 8002a58:	4b11      	ldr	r3, [pc, #68]	; (8002aa0 <main+0x110>)
 8002a5a:	2201      	movs	r2, #1
 8002a5c:	701a      	strb	r2, [r3, #0]
 8002a5e:	e7ca      	b.n	80029f6 <main+0x66>
		}
		else{
			action_on=0;
 8002a60:	4b0f      	ldr	r3, [pc, #60]	; (8002aa0 <main+0x110>)
 8002a62:	2200      	movs	r2, #0
 8002a64:	701a      	strb	r2, [r3, #0]
	while(1){
 8002a66:	e7c6      	b.n	80029f6 <main+0x66>
 8002a68:	00000000 	.word	0x00000000
 8002a6c:	40973800 	.word	0x40973800
 8002a70:	007a1200 	.word	0x007a1200
 8002a74:	43480000 	.word	0x43480000
 8002a78:	40005400 	.word	0x40005400
 8002a7c:	080074e0 	.word	0x080074e0
 8002a80:	40013800 	.word	0x40013800
 8002a84:	08002aa5 	.word	0x08002aa5
 8002a88:	40011000 	.word	0x40011000
 8002a8c:	20000368 	.word	0x20000368
 8002a90:	200002e8 	.word	0x200002e8
 8002a94:	20000020 	.word	0x20000020
 8002a98:	20000028 	.word	0x20000028
 8002a9c:	20000328 	.word	0x20000328
 8002aa0:	20000235 	.word	0x20000235

08002aa4 <read_string>:
	}
}
//*******************************************************
//==================== -READ_DATA- ======================
//*******************************************************
void read_string (){
 8002aa4:	b580      	push	{r7, lr}
 8002aa6:	af00      	add	r7, sp, #0

	USART_READ(USART1,&ch);
 8002aa8:	493c      	ldr	r1, [pc, #240]	; (8002b9c <read_string+0xf8>)
 8002aaa:	483d      	ldr	r0, [pc, #244]	; (8002ba0 <read_string+0xfc>)
 8002aac:	f7ff fd0c 	bl	80024c8 <USART_READ>
	if(data_flage==0){
 8002ab0:	4b3c      	ldr	r3, [pc, #240]	; (8002ba4 <read_string+0x100>)
 8002ab2:	781b      	ldrb	r3, [r3, #0]
 8002ab4:	2b00      	cmp	r3, #0
 8002ab6:	d140      	bne.n	8002b3a <read_string+0x96>
		if(ch=='$'){
 8002ab8:	4b38      	ldr	r3, [pc, #224]	; (8002b9c <read_string+0xf8>)
 8002aba:	781b      	ldrb	r3, [r3, #0]
 8002abc:	2b24      	cmp	r3, #36	; 0x24
 8002abe:	d10a      	bne.n	8002ad6 <read_string+0x32>
			serial_flag=1;
 8002ac0:	4b39      	ldr	r3, [pc, #228]	; (8002ba8 <read_string+0x104>)
 8002ac2:	2201      	movs	r2, #1
 8002ac4:	701a      	strb	r2, [r3, #0]
			index1=0;
 8002ac6:	4b39      	ldr	r3, [pc, #228]	; (8002bac <read_string+0x108>)
 8002ac8:	2200      	movs	r2, #0
 8002aca:	701a      	strb	r2, [r3, #0]
			pinwrite(GPIOC, pin13,LOW);
 8002acc:	2200      	movs	r2, #0
 8002ace:	210d      	movs	r1, #13
 8002ad0:	4837      	ldr	r0, [pc, #220]	; (8002bb0 <read_string+0x10c>)
 8002ad2:	f7fe fc8b 	bl	80013ec <pinwrite>
		}

		if(serial_flag==1){
 8002ad6:	4b34      	ldr	r3, [pc, #208]	; (8002ba8 <read_string+0x104>)
 8002ad8:	781b      	ldrb	r3, [r3, #0]
 8002ada:	2b01      	cmp	r3, #1
 8002adc:	d15b      	bne.n	8002b96 <read_string+0xf2>
			string_data[index1]=ch;
 8002ade:	4b33      	ldr	r3, [pc, #204]	; (8002bac <read_string+0x108>)
 8002ae0:	781b      	ldrb	r3, [r3, #0]
 8002ae2:	461a      	mov	r2, r3
 8002ae4:	4b2d      	ldr	r3, [pc, #180]	; (8002b9c <read_string+0xf8>)
 8002ae6:	7819      	ldrb	r1, [r3, #0]
 8002ae8:	4b32      	ldr	r3, [pc, #200]	; (8002bb4 <read_string+0x110>)
 8002aea:	5499      	strb	r1, [r3, r2]
			index1++;
 8002aec:	4b2f      	ldr	r3, [pc, #188]	; (8002bac <read_string+0x108>)
 8002aee:	781b      	ldrb	r3, [r3, #0]
 8002af0:	3301      	adds	r3, #1
 8002af2:	b2da      	uxtb	r2, r3
 8002af4:	4b2d      	ldr	r3, [pc, #180]	; (8002bac <read_string+0x108>)
 8002af6:	701a      	strb	r2, [r3, #0]

			if(ch==','){
 8002af8:	4b28      	ldr	r3, [pc, #160]	; (8002b9c <read_string+0xf8>)
 8002afa:	781b      	ldrb	r3, [r3, #0]
 8002afc:	2b2c      	cmp	r3, #44	; 0x2c
 8002afe:	d14a      	bne.n	8002b96 <read_string+0xf2>
				string_data[index1]=0;
 8002b00:	4b2a      	ldr	r3, [pc, #168]	; (8002bac <read_string+0x108>)
 8002b02:	781b      	ldrb	r3, [r3, #0]
 8002b04:	461a      	mov	r2, r3
 8002b06:	4b2b      	ldr	r3, [pc, #172]	; (8002bb4 <read_string+0x110>)
 8002b08:	2100      	movs	r1, #0
 8002b0a:	5499      	strb	r1, [r3, r2]
				if(strncmp(string_data,"$GPRMC,",7)==0){
 8002b0c:	2207      	movs	r2, #7
 8002b0e:	492a      	ldr	r1, [pc, #168]	; (8002bb8 <read_string+0x114>)
 8002b10:	4828      	ldr	r0, [pc, #160]	; (8002bb4 <read_string+0x110>)
 8002b12:	f000 fb37 	bl	8003184 <strncmp>
 8002b16:	4603      	mov	r3, r0
 8002b18:	2b00      	cmp	r3, #0
 8002b1a:	d107      	bne.n	8002b2c <read_string+0x88>
					pinwrite(GPIOC, pin13,HIGH);
 8002b1c:	2201      	movs	r2, #1
 8002b1e:	210d      	movs	r1, #13
 8002b20:	4823      	ldr	r0, [pc, #140]	; (8002bb0 <read_string+0x10c>)
 8002b22:	f7fe fc63 	bl	80013ec <pinwrite>
					data_flage=1;
 8002b26:	4b1f      	ldr	r3, [pc, #124]	; (8002ba4 <read_string+0x100>)
 8002b28:	2201      	movs	r2, #1
 8002b2a:	701a      	strb	r2, [r3, #0]
				}
				serial_flag=0;
 8002b2c:	4b1e      	ldr	r3, [pc, #120]	; (8002ba8 <read_string+0x104>)
 8002b2e:	2200      	movs	r2, #0
 8002b30:	701a      	strb	r2, [r3, #0]
				index1=0;
 8002b32:	4b1e      	ldr	r3, [pc, #120]	; (8002bac <read_string+0x108>)
 8002b34:	2200      	movs	r2, #0
 8002b36:	701a      	strb	r2, [r3, #0]
				data_flage=0;
			}
		}
	}

}
 8002b38:	e02d      	b.n	8002b96 <read_string+0xf2>
		string_data[index1]=ch;
 8002b3a:	4b1c      	ldr	r3, [pc, #112]	; (8002bac <read_string+0x108>)
 8002b3c:	781b      	ldrb	r3, [r3, #0]
 8002b3e:	461a      	mov	r2, r3
 8002b40:	4b16      	ldr	r3, [pc, #88]	; (8002b9c <read_string+0xf8>)
 8002b42:	7819      	ldrb	r1, [r3, #0]
 8002b44:	4b1b      	ldr	r3, [pc, #108]	; (8002bb4 <read_string+0x110>)
 8002b46:	5499      	strb	r1, [r3, r2]
		index1++;
 8002b48:	4b18      	ldr	r3, [pc, #96]	; (8002bac <read_string+0x108>)
 8002b4a:	781b      	ldrb	r3, [r3, #0]
 8002b4c:	3301      	adds	r3, #1
 8002b4e:	b2da      	uxtb	r2, r3
 8002b50:	4b16      	ldr	r3, [pc, #88]	; (8002bac <read_string+0x108>)
 8002b52:	701a      	strb	r2, [r3, #0]
		if(ch==','){
 8002b54:	4b11      	ldr	r3, [pc, #68]	; (8002b9c <read_string+0xf8>)
 8002b56:	781b      	ldrb	r3, [r3, #0]
 8002b58:	2b2c      	cmp	r3, #44	; 0x2c
 8002b5a:	d11c      	bne.n	8002b96 <read_string+0xf2>
			COM_COUNT++;
 8002b5c:	4b17      	ldr	r3, [pc, #92]	; (8002bbc <read_string+0x118>)
 8002b5e:	781b      	ldrb	r3, [r3, #0]
 8002b60:	3301      	adds	r3, #1
 8002b62:	b2da      	uxtb	r2, r3
 8002b64:	4b15      	ldr	r3, [pc, #84]	; (8002bbc <read_string+0x118>)
 8002b66:	701a      	strb	r2, [r3, #0]
			if(COM_COUNT==5){
 8002b68:	4b14      	ldr	r3, [pc, #80]	; (8002bbc <read_string+0x118>)
 8002b6a:	781b      	ldrb	r3, [r3, #0]
 8002b6c:	2b05      	cmp	r3, #5
 8002b6e:	d112      	bne.n	8002b96 <read_string+0xf2>
				string_data[index1]=0;
 8002b70:	4b0e      	ldr	r3, [pc, #56]	; (8002bac <read_string+0x108>)
 8002b72:	781b      	ldrb	r3, [r3, #0]
 8002b74:	461a      	mov	r2, r3
 8002b76:	4b0f      	ldr	r3, [pc, #60]	; (8002bb4 <read_string+0x110>)
 8002b78:	2100      	movs	r1, #0
 8002b7a:	5499      	strb	r1, [r3, r2]
				strcpy(GPS_data,string_data);
 8002b7c:	490d      	ldr	r1, [pc, #52]	; (8002bb4 <read_string+0x110>)
 8002b7e:	4810      	ldr	r0, [pc, #64]	; (8002bc0 <read_string+0x11c>)
 8002b80:	f000 faf8 	bl	8003174 <strcpy>
				index1=0;
 8002b84:	4b09      	ldr	r3, [pc, #36]	; (8002bac <read_string+0x108>)
 8002b86:	2200      	movs	r2, #0
 8002b88:	701a      	strb	r2, [r3, #0]
				COM_COUNT=0;
 8002b8a:	4b0c      	ldr	r3, [pc, #48]	; (8002bbc <read_string+0x118>)
 8002b8c:	2200      	movs	r2, #0
 8002b8e:	701a      	strb	r2, [r3, #0]
				data_flage=0;
 8002b90:	4b04      	ldr	r3, [pc, #16]	; (8002ba4 <read_string+0x100>)
 8002b92:	2200      	movs	r2, #0
 8002b94:	701a      	strb	r2, [r3, #0]
}
 8002b96:	bf00      	nop
 8002b98:	bd80      	pop	{r7, pc}
 8002b9a:	bf00      	nop
 8002b9c:	2000039c 	.word	0x2000039c
 8002ba0:	40013800 	.word	0x40013800
 8002ba4:	20000233 	.word	0x20000233
 8002ba8:	20000234 	.word	0x20000234
 8002bac:	20000330 	.word	0x20000330
 8002bb0:	40011000 	.word	0x40011000
 8002bb4:	200002ec 	.word	0x200002ec
 8002bb8:	080074e8 	.word	0x080074e8
 8002bbc:	20000232 	.word	0x20000232
 8002bc0:	20000334 	.word	0x20000334

08002bc4 <GET_LOCATION>:
//*******************************************************
//==================== -Get Location- ===================
//*******************************************************

void GET_LOCATION(){
 8002bc4:	b598      	push	{r3, r4, r7, lr}
 8002bc6:	af00      	add	r7, sp, #0
	// Get the first token
	token = strtok(GPS_data, ",");
 8002bc8:	4958      	ldr	r1, [pc, #352]	; (8002d2c <GET_LOCATION+0x168>)
 8002bca:	4859      	ldr	r0, [pc, #356]	; (8002d30 <GET_LOCATION+0x16c>)
 8002bcc:	f001 f922 	bl	8003e14 <strtok>
 8002bd0:	4602      	mov	r2, r0
 8002bd2:	4b58      	ldr	r3, [pc, #352]	; (8002d34 <GET_LOCATION+0x170>)
 8002bd4:	601a      	str	r2, [r3, #0]
	// Walk through other tokens
	tokens_count=0;
 8002bd6:	4b58      	ldr	r3, [pc, #352]	; (8002d38 <GET_LOCATION+0x174>)
 8002bd8:	2200      	movs	r2, #0
 8002bda:	701a      	strb	r2, [r3, #0]
	while (token != NULL) {
 8002bdc:	e012      	b.n	8002c04 <GET_LOCATION+0x40>
		tokens[tokens_count++] = token;
 8002bde:	4b56      	ldr	r3, [pc, #344]	; (8002d38 <GET_LOCATION+0x174>)
 8002be0:	781b      	ldrb	r3, [r3, #0]
 8002be2:	1c5a      	adds	r2, r3, #1
 8002be4:	b2d1      	uxtb	r1, r2
 8002be6:	4a54      	ldr	r2, [pc, #336]	; (8002d38 <GET_LOCATION+0x174>)
 8002be8:	7011      	strb	r1, [r2, #0]
 8002bea:	4619      	mov	r1, r3
 8002bec:	4b51      	ldr	r3, [pc, #324]	; (8002d34 <GET_LOCATION+0x170>)
 8002bee:	681b      	ldr	r3, [r3, #0]
 8002bf0:	4a52      	ldr	r2, [pc, #328]	; (8002d3c <GET_LOCATION+0x178>)
 8002bf2:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
		token=strtok(NULL, ",");
 8002bf6:	494d      	ldr	r1, [pc, #308]	; (8002d2c <GET_LOCATION+0x168>)
 8002bf8:	2000      	movs	r0, #0
 8002bfa:	f001 f90b 	bl	8003e14 <strtok>
 8002bfe:	4602      	mov	r2, r0
 8002c00:	4b4c      	ldr	r3, [pc, #304]	; (8002d34 <GET_LOCATION+0x170>)
 8002c02:	601a      	str	r2, [r3, #0]
	while (token != NULL) {
 8002c04:	4b4b      	ldr	r3, [pc, #300]	; (8002d34 <GET_LOCATION+0x170>)
 8002c06:	681b      	ldr	r3, [r3, #0]
 8002c08:	2b00      	cmp	r3, #0
 8002c0a:	d1e8      	bne.n	8002bde <GET_LOCATION+0x1a>
	}
	//3156.788
	Longitude=(int)atof(tokens[4])/100;//31
 8002c0c:	4b4b      	ldr	r3, [pc, #300]	; (8002d3c <GET_LOCATION+0x178>)
 8002c0e:	691b      	ldr	r3, [r3, #16]
 8002c10:	4618      	mov	r0, r3
 8002c12:	f000 fa56 	bl	80030c2 <atof>
 8002c16:	4603      	mov	r3, r0
 8002c18:	460c      	mov	r4, r1
 8002c1a:	4618      	mov	r0, r3
 8002c1c:	4621      	mov	r1, r4
 8002c1e:	f7fd ff1b 	bl	8000a58 <__aeabi_d2iz>
 8002c22:	4603      	mov	r3, r0
 8002c24:	4a46      	ldr	r2, [pc, #280]	; (8002d40 <GET_LOCATION+0x17c>)
 8002c26:	fb82 1203 	smull	r1, r2, r2, r3
 8002c2a:	1152      	asrs	r2, r2, #5
 8002c2c:	17db      	asrs	r3, r3, #31
 8002c2e:	1ad3      	subs	r3, r2, r3
 8002c30:	461a      	mov	r2, r3
 8002c32:	4b44      	ldr	r3, [pc, #272]	; (8002d44 <GET_LOCATION+0x180>)
 8002c34:	601a      	str	r2, [r3, #0]
	Latitude=(int)atof(tokens[2])/100;
 8002c36:	4b41      	ldr	r3, [pc, #260]	; (8002d3c <GET_LOCATION+0x178>)
 8002c38:	689b      	ldr	r3, [r3, #8]
 8002c3a:	4618      	mov	r0, r3
 8002c3c:	f000 fa41 	bl	80030c2 <atof>
 8002c40:	4603      	mov	r3, r0
 8002c42:	460c      	mov	r4, r1
 8002c44:	4618      	mov	r0, r3
 8002c46:	4621      	mov	r1, r4
 8002c48:	f7fd ff06 	bl	8000a58 <__aeabi_d2iz>
 8002c4c:	4603      	mov	r3, r0
 8002c4e:	4a3c      	ldr	r2, [pc, #240]	; (8002d40 <GET_LOCATION+0x17c>)
 8002c50:	fb82 1203 	smull	r1, r2, r2, r3
 8002c54:	1152      	asrs	r2, r2, #5
 8002c56:	17db      	asrs	r3, r3, #31
 8002c58:	1ad3      	subs	r3, r2, r3
 8002c5a:	461a      	mov	r2, r3
 8002c5c:	4b3a      	ldr	r3, [pc, #232]	; (8002d48 <GET_LOCATION+0x184>)
 8002c5e:	601a      	str	r2, [r3, #0]
	deg_Longitude=(((float)atof(tokens[4])-Longitude*100)/60.0);//(3156.788-3100)=>>56.788/60.0
 8002c60:	4b36      	ldr	r3, [pc, #216]	; (8002d3c <GET_LOCATION+0x178>)
 8002c62:	691b      	ldr	r3, [r3, #16]
 8002c64:	4618      	mov	r0, r3
 8002c66:	f000 fa2c 	bl	80030c2 <atof>
 8002c6a:	4603      	mov	r3, r0
 8002c6c:	460c      	mov	r4, r1
 8002c6e:	4618      	mov	r0, r3
 8002c70:	4621      	mov	r1, r4
 8002c72:	f7fd ff39 	bl	8000ae8 <__aeabi_d2f>
 8002c76:	4604      	mov	r4, r0
 8002c78:	4b32      	ldr	r3, [pc, #200]	; (8002d44 <GET_LOCATION+0x180>)
 8002c7a:	681b      	ldr	r3, [r3, #0]
 8002c7c:	2264      	movs	r2, #100	; 0x64
 8002c7e:	fb02 f303 	mul.w	r3, r2, r3
 8002c82:	4618      	mov	r0, r3
 8002c84:	f7fe f836 	bl	8000cf4 <__aeabi_ui2f>
 8002c88:	4603      	mov	r3, r0
 8002c8a:	4619      	mov	r1, r3
 8002c8c:	4620      	mov	r0, r4
 8002c8e:	f7fd ff7f 	bl	8000b90 <__aeabi_fsub>
 8002c92:	4603      	mov	r3, r0
 8002c94:	492d      	ldr	r1, [pc, #180]	; (8002d4c <GET_LOCATION+0x188>)
 8002c96:	4618      	mov	r0, r3
 8002c98:	f7fe f938 	bl	8000f0c <__aeabi_fdiv>
 8002c9c:	4603      	mov	r3, r0
 8002c9e:	461a      	mov	r2, r3
 8002ca0:	4b2b      	ldr	r3, [pc, #172]	; (8002d50 <GET_LOCATION+0x18c>)
 8002ca2:	601a      	str	r2, [r3, #0]
	deg_Latitude=(((float)atof(tokens[2])-Latitude*100)/60.0);
 8002ca4:	4b25      	ldr	r3, [pc, #148]	; (8002d3c <GET_LOCATION+0x178>)
 8002ca6:	689b      	ldr	r3, [r3, #8]
 8002ca8:	4618      	mov	r0, r3
 8002caa:	f000 fa0a 	bl	80030c2 <atof>
 8002cae:	4603      	mov	r3, r0
 8002cb0:	460c      	mov	r4, r1
 8002cb2:	4618      	mov	r0, r3
 8002cb4:	4621      	mov	r1, r4
 8002cb6:	f7fd ff17 	bl	8000ae8 <__aeabi_d2f>
 8002cba:	4604      	mov	r4, r0
 8002cbc:	4b22      	ldr	r3, [pc, #136]	; (8002d48 <GET_LOCATION+0x184>)
 8002cbe:	681b      	ldr	r3, [r3, #0]
 8002cc0:	2264      	movs	r2, #100	; 0x64
 8002cc2:	fb02 f303 	mul.w	r3, r2, r3
 8002cc6:	4618      	mov	r0, r3
 8002cc8:	f7fe f814 	bl	8000cf4 <__aeabi_ui2f>
 8002ccc:	4603      	mov	r3, r0
 8002cce:	4619      	mov	r1, r3
 8002cd0:	4620      	mov	r0, r4
 8002cd2:	f7fd ff5d 	bl	8000b90 <__aeabi_fsub>
 8002cd6:	4603      	mov	r3, r0
 8002cd8:	491c      	ldr	r1, [pc, #112]	; (8002d4c <GET_LOCATION+0x188>)
 8002cda:	4618      	mov	r0, r3
 8002cdc:	f7fe f916 	bl	8000f0c <__aeabi_fdiv>
 8002ce0:	4603      	mov	r3, r0
 8002ce2:	461a      	mov	r2, r3
 8002ce4:	4b1b      	ldr	r3, [pc, #108]	; (8002d54 <GET_LOCATION+0x190>)
 8002ce6:	601a      	str	r2, [r3, #0]
	Decimal_degrees_Longitude=Longitude+deg_Longitude;
 8002ce8:	4b16      	ldr	r3, [pc, #88]	; (8002d44 <GET_LOCATION+0x180>)
 8002cea:	681b      	ldr	r3, [r3, #0]
 8002cec:	4618      	mov	r0, r3
 8002cee:	f7fe f801 	bl	8000cf4 <__aeabi_ui2f>
 8002cf2:	4602      	mov	r2, r0
 8002cf4:	4b16      	ldr	r3, [pc, #88]	; (8002d50 <GET_LOCATION+0x18c>)
 8002cf6:	681b      	ldr	r3, [r3, #0]
 8002cf8:	4619      	mov	r1, r3
 8002cfa:	4610      	mov	r0, r2
 8002cfc:	f7fd ff4a 	bl	8000b94 <__addsf3>
 8002d00:	4603      	mov	r3, r0
 8002d02:	461a      	mov	r2, r3
 8002d04:	4b14      	ldr	r3, [pc, #80]	; (8002d58 <GET_LOCATION+0x194>)
 8002d06:	601a      	str	r2, [r3, #0]
	Decimal_degrees_Latitude=Latitude+deg_Latitude;
 8002d08:	4b0f      	ldr	r3, [pc, #60]	; (8002d48 <GET_LOCATION+0x184>)
 8002d0a:	681b      	ldr	r3, [r3, #0]
 8002d0c:	4618      	mov	r0, r3
 8002d0e:	f7fd fff1 	bl	8000cf4 <__aeabi_ui2f>
 8002d12:	4602      	mov	r2, r0
 8002d14:	4b0f      	ldr	r3, [pc, #60]	; (8002d54 <GET_LOCATION+0x190>)
 8002d16:	681b      	ldr	r3, [r3, #0]
 8002d18:	4619      	mov	r1, r3
 8002d1a:	4610      	mov	r0, r2
 8002d1c:	f7fd ff3a 	bl	8000b94 <__addsf3>
 8002d20:	4603      	mov	r3, r0
 8002d22:	461a      	mov	r2, r3
 8002d24:	4b0d      	ldr	r3, [pc, #52]	; (8002d5c <GET_LOCATION+0x198>)
 8002d26:	601a      	str	r2, [r3, #0]
}
 8002d28:	bf00      	nop
 8002d2a:	bd98      	pop	{r3, r4, r7, pc}
 8002d2c:	080074f0 	.word	0x080074f0
 8002d30:	20000334 	.word	0x20000334
 8002d34:	200003a0 	.word	0x200003a0
 8002d38:	20000231 	.word	0x20000231
 8002d3c:	20000374 	.word	0x20000374
 8002d40:	51eb851f 	.word	0x51eb851f
 8002d44:	20000370 	.word	0x20000370
 8002d48:	2000036c 	.word	0x2000036c
 8002d4c:	42700000 	.word	0x42700000
 8002d50:	200003a4 	.word	0x200003a4
 8002d54:	20000320 	.word	0x20000320
 8002d58:	200002e8 	.word	0x200002e8
 8002d5c:	20000368 	.word	0x20000368

08002d60 <degrees_to_radians>:
//*******************************************************
//==================== -Get distance- ===================
//*******************************************************
// Function to convert degrees to radians
double degrees_to_radians(double degrees) {
 8002d60:	b590      	push	{r4, r7, lr}
 8002d62:	b083      	sub	sp, #12
 8002d64:	af00      	add	r7, sp, #0
 8002d66:	e9c7 0100 	strd	r0, r1, [r7]
	return degrees * (M_PI / 180.0);
 8002d6a:	a307      	add	r3, pc, #28	; (adr r3, 8002d88 <degrees_to_radians+0x28>)
 8002d6c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002d70:	e9d7 0100 	ldrd	r0, r1, [r7]
 8002d74:	f7fd fbc0 	bl	80004f8 <__aeabi_dmul>
 8002d78:	4603      	mov	r3, r0
 8002d7a:	460c      	mov	r4, r1
}
 8002d7c:	4618      	mov	r0, r3
 8002d7e:	4621      	mov	r1, r4
 8002d80:	370c      	adds	r7, #12
 8002d82:	46bd      	mov	sp, r7
 8002d84:	bd90      	pop	{r4, r7, pc}
 8002d86:	bf00      	nop
 8002d88:	a2529d39 	.word	0xa2529d39
 8002d8c:	3f91df46 	.word	0x3f91df46

08002d90 <haversine>:
// Function to calculate the distance using Haversine formula
double haversine(double lat1, double lon1, double lat2, double lon2) {
 8002d90:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8002d94:	b08c      	sub	sp, #48	; 0x30
 8002d96:	af00      	add	r7, sp, #0
 8002d98:	e9c7 0102 	strd	r0, r1, [r7, #8]
 8002d9c:	e9c7 2300 	strd	r2, r3, [r7]
	double dlat = degrees_to_radians(lat2 - lat1);
 8002da0:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8002da4:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
 8002da8:	f7fd f9ee 	bl	8000188 <__aeabi_dsub>
 8002dac:	4603      	mov	r3, r0
 8002dae:	460c      	mov	r4, r1
 8002db0:	4618      	mov	r0, r3
 8002db2:	4621      	mov	r1, r4
 8002db4:	f7ff ffd4 	bl	8002d60 <degrees_to_radians>
 8002db8:	e9c7 010a 	strd	r0, r1, [r7, #40]	; 0x28
	double dlon = degrees_to_radians(lon2 - lon1);
 8002dbc:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002dc0:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 8002dc4:	f7fd f9e0 	bl	8000188 <__aeabi_dsub>
 8002dc8:	4603      	mov	r3, r0
 8002dca:	460c      	mov	r4, r1
 8002dcc:	4618      	mov	r0, r3
 8002dce:	4621      	mov	r1, r4
 8002dd0:	f7ff ffc6 	bl	8002d60 <degrees_to_radians>
 8002dd4:	e9c7 0108 	strd	r0, r1, [r7, #32]
	double a = sin(dlat / 2) * sin(dlat / 2) +
 8002dd8:	f04f 0200 	mov.w	r2, #0
 8002ddc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002de0:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 8002de4:	f7fd fcb2 	bl	800074c <__aeabi_ddiv>
 8002de8:	4603      	mov	r3, r0
 8002dea:	460c      	mov	r4, r1
 8002dec:	4618      	mov	r0, r3
 8002dee:	4621      	mov	r1, r4
 8002df0:	f003 f80e 	bl	8005e10 <sin>
 8002df4:	4604      	mov	r4, r0
 8002df6:	460d      	mov	r5, r1
 8002df8:	f04f 0200 	mov.w	r2, #0
 8002dfc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002e00:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 8002e04:	f7fd fca2 	bl	800074c <__aeabi_ddiv>
 8002e08:	4602      	mov	r2, r0
 8002e0a:	460b      	mov	r3, r1
 8002e0c:	4610      	mov	r0, r2
 8002e0e:	4619      	mov	r1, r3
 8002e10:	f002 fffe 	bl	8005e10 <sin>
 8002e14:	4602      	mov	r2, r0
 8002e16:	460b      	mov	r3, r1
 8002e18:	4620      	mov	r0, r4
 8002e1a:	4629      	mov	r1, r5
 8002e1c:	f7fd fb6c 	bl	80004f8 <__aeabi_dmul>
 8002e20:	4603      	mov	r3, r0
 8002e22:	460c      	mov	r4, r1
 8002e24:	4625      	mov	r5, r4
 8002e26:	461c      	mov	r4, r3
			cos(degrees_to_radians(lat1)) * cos(degrees_to_radians(lat2)) *
 8002e28:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8002e2c:	f7ff ff98 	bl	8002d60 <degrees_to_radians>
 8002e30:	4602      	mov	r2, r0
 8002e32:	460b      	mov	r3, r1
 8002e34:	4610      	mov	r0, r2
 8002e36:	4619      	mov	r1, r3
 8002e38:	f002 ffb4 	bl	8005da4 <cos>
 8002e3c:	4680      	mov	r8, r0
 8002e3e:	4689      	mov	r9, r1
 8002e40:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
 8002e44:	f7ff ff8c 	bl	8002d60 <degrees_to_radians>
 8002e48:	4602      	mov	r2, r0
 8002e4a:	460b      	mov	r3, r1
 8002e4c:	4610      	mov	r0, r2
 8002e4e:	4619      	mov	r1, r3
 8002e50:	f002 ffa8 	bl	8005da4 <cos>
 8002e54:	4602      	mov	r2, r0
 8002e56:	460b      	mov	r3, r1
 8002e58:	4640      	mov	r0, r8
 8002e5a:	4649      	mov	r1, r9
 8002e5c:	f7fd fb4c 	bl	80004f8 <__aeabi_dmul>
 8002e60:	4602      	mov	r2, r0
 8002e62:	460b      	mov	r3, r1
 8002e64:	4690      	mov	r8, r2
 8002e66:	4699      	mov	r9, r3
			sin(dlon / 2) * sin(dlon / 2);
 8002e68:	f04f 0200 	mov.w	r2, #0
 8002e6c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002e70:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8002e74:	f7fd fc6a 	bl	800074c <__aeabi_ddiv>
 8002e78:	4602      	mov	r2, r0
 8002e7a:	460b      	mov	r3, r1
 8002e7c:	4610      	mov	r0, r2
 8002e7e:	4619      	mov	r1, r3
 8002e80:	f002 ffc6 	bl	8005e10 <sin>
 8002e84:	4602      	mov	r2, r0
 8002e86:	460b      	mov	r3, r1
			cos(degrees_to_radians(lat1)) * cos(degrees_to_radians(lat2)) *
 8002e88:	4640      	mov	r0, r8
 8002e8a:	4649      	mov	r1, r9
 8002e8c:	f7fd fb34 	bl	80004f8 <__aeabi_dmul>
 8002e90:	4602      	mov	r2, r0
 8002e92:	460b      	mov	r3, r1
 8002e94:	4690      	mov	r8, r2
 8002e96:	4699      	mov	r9, r3
			sin(dlon / 2) * sin(dlon / 2);
 8002e98:	f04f 0200 	mov.w	r2, #0
 8002e9c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002ea0:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8002ea4:	f7fd fc52 	bl	800074c <__aeabi_ddiv>
 8002ea8:	4602      	mov	r2, r0
 8002eaa:	460b      	mov	r3, r1
 8002eac:	4610      	mov	r0, r2
 8002eae:	4619      	mov	r1, r3
 8002eb0:	f002 ffae 	bl	8005e10 <sin>
 8002eb4:	4602      	mov	r2, r0
 8002eb6:	460b      	mov	r3, r1
 8002eb8:	4640      	mov	r0, r8
 8002eba:	4649      	mov	r1, r9
 8002ebc:	f7fd fb1c 	bl	80004f8 <__aeabi_dmul>
 8002ec0:	4602      	mov	r2, r0
 8002ec2:	460b      	mov	r3, r1
	double a = sin(dlat / 2) * sin(dlat / 2) +
 8002ec4:	4620      	mov	r0, r4
 8002ec6:	4629      	mov	r1, r5
 8002ec8:	f7fd f960 	bl	800018c <__adddf3>
 8002ecc:	4603      	mov	r3, r0
 8002ece:	460c      	mov	r4, r1
 8002ed0:	e9c7 3406 	strd	r3, r4, [r7, #24]
	double c = 2 * atan2(sqrt(a), sqrt(1 - a));
 8002ed4:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8002ed8:	f002 ffd6 	bl	8005e88 <sqrt>
 8002edc:	4604      	mov	r4, r0
 8002ede:	460d      	mov	r5, r1
 8002ee0:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8002ee4:	f04f 0000 	mov.w	r0, #0
 8002ee8:	4919      	ldr	r1, [pc, #100]	; (8002f50 <haversine+0x1c0>)
 8002eea:	f7fd f94d 	bl	8000188 <__aeabi_dsub>
 8002eee:	4602      	mov	r2, r0
 8002ef0:	460b      	mov	r3, r1
 8002ef2:	4610      	mov	r0, r2
 8002ef4:	4619      	mov	r1, r3
 8002ef6:	f002 ffc7 	bl	8005e88 <sqrt>
 8002efa:	4602      	mov	r2, r0
 8002efc:	460b      	mov	r3, r1
 8002efe:	4620      	mov	r0, r4
 8002f00:	4629      	mov	r1, r5
 8002f02:	f002 ffbf 	bl	8005e84 <atan2>
 8002f06:	4602      	mov	r2, r0
 8002f08:	460b      	mov	r3, r1
 8002f0a:	f7fd f93f 	bl	800018c <__adddf3>
 8002f0e:	4603      	mov	r3, r0
 8002f10:	460c      	mov	r4, r1
 8002f12:	e9c7 3404 	strd	r3, r4, [r7, #16]
	return EARTH_RADIUS * c * 1000;  // Convert to meters
 8002f16:	a30c      	add	r3, pc, #48	; (adr r3, 8002f48 <haversine+0x1b8>)
 8002f18:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002f1c:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8002f20:	f7fd faea 	bl	80004f8 <__aeabi_dmul>
 8002f24:	4603      	mov	r3, r0
 8002f26:	460c      	mov	r4, r1
 8002f28:	4618      	mov	r0, r3
 8002f2a:	4621      	mov	r1, r4
 8002f2c:	f04f 0200 	mov.w	r2, #0
 8002f30:	4b08      	ldr	r3, [pc, #32]	; (8002f54 <haversine+0x1c4>)
 8002f32:	f7fd fae1 	bl	80004f8 <__aeabi_dmul>
 8002f36:	4603      	mov	r3, r0
 8002f38:	460c      	mov	r4, r1
}
 8002f3a:	4618      	mov	r0, r3
 8002f3c:	4621      	mov	r1, r4
 8002f3e:	3730      	adds	r7, #48	; 0x30
 8002f40:	46bd      	mov	sp, r7
 8002f42:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8002f46:	bf00      	nop
 8002f48:	00000000 	.word	0x00000000
 8002f4c:	40b8e300 	.word	0x40b8e300
 8002f50:	3ff00000 	.word	0x3ff00000
 8002f54:	408f4000 	.word	0x408f4000

08002f58 <Display>:
//*******************************************************
//==================== -Get distance- ===================
//*******************************************************
void Display(){
 8002f58:	b598      	push	{r3, r4, r7, lr}
 8002f5a:	af00      	add	r7, sp, #0
	I2C_LCD_setcerser(I2C1, address,0,0);
 8002f5c:	2300      	movs	r3, #0
 8002f5e:	2200      	movs	r2, #0
 8002f60:	213f      	movs	r1, #63	; 0x3f
 8002f62:	481f      	ldr	r0, [pc, #124]	; (8002fe0 <Display+0x88>)
 8002f64:	f7fe fbe5 	bl	8001732 <I2C_LCD_setcerser>
	if(action_on){
 8002f68:	4b1e      	ldr	r3, [pc, #120]	; (8002fe4 <Display+0x8c>)
 8002f6a:	781b      	ldrb	r3, [r3, #0]
 8002f6c:	2b00      	cmp	r3, #0
 8002f6e:	d005      	beq.n	8002f7c <Display+0x24>
		I2C_LCD_write_string(I2C1," \"Car theft!!\" ", address);
 8002f70:	223f      	movs	r2, #63	; 0x3f
 8002f72:	491d      	ldr	r1, [pc, #116]	; (8002fe8 <Display+0x90>)
 8002f74:	481a      	ldr	r0, [pc, #104]	; (8002fe0 <Display+0x88>)
 8002f76:	f7fe fbc2 	bl	80016fe <I2C_LCD_write_string>
 8002f7a:	e017      	b.n	8002fac <Display+0x54>
	}
	else {
		I2C_LCD_write_FLOATnumber(I2C1,address,(float)Decimal_degrees_Longitude,5);
 8002f7c:	4b1b      	ldr	r3, [pc, #108]	; (8002fec <Display+0x94>)
 8002f7e:	681a      	ldr	r2, [r3, #0]
 8002f80:	2305      	movs	r3, #5
 8002f82:	213f      	movs	r1, #63	; 0x3f
 8002f84:	4816      	ldr	r0, [pc, #88]	; (8002fe0 <Display+0x88>)
 8002f86:	f7fe fbff 	bl	8001788 <I2C_LCD_write_FLOATnumber>
		I2C_LCD_write_string(I2C1,"A ", address);
 8002f8a:	223f      	movs	r2, #63	; 0x3f
 8002f8c:	4918      	ldr	r1, [pc, #96]	; (8002ff0 <Display+0x98>)
 8002f8e:	4814      	ldr	r0, [pc, #80]	; (8002fe0 <Display+0x88>)
 8002f90:	f7fe fbb5 	bl	80016fe <I2C_LCD_write_string>
		I2C_LCD_write_FLOATnumber(I2C1,address,(float)Decimal_degrees_Latitude,5);
 8002f94:	4b17      	ldr	r3, [pc, #92]	; (8002ff4 <Display+0x9c>)
 8002f96:	681a      	ldr	r2, [r3, #0]
 8002f98:	2305      	movs	r3, #5
 8002f9a:	213f      	movs	r1, #63	; 0x3f
 8002f9c:	4810      	ldr	r0, [pc, #64]	; (8002fe0 <Display+0x88>)
 8002f9e:	f7fe fbf3 	bl	8001788 <I2C_LCD_write_FLOATnumber>
		I2C_LCD_write_string(I2C1,"N", address);
 8002fa2:	223f      	movs	r2, #63	; 0x3f
 8002fa4:	4914      	ldr	r1, [pc, #80]	; (8002ff8 <Display+0xa0>)
 8002fa6:	480e      	ldr	r0, [pc, #56]	; (8002fe0 <Display+0x88>)
 8002fa8:	f7fe fba9 	bl	80016fe <I2C_LCD_write_string>
	}


	I2C_LCD_setcerser(I2C1, address,1,0);
 8002fac:	2300      	movs	r3, #0
 8002fae:	2201      	movs	r2, #1
 8002fb0:	213f      	movs	r1, #63	; 0x3f
 8002fb2:	480b      	ldr	r0, [pc, #44]	; (8002fe0 <Display+0x88>)
 8002fb4:	f7fe fbbd 	bl	8001732 <I2C_LCD_setcerser>
	I2C_LCD_write_FLOATnumber(I2C1,address,(float)distance,7);
 8002fb8:	4b10      	ldr	r3, [pc, #64]	; (8002ffc <Display+0xa4>)
 8002fba:	cb18      	ldmia	r3, {r3, r4}
 8002fbc:	4618      	mov	r0, r3
 8002fbe:	4621      	mov	r1, r4
 8002fc0:	f7fd fd92 	bl	8000ae8 <__aeabi_d2f>
 8002fc4:	4602      	mov	r2, r0
 8002fc6:	2307      	movs	r3, #7
 8002fc8:	213f      	movs	r1, #63	; 0x3f
 8002fca:	4805      	ldr	r0, [pc, #20]	; (8002fe0 <Display+0x88>)
 8002fcc:	f7fe fbdc 	bl	8001788 <I2C_LCD_write_FLOATnumber>
	I2C_LCD_write_string(I2C1," meter    ", address);
 8002fd0:	223f      	movs	r2, #63	; 0x3f
 8002fd2:	490b      	ldr	r1, [pc, #44]	; (8003000 <Display+0xa8>)
 8002fd4:	4802      	ldr	r0, [pc, #8]	; (8002fe0 <Display+0x88>)
 8002fd6:	f7fe fb92 	bl	80016fe <I2C_LCD_write_string>

}
 8002fda:	bf00      	nop
 8002fdc:	bd98      	pop	{r3, r4, r7, pc}
 8002fde:	bf00      	nop
 8002fe0:	40005400 	.word	0x40005400
 8002fe4:	20000235 	.word	0x20000235
 8002fe8:	080074f4 	.word	0x080074f4
 8002fec:	200002e8 	.word	0x200002e8
 8002ff0:	08007504 	.word	0x08007504
 8002ff4:	20000368 	.word	0x20000368
 8002ff8:	08007508 	.word	0x08007508
 8002ffc:	20000328 	.word	0x20000328
 8003000:	0800750c 	.word	0x0800750c

08003004 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8003004:	b580      	push	{r7, lr}
 8003006:	b086      	sub	sp, #24
 8003008:	af00      	add	r7, sp, #0
 800300a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800300c:	4a14      	ldr	r2, [pc, #80]	; (8003060 <_sbrk+0x5c>)
 800300e:	4b15      	ldr	r3, [pc, #84]	; (8003064 <_sbrk+0x60>)
 8003010:	1ad3      	subs	r3, r2, r3
 8003012:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8003014:	697b      	ldr	r3, [r7, #20]
 8003016:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initalize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8003018:	4b13      	ldr	r3, [pc, #76]	; (8003068 <_sbrk+0x64>)
 800301a:	681b      	ldr	r3, [r3, #0]
 800301c:	2b00      	cmp	r3, #0
 800301e:	d102      	bne.n	8003026 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8003020:	4b11      	ldr	r3, [pc, #68]	; (8003068 <_sbrk+0x64>)
 8003022:	4a12      	ldr	r2, [pc, #72]	; (800306c <_sbrk+0x68>)
 8003024:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8003026:	4b10      	ldr	r3, [pc, #64]	; (8003068 <_sbrk+0x64>)
 8003028:	681a      	ldr	r2, [r3, #0]
 800302a:	687b      	ldr	r3, [r7, #4]
 800302c:	4413      	add	r3, r2
 800302e:	693a      	ldr	r2, [r7, #16]
 8003030:	429a      	cmp	r2, r3
 8003032:	d207      	bcs.n	8003044 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8003034:	f000 f86c 	bl	8003110 <__errno>
 8003038:	4602      	mov	r2, r0
 800303a:	230c      	movs	r3, #12
 800303c:	6013      	str	r3, [r2, #0]
    return (void *)-1;
 800303e:	f04f 33ff 	mov.w	r3, #4294967295
 8003042:	e009      	b.n	8003058 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8003044:	4b08      	ldr	r3, [pc, #32]	; (8003068 <_sbrk+0x64>)
 8003046:	681b      	ldr	r3, [r3, #0]
 8003048:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800304a:	4b07      	ldr	r3, [pc, #28]	; (8003068 <_sbrk+0x64>)
 800304c:	681a      	ldr	r2, [r3, #0]
 800304e:	687b      	ldr	r3, [r7, #4]
 8003050:	4413      	add	r3, r2
 8003052:	4a05      	ldr	r2, [pc, #20]	; (8003068 <_sbrk+0x64>)
 8003054:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8003056:	68fb      	ldr	r3, [r7, #12]
}
 8003058:	4618      	mov	r0, r3
 800305a:	3718      	adds	r7, #24
 800305c:	46bd      	mov	sp, r7
 800305e:	bd80      	pop	{r7, pc}
 8003060:	20005000 	.word	0x20005000
 8003064:	00000400 	.word	0x00000400
 8003068:	20000238 	.word	0x20000238
 800306c:	200003b0 	.word	0x200003b0

08003070 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8003070:	480d      	ldr	r0, [pc, #52]	; (80030a8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8003072:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8003074:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8003078:	480c      	ldr	r0, [pc, #48]	; (80030ac <LoopForever+0x6>)
  ldr r1, =_edata
 800307a:	490d      	ldr	r1, [pc, #52]	; (80030b0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800307c:	4a0d      	ldr	r2, [pc, #52]	; (80030b4 <LoopForever+0xe>)
  movs r3, #0
 800307e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8003080:	e002      	b.n	8003088 <LoopCopyDataInit>

08003082 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8003082:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8003084:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8003086:	3304      	adds	r3, #4

08003088 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8003088:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800308a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800308c:	d3f9      	bcc.n	8003082 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800308e:	4a0a      	ldr	r2, [pc, #40]	; (80030b8 <LoopForever+0x12>)
  ldr r4, =_ebss
 8003090:	4c0a      	ldr	r4, [pc, #40]	; (80030bc <LoopForever+0x16>)
  movs r3, #0
 8003092:	2300      	movs	r3, #0
  b LoopFillZerobss
 8003094:	e001      	b.n	800309a <LoopFillZerobss>

08003096 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8003096:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8003098:	3204      	adds	r2, #4

0800309a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800309a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800309c:	d3fb      	bcc.n	8003096 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800309e:	f000 f83d 	bl	800311c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80030a2:	f7ff fc75 	bl	8002990 <main>

080030a6 <LoopForever>:

LoopForever:
    b LoopForever
 80030a6:	e7fe      	b.n	80030a6 <LoopForever>
  ldr   r0, =_estack
 80030a8:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 80030ac:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80030b0:	20000204 	.word	0x20000204
  ldr r2, =_sidata
 80030b4:	080079b8 	.word	0x080079b8
  ldr r2, =_sbss
 80030b8:	20000208 	.word	0x20000208
  ldr r4, =_ebss
 80030bc:	200003ac 	.word	0x200003ac

080030c0 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80030c0:	e7fe      	b.n	80030c0 <ADC1_2_IRQHandler>

080030c2 <atof>:
 80030c2:	2100      	movs	r1, #0
 80030c4:	f000 be94 	b.w	8003df0 <strtod>

080030c8 <gcvt>:
 80030c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80030ca:	461c      	mov	r4, r3
 80030cc:	b085      	sub	sp, #20
 80030ce:	2300      	movs	r3, #0
 80030d0:	4615      	mov	r5, r2
 80030d2:	2200      	movs	r2, #0
 80030d4:	4606      	mov	r6, r0
 80030d6:	460f      	mov	r7, r1
 80030d8:	f7fd fc80 	bl	80009dc <__aeabi_dcmplt>
 80030dc:	4623      	mov	r3, r4
 80030de:	b118      	cbz	r0, 80030e8 <gcvt+0x20>
 80030e0:	222d      	movs	r2, #45	; 0x2d
 80030e2:	3d01      	subs	r5, #1
 80030e4:	f803 2b01 	strb.w	r2, [r3], #1
 80030e8:	2267      	movs	r2, #103	; 0x67
 80030ea:	2100      	movs	r1, #0
 80030ec:	e9cd 5300 	strd	r5, r3, [sp]
 80030f0:	e9cd 2102 	strd	r2, r1, [sp, #8]
 80030f4:	4905      	ldr	r1, [pc, #20]	; (800310c <gcvt+0x44>)
 80030f6:	4632      	mov	r2, r6
 80030f8:	463b      	mov	r3, r7
 80030fa:	6808      	ldr	r0, [r1, #0]
 80030fc:	f000 ff54 	bl	8003fa8 <_gcvt>
 8003100:	2800      	cmp	r0, #0
 8003102:	bf14      	ite	ne
 8003104:	4620      	movne	r0, r4
 8003106:	2000      	moveq	r0, #0
 8003108:	b005      	add	sp, #20
 800310a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800310c:	20000030 	.word	0x20000030

08003110 <__errno>:
 8003110:	4b01      	ldr	r3, [pc, #4]	; (8003118 <__errno+0x8>)
 8003112:	6818      	ldr	r0, [r3, #0]
 8003114:	4770      	bx	lr
 8003116:	bf00      	nop
 8003118:	20000030 	.word	0x20000030

0800311c <__libc_init_array>:
 800311c:	b570      	push	{r4, r5, r6, lr}
 800311e:	2500      	movs	r5, #0
 8003120:	4e0c      	ldr	r6, [pc, #48]	; (8003154 <__libc_init_array+0x38>)
 8003122:	4c0d      	ldr	r4, [pc, #52]	; (8003158 <__libc_init_array+0x3c>)
 8003124:	1ba4      	subs	r4, r4, r6
 8003126:	10a4      	asrs	r4, r4, #2
 8003128:	42a5      	cmp	r5, r4
 800312a:	d109      	bne.n	8003140 <__libc_init_array+0x24>
 800312c:	f004 f9cc 	bl	80074c8 <_init>
 8003130:	2500      	movs	r5, #0
 8003132:	4e0a      	ldr	r6, [pc, #40]	; (800315c <__libc_init_array+0x40>)
 8003134:	4c0a      	ldr	r4, [pc, #40]	; (8003160 <__libc_init_array+0x44>)
 8003136:	1ba4      	subs	r4, r4, r6
 8003138:	10a4      	asrs	r4, r4, #2
 800313a:	42a5      	cmp	r5, r4
 800313c:	d105      	bne.n	800314a <__libc_init_array+0x2e>
 800313e:	bd70      	pop	{r4, r5, r6, pc}
 8003140:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8003144:	4798      	blx	r3
 8003146:	3501      	adds	r5, #1
 8003148:	e7ee      	b.n	8003128 <__libc_init_array+0xc>
 800314a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800314e:	4798      	blx	r3
 8003150:	3501      	adds	r5, #1
 8003152:	e7f2      	b.n	800313a <__libc_init_array+0x1e>
 8003154:	080079b0 	.word	0x080079b0
 8003158:	080079b0 	.word	0x080079b0
 800315c:	080079b0 	.word	0x080079b0
 8003160:	080079b4 	.word	0x080079b4

08003164 <memset>:
 8003164:	4603      	mov	r3, r0
 8003166:	4402      	add	r2, r0
 8003168:	4293      	cmp	r3, r2
 800316a:	d100      	bne.n	800316e <memset+0xa>
 800316c:	4770      	bx	lr
 800316e:	f803 1b01 	strb.w	r1, [r3], #1
 8003172:	e7f9      	b.n	8003168 <memset+0x4>

08003174 <strcpy>:
 8003174:	4603      	mov	r3, r0
 8003176:	f811 2b01 	ldrb.w	r2, [r1], #1
 800317a:	f803 2b01 	strb.w	r2, [r3], #1
 800317e:	2a00      	cmp	r2, #0
 8003180:	d1f9      	bne.n	8003176 <strcpy+0x2>
 8003182:	4770      	bx	lr

08003184 <strncmp>:
 8003184:	b510      	push	{r4, lr}
 8003186:	b16a      	cbz	r2, 80031a4 <strncmp+0x20>
 8003188:	3901      	subs	r1, #1
 800318a:	1884      	adds	r4, r0, r2
 800318c:	f810 3b01 	ldrb.w	r3, [r0], #1
 8003190:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8003194:	4293      	cmp	r3, r2
 8003196:	d103      	bne.n	80031a0 <strncmp+0x1c>
 8003198:	42a0      	cmp	r0, r4
 800319a:	d001      	beq.n	80031a0 <strncmp+0x1c>
 800319c:	2b00      	cmp	r3, #0
 800319e:	d1f5      	bne.n	800318c <strncmp+0x8>
 80031a0:	1a98      	subs	r0, r3, r2
 80031a2:	bd10      	pop	{r4, pc}
 80031a4:	4610      	mov	r0, r2
 80031a6:	e7fc      	b.n	80031a2 <strncmp+0x1e>

080031a8 <sulp>:
 80031a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80031ac:	460f      	mov	r7, r1
 80031ae:	4690      	mov	r8, r2
 80031b0:	f001 fde2 	bl	8004d78 <__ulp>
 80031b4:	4604      	mov	r4, r0
 80031b6:	460d      	mov	r5, r1
 80031b8:	f1b8 0f00 	cmp.w	r8, #0
 80031bc:	d011      	beq.n	80031e2 <sulp+0x3a>
 80031be:	f3c7 530a 	ubfx	r3, r7, #20, #11
 80031c2:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 80031c6:	2b00      	cmp	r3, #0
 80031c8:	dd0b      	ble.n	80031e2 <sulp+0x3a>
 80031ca:	2400      	movs	r4, #0
 80031cc:	051b      	lsls	r3, r3, #20
 80031ce:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 80031d2:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 80031d6:	4622      	mov	r2, r4
 80031d8:	462b      	mov	r3, r5
 80031da:	f7fd f98d 	bl	80004f8 <__aeabi_dmul>
 80031de:	4604      	mov	r4, r0
 80031e0:	460d      	mov	r5, r1
 80031e2:	4620      	mov	r0, r4
 80031e4:	4629      	mov	r1, r5
 80031e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80031ea:	0000      	movs	r0, r0
 80031ec:	0000      	movs	r0, r0
	...

080031f0 <_strtod_l>:
 80031f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80031f4:	461f      	mov	r7, r3
 80031f6:	2300      	movs	r3, #0
 80031f8:	b0a1      	sub	sp, #132	; 0x84
 80031fa:	4683      	mov	fp, r0
 80031fc:	4638      	mov	r0, r7
 80031fe:	460e      	mov	r6, r1
 8003200:	9217      	str	r2, [sp, #92]	; 0x5c
 8003202:	931c      	str	r3, [sp, #112]	; 0x70
 8003204:	f001 fac6 	bl	8004794 <__localeconv_l>
 8003208:	4680      	mov	r8, r0
 800320a:	6800      	ldr	r0, [r0, #0]
 800320c:	f7fc ffb0 	bl	8000170 <strlen>
 8003210:	f04f 0900 	mov.w	r9, #0
 8003214:	4604      	mov	r4, r0
 8003216:	f04f 0a00 	mov.w	sl, #0
 800321a:	961b      	str	r6, [sp, #108]	; 0x6c
 800321c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800321e:	781a      	ldrb	r2, [r3, #0]
 8003220:	2a0d      	cmp	r2, #13
 8003222:	d832      	bhi.n	800328a <_strtod_l+0x9a>
 8003224:	2a09      	cmp	r2, #9
 8003226:	d236      	bcs.n	8003296 <_strtod_l+0xa6>
 8003228:	2a00      	cmp	r2, #0
 800322a:	d03e      	beq.n	80032aa <_strtod_l+0xba>
 800322c:	2300      	movs	r3, #0
 800322e:	930d      	str	r3, [sp, #52]	; 0x34
 8003230:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8003232:	782b      	ldrb	r3, [r5, #0]
 8003234:	2b30      	cmp	r3, #48	; 0x30
 8003236:	f040 80ac 	bne.w	8003392 <_strtod_l+0x1a2>
 800323a:	786b      	ldrb	r3, [r5, #1]
 800323c:	2b58      	cmp	r3, #88	; 0x58
 800323e:	d001      	beq.n	8003244 <_strtod_l+0x54>
 8003240:	2b78      	cmp	r3, #120	; 0x78
 8003242:	d167      	bne.n	8003314 <_strtod_l+0x124>
 8003244:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003246:	9702      	str	r7, [sp, #8]
 8003248:	9301      	str	r3, [sp, #4]
 800324a:	ab1c      	add	r3, sp, #112	; 0x70
 800324c:	9300      	str	r3, [sp, #0]
 800324e:	4a89      	ldr	r2, [pc, #548]	; (8003474 <_strtod_l+0x284>)
 8003250:	ab1d      	add	r3, sp, #116	; 0x74
 8003252:	a91b      	add	r1, sp, #108	; 0x6c
 8003254:	4658      	mov	r0, fp
 8003256:	f000 ffc5 	bl	80041e4 <__gethex>
 800325a:	f010 0407 	ands.w	r4, r0, #7
 800325e:	4606      	mov	r6, r0
 8003260:	d005      	beq.n	800326e <_strtod_l+0x7e>
 8003262:	2c06      	cmp	r4, #6
 8003264:	d12b      	bne.n	80032be <_strtod_l+0xce>
 8003266:	2300      	movs	r3, #0
 8003268:	3501      	adds	r5, #1
 800326a:	951b      	str	r5, [sp, #108]	; 0x6c
 800326c:	930d      	str	r3, [sp, #52]	; 0x34
 800326e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8003270:	2b00      	cmp	r3, #0
 8003272:	f040 85a6 	bne.w	8003dc2 <_strtod_l+0xbd2>
 8003276:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003278:	b1e3      	cbz	r3, 80032b4 <_strtod_l+0xc4>
 800327a:	464a      	mov	r2, r9
 800327c:	f10a 4300 	add.w	r3, sl, #2147483648	; 0x80000000
 8003280:	4610      	mov	r0, r2
 8003282:	4619      	mov	r1, r3
 8003284:	b021      	add	sp, #132	; 0x84
 8003286:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800328a:	2a2b      	cmp	r2, #43	; 0x2b
 800328c:	d015      	beq.n	80032ba <_strtod_l+0xca>
 800328e:	2a2d      	cmp	r2, #45	; 0x2d
 8003290:	d004      	beq.n	800329c <_strtod_l+0xac>
 8003292:	2a20      	cmp	r2, #32
 8003294:	d1ca      	bne.n	800322c <_strtod_l+0x3c>
 8003296:	3301      	adds	r3, #1
 8003298:	931b      	str	r3, [sp, #108]	; 0x6c
 800329a:	e7bf      	b.n	800321c <_strtod_l+0x2c>
 800329c:	2201      	movs	r2, #1
 800329e:	920d      	str	r2, [sp, #52]	; 0x34
 80032a0:	1c5a      	adds	r2, r3, #1
 80032a2:	921b      	str	r2, [sp, #108]	; 0x6c
 80032a4:	785b      	ldrb	r3, [r3, #1]
 80032a6:	2b00      	cmp	r3, #0
 80032a8:	d1c2      	bne.n	8003230 <_strtod_l+0x40>
 80032aa:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80032ac:	961b      	str	r6, [sp, #108]	; 0x6c
 80032ae:	2b00      	cmp	r3, #0
 80032b0:	f040 8585 	bne.w	8003dbe <_strtod_l+0xbce>
 80032b4:	464a      	mov	r2, r9
 80032b6:	4653      	mov	r3, sl
 80032b8:	e7e2      	b.n	8003280 <_strtod_l+0x90>
 80032ba:	2200      	movs	r2, #0
 80032bc:	e7ef      	b.n	800329e <_strtod_l+0xae>
 80032be:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80032c0:	b13a      	cbz	r2, 80032d2 <_strtod_l+0xe2>
 80032c2:	2135      	movs	r1, #53	; 0x35
 80032c4:	a81e      	add	r0, sp, #120	; 0x78
 80032c6:	f001 fe67 	bl	8004f98 <__copybits>
 80032ca:	991c      	ldr	r1, [sp, #112]	; 0x70
 80032cc:	4658      	mov	r0, fp
 80032ce:	f001 fabc 	bl	800484a <_Bfree>
 80032d2:	3c01      	subs	r4, #1
 80032d4:	2c04      	cmp	r4, #4
 80032d6:	d806      	bhi.n	80032e6 <_strtod_l+0xf6>
 80032d8:	e8df f004 	tbb	[pc, r4]
 80032dc:	1714030a 	.word	0x1714030a
 80032e0:	0a          	.byte	0x0a
 80032e1:	00          	.byte	0x00
 80032e2:	e9dd 9a1e 	ldrd	r9, sl, [sp, #120]	; 0x78
 80032e6:	0731      	lsls	r1, r6, #28
 80032e8:	d5c1      	bpl.n	800326e <_strtod_l+0x7e>
 80032ea:	f04a 4a00 	orr.w	sl, sl, #2147483648	; 0x80000000
 80032ee:	e7be      	b.n	800326e <_strtod_l+0x7e>
 80032f0:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80032f2:	e9dd 931e 	ldrd	r9, r3, [sp, #120]	; 0x78
 80032f6:	f202 4233 	addw	r2, r2, #1075	; 0x433
 80032fa:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80032fe:	ea43 5a02 	orr.w	sl, r3, r2, lsl #20
 8003302:	e7f0      	b.n	80032e6 <_strtod_l+0xf6>
 8003304:	f8df a170 	ldr.w	sl, [pc, #368]	; 8003478 <_strtod_l+0x288>
 8003308:	e7ed      	b.n	80032e6 <_strtod_l+0xf6>
 800330a:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 800330e:	f04f 39ff 	mov.w	r9, #4294967295
 8003312:	e7e8      	b.n	80032e6 <_strtod_l+0xf6>
 8003314:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8003316:	1c5a      	adds	r2, r3, #1
 8003318:	921b      	str	r2, [sp, #108]	; 0x6c
 800331a:	785b      	ldrb	r3, [r3, #1]
 800331c:	2b30      	cmp	r3, #48	; 0x30
 800331e:	d0f9      	beq.n	8003314 <_strtod_l+0x124>
 8003320:	2b00      	cmp	r3, #0
 8003322:	d0a4      	beq.n	800326e <_strtod_l+0x7e>
 8003324:	2301      	movs	r3, #1
 8003326:	2500      	movs	r5, #0
 8003328:	220a      	movs	r2, #10
 800332a:	9307      	str	r3, [sp, #28]
 800332c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800332e:	9506      	str	r5, [sp, #24]
 8003330:	9308      	str	r3, [sp, #32]
 8003332:	9504      	str	r5, [sp, #16]
 8003334:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8003336:	7807      	ldrb	r7, [r0, #0]
 8003338:	f1a7 0330 	sub.w	r3, r7, #48	; 0x30
 800333c:	b2d9      	uxtb	r1, r3
 800333e:	2909      	cmp	r1, #9
 8003340:	d929      	bls.n	8003396 <_strtod_l+0x1a6>
 8003342:	4622      	mov	r2, r4
 8003344:	f8d8 1000 	ldr.w	r1, [r8]
 8003348:	f7ff ff1c 	bl	8003184 <strncmp>
 800334c:	2800      	cmp	r0, #0
 800334e:	d031      	beq.n	80033b4 <_strtod_l+0x1c4>
 8003350:	2000      	movs	r0, #0
 8003352:	463b      	mov	r3, r7
 8003354:	4602      	mov	r2, r0
 8003356:	9c04      	ldr	r4, [sp, #16]
 8003358:	9005      	str	r0, [sp, #20]
 800335a:	2b65      	cmp	r3, #101	; 0x65
 800335c:	d001      	beq.n	8003362 <_strtod_l+0x172>
 800335e:	2b45      	cmp	r3, #69	; 0x45
 8003360:	d114      	bne.n	800338c <_strtod_l+0x19c>
 8003362:	b924      	cbnz	r4, 800336e <_strtod_l+0x17e>
 8003364:	b910      	cbnz	r0, 800336c <_strtod_l+0x17c>
 8003366:	9b07      	ldr	r3, [sp, #28]
 8003368:	2b00      	cmp	r3, #0
 800336a:	d09e      	beq.n	80032aa <_strtod_l+0xba>
 800336c:	2400      	movs	r4, #0
 800336e:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
 8003370:	1c73      	adds	r3, r6, #1
 8003372:	931b      	str	r3, [sp, #108]	; 0x6c
 8003374:	7873      	ldrb	r3, [r6, #1]
 8003376:	2b2b      	cmp	r3, #43	; 0x2b
 8003378:	d078      	beq.n	800346c <_strtod_l+0x27c>
 800337a:	2b2d      	cmp	r3, #45	; 0x2d
 800337c:	d070      	beq.n	8003460 <_strtod_l+0x270>
 800337e:	f04f 0c00 	mov.w	ip, #0
 8003382:	f1a3 0730 	sub.w	r7, r3, #48	; 0x30
 8003386:	2f09      	cmp	r7, #9
 8003388:	d97c      	bls.n	8003484 <_strtod_l+0x294>
 800338a:	961b      	str	r6, [sp, #108]	; 0x6c
 800338c:	f04f 0e00 	mov.w	lr, #0
 8003390:	e09a      	b.n	80034c8 <_strtod_l+0x2d8>
 8003392:	2300      	movs	r3, #0
 8003394:	e7c7      	b.n	8003326 <_strtod_l+0x136>
 8003396:	9904      	ldr	r1, [sp, #16]
 8003398:	3001      	adds	r0, #1
 800339a:	2908      	cmp	r1, #8
 800339c:	bfd7      	itett	le
 800339e:	9906      	ldrle	r1, [sp, #24]
 80033a0:	fb02 3505 	mlagt	r5, r2, r5, r3
 80033a4:	fb02 3301 	mlale	r3, r2, r1, r3
 80033a8:	9306      	strle	r3, [sp, #24]
 80033aa:	9b04      	ldr	r3, [sp, #16]
 80033ac:	901b      	str	r0, [sp, #108]	; 0x6c
 80033ae:	3301      	adds	r3, #1
 80033b0:	9304      	str	r3, [sp, #16]
 80033b2:	e7bf      	b.n	8003334 <_strtod_l+0x144>
 80033b4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80033b6:	191a      	adds	r2, r3, r4
 80033b8:	921b      	str	r2, [sp, #108]	; 0x6c
 80033ba:	9a04      	ldr	r2, [sp, #16]
 80033bc:	5d1b      	ldrb	r3, [r3, r4]
 80033be:	2a00      	cmp	r2, #0
 80033c0:	d037      	beq.n	8003432 <_strtod_l+0x242>
 80033c2:	4602      	mov	r2, r0
 80033c4:	9c04      	ldr	r4, [sp, #16]
 80033c6:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 80033ca:	2909      	cmp	r1, #9
 80033cc:	d913      	bls.n	80033f6 <_strtod_l+0x206>
 80033ce:	2101      	movs	r1, #1
 80033d0:	9105      	str	r1, [sp, #20]
 80033d2:	e7c2      	b.n	800335a <_strtod_l+0x16a>
 80033d4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80033d6:	3001      	adds	r0, #1
 80033d8:	1c5a      	adds	r2, r3, #1
 80033da:	921b      	str	r2, [sp, #108]	; 0x6c
 80033dc:	785b      	ldrb	r3, [r3, #1]
 80033de:	2b30      	cmp	r3, #48	; 0x30
 80033e0:	d0f8      	beq.n	80033d4 <_strtod_l+0x1e4>
 80033e2:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
 80033e6:	2a08      	cmp	r2, #8
 80033e8:	f200 84f0 	bhi.w	8003dcc <_strtod_l+0xbdc>
 80033ec:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80033ee:	9208      	str	r2, [sp, #32]
 80033f0:	4602      	mov	r2, r0
 80033f2:	2000      	movs	r0, #0
 80033f4:	4604      	mov	r4, r0
 80033f6:	f1b3 0e30 	subs.w	lr, r3, #48	; 0x30
 80033fa:	f100 0101 	add.w	r1, r0, #1
 80033fe:	d012      	beq.n	8003426 <_strtod_l+0x236>
 8003400:	440a      	add	r2, r1
 8003402:	270a      	movs	r7, #10
 8003404:	4621      	mov	r1, r4
 8003406:	eb00 0c04 	add.w	ip, r0, r4
 800340a:	458c      	cmp	ip, r1
 800340c:	d113      	bne.n	8003436 <_strtod_l+0x246>
 800340e:	1821      	adds	r1, r4, r0
 8003410:	2908      	cmp	r1, #8
 8003412:	f104 0401 	add.w	r4, r4, #1
 8003416:	4404      	add	r4, r0
 8003418:	dc19      	bgt.n	800344e <_strtod_l+0x25e>
 800341a:	210a      	movs	r1, #10
 800341c:	9b06      	ldr	r3, [sp, #24]
 800341e:	fb01 e303 	mla	r3, r1, r3, lr
 8003422:	9306      	str	r3, [sp, #24]
 8003424:	2100      	movs	r1, #0
 8003426:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8003428:	1c58      	adds	r0, r3, #1
 800342a:	901b      	str	r0, [sp, #108]	; 0x6c
 800342c:	785b      	ldrb	r3, [r3, #1]
 800342e:	4608      	mov	r0, r1
 8003430:	e7c9      	b.n	80033c6 <_strtod_l+0x1d6>
 8003432:	9804      	ldr	r0, [sp, #16]
 8003434:	e7d3      	b.n	80033de <_strtod_l+0x1ee>
 8003436:	2908      	cmp	r1, #8
 8003438:	f101 0101 	add.w	r1, r1, #1
 800343c:	dc03      	bgt.n	8003446 <_strtod_l+0x256>
 800343e:	9b06      	ldr	r3, [sp, #24]
 8003440:	437b      	muls	r3, r7
 8003442:	9306      	str	r3, [sp, #24]
 8003444:	e7e1      	b.n	800340a <_strtod_l+0x21a>
 8003446:	2910      	cmp	r1, #16
 8003448:	bfd8      	it	le
 800344a:	437d      	mulle	r5, r7
 800344c:	e7dd      	b.n	800340a <_strtod_l+0x21a>
 800344e:	2c10      	cmp	r4, #16
 8003450:	bfdc      	itt	le
 8003452:	210a      	movle	r1, #10
 8003454:	fb01 e505 	mlale	r5, r1, r5, lr
 8003458:	e7e4      	b.n	8003424 <_strtod_l+0x234>
 800345a:	2301      	movs	r3, #1
 800345c:	9305      	str	r3, [sp, #20]
 800345e:	e781      	b.n	8003364 <_strtod_l+0x174>
 8003460:	f04f 0c01 	mov.w	ip, #1
 8003464:	1cb3      	adds	r3, r6, #2
 8003466:	931b      	str	r3, [sp, #108]	; 0x6c
 8003468:	78b3      	ldrb	r3, [r6, #2]
 800346a:	e78a      	b.n	8003382 <_strtod_l+0x192>
 800346c:	f04f 0c00 	mov.w	ip, #0
 8003470:	e7f8      	b.n	8003464 <_strtod_l+0x274>
 8003472:	bf00      	nop
 8003474:	08007520 	.word	0x08007520
 8003478:	7ff00000 	.word	0x7ff00000
 800347c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800347e:	1c5f      	adds	r7, r3, #1
 8003480:	971b      	str	r7, [sp, #108]	; 0x6c
 8003482:	785b      	ldrb	r3, [r3, #1]
 8003484:	2b30      	cmp	r3, #48	; 0x30
 8003486:	d0f9      	beq.n	800347c <_strtod_l+0x28c>
 8003488:	f1a3 0731 	sub.w	r7, r3, #49	; 0x31
 800348c:	2f08      	cmp	r7, #8
 800348e:	f63f af7d 	bhi.w	800338c <_strtod_l+0x19c>
 8003492:	f1a3 0e30 	sub.w	lr, r3, #48	; 0x30
 8003496:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8003498:	9309      	str	r3, [sp, #36]	; 0x24
 800349a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800349c:	1c5f      	adds	r7, r3, #1
 800349e:	971b      	str	r7, [sp, #108]	; 0x6c
 80034a0:	785b      	ldrb	r3, [r3, #1]
 80034a2:	f1a3 0830 	sub.w	r8, r3, #48	; 0x30
 80034a6:	f1b8 0f09 	cmp.w	r8, #9
 80034aa:	d937      	bls.n	800351c <_strtod_l+0x32c>
 80034ac:	9909      	ldr	r1, [sp, #36]	; 0x24
 80034ae:	1a7f      	subs	r7, r7, r1
 80034b0:	2f08      	cmp	r7, #8
 80034b2:	f644 671f 	movw	r7, #19999	; 0x4e1f
 80034b6:	dc37      	bgt.n	8003528 <_strtod_l+0x338>
 80034b8:	45be      	cmp	lr, r7
 80034ba:	bfa8      	it	ge
 80034bc:	46be      	movge	lr, r7
 80034be:	f1bc 0f00 	cmp.w	ip, #0
 80034c2:	d001      	beq.n	80034c8 <_strtod_l+0x2d8>
 80034c4:	f1ce 0e00 	rsb	lr, lr, #0
 80034c8:	2c00      	cmp	r4, #0
 80034ca:	d151      	bne.n	8003570 <_strtod_l+0x380>
 80034cc:	2800      	cmp	r0, #0
 80034ce:	f47f aece 	bne.w	800326e <_strtod_l+0x7e>
 80034d2:	9a07      	ldr	r2, [sp, #28]
 80034d4:	2a00      	cmp	r2, #0
 80034d6:	f47f aeca 	bne.w	800326e <_strtod_l+0x7e>
 80034da:	9a05      	ldr	r2, [sp, #20]
 80034dc:	2a00      	cmp	r2, #0
 80034de:	f47f aee4 	bne.w	80032aa <_strtod_l+0xba>
 80034e2:	2b4e      	cmp	r3, #78	; 0x4e
 80034e4:	d027      	beq.n	8003536 <_strtod_l+0x346>
 80034e6:	dc21      	bgt.n	800352c <_strtod_l+0x33c>
 80034e8:	2b49      	cmp	r3, #73	; 0x49
 80034ea:	f47f aede 	bne.w	80032aa <_strtod_l+0xba>
 80034ee:	49a4      	ldr	r1, [pc, #656]	; (8003780 <_strtod_l+0x590>)
 80034f0:	a81b      	add	r0, sp, #108	; 0x6c
 80034f2:	f001 f8ab 	bl	800464c <__match>
 80034f6:	2800      	cmp	r0, #0
 80034f8:	f43f aed7 	beq.w	80032aa <_strtod_l+0xba>
 80034fc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80034fe:	49a1      	ldr	r1, [pc, #644]	; (8003784 <_strtod_l+0x594>)
 8003500:	3b01      	subs	r3, #1
 8003502:	a81b      	add	r0, sp, #108	; 0x6c
 8003504:	931b      	str	r3, [sp, #108]	; 0x6c
 8003506:	f001 f8a1 	bl	800464c <__match>
 800350a:	b910      	cbnz	r0, 8003512 <_strtod_l+0x322>
 800350c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800350e:	3301      	adds	r3, #1
 8003510:	931b      	str	r3, [sp, #108]	; 0x6c
 8003512:	f8df a284 	ldr.w	sl, [pc, #644]	; 8003798 <_strtod_l+0x5a8>
 8003516:	f04f 0900 	mov.w	r9, #0
 800351a:	e6a8      	b.n	800326e <_strtod_l+0x7e>
 800351c:	210a      	movs	r1, #10
 800351e:	fb01 3e0e 	mla	lr, r1, lr, r3
 8003522:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
 8003526:	e7b8      	b.n	800349a <_strtod_l+0x2aa>
 8003528:	46be      	mov	lr, r7
 800352a:	e7c8      	b.n	80034be <_strtod_l+0x2ce>
 800352c:	2b69      	cmp	r3, #105	; 0x69
 800352e:	d0de      	beq.n	80034ee <_strtod_l+0x2fe>
 8003530:	2b6e      	cmp	r3, #110	; 0x6e
 8003532:	f47f aeba 	bne.w	80032aa <_strtod_l+0xba>
 8003536:	4994      	ldr	r1, [pc, #592]	; (8003788 <_strtod_l+0x598>)
 8003538:	a81b      	add	r0, sp, #108	; 0x6c
 800353a:	f001 f887 	bl	800464c <__match>
 800353e:	2800      	cmp	r0, #0
 8003540:	f43f aeb3 	beq.w	80032aa <_strtod_l+0xba>
 8003544:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8003546:	781b      	ldrb	r3, [r3, #0]
 8003548:	2b28      	cmp	r3, #40	; 0x28
 800354a:	d10e      	bne.n	800356a <_strtod_l+0x37a>
 800354c:	aa1e      	add	r2, sp, #120	; 0x78
 800354e:	498f      	ldr	r1, [pc, #572]	; (800378c <_strtod_l+0x59c>)
 8003550:	a81b      	add	r0, sp, #108	; 0x6c
 8003552:	f001 f88f 	bl	8004674 <__hexnan>
 8003556:	2805      	cmp	r0, #5
 8003558:	d107      	bne.n	800356a <_strtod_l+0x37a>
 800355a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800355c:	f8dd 9078 	ldr.w	r9, [sp, #120]	; 0x78
 8003560:	f043 4aff 	orr.w	sl, r3, #2139095040	; 0x7f800000
 8003564:	f44a 0ae0 	orr.w	sl, sl, #7340032	; 0x700000
 8003568:	e681      	b.n	800326e <_strtod_l+0x7e>
 800356a:	f8df a234 	ldr.w	sl, [pc, #564]	; 80037a0 <_strtod_l+0x5b0>
 800356e:	e7d2      	b.n	8003516 <_strtod_l+0x326>
 8003570:	ebae 0302 	sub.w	r3, lr, r2
 8003574:	9307      	str	r3, [sp, #28]
 8003576:	9b04      	ldr	r3, [sp, #16]
 8003578:	9806      	ldr	r0, [sp, #24]
 800357a:	2b00      	cmp	r3, #0
 800357c:	bf08      	it	eq
 800357e:	4623      	moveq	r3, r4
 8003580:	2c10      	cmp	r4, #16
 8003582:	9304      	str	r3, [sp, #16]
 8003584:	46a0      	mov	r8, r4
 8003586:	bfa8      	it	ge
 8003588:	f04f 0810 	movge.w	r8, #16
 800358c:	f7fc ff3a 	bl	8000404 <__aeabi_ui2d>
 8003590:	2c09      	cmp	r4, #9
 8003592:	4681      	mov	r9, r0
 8003594:	468a      	mov	sl, r1
 8003596:	dc13      	bgt.n	80035c0 <_strtod_l+0x3d0>
 8003598:	9b07      	ldr	r3, [sp, #28]
 800359a:	2b00      	cmp	r3, #0
 800359c:	f43f ae67 	beq.w	800326e <_strtod_l+0x7e>
 80035a0:	9b07      	ldr	r3, [sp, #28]
 80035a2:	dd7e      	ble.n	80036a2 <_strtod_l+0x4b2>
 80035a4:	2b16      	cmp	r3, #22
 80035a6:	dc65      	bgt.n	8003674 <_strtod_l+0x484>
 80035a8:	4a79      	ldr	r2, [pc, #484]	; (8003790 <_strtod_l+0x5a0>)
 80035aa:	eb02 0ec3 	add.w	lr, r2, r3, lsl #3
 80035ae:	464a      	mov	r2, r9
 80035b0:	e9de 0100 	ldrd	r0, r1, [lr]
 80035b4:	4653      	mov	r3, sl
 80035b6:	f7fc ff9f 	bl	80004f8 <__aeabi_dmul>
 80035ba:	4681      	mov	r9, r0
 80035bc:	468a      	mov	sl, r1
 80035be:	e656      	b.n	800326e <_strtod_l+0x7e>
 80035c0:	4b73      	ldr	r3, [pc, #460]	; (8003790 <_strtod_l+0x5a0>)
 80035c2:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 80035c6:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 80035ca:	f7fc ff95 	bl	80004f8 <__aeabi_dmul>
 80035ce:	4606      	mov	r6, r0
 80035d0:	4628      	mov	r0, r5
 80035d2:	460f      	mov	r7, r1
 80035d4:	f7fc ff16 	bl	8000404 <__aeabi_ui2d>
 80035d8:	4602      	mov	r2, r0
 80035da:	460b      	mov	r3, r1
 80035dc:	4630      	mov	r0, r6
 80035de:	4639      	mov	r1, r7
 80035e0:	f7fc fdd4 	bl	800018c <__adddf3>
 80035e4:	2c0f      	cmp	r4, #15
 80035e6:	4681      	mov	r9, r0
 80035e8:	468a      	mov	sl, r1
 80035ea:	ddd5      	ble.n	8003598 <_strtod_l+0x3a8>
 80035ec:	9b07      	ldr	r3, [sp, #28]
 80035ee:	eba4 0808 	sub.w	r8, r4, r8
 80035f2:	4498      	add	r8, r3
 80035f4:	f1b8 0f00 	cmp.w	r8, #0
 80035f8:	f340 809a 	ble.w	8003730 <_strtod_l+0x540>
 80035fc:	f018 030f 	ands.w	r3, r8, #15
 8003600:	d00a      	beq.n	8003618 <_strtod_l+0x428>
 8003602:	4963      	ldr	r1, [pc, #396]	; (8003790 <_strtod_l+0x5a0>)
 8003604:	464a      	mov	r2, r9
 8003606:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800360a:	e9d1 0100 	ldrd	r0, r1, [r1]
 800360e:	4653      	mov	r3, sl
 8003610:	f7fc ff72 	bl	80004f8 <__aeabi_dmul>
 8003614:	4681      	mov	r9, r0
 8003616:	468a      	mov	sl, r1
 8003618:	f038 080f 	bics.w	r8, r8, #15
 800361c:	d077      	beq.n	800370e <_strtod_l+0x51e>
 800361e:	f5b8 7f9a 	cmp.w	r8, #308	; 0x134
 8003622:	dd4b      	ble.n	80036bc <_strtod_l+0x4cc>
 8003624:	f04f 0800 	mov.w	r8, #0
 8003628:	f8cd 8010 	str.w	r8, [sp, #16]
 800362c:	f8cd 8020 	str.w	r8, [sp, #32]
 8003630:	f8cd 8018 	str.w	r8, [sp, #24]
 8003634:	2322      	movs	r3, #34	; 0x22
 8003636:	f04f 0900 	mov.w	r9, #0
 800363a:	f8df a15c 	ldr.w	sl, [pc, #348]	; 8003798 <_strtod_l+0x5a8>
 800363e:	f8cb 3000 	str.w	r3, [fp]
 8003642:	9b08      	ldr	r3, [sp, #32]
 8003644:	2b00      	cmp	r3, #0
 8003646:	f43f ae12 	beq.w	800326e <_strtod_l+0x7e>
 800364a:	991c      	ldr	r1, [sp, #112]	; 0x70
 800364c:	4658      	mov	r0, fp
 800364e:	f001 f8fc 	bl	800484a <_Bfree>
 8003652:	9906      	ldr	r1, [sp, #24]
 8003654:	4658      	mov	r0, fp
 8003656:	f001 f8f8 	bl	800484a <_Bfree>
 800365a:	9904      	ldr	r1, [sp, #16]
 800365c:	4658      	mov	r0, fp
 800365e:	f001 f8f4 	bl	800484a <_Bfree>
 8003662:	9908      	ldr	r1, [sp, #32]
 8003664:	4658      	mov	r0, fp
 8003666:	f001 f8f0 	bl	800484a <_Bfree>
 800366a:	4641      	mov	r1, r8
 800366c:	4658      	mov	r0, fp
 800366e:	f001 f8ec 	bl	800484a <_Bfree>
 8003672:	e5fc      	b.n	800326e <_strtod_l+0x7e>
 8003674:	9a07      	ldr	r2, [sp, #28]
 8003676:	f1c4 0325 	rsb	r3, r4, #37	; 0x25
 800367a:	4293      	cmp	r3, r2
 800367c:	dbb6      	blt.n	80035ec <_strtod_l+0x3fc>
 800367e:	4d44      	ldr	r5, [pc, #272]	; (8003790 <_strtod_l+0x5a0>)
 8003680:	f1c4 040f 	rsb	r4, r4, #15
 8003684:	eb05 01c4 	add.w	r1, r5, r4, lsl #3
 8003688:	464a      	mov	r2, r9
 800368a:	e9d1 0100 	ldrd	r0, r1, [r1]
 800368e:	4653      	mov	r3, sl
 8003690:	f7fc ff32 	bl	80004f8 <__aeabi_dmul>
 8003694:	9b07      	ldr	r3, [sp, #28]
 8003696:	1b1c      	subs	r4, r3, r4
 8003698:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
 800369c:	e9d5 2300 	ldrd	r2, r3, [r5]
 80036a0:	e789      	b.n	80035b6 <_strtod_l+0x3c6>
 80036a2:	f113 0f16 	cmn.w	r3, #22
 80036a6:	dba1      	blt.n	80035ec <_strtod_l+0x3fc>
 80036a8:	4a39      	ldr	r2, [pc, #228]	; (8003790 <_strtod_l+0x5a0>)
 80036aa:	4648      	mov	r0, r9
 80036ac:	eba2 02c3 	sub.w	r2, r2, r3, lsl #3
 80036b0:	e9d2 2300 	ldrd	r2, r3, [r2]
 80036b4:	4651      	mov	r1, sl
 80036b6:	f7fd f849 	bl	800074c <__aeabi_ddiv>
 80036ba:	e77e      	b.n	80035ba <_strtod_l+0x3ca>
 80036bc:	2300      	movs	r3, #0
 80036be:	4648      	mov	r0, r9
 80036c0:	4651      	mov	r1, sl
 80036c2:	461d      	mov	r5, r3
 80036c4:	4e33      	ldr	r6, [pc, #204]	; (8003794 <_strtod_l+0x5a4>)
 80036c6:	ea4f 1828 	mov.w	r8, r8, asr #4
 80036ca:	f1b8 0f01 	cmp.w	r8, #1
 80036ce:	dc21      	bgt.n	8003714 <_strtod_l+0x524>
 80036d0:	b10b      	cbz	r3, 80036d6 <_strtod_l+0x4e6>
 80036d2:	4681      	mov	r9, r0
 80036d4:	468a      	mov	sl, r1
 80036d6:	4b2f      	ldr	r3, [pc, #188]	; (8003794 <_strtod_l+0x5a4>)
 80036d8:	f1aa 7a54 	sub.w	sl, sl, #55574528	; 0x3500000
 80036dc:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 80036e0:	464a      	mov	r2, r9
 80036e2:	e9d5 0100 	ldrd	r0, r1, [r5]
 80036e6:	4653      	mov	r3, sl
 80036e8:	f7fc ff06 	bl	80004f8 <__aeabi_dmul>
 80036ec:	4b2a      	ldr	r3, [pc, #168]	; (8003798 <_strtod_l+0x5a8>)
 80036ee:	460a      	mov	r2, r1
 80036f0:	400b      	ands	r3, r1
 80036f2:	492a      	ldr	r1, [pc, #168]	; (800379c <_strtod_l+0x5ac>)
 80036f4:	4681      	mov	r9, r0
 80036f6:	428b      	cmp	r3, r1
 80036f8:	d894      	bhi.n	8003624 <_strtod_l+0x434>
 80036fa:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 80036fe:	428b      	cmp	r3, r1
 8003700:	bf86      	itte	hi
 8003702:	f04f 39ff 	movhi.w	r9, #4294967295
 8003706:	f8df a09c 	ldrhi.w	sl, [pc, #156]	; 80037a4 <_strtod_l+0x5b4>
 800370a:	f102 7a54 	addls.w	sl, r2, #55574528	; 0x3500000
 800370e:	2300      	movs	r3, #0
 8003710:	9305      	str	r3, [sp, #20]
 8003712:	e07b      	b.n	800380c <_strtod_l+0x61c>
 8003714:	f018 0f01 	tst.w	r8, #1
 8003718:	d006      	beq.n	8003728 <_strtod_l+0x538>
 800371a:	eb06 03c5 	add.w	r3, r6, r5, lsl #3
 800371e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003722:	f7fc fee9 	bl	80004f8 <__aeabi_dmul>
 8003726:	2301      	movs	r3, #1
 8003728:	3501      	adds	r5, #1
 800372a:	ea4f 0868 	mov.w	r8, r8, asr #1
 800372e:	e7cc      	b.n	80036ca <_strtod_l+0x4da>
 8003730:	d0ed      	beq.n	800370e <_strtod_l+0x51e>
 8003732:	f1c8 0800 	rsb	r8, r8, #0
 8003736:	f018 020f 	ands.w	r2, r8, #15
 800373a:	d00a      	beq.n	8003752 <_strtod_l+0x562>
 800373c:	4b14      	ldr	r3, [pc, #80]	; (8003790 <_strtod_l+0x5a0>)
 800373e:	4648      	mov	r0, r9
 8003740:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003744:	4651      	mov	r1, sl
 8003746:	e9d3 2300 	ldrd	r2, r3, [r3]
 800374a:	f7fc ffff 	bl	800074c <__aeabi_ddiv>
 800374e:	4681      	mov	r9, r0
 8003750:	468a      	mov	sl, r1
 8003752:	ea5f 1828 	movs.w	r8, r8, asr #4
 8003756:	d0da      	beq.n	800370e <_strtod_l+0x51e>
 8003758:	f1b8 0f1f 	cmp.w	r8, #31
 800375c:	dd24      	ble.n	80037a8 <_strtod_l+0x5b8>
 800375e:	f04f 0800 	mov.w	r8, #0
 8003762:	f8cd 8010 	str.w	r8, [sp, #16]
 8003766:	f8cd 8020 	str.w	r8, [sp, #32]
 800376a:	f8cd 8018 	str.w	r8, [sp, #24]
 800376e:	2322      	movs	r3, #34	; 0x22
 8003770:	f04f 0900 	mov.w	r9, #0
 8003774:	f04f 0a00 	mov.w	sl, #0
 8003778:	f8cb 3000 	str.w	r3, [fp]
 800377c:	e761      	b.n	8003642 <_strtod_l+0x452>
 800377e:	bf00      	nop
 8003780:	08007517 	.word	0x08007517
 8003784:	08007780 	.word	0x08007780
 8003788:	0800751a 	.word	0x0800751a
 800378c:	08007534 	.word	0x08007534
 8003790:	080075a8 	.word	0x080075a8
 8003794:	08007580 	.word	0x08007580
 8003798:	7ff00000 	.word	0x7ff00000
 800379c:	7ca00000 	.word	0x7ca00000
 80037a0:	fff80000 	.word	0xfff80000
 80037a4:	7fefffff 	.word	0x7fefffff
 80037a8:	f018 0310 	ands.w	r3, r8, #16
 80037ac:	bf18      	it	ne
 80037ae:	236a      	movne	r3, #106	; 0x6a
 80037b0:	4648      	mov	r0, r9
 80037b2:	9305      	str	r3, [sp, #20]
 80037b4:	4651      	mov	r1, sl
 80037b6:	2300      	movs	r3, #0
 80037b8:	4da1      	ldr	r5, [pc, #644]	; (8003a40 <_strtod_l+0x850>)
 80037ba:	f1b8 0f00 	cmp.w	r8, #0
 80037be:	f300 8113 	bgt.w	80039e8 <_strtod_l+0x7f8>
 80037c2:	b10b      	cbz	r3, 80037c8 <_strtod_l+0x5d8>
 80037c4:	4681      	mov	r9, r0
 80037c6:	468a      	mov	sl, r1
 80037c8:	9b05      	ldr	r3, [sp, #20]
 80037ca:	b1bb      	cbz	r3, 80037fc <_strtod_l+0x60c>
 80037cc:	f3ca 530a 	ubfx	r3, sl, #20, #11
 80037d0:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 80037d4:	2b00      	cmp	r3, #0
 80037d6:	4651      	mov	r1, sl
 80037d8:	dd10      	ble.n	80037fc <_strtod_l+0x60c>
 80037da:	2b1f      	cmp	r3, #31
 80037dc:	f340 8110 	ble.w	8003a00 <_strtod_l+0x810>
 80037e0:	2b34      	cmp	r3, #52	; 0x34
 80037e2:	bfd8      	it	le
 80037e4:	f04f 32ff 	movle.w	r2, #4294967295
 80037e8:	f04f 0900 	mov.w	r9, #0
 80037ec:	bfcf      	iteee	gt
 80037ee:	f04f 7a5c 	movgt.w	sl, #57671680	; 0x3700000
 80037f2:	3b20      	suble	r3, #32
 80037f4:	fa02 f303 	lslle.w	r3, r2, r3
 80037f8:	ea03 0a01 	andle.w	sl, r3, r1
 80037fc:	2200      	movs	r2, #0
 80037fe:	2300      	movs	r3, #0
 8003800:	4648      	mov	r0, r9
 8003802:	4651      	mov	r1, sl
 8003804:	f7fd f8e0 	bl	80009c8 <__aeabi_dcmpeq>
 8003808:	2800      	cmp	r0, #0
 800380a:	d1a8      	bne.n	800375e <_strtod_l+0x56e>
 800380c:	9b06      	ldr	r3, [sp, #24]
 800380e:	9a04      	ldr	r2, [sp, #16]
 8003810:	9300      	str	r3, [sp, #0]
 8003812:	9908      	ldr	r1, [sp, #32]
 8003814:	4623      	mov	r3, r4
 8003816:	4658      	mov	r0, fp
 8003818:	f001 f869 	bl	80048ee <__s2b>
 800381c:	9008      	str	r0, [sp, #32]
 800381e:	2800      	cmp	r0, #0
 8003820:	f43f af00 	beq.w	8003624 <_strtod_l+0x434>
 8003824:	9a07      	ldr	r2, [sp, #28]
 8003826:	9b07      	ldr	r3, [sp, #28]
 8003828:	2a00      	cmp	r2, #0
 800382a:	f1c3 0300 	rsb	r3, r3, #0
 800382e:	bfa8      	it	ge
 8003830:	2300      	movge	r3, #0
 8003832:	f04f 0800 	mov.w	r8, #0
 8003836:	930e      	str	r3, [sp, #56]	; 0x38
 8003838:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 800383c:	9316      	str	r3, [sp, #88]	; 0x58
 800383e:	f8cd 8010 	str.w	r8, [sp, #16]
 8003842:	9b08      	ldr	r3, [sp, #32]
 8003844:	4658      	mov	r0, fp
 8003846:	6859      	ldr	r1, [r3, #4]
 8003848:	f000 ffcb 	bl	80047e2 <_Balloc>
 800384c:	9006      	str	r0, [sp, #24]
 800384e:	2800      	cmp	r0, #0
 8003850:	f43f aef0 	beq.w	8003634 <_strtod_l+0x444>
 8003854:	9b08      	ldr	r3, [sp, #32]
 8003856:	300c      	adds	r0, #12
 8003858:	691a      	ldr	r2, [r3, #16]
 800385a:	f103 010c 	add.w	r1, r3, #12
 800385e:	3202      	adds	r2, #2
 8003860:	0092      	lsls	r2, r2, #2
 8003862:	f000 ffb3 	bl	80047cc <memcpy>
 8003866:	ab1e      	add	r3, sp, #120	; 0x78
 8003868:	9301      	str	r3, [sp, #4]
 800386a:	ab1d      	add	r3, sp, #116	; 0x74
 800386c:	9300      	str	r3, [sp, #0]
 800386e:	464a      	mov	r2, r9
 8003870:	4653      	mov	r3, sl
 8003872:	4658      	mov	r0, fp
 8003874:	e9cd 9a0a 	strd	r9, sl, [sp, #40]	; 0x28
 8003878:	f001 faf4 	bl	8004e64 <__d2b>
 800387c:	901c      	str	r0, [sp, #112]	; 0x70
 800387e:	2800      	cmp	r0, #0
 8003880:	f43f aed8 	beq.w	8003634 <_strtod_l+0x444>
 8003884:	2101      	movs	r1, #1
 8003886:	4658      	mov	r0, fp
 8003888:	f001 f8bd 	bl	8004a06 <__i2b>
 800388c:	9004      	str	r0, [sp, #16]
 800388e:	4603      	mov	r3, r0
 8003890:	2800      	cmp	r0, #0
 8003892:	f43f aecf 	beq.w	8003634 <_strtod_l+0x444>
 8003896:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8003898:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 800389a:	2d00      	cmp	r5, #0
 800389c:	bfab      	itete	ge
 800389e:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
 80038a0:	9b16      	ldrlt	r3, [sp, #88]	; 0x58
 80038a2:	18ee      	addge	r6, r5, r3
 80038a4:	1b5c      	sublt	r4, r3, r5
 80038a6:	9b05      	ldr	r3, [sp, #20]
 80038a8:	bfa8      	it	ge
 80038aa:	9c16      	ldrge	r4, [sp, #88]	; 0x58
 80038ac:	eba5 0503 	sub.w	r5, r5, r3
 80038b0:	4415      	add	r5, r2
 80038b2:	4b64      	ldr	r3, [pc, #400]	; (8003a44 <_strtod_l+0x854>)
 80038b4:	f105 35ff 	add.w	r5, r5, #4294967295
 80038b8:	bfb8      	it	lt
 80038ba:	9e0e      	ldrlt	r6, [sp, #56]	; 0x38
 80038bc:	429d      	cmp	r5, r3
 80038be:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 80038c2:	f280 80af 	bge.w	8003a24 <_strtod_l+0x834>
 80038c6:	1b5b      	subs	r3, r3, r5
 80038c8:	2b1f      	cmp	r3, #31
 80038ca:	eba2 0203 	sub.w	r2, r2, r3
 80038ce:	f04f 0701 	mov.w	r7, #1
 80038d2:	f300 809c 	bgt.w	8003a0e <_strtod_l+0x81e>
 80038d6:	2500      	movs	r5, #0
 80038d8:	fa07 f303 	lsl.w	r3, r7, r3
 80038dc:	930f      	str	r3, [sp, #60]	; 0x3c
 80038de:	18b7      	adds	r7, r6, r2
 80038e0:	9b05      	ldr	r3, [sp, #20]
 80038e2:	42be      	cmp	r6, r7
 80038e4:	4414      	add	r4, r2
 80038e6:	441c      	add	r4, r3
 80038e8:	4633      	mov	r3, r6
 80038ea:	bfa8      	it	ge
 80038ec:	463b      	movge	r3, r7
 80038ee:	42a3      	cmp	r3, r4
 80038f0:	bfa8      	it	ge
 80038f2:	4623      	movge	r3, r4
 80038f4:	2b00      	cmp	r3, #0
 80038f6:	bfc2      	ittt	gt
 80038f8:	1aff      	subgt	r7, r7, r3
 80038fa:	1ae4      	subgt	r4, r4, r3
 80038fc:	1af6      	subgt	r6, r6, r3
 80038fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003900:	b1bb      	cbz	r3, 8003932 <_strtod_l+0x742>
 8003902:	461a      	mov	r2, r3
 8003904:	9904      	ldr	r1, [sp, #16]
 8003906:	4658      	mov	r0, fp
 8003908:	f001 f91c 	bl	8004b44 <__pow5mult>
 800390c:	9004      	str	r0, [sp, #16]
 800390e:	2800      	cmp	r0, #0
 8003910:	f43f ae90 	beq.w	8003634 <_strtod_l+0x444>
 8003914:	4601      	mov	r1, r0
 8003916:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8003918:	4658      	mov	r0, fp
 800391a:	f001 f87d 	bl	8004a18 <__multiply>
 800391e:	9009      	str	r0, [sp, #36]	; 0x24
 8003920:	2800      	cmp	r0, #0
 8003922:	f43f ae87 	beq.w	8003634 <_strtod_l+0x444>
 8003926:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003928:	4658      	mov	r0, fp
 800392a:	f000 ff8e 	bl	800484a <_Bfree>
 800392e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003930:	931c      	str	r3, [sp, #112]	; 0x70
 8003932:	2f00      	cmp	r7, #0
 8003934:	dc7a      	bgt.n	8003a2c <_strtod_l+0x83c>
 8003936:	9b07      	ldr	r3, [sp, #28]
 8003938:	2b00      	cmp	r3, #0
 800393a:	dd08      	ble.n	800394e <_strtod_l+0x75e>
 800393c:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800393e:	9906      	ldr	r1, [sp, #24]
 8003940:	4658      	mov	r0, fp
 8003942:	f001 f8ff 	bl	8004b44 <__pow5mult>
 8003946:	9006      	str	r0, [sp, #24]
 8003948:	2800      	cmp	r0, #0
 800394a:	f43f ae73 	beq.w	8003634 <_strtod_l+0x444>
 800394e:	2c00      	cmp	r4, #0
 8003950:	dd08      	ble.n	8003964 <_strtod_l+0x774>
 8003952:	4622      	mov	r2, r4
 8003954:	9906      	ldr	r1, [sp, #24]
 8003956:	4658      	mov	r0, fp
 8003958:	f001 f942 	bl	8004be0 <__lshift>
 800395c:	9006      	str	r0, [sp, #24]
 800395e:	2800      	cmp	r0, #0
 8003960:	f43f ae68 	beq.w	8003634 <_strtod_l+0x444>
 8003964:	2e00      	cmp	r6, #0
 8003966:	dd08      	ble.n	800397a <_strtod_l+0x78a>
 8003968:	4632      	mov	r2, r6
 800396a:	9904      	ldr	r1, [sp, #16]
 800396c:	4658      	mov	r0, fp
 800396e:	f001 f937 	bl	8004be0 <__lshift>
 8003972:	9004      	str	r0, [sp, #16]
 8003974:	2800      	cmp	r0, #0
 8003976:	f43f ae5d 	beq.w	8003634 <_strtod_l+0x444>
 800397a:	9a06      	ldr	r2, [sp, #24]
 800397c:	991c      	ldr	r1, [sp, #112]	; 0x70
 800397e:	4658      	mov	r0, fp
 8003980:	f001 f99c 	bl	8004cbc <__mdiff>
 8003984:	4680      	mov	r8, r0
 8003986:	2800      	cmp	r0, #0
 8003988:	f43f ae54 	beq.w	8003634 <_strtod_l+0x444>
 800398c:	2400      	movs	r4, #0
 800398e:	68c3      	ldr	r3, [r0, #12]
 8003990:	9904      	ldr	r1, [sp, #16]
 8003992:	60c4      	str	r4, [r0, #12]
 8003994:	930c      	str	r3, [sp, #48]	; 0x30
 8003996:	f001 f977 	bl	8004c88 <__mcmp>
 800399a:	42a0      	cmp	r0, r4
 800399c:	da54      	bge.n	8003a48 <_strtod_l+0x858>
 800399e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80039a0:	b9f3      	cbnz	r3, 80039e0 <_strtod_l+0x7f0>
 80039a2:	f1b9 0f00 	cmp.w	r9, #0
 80039a6:	d11b      	bne.n	80039e0 <_strtod_l+0x7f0>
 80039a8:	f3ca 0313 	ubfx	r3, sl, #0, #20
 80039ac:	b9c3      	cbnz	r3, 80039e0 <_strtod_l+0x7f0>
 80039ae:	f02a 4300 	bic.w	r3, sl, #2147483648	; 0x80000000
 80039b2:	0d1b      	lsrs	r3, r3, #20
 80039b4:	051b      	lsls	r3, r3, #20
 80039b6:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 80039ba:	d911      	bls.n	80039e0 <_strtod_l+0x7f0>
 80039bc:	f8d8 3014 	ldr.w	r3, [r8, #20]
 80039c0:	b91b      	cbnz	r3, 80039ca <_strtod_l+0x7da>
 80039c2:	f8d8 3010 	ldr.w	r3, [r8, #16]
 80039c6:	2b01      	cmp	r3, #1
 80039c8:	dd0a      	ble.n	80039e0 <_strtod_l+0x7f0>
 80039ca:	4641      	mov	r1, r8
 80039cc:	2201      	movs	r2, #1
 80039ce:	4658      	mov	r0, fp
 80039d0:	f001 f906 	bl	8004be0 <__lshift>
 80039d4:	9904      	ldr	r1, [sp, #16]
 80039d6:	4680      	mov	r8, r0
 80039d8:	f001 f956 	bl	8004c88 <__mcmp>
 80039dc:	2800      	cmp	r0, #0
 80039de:	dc68      	bgt.n	8003ab2 <_strtod_l+0x8c2>
 80039e0:	9b05      	ldr	r3, [sp, #20]
 80039e2:	2b00      	cmp	r3, #0
 80039e4:	d172      	bne.n	8003acc <_strtod_l+0x8dc>
 80039e6:	e630      	b.n	800364a <_strtod_l+0x45a>
 80039e8:	f018 0f01 	tst.w	r8, #1
 80039ec:	d004      	beq.n	80039f8 <_strtod_l+0x808>
 80039ee:	e9d5 2300 	ldrd	r2, r3, [r5]
 80039f2:	f7fc fd81 	bl	80004f8 <__aeabi_dmul>
 80039f6:	2301      	movs	r3, #1
 80039f8:	ea4f 0868 	mov.w	r8, r8, asr #1
 80039fc:	3508      	adds	r5, #8
 80039fe:	e6dc      	b.n	80037ba <_strtod_l+0x5ca>
 8003a00:	f04f 32ff 	mov.w	r2, #4294967295
 8003a04:	fa02 f303 	lsl.w	r3, r2, r3
 8003a08:	ea03 0909 	and.w	r9, r3, r9
 8003a0c:	e6f6      	b.n	80037fc <_strtod_l+0x60c>
 8003a0e:	f1c5 457f 	rsb	r5, r5, #4278190080	; 0xff000000
 8003a12:	f505 057f 	add.w	r5, r5, #16711680	; 0xff0000
 8003a16:	f505 457b 	add.w	r5, r5, #64256	; 0xfb00
 8003a1a:	35e2      	adds	r5, #226	; 0xe2
 8003a1c:	fa07 f505 	lsl.w	r5, r7, r5
 8003a20:	970f      	str	r7, [sp, #60]	; 0x3c
 8003a22:	e75c      	b.n	80038de <_strtod_l+0x6ee>
 8003a24:	2301      	movs	r3, #1
 8003a26:	2500      	movs	r5, #0
 8003a28:	930f      	str	r3, [sp, #60]	; 0x3c
 8003a2a:	e758      	b.n	80038de <_strtod_l+0x6ee>
 8003a2c:	463a      	mov	r2, r7
 8003a2e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003a30:	4658      	mov	r0, fp
 8003a32:	f001 f8d5 	bl	8004be0 <__lshift>
 8003a36:	901c      	str	r0, [sp, #112]	; 0x70
 8003a38:	2800      	cmp	r0, #0
 8003a3a:	f47f af7c 	bne.w	8003936 <_strtod_l+0x746>
 8003a3e:	e5f9      	b.n	8003634 <_strtod_l+0x444>
 8003a40:	08007548 	.word	0x08007548
 8003a44:	fffffc02 	.word	0xfffffc02
 8003a48:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 8003a4c:	f040 8089 	bne.w	8003b62 <_strtod_l+0x972>
 8003a50:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8003a52:	f3ca 0313 	ubfx	r3, sl, #0, #20
 8003a56:	b342      	cbz	r2, 8003aaa <_strtod_l+0x8ba>
 8003a58:	4aaf      	ldr	r2, [pc, #700]	; (8003d18 <_strtod_l+0xb28>)
 8003a5a:	4293      	cmp	r3, r2
 8003a5c:	d156      	bne.n	8003b0c <_strtod_l+0x91c>
 8003a5e:	9b05      	ldr	r3, [sp, #20]
 8003a60:	4648      	mov	r0, r9
 8003a62:	b1eb      	cbz	r3, 8003aa0 <_strtod_l+0x8b0>
 8003a64:	4653      	mov	r3, sl
 8003a66:	4aad      	ldr	r2, [pc, #692]	; (8003d1c <_strtod_l+0xb2c>)
 8003a68:	f04f 31ff 	mov.w	r1, #4294967295
 8003a6c:	401a      	ands	r2, r3
 8003a6e:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
 8003a72:	d818      	bhi.n	8003aa6 <_strtod_l+0x8b6>
 8003a74:	0d12      	lsrs	r2, r2, #20
 8003a76:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 8003a7a:	fa01 f303 	lsl.w	r3, r1, r3
 8003a7e:	4298      	cmp	r0, r3
 8003a80:	d144      	bne.n	8003b0c <_strtod_l+0x91c>
 8003a82:	4ba7      	ldr	r3, [pc, #668]	; (8003d20 <_strtod_l+0xb30>)
 8003a84:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003a86:	429a      	cmp	r2, r3
 8003a88:	d102      	bne.n	8003a90 <_strtod_l+0x8a0>
 8003a8a:	3001      	adds	r0, #1
 8003a8c:	f43f add2 	beq.w	8003634 <_strtod_l+0x444>
 8003a90:	4ba2      	ldr	r3, [pc, #648]	; (8003d1c <_strtod_l+0xb2c>)
 8003a92:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003a94:	f04f 0900 	mov.w	r9, #0
 8003a98:	401a      	ands	r2, r3
 8003a9a:	f502 1a80 	add.w	sl, r2, #1048576	; 0x100000
 8003a9e:	e79f      	b.n	80039e0 <_strtod_l+0x7f0>
 8003aa0:	f04f 33ff 	mov.w	r3, #4294967295
 8003aa4:	e7eb      	b.n	8003a7e <_strtod_l+0x88e>
 8003aa6:	460b      	mov	r3, r1
 8003aa8:	e7e9      	b.n	8003a7e <_strtod_l+0x88e>
 8003aaa:	bb7b      	cbnz	r3, 8003b0c <_strtod_l+0x91c>
 8003aac:	f1b9 0f00 	cmp.w	r9, #0
 8003ab0:	d12c      	bne.n	8003b0c <_strtod_l+0x91c>
 8003ab2:	9905      	ldr	r1, [sp, #20]
 8003ab4:	4653      	mov	r3, sl
 8003ab6:	4a99      	ldr	r2, [pc, #612]	; (8003d1c <_strtod_l+0xb2c>)
 8003ab8:	b1f1      	cbz	r1, 8003af8 <_strtod_l+0x908>
 8003aba:	ea02 010a 	and.w	r1, r2, sl
 8003abe:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 8003ac2:	dc19      	bgt.n	8003af8 <_strtod_l+0x908>
 8003ac4:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 8003ac8:	f77f ae51 	ble.w	800376e <_strtod_l+0x57e>
 8003acc:	2300      	movs	r3, #0
 8003ace:	4a95      	ldr	r2, [pc, #596]	; (8003d24 <_strtod_l+0xb34>)
 8003ad0:	4648      	mov	r0, r9
 8003ad2:	e9cd 3214 	strd	r3, r2, [sp, #80]	; 0x50
 8003ad6:	4651      	mov	r1, sl
 8003ad8:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 8003adc:	f7fc fd0c 	bl	80004f8 <__aeabi_dmul>
 8003ae0:	4681      	mov	r9, r0
 8003ae2:	468a      	mov	sl, r1
 8003ae4:	2900      	cmp	r1, #0
 8003ae6:	f47f adb0 	bne.w	800364a <_strtod_l+0x45a>
 8003aea:	2800      	cmp	r0, #0
 8003aec:	f47f adad 	bne.w	800364a <_strtod_l+0x45a>
 8003af0:	2322      	movs	r3, #34	; 0x22
 8003af2:	f8cb 3000 	str.w	r3, [fp]
 8003af6:	e5a8      	b.n	800364a <_strtod_l+0x45a>
 8003af8:	4013      	ands	r3, r2
 8003afa:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 8003afe:	ea6f 5a13 	mvn.w	sl, r3, lsr #20
 8003b02:	f04f 39ff 	mov.w	r9, #4294967295
 8003b06:	ea6f 5a0a 	mvn.w	sl, sl, lsl #20
 8003b0a:	e769      	b.n	80039e0 <_strtod_l+0x7f0>
 8003b0c:	b19d      	cbz	r5, 8003b36 <_strtod_l+0x946>
 8003b0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003b10:	421d      	tst	r5, r3
 8003b12:	f43f af65 	beq.w	80039e0 <_strtod_l+0x7f0>
 8003b16:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003b18:	9a05      	ldr	r2, [sp, #20]
 8003b1a:	4648      	mov	r0, r9
 8003b1c:	4651      	mov	r1, sl
 8003b1e:	b173      	cbz	r3, 8003b3e <_strtod_l+0x94e>
 8003b20:	f7ff fb42 	bl	80031a8 <sulp>
 8003b24:	4602      	mov	r2, r0
 8003b26:	460b      	mov	r3, r1
 8003b28:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8003b2c:	f7fc fb2e 	bl	800018c <__adddf3>
 8003b30:	4681      	mov	r9, r0
 8003b32:	468a      	mov	sl, r1
 8003b34:	e754      	b.n	80039e0 <_strtod_l+0x7f0>
 8003b36:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003b38:	ea13 0f09 	tst.w	r3, r9
 8003b3c:	e7e9      	b.n	8003b12 <_strtod_l+0x922>
 8003b3e:	f7ff fb33 	bl	80031a8 <sulp>
 8003b42:	4602      	mov	r2, r0
 8003b44:	460b      	mov	r3, r1
 8003b46:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8003b4a:	f7fc fb1d 	bl	8000188 <__aeabi_dsub>
 8003b4e:	2200      	movs	r2, #0
 8003b50:	2300      	movs	r3, #0
 8003b52:	4681      	mov	r9, r0
 8003b54:	468a      	mov	sl, r1
 8003b56:	f7fc ff37 	bl	80009c8 <__aeabi_dcmpeq>
 8003b5a:	2800      	cmp	r0, #0
 8003b5c:	f47f ae07 	bne.w	800376e <_strtod_l+0x57e>
 8003b60:	e73e      	b.n	80039e0 <_strtod_l+0x7f0>
 8003b62:	9904      	ldr	r1, [sp, #16]
 8003b64:	4640      	mov	r0, r8
 8003b66:	f001 f9cc 	bl	8004f02 <__ratio>
 8003b6a:	2200      	movs	r2, #0
 8003b6c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003b70:	4606      	mov	r6, r0
 8003b72:	460f      	mov	r7, r1
 8003b74:	f7fc ff3c 	bl	80009f0 <__aeabi_dcmple>
 8003b78:	2800      	cmp	r0, #0
 8003b7a:	d075      	beq.n	8003c68 <_strtod_l+0xa78>
 8003b7c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003b7e:	2b00      	cmp	r3, #0
 8003b80:	d047      	beq.n	8003c12 <_strtod_l+0xa22>
 8003b82:	2600      	movs	r6, #0
 8003b84:	4f68      	ldr	r7, [pc, #416]	; (8003d28 <_strtod_l+0xb38>)
 8003b86:	4d68      	ldr	r5, [pc, #416]	; (8003d28 <_strtod_l+0xb38>)
 8003b88:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003b8a:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8003b8e:	0d1b      	lsrs	r3, r3, #20
 8003b90:	051b      	lsls	r3, r3, #20
 8003b92:	930f      	str	r3, [sp, #60]	; 0x3c
 8003b94:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8003b96:	4b65      	ldr	r3, [pc, #404]	; (8003d2c <_strtod_l+0xb3c>)
 8003b98:	429a      	cmp	r2, r3
 8003b9a:	f040 80cf 	bne.w	8003d3c <_strtod_l+0xb4c>
 8003b9e:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8003ba2:	e9cd 2314 	strd	r2, r3, [sp, #80]	; 0x50
 8003ba6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003ba8:	4648      	mov	r0, r9
 8003baa:	f1a3 7a54 	sub.w	sl, r3, #55574528	; 0x3500000
 8003bae:	4651      	mov	r1, sl
 8003bb0:	f001 f8e2 	bl	8004d78 <__ulp>
 8003bb4:	4602      	mov	r2, r0
 8003bb6:	460b      	mov	r3, r1
 8003bb8:	4630      	mov	r0, r6
 8003bba:	4639      	mov	r1, r7
 8003bbc:	f7fc fc9c 	bl	80004f8 <__aeabi_dmul>
 8003bc0:	464a      	mov	r2, r9
 8003bc2:	4653      	mov	r3, sl
 8003bc4:	f7fc fae2 	bl	800018c <__adddf3>
 8003bc8:	460b      	mov	r3, r1
 8003bca:	4954      	ldr	r1, [pc, #336]	; (8003d1c <_strtod_l+0xb2c>)
 8003bcc:	4a58      	ldr	r2, [pc, #352]	; (8003d30 <_strtod_l+0xb40>)
 8003bce:	4019      	ands	r1, r3
 8003bd0:	4291      	cmp	r1, r2
 8003bd2:	4681      	mov	r9, r0
 8003bd4:	d95e      	bls.n	8003c94 <_strtod_l+0xaa4>
 8003bd6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003bd8:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 8003bdc:	4293      	cmp	r3, r2
 8003bde:	d103      	bne.n	8003be8 <_strtod_l+0x9f8>
 8003be0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003be2:	3301      	adds	r3, #1
 8003be4:	f43f ad26 	beq.w	8003634 <_strtod_l+0x444>
 8003be8:	f04f 39ff 	mov.w	r9, #4294967295
 8003bec:	f8df a130 	ldr.w	sl, [pc, #304]	; 8003d20 <_strtod_l+0xb30>
 8003bf0:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003bf2:	4658      	mov	r0, fp
 8003bf4:	f000 fe29 	bl	800484a <_Bfree>
 8003bf8:	9906      	ldr	r1, [sp, #24]
 8003bfa:	4658      	mov	r0, fp
 8003bfc:	f000 fe25 	bl	800484a <_Bfree>
 8003c00:	9904      	ldr	r1, [sp, #16]
 8003c02:	4658      	mov	r0, fp
 8003c04:	f000 fe21 	bl	800484a <_Bfree>
 8003c08:	4641      	mov	r1, r8
 8003c0a:	4658      	mov	r0, fp
 8003c0c:	f000 fe1d 	bl	800484a <_Bfree>
 8003c10:	e617      	b.n	8003842 <_strtod_l+0x652>
 8003c12:	f1b9 0f00 	cmp.w	r9, #0
 8003c16:	d119      	bne.n	8003c4c <_strtod_l+0xa5c>
 8003c18:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003c1a:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003c1e:	b9e3      	cbnz	r3, 8003c5a <_strtod_l+0xa6a>
 8003c20:	2200      	movs	r2, #0
 8003c22:	4b41      	ldr	r3, [pc, #260]	; (8003d28 <_strtod_l+0xb38>)
 8003c24:	4630      	mov	r0, r6
 8003c26:	4639      	mov	r1, r7
 8003c28:	f7fc fed8 	bl	80009dc <__aeabi_dcmplt>
 8003c2c:	b9c8      	cbnz	r0, 8003c62 <_strtod_l+0xa72>
 8003c2e:	2200      	movs	r2, #0
 8003c30:	4b40      	ldr	r3, [pc, #256]	; (8003d34 <_strtod_l+0xb44>)
 8003c32:	4630      	mov	r0, r6
 8003c34:	4639      	mov	r1, r7
 8003c36:	f7fc fc5f 	bl	80004f8 <__aeabi_dmul>
 8003c3a:	4604      	mov	r4, r0
 8003c3c:	460d      	mov	r5, r1
 8003c3e:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 8003c42:	9418      	str	r4, [sp, #96]	; 0x60
 8003c44:	9319      	str	r3, [sp, #100]	; 0x64
 8003c46:	e9dd 6718 	ldrd	r6, r7, [sp, #96]	; 0x60
 8003c4a:	e79d      	b.n	8003b88 <_strtod_l+0x998>
 8003c4c:	f1b9 0f01 	cmp.w	r9, #1
 8003c50:	d103      	bne.n	8003c5a <_strtod_l+0xa6a>
 8003c52:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003c54:	2b00      	cmp	r3, #0
 8003c56:	f43f ad8a 	beq.w	800376e <_strtod_l+0x57e>
 8003c5a:	2600      	movs	r6, #0
 8003c5c:	4f36      	ldr	r7, [pc, #216]	; (8003d38 <_strtod_l+0xb48>)
 8003c5e:	2400      	movs	r4, #0
 8003c60:	e791      	b.n	8003b86 <_strtod_l+0x996>
 8003c62:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8003c64:	4d33      	ldr	r5, [pc, #204]	; (8003d34 <_strtod_l+0xb44>)
 8003c66:	e7ea      	b.n	8003c3e <_strtod_l+0xa4e>
 8003c68:	4b32      	ldr	r3, [pc, #200]	; (8003d34 <_strtod_l+0xb44>)
 8003c6a:	2200      	movs	r2, #0
 8003c6c:	4630      	mov	r0, r6
 8003c6e:	4639      	mov	r1, r7
 8003c70:	f7fc fc42 	bl	80004f8 <__aeabi_dmul>
 8003c74:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003c76:	4604      	mov	r4, r0
 8003c78:	460d      	mov	r5, r1
 8003c7a:	b933      	cbnz	r3, 8003c8a <_strtod_l+0xa9a>
 8003c7c:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8003c80:	9010      	str	r0, [sp, #64]	; 0x40
 8003c82:	9311      	str	r3, [sp, #68]	; 0x44
 8003c84:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 8003c88:	e77e      	b.n	8003b88 <_strtod_l+0x998>
 8003c8a:	4602      	mov	r2, r0
 8003c8c:	460b      	mov	r3, r1
 8003c8e:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 8003c92:	e7f7      	b.n	8003c84 <_strtod_l+0xa94>
 8003c94:	f103 7a54 	add.w	sl, r3, #55574528	; 0x3500000
 8003c98:	9b05      	ldr	r3, [sp, #20]
 8003c9a:	2b00      	cmp	r3, #0
 8003c9c:	d1a8      	bne.n	8003bf0 <_strtod_l+0xa00>
 8003c9e:	f02a 4300 	bic.w	r3, sl, #2147483648	; 0x80000000
 8003ca2:	0d1b      	lsrs	r3, r3, #20
 8003ca4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8003ca6:	051b      	lsls	r3, r3, #20
 8003ca8:	429a      	cmp	r2, r3
 8003caa:	4656      	mov	r6, sl
 8003cac:	d1a0      	bne.n	8003bf0 <_strtod_l+0xa00>
 8003cae:	4629      	mov	r1, r5
 8003cb0:	4620      	mov	r0, r4
 8003cb2:	f7fc fed1 	bl	8000a58 <__aeabi_d2iz>
 8003cb6:	f7fc fbb5 	bl	8000424 <__aeabi_i2d>
 8003cba:	460b      	mov	r3, r1
 8003cbc:	4602      	mov	r2, r0
 8003cbe:	4629      	mov	r1, r5
 8003cc0:	4620      	mov	r0, r4
 8003cc2:	f7fc fa61 	bl	8000188 <__aeabi_dsub>
 8003cc6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003cc8:	4604      	mov	r4, r0
 8003cca:	460d      	mov	r5, r1
 8003ccc:	b933      	cbnz	r3, 8003cdc <_strtod_l+0xaec>
 8003cce:	f1b9 0f00 	cmp.w	r9, #0
 8003cd2:	d103      	bne.n	8003cdc <_strtod_l+0xaec>
 8003cd4:	f3ca 0613 	ubfx	r6, sl, #0, #20
 8003cd8:	2e00      	cmp	r6, #0
 8003cda:	d06a      	beq.n	8003db2 <_strtod_l+0xbc2>
 8003cdc:	a30a      	add	r3, pc, #40	; (adr r3, 8003d08 <_strtod_l+0xb18>)
 8003cde:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003ce2:	4620      	mov	r0, r4
 8003ce4:	4629      	mov	r1, r5
 8003ce6:	f7fc fe79 	bl	80009dc <__aeabi_dcmplt>
 8003cea:	2800      	cmp	r0, #0
 8003cec:	f47f acad 	bne.w	800364a <_strtod_l+0x45a>
 8003cf0:	a307      	add	r3, pc, #28	; (adr r3, 8003d10 <_strtod_l+0xb20>)
 8003cf2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003cf6:	4620      	mov	r0, r4
 8003cf8:	4629      	mov	r1, r5
 8003cfa:	f7fc fe8d 	bl	8000a18 <__aeabi_dcmpgt>
 8003cfe:	2800      	cmp	r0, #0
 8003d00:	f43f af76 	beq.w	8003bf0 <_strtod_l+0xa00>
 8003d04:	e4a1      	b.n	800364a <_strtod_l+0x45a>
 8003d06:	bf00      	nop
 8003d08:	94a03595 	.word	0x94a03595
 8003d0c:	3fdfffff 	.word	0x3fdfffff
 8003d10:	35afe535 	.word	0x35afe535
 8003d14:	3fe00000 	.word	0x3fe00000
 8003d18:	000fffff 	.word	0x000fffff
 8003d1c:	7ff00000 	.word	0x7ff00000
 8003d20:	7fefffff 	.word	0x7fefffff
 8003d24:	39500000 	.word	0x39500000
 8003d28:	3ff00000 	.word	0x3ff00000
 8003d2c:	7fe00000 	.word	0x7fe00000
 8003d30:	7c9fffff 	.word	0x7c9fffff
 8003d34:	3fe00000 	.word	0x3fe00000
 8003d38:	bff00000 	.word	0xbff00000
 8003d3c:	9b05      	ldr	r3, [sp, #20]
 8003d3e:	b313      	cbz	r3, 8003d86 <_strtod_l+0xb96>
 8003d40:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003d42:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8003d46:	d81e      	bhi.n	8003d86 <_strtod_l+0xb96>
 8003d48:	a325      	add	r3, pc, #148	; (adr r3, 8003de0 <_strtod_l+0xbf0>)
 8003d4a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003d4e:	4620      	mov	r0, r4
 8003d50:	4629      	mov	r1, r5
 8003d52:	f7fc fe4d 	bl	80009f0 <__aeabi_dcmple>
 8003d56:	b190      	cbz	r0, 8003d7e <_strtod_l+0xb8e>
 8003d58:	4629      	mov	r1, r5
 8003d5a:	4620      	mov	r0, r4
 8003d5c:	f7fc fea4 	bl	8000aa8 <__aeabi_d2uiz>
 8003d60:	2800      	cmp	r0, #0
 8003d62:	bf08      	it	eq
 8003d64:	2001      	moveq	r0, #1
 8003d66:	f7fc fb4d 	bl	8000404 <__aeabi_ui2d>
 8003d6a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003d6c:	4604      	mov	r4, r0
 8003d6e:	460d      	mov	r5, r1
 8003d70:	b9d3      	cbnz	r3, 8003da8 <_strtod_l+0xbb8>
 8003d72:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8003d76:	9012      	str	r0, [sp, #72]	; 0x48
 8003d78:	9313      	str	r3, [sp, #76]	; 0x4c
 8003d7a:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
 8003d7e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8003d80:	f107 63d6 	add.w	r3, r7, #112197632	; 0x6b00000
 8003d84:	1a9f      	subs	r7, r3, r2
 8003d86:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8003d8a:	f000 fff5 	bl	8004d78 <__ulp>
 8003d8e:	4602      	mov	r2, r0
 8003d90:	460b      	mov	r3, r1
 8003d92:	4630      	mov	r0, r6
 8003d94:	4639      	mov	r1, r7
 8003d96:	f7fc fbaf 	bl	80004f8 <__aeabi_dmul>
 8003d9a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8003d9e:	f7fc f9f5 	bl	800018c <__adddf3>
 8003da2:	4681      	mov	r9, r0
 8003da4:	468a      	mov	sl, r1
 8003da6:	e777      	b.n	8003c98 <_strtod_l+0xaa8>
 8003da8:	4602      	mov	r2, r0
 8003daa:	460b      	mov	r3, r1
 8003dac:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
 8003db0:	e7e3      	b.n	8003d7a <_strtod_l+0xb8a>
 8003db2:	a30d      	add	r3, pc, #52	; (adr r3, 8003de8 <_strtod_l+0xbf8>)
 8003db4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003db8:	f7fc fe10 	bl	80009dc <__aeabi_dcmplt>
 8003dbc:	e79f      	b.n	8003cfe <_strtod_l+0xb0e>
 8003dbe:	2300      	movs	r3, #0
 8003dc0:	930d      	str	r3, [sp, #52]	; 0x34
 8003dc2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8003dc4:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8003dc6:	6013      	str	r3, [r2, #0]
 8003dc8:	f7ff ba55 	b.w	8003276 <_strtod_l+0x86>
 8003dcc:	2b65      	cmp	r3, #101	; 0x65
 8003dce:	f04f 0200 	mov.w	r2, #0
 8003dd2:	f43f ab42 	beq.w	800345a <_strtod_l+0x26a>
 8003dd6:	2101      	movs	r1, #1
 8003dd8:	4614      	mov	r4, r2
 8003dda:	9105      	str	r1, [sp, #20]
 8003ddc:	f7ff babf 	b.w	800335e <_strtod_l+0x16e>
 8003de0:	ffc00000 	.word	0xffc00000
 8003de4:	41dfffff 	.word	0x41dfffff
 8003de8:	94a03595 	.word	0x94a03595
 8003dec:	3fcfffff 	.word	0x3fcfffff

08003df0 <strtod>:
 8003df0:	4b06      	ldr	r3, [pc, #24]	; (8003e0c <strtod+0x1c>)
 8003df2:	b410      	push	{r4}
 8003df4:	681c      	ldr	r4, [r3, #0]
 8003df6:	4a06      	ldr	r2, [pc, #24]	; (8003e10 <strtod+0x20>)
 8003df8:	6a23      	ldr	r3, [r4, #32]
 8003dfa:	2b00      	cmp	r3, #0
 8003dfc:	bf08      	it	eq
 8003dfe:	4613      	moveq	r3, r2
 8003e00:	460a      	mov	r2, r1
 8003e02:	4601      	mov	r1, r0
 8003e04:	4620      	mov	r0, r4
 8003e06:	bc10      	pop	{r4}
 8003e08:	f7ff b9f2 	b.w	80031f0 <_strtod_l>
 8003e0c:	20000030 	.word	0x20000030
 8003e10:	20000094 	.word	0x20000094

08003e14 <strtok>:
 8003e14:	4b13      	ldr	r3, [pc, #76]	; (8003e64 <strtok+0x50>)
 8003e16:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003e1a:	681d      	ldr	r5, [r3, #0]
 8003e1c:	4606      	mov	r6, r0
 8003e1e:	6dac      	ldr	r4, [r5, #88]	; 0x58
 8003e20:	460f      	mov	r7, r1
 8003e22:	b9b4      	cbnz	r4, 8003e52 <strtok+0x3e>
 8003e24:	2050      	movs	r0, #80	; 0x50
 8003e26:	f000 fcb7 	bl	8004798 <malloc>
 8003e2a:	65a8      	str	r0, [r5, #88]	; 0x58
 8003e2c:	e9c0 4400 	strd	r4, r4, [r0]
 8003e30:	e9c0 4402 	strd	r4, r4, [r0, #8]
 8003e34:	e9c0 4404 	strd	r4, r4, [r0, #16]
 8003e38:	e9c0 440a 	strd	r4, r4, [r0, #40]	; 0x28
 8003e3c:	e9c0 440c 	strd	r4, r4, [r0, #48]	; 0x30
 8003e40:	e9c0 440e 	strd	r4, r4, [r0, #56]	; 0x38
 8003e44:	e9c0 4410 	strd	r4, r4, [r0, #64]	; 0x40
 8003e48:	e9c0 4412 	strd	r4, r4, [r0, #72]	; 0x48
 8003e4c:	6184      	str	r4, [r0, #24]
 8003e4e:	7704      	strb	r4, [r0, #28]
 8003e50:	6244      	str	r4, [r0, #36]	; 0x24
 8003e52:	6daa      	ldr	r2, [r5, #88]	; 0x58
 8003e54:	4639      	mov	r1, r7
 8003e56:	4630      	mov	r0, r6
 8003e58:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003e5c:	2301      	movs	r3, #1
 8003e5e:	f000 b803 	b.w	8003e68 <__strtok_r>
 8003e62:	bf00      	nop
 8003e64:	20000030 	.word	0x20000030

08003e68 <__strtok_r>:
 8003e68:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003e6a:	b918      	cbnz	r0, 8003e74 <__strtok_r+0xc>
 8003e6c:	6810      	ldr	r0, [r2, #0]
 8003e6e:	b908      	cbnz	r0, 8003e74 <__strtok_r+0xc>
 8003e70:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003e72:	4620      	mov	r0, r4
 8003e74:	4604      	mov	r4, r0
 8003e76:	460f      	mov	r7, r1
 8003e78:	f814 5b01 	ldrb.w	r5, [r4], #1
 8003e7c:	f817 6b01 	ldrb.w	r6, [r7], #1
 8003e80:	b91e      	cbnz	r6, 8003e8a <__strtok_r+0x22>
 8003e82:	b96d      	cbnz	r5, 8003ea0 <__strtok_r+0x38>
 8003e84:	6015      	str	r5, [r2, #0]
 8003e86:	4628      	mov	r0, r5
 8003e88:	e7f2      	b.n	8003e70 <__strtok_r+0x8>
 8003e8a:	42b5      	cmp	r5, r6
 8003e8c:	d1f6      	bne.n	8003e7c <__strtok_r+0x14>
 8003e8e:	2b00      	cmp	r3, #0
 8003e90:	d1ef      	bne.n	8003e72 <__strtok_r+0xa>
 8003e92:	6014      	str	r4, [r2, #0]
 8003e94:	7003      	strb	r3, [r0, #0]
 8003e96:	e7eb      	b.n	8003e70 <__strtok_r+0x8>
 8003e98:	462b      	mov	r3, r5
 8003e9a:	e00d      	b.n	8003eb8 <__strtok_r+0x50>
 8003e9c:	b926      	cbnz	r6, 8003ea8 <__strtok_r+0x40>
 8003e9e:	461c      	mov	r4, r3
 8003ea0:	4623      	mov	r3, r4
 8003ea2:	460f      	mov	r7, r1
 8003ea4:	f813 5b01 	ldrb.w	r5, [r3], #1
 8003ea8:	f817 6b01 	ldrb.w	r6, [r7], #1
 8003eac:	42b5      	cmp	r5, r6
 8003eae:	d1f5      	bne.n	8003e9c <__strtok_r+0x34>
 8003eb0:	2d00      	cmp	r5, #0
 8003eb2:	d0f1      	beq.n	8003e98 <__strtok_r+0x30>
 8003eb4:	2100      	movs	r1, #0
 8003eb6:	7021      	strb	r1, [r4, #0]
 8003eb8:	6013      	str	r3, [r2, #0]
 8003eba:	e7d9      	b.n	8003e70 <__strtok_r+0x8>

08003ebc <print_e>:
 8003ebc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003ebe:	b08b      	sub	sp, #44	; 0x2c
 8003ec0:	460f      	mov	r7, r1
 8003ec2:	a908      	add	r1, sp, #32
 8003ec4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8003ec6:	9104      	str	r1, [sp, #16]
 8003ec8:	a907      	add	r1, sp, #28
 8003eca:	9103      	str	r1, [sp, #12]
 8003ecc:	a909      	add	r1, sp, #36	; 0x24
 8003ece:	9102      	str	r1, [sp, #8]
 8003ed0:	1c61      	adds	r1, r4, #1
 8003ed2:	9101      	str	r1, [sp, #4]
 8003ed4:	2102      	movs	r1, #2
 8003ed6:	9100      	str	r1, [sp, #0]
 8003ed8:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8003edc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8003ede:	f001 f9ab 	bl	8005238 <_dtoa_r>
 8003ee2:	f242 730f 	movw	r3, #9999	; 0x270f
 8003ee6:	4601      	mov	r1, r0
 8003ee8:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003eea:	4298      	cmp	r0, r3
 8003eec:	d104      	bne.n	8003ef8 <print_e+0x3c>
 8003eee:	4638      	mov	r0, r7
 8003ef0:	f7ff f940 	bl	8003174 <strcpy>
 8003ef4:	b00b      	add	sp, #44	; 0x2c
 8003ef6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003ef8:	780b      	ldrb	r3, [r1, #0]
 8003efa:	703b      	strb	r3, [r7, #0]
 8003efc:	2d00      	cmp	r5, #0
 8003efe:	d142      	bne.n	8003f86 <print_e+0xca>
 8003f00:	2c00      	cmp	r4, #0
 8003f02:	d140      	bne.n	8003f86 <print_e+0xca>
 8003f04:	1c7b      	adds	r3, r7, #1
 8003f06:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8003f0a:	b10a      	cbz	r2, 8003f10 <print_e+0x54>
 8003f0c:	2c00      	cmp	r4, #0
 8003f0e:	dc3e      	bgt.n	8003f8e <print_e+0xd2>
 8003f10:	2e67      	cmp	r6, #103	; 0x67
 8003f12:	d043      	beq.n	8003f9c <print_e+0xe0>
 8003f14:	2e47      	cmp	r6, #71	; 0x47
 8003f16:	d043      	beq.n	8003fa0 <print_e+0xe4>
 8003f18:	461a      	mov	r2, r3
 8003f1a:	2730      	movs	r7, #48	; 0x30
 8003f1c:	191d      	adds	r5, r3, r4
 8003f1e:	1aa9      	subs	r1, r5, r2
 8003f20:	2900      	cmp	r1, #0
 8003f22:	dc38      	bgt.n	8003f96 <print_e+0xda>
 8003f24:	2c00      	cmp	r4, #0
 8003f26:	bfa8      	it	ge
 8003f28:	191b      	addge	r3, r3, r4
 8003f2a:	1e41      	subs	r1, r0, #1
 8003f2c:	2900      	cmp	r1, #0
 8003f2e:	9109      	str	r1, [sp, #36]	; 0x24
 8003f30:	461a      	mov	r2, r3
 8003f32:	bfb7      	itett	lt
 8003f34:	212d      	movlt	r1, #45	; 0x2d
 8003f36:	212b      	movge	r1, #43	; 0x2b
 8003f38:	f1c0 0001 	rsblt	r0, r0, #1
 8003f3c:	9009      	strlt	r0, [sp, #36]	; 0x24
 8003f3e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003f40:	f802 6b02 	strb.w	r6, [r2], #2
 8003f44:	bfb4      	ite	lt
 8003f46:	7059      	strblt	r1, [r3, #1]
 8003f48:	7059      	strbge	r1, [r3, #1]
 8003f4a:	2863      	cmp	r0, #99	; 0x63
 8003f4c:	dd0b      	ble.n	8003f66 <print_e+0xaa>
 8003f4e:	2164      	movs	r1, #100	; 0x64
 8003f50:	fb90 f1f1 	sdiv	r1, r0, r1
 8003f54:	f101 0430 	add.w	r4, r1, #48	; 0x30
 8003f58:	1cda      	adds	r2, r3, #3
 8003f5a:	709c      	strb	r4, [r3, #2]
 8003f5c:	f06f 0363 	mvn.w	r3, #99	; 0x63
 8003f60:	fb03 0101 	mla	r1, r3, r1, r0
 8003f64:	9109      	str	r1, [sp, #36]	; 0x24
 8003f66:	230a      	movs	r3, #10
 8003f68:	9909      	ldr	r1, [sp, #36]	; 0x24
 8003f6a:	fb91 f3f3 	sdiv	r3, r1, r3
 8003f6e:	f103 0030 	add.w	r0, r3, #48	; 0x30
 8003f72:	7010      	strb	r0, [r2, #0]
 8003f74:	f06f 0009 	mvn.w	r0, #9
 8003f78:	fb00 1303 	mla	r3, r0, r3, r1
 8003f7c:	3330      	adds	r3, #48	; 0x30
 8003f7e:	7053      	strb	r3, [r2, #1]
 8003f80:	2300      	movs	r3, #0
 8003f82:	7093      	strb	r3, [r2, #2]
 8003f84:	e7b6      	b.n	8003ef4 <print_e+0x38>
 8003f86:	222e      	movs	r2, #46	; 0x2e
 8003f88:	1cbb      	adds	r3, r7, #2
 8003f8a:	707a      	strb	r2, [r7, #1]
 8003f8c:	e7bb      	b.n	8003f06 <print_e+0x4a>
 8003f8e:	f803 2b01 	strb.w	r2, [r3], #1
 8003f92:	3c01      	subs	r4, #1
 8003f94:	e7b7      	b.n	8003f06 <print_e+0x4a>
 8003f96:	f802 7b01 	strb.w	r7, [r2], #1
 8003f9a:	e7c0      	b.n	8003f1e <print_e+0x62>
 8003f9c:	2665      	movs	r6, #101	; 0x65
 8003f9e:	e7c4      	b.n	8003f2a <print_e+0x6e>
 8003fa0:	2645      	movs	r6, #69	; 0x45
 8003fa2:	e7c2      	b.n	8003f2a <print_e+0x6e>
 8003fa4:	0000      	movs	r0, r0
	...

08003fa8 <_gcvt>:
 8003fa8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003fac:	4617      	mov	r7, r2
 8003fae:	461d      	mov	r5, r3
 8003fb0:	b08b      	sub	sp, #44	; 0x2c
 8003fb2:	4681      	mov	r9, r0
 8003fb4:	e9dd 6412 	ldrd	r6, r4, [sp, #72]	; 0x48
 8003fb8:	2200      	movs	r2, #0
 8003fba:	2300      	movs	r3, #0
 8003fbc:	4638      	mov	r0, r7
 8003fbe:	4629      	mov	r1, r5
 8003fc0:	f8dd 8054 	ldr.w	r8, [sp, #84]	; 0x54
 8003fc4:	f7fc fd0a 	bl	80009dc <__aeabi_dcmplt>
 8003fc8:	b108      	cbz	r0, 8003fce <_gcvt+0x26>
 8003fca:	f105 4500 	add.w	r5, r5, #2147483648	; 0x80000000
 8003fce:	2200      	movs	r2, #0
 8003fd0:	2300      	movs	r3, #0
 8003fd2:	4638      	mov	r0, r7
 8003fd4:	4629      	mov	r1, r5
 8003fd6:	f7fc fcf7 	bl	80009c8 <__aeabi_dcmpeq>
 8003fda:	b138      	cbz	r0, 8003fec <_gcvt+0x44>
 8003fdc:	2330      	movs	r3, #48	; 0x30
 8003fde:	7023      	strb	r3, [r4, #0]
 8003fe0:	2300      	movs	r3, #0
 8003fe2:	7063      	strb	r3, [r4, #1]
 8003fe4:	4620      	mov	r0, r4
 8003fe6:	b00b      	add	sp, #44	; 0x2c
 8003fe8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003fec:	a352      	add	r3, pc, #328	; (adr r3, 8004138 <_gcvt+0x190>)
 8003fee:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003ff2:	4638      	mov	r0, r7
 8003ff4:	4629      	mov	r1, r5
 8003ff6:	f7fc fcfb 	bl	80009f0 <__aeabi_dcmple>
 8003ffa:	b168      	cbz	r0, 8004018 <_gcvt+0x70>
 8003ffc:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8004000:	3e01      	subs	r6, #1
 8004002:	9301      	str	r3, [sp, #4]
 8004004:	f8cd 8008 	str.w	r8, [sp, #8]
 8004008:	9600      	str	r6, [sp, #0]
 800400a:	463a      	mov	r2, r7
 800400c:	462b      	mov	r3, r5
 800400e:	4621      	mov	r1, r4
 8004010:	4648      	mov	r0, r9
 8004012:	f7ff ff53 	bl	8003ebc <print_e>
 8004016:	e7e5      	b.n	8003fe4 <_gcvt+0x3c>
 8004018:	4630      	mov	r0, r6
 800401a:	f000 ffa1 	bl	8004f60 <_mprec_log10>
 800401e:	463a      	mov	r2, r7
 8004020:	462b      	mov	r3, r5
 8004022:	f7fc fce5 	bl	80009f0 <__aeabi_dcmple>
 8004026:	2800      	cmp	r0, #0
 8004028:	d1e8      	bne.n	8003ffc <_gcvt+0x54>
 800402a:	2200      	movs	r2, #0
 800402c:	4b44      	ldr	r3, [pc, #272]	; (8004140 <_gcvt+0x198>)
 800402e:	4629      	mov	r1, r5
 8004030:	4638      	mov	r0, r7
 8004032:	f7fc fcd3 	bl	80009dc <__aeabi_dcmplt>
 8004036:	a909      	add	r1, sp, #36	; 0x24
 8004038:	aa08      	add	r2, sp, #32
 800403a:	ab07      	add	r3, sp, #28
 800403c:	e9cd 2103 	strd	r2, r1, [sp, #12]
 8004040:	e9cd 6301 	strd	r6, r3, [sp, #4]
 8004044:	b388      	cbz	r0, 80040aa <_gcvt+0x102>
 8004046:	2303      	movs	r3, #3
 8004048:	9300      	str	r3, [sp, #0]
 800404a:	463a      	mov	r2, r7
 800404c:	462b      	mov	r3, r5
 800404e:	4648      	mov	r0, r9
 8004050:	f001 f8f2 	bl	8005238 <_dtoa_r>
 8004054:	f242 730f 	movw	r3, #9999	; 0x270f
 8004058:	9a07      	ldr	r2, [sp, #28]
 800405a:	429a      	cmp	r2, r3
 800405c:	d027      	beq.n	80040ae <_gcvt+0x106>
 800405e:	4623      	mov	r3, r4
 8004060:	4426      	add	r6, r4
 8004062:	4607      	mov	r7, r0
 8004064:	f810 1b01 	ldrb.w	r1, [r0], #1
 8004068:	1af2      	subs	r2, r6, r3
 800406a:	9d07      	ldr	r5, [sp, #28]
 800406c:	b349      	cbz	r1, 80040c2 <_gcvt+0x11a>
 800406e:	2d00      	cmp	r5, #0
 8004070:	dc22      	bgt.n	80040b8 <_gcvt+0x110>
 8004072:	f1b8 0f00 	cmp.w	r8, #0
 8004076:	d102      	bne.n	800407e <_gcvt+0xd6>
 8004078:	7839      	ldrb	r1, [r7, #0]
 800407a:	2900      	cmp	r1, #0
 800407c:	d049      	beq.n	8004112 <_gcvt+0x16a>
 800407e:	429c      	cmp	r4, r3
 8004080:	bf04      	itt	eq
 8004082:	2130      	moveq	r1, #48	; 0x30
 8004084:	7021      	strbeq	r1, [r4, #0]
 8004086:	f04f 012e 	mov.w	r1, #46	; 0x2e
 800408a:	f04f 0000 	mov.w	r0, #0
 800408e:	f04f 0630 	mov.w	r6, #48	; 0x30
 8004092:	bf08      	it	eq
 8004094:	1c63      	addeq	r3, r4, #1
 8004096:	7019      	strb	r1, [r3, #0]
 8004098:	9907      	ldr	r1, [sp, #28]
 800409a:	3301      	adds	r3, #1
 800409c:	2900      	cmp	r1, #0
 800409e:	460d      	mov	r5, r1
 80040a0:	db24      	blt.n	80040ec <_gcvt+0x144>
 80040a2:	b100      	cbz	r0, 80040a6 <_gcvt+0xfe>
 80040a4:	9107      	str	r1, [sp, #28]
 80040a6:	1e79      	subs	r1, r7, #1
 80040a8:	e02b      	b.n	8004102 <_gcvt+0x15a>
 80040aa:	2302      	movs	r3, #2
 80040ac:	e7cc      	b.n	8004048 <_gcvt+0xa0>
 80040ae:	4601      	mov	r1, r0
 80040b0:	4620      	mov	r0, r4
 80040b2:	f7ff f85f 	bl	8003174 <strcpy>
 80040b6:	e795      	b.n	8003fe4 <_gcvt+0x3c>
 80040b8:	3d01      	subs	r5, #1
 80040ba:	f803 1b01 	strb.w	r1, [r3], #1
 80040be:	9507      	str	r5, [sp, #28]
 80040c0:	e7cf      	b.n	8004062 <_gcvt+0xba>
 80040c2:	1aad      	subs	r5, r5, r2
 80040c4:	2630      	movs	r6, #48	; 0x30
 80040c6:	e005      	b.n	80040d4 <_gcvt+0x12c>
 80040c8:	2a00      	cmp	r2, #0
 80040ca:	dd06      	ble.n	80040da <_gcvt+0x132>
 80040cc:	2101      	movs	r1, #1
 80040ce:	f803 6b01 	strb.w	r6, [r3], #1
 80040d2:	3a01      	subs	r2, #1
 80040d4:	18a8      	adds	r0, r5, r2
 80040d6:	2800      	cmp	r0, #0
 80040d8:	dcf6      	bgt.n	80040c8 <_gcvt+0x120>
 80040da:	2900      	cmp	r1, #0
 80040dc:	d0c9      	beq.n	8004072 <_gcvt+0xca>
 80040de:	9007      	str	r0, [sp, #28]
 80040e0:	e7c7      	b.n	8004072 <_gcvt+0xca>
 80040e2:	f803 6b01 	strb.w	r6, [r3], #1
 80040e6:	3a01      	subs	r2, #1
 80040e8:	2001      	movs	r0, #1
 80040ea:	e7d7      	b.n	800409c <_gcvt+0xf4>
 80040ec:	2a00      	cmp	r2, #0
 80040ee:	f101 0101 	add.w	r1, r1, #1
 80040f2:	dcf6      	bgt.n	80040e2 <_gcvt+0x13a>
 80040f4:	2800      	cmp	r0, #0
 80040f6:	d0d6      	beq.n	80040a6 <_gcvt+0xfe>
 80040f8:	9507      	str	r5, [sp, #28]
 80040fa:	e7d4      	b.n	80040a6 <_gcvt+0xfe>
 80040fc:	f803 0b01 	strb.w	r0, [r3], #1
 8004100:	3a01      	subs	r2, #1
 8004102:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8004106:	b108      	cbz	r0, 800410c <_gcvt+0x164>
 8004108:	2a00      	cmp	r2, #0
 800410a:	dcf7      	bgt.n	80040fc <_gcvt+0x154>
 800410c:	f1b8 0f00 	cmp.w	r8, #0
 8004110:	d10b      	bne.n	800412a <_gcvt+0x182>
 8004112:	2200      	movs	r2, #0
 8004114:	701a      	strb	r2, [r3, #0]
 8004116:	e765      	b.n	8003fe4 <_gcvt+0x3c>
 8004118:	f801 6b01 	strb.w	r6, [r1], #1
 800411c:	1a68      	subs	r0, r5, r1
 800411e:	2800      	cmp	r0, #0
 8004120:	dcfa      	bgt.n	8004118 <_gcvt+0x170>
 8004122:	2a00      	cmp	r2, #0
 8004124:	bfa8      	it	ge
 8004126:	189b      	addge	r3, r3, r2
 8004128:	e7f3      	b.n	8004112 <_gcvt+0x16a>
 800412a:	4619      	mov	r1, r3
 800412c:	189d      	adds	r5, r3, r2
 800412e:	2630      	movs	r6, #48	; 0x30
 8004130:	e7f4      	b.n	800411c <_gcvt+0x174>
 8004132:	bf00      	nop
 8004134:	f3af 8000 	nop.w
 8004138:	eb1c432d 	.word	0xeb1c432d
 800413c:	3f1a36e2 	.word	0x3f1a36e2
 8004140:	3ff00000 	.word	0x3ff00000

08004144 <rshift>:
 8004144:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004146:	6906      	ldr	r6, [r0, #16]
 8004148:	114b      	asrs	r3, r1, #5
 800414a:	429e      	cmp	r6, r3
 800414c:	f100 0414 	add.w	r4, r0, #20
 8004150:	dd31      	ble.n	80041b6 <rshift+0x72>
 8004152:	f011 011f 	ands.w	r1, r1, #31
 8004156:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 800415a:	eb04 0283 	add.w	r2, r4, r3, lsl #2
 800415e:	d108      	bne.n	8004172 <rshift+0x2e>
 8004160:	4621      	mov	r1, r4
 8004162:	42b2      	cmp	r2, r6
 8004164:	460b      	mov	r3, r1
 8004166:	d211      	bcs.n	800418c <rshift+0x48>
 8004168:	f852 3b04 	ldr.w	r3, [r2], #4
 800416c:	f841 3b04 	str.w	r3, [r1], #4
 8004170:	e7f7      	b.n	8004162 <rshift+0x1e>
 8004172:	f854 5023 	ldr.w	r5, [r4, r3, lsl #2]
 8004176:	4623      	mov	r3, r4
 8004178:	f1c1 0c20 	rsb	ip, r1, #32
 800417c:	40cd      	lsrs	r5, r1
 800417e:	3204      	adds	r2, #4
 8004180:	42b2      	cmp	r2, r6
 8004182:	4617      	mov	r7, r2
 8004184:	d30d      	bcc.n	80041a2 <rshift+0x5e>
 8004186:	601d      	str	r5, [r3, #0]
 8004188:	b105      	cbz	r5, 800418c <rshift+0x48>
 800418a:	3304      	adds	r3, #4
 800418c:	42a3      	cmp	r3, r4
 800418e:	eba3 0204 	sub.w	r2, r3, r4
 8004192:	bf08      	it	eq
 8004194:	2300      	moveq	r3, #0
 8004196:	ea4f 02a2 	mov.w	r2, r2, asr #2
 800419a:	6102      	str	r2, [r0, #16]
 800419c:	bf08      	it	eq
 800419e:	6143      	streq	r3, [r0, #20]
 80041a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80041a2:	683f      	ldr	r7, [r7, #0]
 80041a4:	fa07 f70c 	lsl.w	r7, r7, ip
 80041a8:	433d      	orrs	r5, r7
 80041aa:	f843 5b04 	str.w	r5, [r3], #4
 80041ae:	f852 5b04 	ldr.w	r5, [r2], #4
 80041b2:	40cd      	lsrs	r5, r1
 80041b4:	e7e4      	b.n	8004180 <rshift+0x3c>
 80041b6:	4623      	mov	r3, r4
 80041b8:	e7e8      	b.n	800418c <rshift+0x48>

080041ba <__hexdig_fun>:
 80041ba:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 80041be:	2b09      	cmp	r3, #9
 80041c0:	d802      	bhi.n	80041c8 <__hexdig_fun+0xe>
 80041c2:	3820      	subs	r0, #32
 80041c4:	b2c0      	uxtb	r0, r0
 80041c6:	4770      	bx	lr
 80041c8:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 80041cc:	2b05      	cmp	r3, #5
 80041ce:	d801      	bhi.n	80041d4 <__hexdig_fun+0x1a>
 80041d0:	3847      	subs	r0, #71	; 0x47
 80041d2:	e7f7      	b.n	80041c4 <__hexdig_fun+0xa>
 80041d4:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 80041d8:	2b05      	cmp	r3, #5
 80041da:	d801      	bhi.n	80041e0 <__hexdig_fun+0x26>
 80041dc:	3827      	subs	r0, #39	; 0x27
 80041de:	e7f1      	b.n	80041c4 <__hexdig_fun+0xa>
 80041e0:	2000      	movs	r0, #0
 80041e2:	4770      	bx	lr

080041e4 <__gethex>:
 80041e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80041e8:	b08b      	sub	sp, #44	; 0x2c
 80041ea:	9002      	str	r0, [sp, #8]
 80041ec:	9816      	ldr	r0, [sp, #88]	; 0x58
 80041ee:	468a      	mov	sl, r1
 80041f0:	4690      	mov	r8, r2
 80041f2:	9306      	str	r3, [sp, #24]
 80041f4:	f000 face 	bl	8004794 <__localeconv_l>
 80041f8:	6803      	ldr	r3, [r0, #0]
 80041fa:	f04f 0b00 	mov.w	fp, #0
 80041fe:	4618      	mov	r0, r3
 8004200:	9303      	str	r3, [sp, #12]
 8004202:	f7fb ffb5 	bl	8000170 <strlen>
 8004206:	9b03      	ldr	r3, [sp, #12]
 8004208:	9001      	str	r0, [sp, #4]
 800420a:	4403      	add	r3, r0
 800420c:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 8004210:	9307      	str	r3, [sp, #28]
 8004212:	f8da 3000 	ldr.w	r3, [sl]
 8004216:	3302      	adds	r3, #2
 8004218:	461f      	mov	r7, r3
 800421a:	f813 0b01 	ldrb.w	r0, [r3], #1
 800421e:	2830      	cmp	r0, #48	; 0x30
 8004220:	d06c      	beq.n	80042fc <__gethex+0x118>
 8004222:	f7ff ffca 	bl	80041ba <__hexdig_fun>
 8004226:	4604      	mov	r4, r0
 8004228:	2800      	cmp	r0, #0
 800422a:	d16a      	bne.n	8004302 <__gethex+0x11e>
 800422c:	9a01      	ldr	r2, [sp, #4]
 800422e:	9903      	ldr	r1, [sp, #12]
 8004230:	4638      	mov	r0, r7
 8004232:	f7fe ffa7 	bl	8003184 <strncmp>
 8004236:	2800      	cmp	r0, #0
 8004238:	d166      	bne.n	8004308 <__gethex+0x124>
 800423a:	9b01      	ldr	r3, [sp, #4]
 800423c:	5cf8      	ldrb	r0, [r7, r3]
 800423e:	18fe      	adds	r6, r7, r3
 8004240:	f7ff ffbb 	bl	80041ba <__hexdig_fun>
 8004244:	2800      	cmp	r0, #0
 8004246:	d062      	beq.n	800430e <__gethex+0x12a>
 8004248:	4633      	mov	r3, r6
 800424a:	7818      	ldrb	r0, [r3, #0]
 800424c:	461f      	mov	r7, r3
 800424e:	2830      	cmp	r0, #48	; 0x30
 8004250:	f103 0301 	add.w	r3, r3, #1
 8004254:	d0f9      	beq.n	800424a <__gethex+0x66>
 8004256:	f7ff ffb0 	bl	80041ba <__hexdig_fun>
 800425a:	fab0 f580 	clz	r5, r0
 800425e:	4634      	mov	r4, r6
 8004260:	f04f 0b01 	mov.w	fp, #1
 8004264:	096d      	lsrs	r5, r5, #5
 8004266:	463a      	mov	r2, r7
 8004268:	4616      	mov	r6, r2
 800426a:	7830      	ldrb	r0, [r6, #0]
 800426c:	3201      	adds	r2, #1
 800426e:	f7ff ffa4 	bl	80041ba <__hexdig_fun>
 8004272:	2800      	cmp	r0, #0
 8004274:	d1f8      	bne.n	8004268 <__gethex+0x84>
 8004276:	9a01      	ldr	r2, [sp, #4]
 8004278:	9903      	ldr	r1, [sp, #12]
 800427a:	4630      	mov	r0, r6
 800427c:	f7fe ff82 	bl	8003184 <strncmp>
 8004280:	b950      	cbnz	r0, 8004298 <__gethex+0xb4>
 8004282:	b954      	cbnz	r4, 800429a <__gethex+0xb6>
 8004284:	9b01      	ldr	r3, [sp, #4]
 8004286:	18f4      	adds	r4, r6, r3
 8004288:	4622      	mov	r2, r4
 800428a:	4616      	mov	r6, r2
 800428c:	7830      	ldrb	r0, [r6, #0]
 800428e:	3201      	adds	r2, #1
 8004290:	f7ff ff93 	bl	80041ba <__hexdig_fun>
 8004294:	2800      	cmp	r0, #0
 8004296:	d1f8      	bne.n	800428a <__gethex+0xa6>
 8004298:	b10c      	cbz	r4, 800429e <__gethex+0xba>
 800429a:	1ba4      	subs	r4, r4, r6
 800429c:	00a4      	lsls	r4, r4, #2
 800429e:	7833      	ldrb	r3, [r6, #0]
 80042a0:	2b50      	cmp	r3, #80	; 0x50
 80042a2:	d001      	beq.n	80042a8 <__gethex+0xc4>
 80042a4:	2b70      	cmp	r3, #112	; 0x70
 80042a6:	d140      	bne.n	800432a <__gethex+0x146>
 80042a8:	7873      	ldrb	r3, [r6, #1]
 80042aa:	2b2b      	cmp	r3, #43	; 0x2b
 80042ac:	d031      	beq.n	8004312 <__gethex+0x12e>
 80042ae:	2b2d      	cmp	r3, #45	; 0x2d
 80042b0:	d033      	beq.n	800431a <__gethex+0x136>
 80042b2:	f04f 0900 	mov.w	r9, #0
 80042b6:	1c71      	adds	r1, r6, #1
 80042b8:	7808      	ldrb	r0, [r1, #0]
 80042ba:	f7ff ff7e 	bl	80041ba <__hexdig_fun>
 80042be:	1e43      	subs	r3, r0, #1
 80042c0:	b2db      	uxtb	r3, r3
 80042c2:	2b18      	cmp	r3, #24
 80042c4:	d831      	bhi.n	800432a <__gethex+0x146>
 80042c6:	f1a0 0210 	sub.w	r2, r0, #16
 80042ca:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 80042ce:	f7ff ff74 	bl	80041ba <__hexdig_fun>
 80042d2:	1e43      	subs	r3, r0, #1
 80042d4:	b2db      	uxtb	r3, r3
 80042d6:	2b18      	cmp	r3, #24
 80042d8:	d922      	bls.n	8004320 <__gethex+0x13c>
 80042da:	f1b9 0f00 	cmp.w	r9, #0
 80042de:	d000      	beq.n	80042e2 <__gethex+0xfe>
 80042e0:	4252      	negs	r2, r2
 80042e2:	4414      	add	r4, r2
 80042e4:	f8ca 1000 	str.w	r1, [sl]
 80042e8:	b30d      	cbz	r5, 800432e <__gethex+0x14a>
 80042ea:	f1bb 0f00 	cmp.w	fp, #0
 80042ee:	bf0c      	ite	eq
 80042f0:	2706      	moveq	r7, #6
 80042f2:	2700      	movne	r7, #0
 80042f4:	4638      	mov	r0, r7
 80042f6:	b00b      	add	sp, #44	; 0x2c
 80042f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80042fc:	f10b 0b01 	add.w	fp, fp, #1
 8004300:	e78a      	b.n	8004218 <__gethex+0x34>
 8004302:	2500      	movs	r5, #0
 8004304:	462c      	mov	r4, r5
 8004306:	e7ae      	b.n	8004266 <__gethex+0x82>
 8004308:	463e      	mov	r6, r7
 800430a:	2501      	movs	r5, #1
 800430c:	e7c7      	b.n	800429e <__gethex+0xba>
 800430e:	4604      	mov	r4, r0
 8004310:	e7fb      	b.n	800430a <__gethex+0x126>
 8004312:	f04f 0900 	mov.w	r9, #0
 8004316:	1cb1      	adds	r1, r6, #2
 8004318:	e7ce      	b.n	80042b8 <__gethex+0xd4>
 800431a:	f04f 0901 	mov.w	r9, #1
 800431e:	e7fa      	b.n	8004316 <__gethex+0x132>
 8004320:	230a      	movs	r3, #10
 8004322:	fb03 0202 	mla	r2, r3, r2, r0
 8004326:	3a10      	subs	r2, #16
 8004328:	e7cf      	b.n	80042ca <__gethex+0xe6>
 800432a:	4631      	mov	r1, r6
 800432c:	e7da      	b.n	80042e4 <__gethex+0x100>
 800432e:	4629      	mov	r1, r5
 8004330:	1bf3      	subs	r3, r6, r7
 8004332:	3b01      	subs	r3, #1
 8004334:	2b07      	cmp	r3, #7
 8004336:	dc49      	bgt.n	80043cc <__gethex+0x1e8>
 8004338:	9802      	ldr	r0, [sp, #8]
 800433a:	f000 fa52 	bl	80047e2 <_Balloc>
 800433e:	f04f 0b00 	mov.w	fp, #0
 8004342:	4605      	mov	r5, r0
 8004344:	46da      	mov	sl, fp
 8004346:	9b01      	ldr	r3, [sp, #4]
 8004348:	f100 0914 	add.w	r9, r0, #20
 800434c:	f1c3 0301 	rsb	r3, r3, #1
 8004350:	f8cd 9010 	str.w	r9, [sp, #16]
 8004354:	9308      	str	r3, [sp, #32]
 8004356:	42b7      	cmp	r7, r6
 8004358:	d33b      	bcc.n	80043d2 <__gethex+0x1ee>
 800435a:	9804      	ldr	r0, [sp, #16]
 800435c:	f840 ab04 	str.w	sl, [r0], #4
 8004360:	eba0 0009 	sub.w	r0, r0, r9
 8004364:	1080      	asrs	r0, r0, #2
 8004366:	6128      	str	r0, [r5, #16]
 8004368:	0147      	lsls	r7, r0, #5
 800436a:	4650      	mov	r0, sl
 800436c:	f000 fafd 	bl	800496a <__hi0bits>
 8004370:	f8d8 6000 	ldr.w	r6, [r8]
 8004374:	1a3f      	subs	r7, r7, r0
 8004376:	42b7      	cmp	r7, r6
 8004378:	dd64      	ble.n	8004444 <__gethex+0x260>
 800437a:	1bbf      	subs	r7, r7, r6
 800437c:	4639      	mov	r1, r7
 800437e:	4628      	mov	r0, r5
 8004380:	f000 fe24 	bl	8004fcc <__any_on>
 8004384:	4682      	mov	sl, r0
 8004386:	b178      	cbz	r0, 80043a8 <__gethex+0x1c4>
 8004388:	f04f 0a01 	mov.w	sl, #1
 800438c:	1e7b      	subs	r3, r7, #1
 800438e:	1159      	asrs	r1, r3, #5
 8004390:	f003 021f 	and.w	r2, r3, #31
 8004394:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 8004398:	fa0a f202 	lsl.w	r2, sl, r2
 800439c:	420a      	tst	r2, r1
 800439e:	d003      	beq.n	80043a8 <__gethex+0x1c4>
 80043a0:	4553      	cmp	r3, sl
 80043a2:	dc46      	bgt.n	8004432 <__gethex+0x24e>
 80043a4:	f04f 0a02 	mov.w	sl, #2
 80043a8:	4639      	mov	r1, r7
 80043aa:	4628      	mov	r0, r5
 80043ac:	f7ff feca 	bl	8004144 <rshift>
 80043b0:	443c      	add	r4, r7
 80043b2:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80043b6:	42a3      	cmp	r3, r4
 80043b8:	da52      	bge.n	8004460 <__gethex+0x27c>
 80043ba:	4629      	mov	r1, r5
 80043bc:	9802      	ldr	r0, [sp, #8]
 80043be:	f000 fa44 	bl	800484a <_Bfree>
 80043c2:	2300      	movs	r3, #0
 80043c4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80043c6:	27a3      	movs	r7, #163	; 0xa3
 80043c8:	6013      	str	r3, [r2, #0]
 80043ca:	e793      	b.n	80042f4 <__gethex+0x110>
 80043cc:	3101      	adds	r1, #1
 80043ce:	105b      	asrs	r3, r3, #1
 80043d0:	e7b0      	b.n	8004334 <__gethex+0x150>
 80043d2:	1e73      	subs	r3, r6, #1
 80043d4:	9305      	str	r3, [sp, #20]
 80043d6:	9a07      	ldr	r2, [sp, #28]
 80043d8:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 80043dc:	4293      	cmp	r3, r2
 80043de:	d018      	beq.n	8004412 <__gethex+0x22e>
 80043e0:	f1bb 0f20 	cmp.w	fp, #32
 80043e4:	d107      	bne.n	80043f6 <__gethex+0x212>
 80043e6:	9b04      	ldr	r3, [sp, #16]
 80043e8:	f8c3 a000 	str.w	sl, [r3]
 80043ec:	f04f 0a00 	mov.w	sl, #0
 80043f0:	46d3      	mov	fp, sl
 80043f2:	3304      	adds	r3, #4
 80043f4:	9304      	str	r3, [sp, #16]
 80043f6:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 80043fa:	f7ff fede 	bl	80041ba <__hexdig_fun>
 80043fe:	f000 000f 	and.w	r0, r0, #15
 8004402:	fa00 f00b 	lsl.w	r0, r0, fp
 8004406:	ea4a 0a00 	orr.w	sl, sl, r0
 800440a:	f10b 0b04 	add.w	fp, fp, #4
 800440e:	9b05      	ldr	r3, [sp, #20]
 8004410:	e00d      	b.n	800442e <__gethex+0x24a>
 8004412:	9b05      	ldr	r3, [sp, #20]
 8004414:	9a08      	ldr	r2, [sp, #32]
 8004416:	4413      	add	r3, r2
 8004418:	42bb      	cmp	r3, r7
 800441a:	d3e1      	bcc.n	80043e0 <__gethex+0x1fc>
 800441c:	4618      	mov	r0, r3
 800441e:	9a01      	ldr	r2, [sp, #4]
 8004420:	9903      	ldr	r1, [sp, #12]
 8004422:	9309      	str	r3, [sp, #36]	; 0x24
 8004424:	f7fe feae 	bl	8003184 <strncmp>
 8004428:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800442a:	2800      	cmp	r0, #0
 800442c:	d1d8      	bne.n	80043e0 <__gethex+0x1fc>
 800442e:	461e      	mov	r6, r3
 8004430:	e791      	b.n	8004356 <__gethex+0x172>
 8004432:	1eb9      	subs	r1, r7, #2
 8004434:	4628      	mov	r0, r5
 8004436:	f000 fdc9 	bl	8004fcc <__any_on>
 800443a:	2800      	cmp	r0, #0
 800443c:	d0b2      	beq.n	80043a4 <__gethex+0x1c0>
 800443e:	f04f 0a03 	mov.w	sl, #3
 8004442:	e7b1      	b.n	80043a8 <__gethex+0x1c4>
 8004444:	da09      	bge.n	800445a <__gethex+0x276>
 8004446:	1bf7      	subs	r7, r6, r7
 8004448:	4629      	mov	r1, r5
 800444a:	463a      	mov	r2, r7
 800444c:	9802      	ldr	r0, [sp, #8]
 800444e:	f000 fbc7 	bl	8004be0 <__lshift>
 8004452:	4605      	mov	r5, r0
 8004454:	1be4      	subs	r4, r4, r7
 8004456:	f100 0914 	add.w	r9, r0, #20
 800445a:	f04f 0a00 	mov.w	sl, #0
 800445e:	e7a8      	b.n	80043b2 <__gethex+0x1ce>
 8004460:	f8d8 0004 	ldr.w	r0, [r8, #4]
 8004464:	42a0      	cmp	r0, r4
 8004466:	dd6b      	ble.n	8004540 <__gethex+0x35c>
 8004468:	1b04      	subs	r4, r0, r4
 800446a:	42a6      	cmp	r6, r4
 800446c:	dc2e      	bgt.n	80044cc <__gethex+0x2e8>
 800446e:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8004472:	2b02      	cmp	r3, #2
 8004474:	d022      	beq.n	80044bc <__gethex+0x2d8>
 8004476:	2b03      	cmp	r3, #3
 8004478:	d024      	beq.n	80044c4 <__gethex+0x2e0>
 800447a:	2b01      	cmp	r3, #1
 800447c:	d115      	bne.n	80044aa <__gethex+0x2c6>
 800447e:	42a6      	cmp	r6, r4
 8004480:	d113      	bne.n	80044aa <__gethex+0x2c6>
 8004482:	2e01      	cmp	r6, #1
 8004484:	dc0b      	bgt.n	800449e <__gethex+0x2ba>
 8004486:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800448a:	9a06      	ldr	r2, [sp, #24]
 800448c:	2762      	movs	r7, #98	; 0x62
 800448e:	6013      	str	r3, [r2, #0]
 8004490:	2301      	movs	r3, #1
 8004492:	612b      	str	r3, [r5, #16]
 8004494:	f8c9 3000 	str.w	r3, [r9]
 8004498:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800449a:	601d      	str	r5, [r3, #0]
 800449c:	e72a      	b.n	80042f4 <__gethex+0x110>
 800449e:	1e71      	subs	r1, r6, #1
 80044a0:	4628      	mov	r0, r5
 80044a2:	f000 fd93 	bl	8004fcc <__any_on>
 80044a6:	2800      	cmp	r0, #0
 80044a8:	d1ed      	bne.n	8004486 <__gethex+0x2a2>
 80044aa:	4629      	mov	r1, r5
 80044ac:	9802      	ldr	r0, [sp, #8]
 80044ae:	f000 f9cc 	bl	800484a <_Bfree>
 80044b2:	2300      	movs	r3, #0
 80044b4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80044b6:	2750      	movs	r7, #80	; 0x50
 80044b8:	6013      	str	r3, [r2, #0]
 80044ba:	e71b      	b.n	80042f4 <__gethex+0x110>
 80044bc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80044be:	2b00      	cmp	r3, #0
 80044c0:	d0e1      	beq.n	8004486 <__gethex+0x2a2>
 80044c2:	e7f2      	b.n	80044aa <__gethex+0x2c6>
 80044c4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80044c6:	2b00      	cmp	r3, #0
 80044c8:	d1dd      	bne.n	8004486 <__gethex+0x2a2>
 80044ca:	e7ee      	b.n	80044aa <__gethex+0x2c6>
 80044cc:	1e67      	subs	r7, r4, #1
 80044ce:	f1ba 0f00 	cmp.w	sl, #0
 80044d2:	d132      	bne.n	800453a <__gethex+0x356>
 80044d4:	b127      	cbz	r7, 80044e0 <__gethex+0x2fc>
 80044d6:	4639      	mov	r1, r7
 80044d8:	4628      	mov	r0, r5
 80044da:	f000 fd77 	bl	8004fcc <__any_on>
 80044de:	4682      	mov	sl, r0
 80044e0:	2301      	movs	r3, #1
 80044e2:	117a      	asrs	r2, r7, #5
 80044e4:	f007 071f 	and.w	r7, r7, #31
 80044e8:	fa03 f707 	lsl.w	r7, r3, r7
 80044ec:	f859 3022 	ldr.w	r3, [r9, r2, lsl #2]
 80044f0:	4621      	mov	r1, r4
 80044f2:	421f      	tst	r7, r3
 80044f4:	f04f 0702 	mov.w	r7, #2
 80044f8:	4628      	mov	r0, r5
 80044fa:	bf18      	it	ne
 80044fc:	f04a 0a02 	orrne.w	sl, sl, #2
 8004500:	1b36      	subs	r6, r6, r4
 8004502:	f7ff fe1f 	bl	8004144 <rshift>
 8004506:	f8d8 4004 	ldr.w	r4, [r8, #4]
 800450a:	f1ba 0f00 	cmp.w	sl, #0
 800450e:	d048      	beq.n	80045a2 <__gethex+0x3be>
 8004510:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8004514:	2b02      	cmp	r3, #2
 8004516:	d015      	beq.n	8004544 <__gethex+0x360>
 8004518:	2b03      	cmp	r3, #3
 800451a:	d017      	beq.n	800454c <__gethex+0x368>
 800451c:	2b01      	cmp	r3, #1
 800451e:	d109      	bne.n	8004534 <__gethex+0x350>
 8004520:	f01a 0f02 	tst.w	sl, #2
 8004524:	d006      	beq.n	8004534 <__gethex+0x350>
 8004526:	f8d9 3000 	ldr.w	r3, [r9]
 800452a:	ea4a 0a03 	orr.w	sl, sl, r3
 800452e:	f01a 0f01 	tst.w	sl, #1
 8004532:	d10e      	bne.n	8004552 <__gethex+0x36e>
 8004534:	f047 0710 	orr.w	r7, r7, #16
 8004538:	e033      	b.n	80045a2 <__gethex+0x3be>
 800453a:	f04f 0a01 	mov.w	sl, #1
 800453e:	e7cf      	b.n	80044e0 <__gethex+0x2fc>
 8004540:	2701      	movs	r7, #1
 8004542:	e7e2      	b.n	800450a <__gethex+0x326>
 8004544:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004546:	f1c3 0301 	rsb	r3, r3, #1
 800454a:	9315      	str	r3, [sp, #84]	; 0x54
 800454c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800454e:	2b00      	cmp	r3, #0
 8004550:	d0f0      	beq.n	8004534 <__gethex+0x350>
 8004552:	f04f 0c00 	mov.w	ip, #0
 8004556:	f8d5 9010 	ldr.w	r9, [r5, #16]
 800455a:	f105 0314 	add.w	r3, r5, #20
 800455e:	ea4f 0a89 	mov.w	sl, r9, lsl #2
 8004562:	eb03 010a 	add.w	r1, r3, sl
 8004566:	4618      	mov	r0, r3
 8004568:	f853 2b04 	ldr.w	r2, [r3], #4
 800456c:	f1b2 3fff 	cmp.w	r2, #4294967295
 8004570:	d01c      	beq.n	80045ac <__gethex+0x3c8>
 8004572:	3201      	adds	r2, #1
 8004574:	6002      	str	r2, [r0, #0]
 8004576:	2f02      	cmp	r7, #2
 8004578:	f105 0314 	add.w	r3, r5, #20
 800457c:	d138      	bne.n	80045f0 <__gethex+0x40c>
 800457e:	f8d8 2000 	ldr.w	r2, [r8]
 8004582:	3a01      	subs	r2, #1
 8004584:	42b2      	cmp	r2, r6
 8004586:	d10a      	bne.n	800459e <__gethex+0x3ba>
 8004588:	2201      	movs	r2, #1
 800458a:	1171      	asrs	r1, r6, #5
 800458c:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8004590:	f006 061f 	and.w	r6, r6, #31
 8004594:	fa02 f606 	lsl.w	r6, r2, r6
 8004598:	421e      	tst	r6, r3
 800459a:	bf18      	it	ne
 800459c:	4617      	movne	r7, r2
 800459e:	f047 0720 	orr.w	r7, r7, #32
 80045a2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80045a4:	601d      	str	r5, [r3, #0]
 80045a6:	9b06      	ldr	r3, [sp, #24]
 80045a8:	601c      	str	r4, [r3, #0]
 80045aa:	e6a3      	b.n	80042f4 <__gethex+0x110>
 80045ac:	4299      	cmp	r1, r3
 80045ae:	f843 cc04 	str.w	ip, [r3, #-4]
 80045b2:	d8d8      	bhi.n	8004566 <__gethex+0x382>
 80045b4:	68ab      	ldr	r3, [r5, #8]
 80045b6:	4599      	cmp	r9, r3
 80045b8:	db12      	blt.n	80045e0 <__gethex+0x3fc>
 80045ba:	6869      	ldr	r1, [r5, #4]
 80045bc:	9802      	ldr	r0, [sp, #8]
 80045be:	3101      	adds	r1, #1
 80045c0:	f000 f90f 	bl	80047e2 <_Balloc>
 80045c4:	4683      	mov	fp, r0
 80045c6:	692a      	ldr	r2, [r5, #16]
 80045c8:	f105 010c 	add.w	r1, r5, #12
 80045cc:	3202      	adds	r2, #2
 80045ce:	0092      	lsls	r2, r2, #2
 80045d0:	300c      	adds	r0, #12
 80045d2:	f000 f8fb 	bl	80047cc <memcpy>
 80045d6:	4629      	mov	r1, r5
 80045d8:	9802      	ldr	r0, [sp, #8]
 80045da:	f000 f936 	bl	800484a <_Bfree>
 80045de:	465d      	mov	r5, fp
 80045e0:	692b      	ldr	r3, [r5, #16]
 80045e2:	1c5a      	adds	r2, r3, #1
 80045e4:	612a      	str	r2, [r5, #16]
 80045e6:	2201      	movs	r2, #1
 80045e8:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 80045ec:	615a      	str	r2, [r3, #20]
 80045ee:	e7c2      	b.n	8004576 <__gethex+0x392>
 80045f0:	692a      	ldr	r2, [r5, #16]
 80045f2:	454a      	cmp	r2, r9
 80045f4:	dd0b      	ble.n	800460e <__gethex+0x42a>
 80045f6:	2101      	movs	r1, #1
 80045f8:	4628      	mov	r0, r5
 80045fa:	f7ff fda3 	bl	8004144 <rshift>
 80045fe:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8004602:	3401      	adds	r4, #1
 8004604:	42a3      	cmp	r3, r4
 8004606:	f6ff aed8 	blt.w	80043ba <__gethex+0x1d6>
 800460a:	2701      	movs	r7, #1
 800460c:	e7c7      	b.n	800459e <__gethex+0x3ba>
 800460e:	f016 061f 	ands.w	r6, r6, #31
 8004612:	d0fa      	beq.n	800460a <__gethex+0x426>
 8004614:	449a      	add	sl, r3
 8004616:	f85a 0c04 	ldr.w	r0, [sl, #-4]
 800461a:	f000 f9a6 	bl	800496a <__hi0bits>
 800461e:	f1c6 0620 	rsb	r6, r6, #32
 8004622:	42b0      	cmp	r0, r6
 8004624:	dbe7      	blt.n	80045f6 <__gethex+0x412>
 8004626:	e7f0      	b.n	800460a <__gethex+0x426>

08004628 <L_shift>:
 8004628:	f1c2 0208 	rsb	r2, r2, #8
 800462c:	0092      	lsls	r2, r2, #2
 800462e:	b570      	push	{r4, r5, r6, lr}
 8004630:	f1c2 0620 	rsb	r6, r2, #32
 8004634:	6843      	ldr	r3, [r0, #4]
 8004636:	6804      	ldr	r4, [r0, #0]
 8004638:	fa03 f506 	lsl.w	r5, r3, r6
 800463c:	432c      	orrs	r4, r5
 800463e:	40d3      	lsrs	r3, r2
 8004640:	6004      	str	r4, [r0, #0]
 8004642:	f840 3f04 	str.w	r3, [r0, #4]!
 8004646:	4288      	cmp	r0, r1
 8004648:	d3f4      	bcc.n	8004634 <L_shift+0xc>
 800464a:	bd70      	pop	{r4, r5, r6, pc}

0800464c <__match>:
 800464c:	b530      	push	{r4, r5, lr}
 800464e:	6803      	ldr	r3, [r0, #0]
 8004650:	3301      	adds	r3, #1
 8004652:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004656:	b914      	cbnz	r4, 800465e <__match+0x12>
 8004658:	6003      	str	r3, [r0, #0]
 800465a:	2001      	movs	r0, #1
 800465c:	bd30      	pop	{r4, r5, pc}
 800465e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004662:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 8004666:	2d19      	cmp	r5, #25
 8004668:	bf98      	it	ls
 800466a:	3220      	addls	r2, #32
 800466c:	42a2      	cmp	r2, r4
 800466e:	d0f0      	beq.n	8004652 <__match+0x6>
 8004670:	2000      	movs	r0, #0
 8004672:	e7f3      	b.n	800465c <__match+0x10>

08004674 <__hexnan>:
 8004674:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004678:	2500      	movs	r5, #0
 800467a:	680b      	ldr	r3, [r1, #0]
 800467c:	4682      	mov	sl, r0
 800467e:	115f      	asrs	r7, r3, #5
 8004680:	eb02 0787 	add.w	r7, r2, r7, lsl #2
 8004684:	f013 031f 	ands.w	r3, r3, #31
 8004688:	bf18      	it	ne
 800468a:	3704      	addne	r7, #4
 800468c:	1f3e      	subs	r6, r7, #4
 800468e:	4690      	mov	r8, r2
 8004690:	46b1      	mov	r9, r6
 8004692:	4634      	mov	r4, r6
 8004694:	46ab      	mov	fp, r5
 8004696:	b087      	sub	sp, #28
 8004698:	6801      	ldr	r1, [r0, #0]
 800469a:	9301      	str	r3, [sp, #4]
 800469c:	f847 5c04 	str.w	r5, [r7, #-4]
 80046a0:	9502      	str	r5, [sp, #8]
 80046a2:	784a      	ldrb	r2, [r1, #1]
 80046a4:	1c4b      	adds	r3, r1, #1
 80046a6:	9303      	str	r3, [sp, #12]
 80046a8:	b342      	cbz	r2, 80046fc <__hexnan+0x88>
 80046aa:	4610      	mov	r0, r2
 80046ac:	9105      	str	r1, [sp, #20]
 80046ae:	9204      	str	r2, [sp, #16]
 80046b0:	f7ff fd83 	bl	80041ba <__hexdig_fun>
 80046b4:	2800      	cmp	r0, #0
 80046b6:	d143      	bne.n	8004740 <__hexnan+0xcc>
 80046b8:	9a04      	ldr	r2, [sp, #16]
 80046ba:	9905      	ldr	r1, [sp, #20]
 80046bc:	2a20      	cmp	r2, #32
 80046be:	d818      	bhi.n	80046f2 <__hexnan+0x7e>
 80046c0:	9b02      	ldr	r3, [sp, #8]
 80046c2:	459b      	cmp	fp, r3
 80046c4:	dd13      	ble.n	80046ee <__hexnan+0x7a>
 80046c6:	454c      	cmp	r4, r9
 80046c8:	d206      	bcs.n	80046d8 <__hexnan+0x64>
 80046ca:	2d07      	cmp	r5, #7
 80046cc:	dc04      	bgt.n	80046d8 <__hexnan+0x64>
 80046ce:	462a      	mov	r2, r5
 80046d0:	4649      	mov	r1, r9
 80046d2:	4620      	mov	r0, r4
 80046d4:	f7ff ffa8 	bl	8004628 <L_shift>
 80046d8:	4544      	cmp	r4, r8
 80046da:	d944      	bls.n	8004766 <__hexnan+0xf2>
 80046dc:	2300      	movs	r3, #0
 80046de:	f1a4 0904 	sub.w	r9, r4, #4
 80046e2:	f844 3c04 	str.w	r3, [r4, #-4]
 80046e6:	461d      	mov	r5, r3
 80046e8:	464c      	mov	r4, r9
 80046ea:	f8cd b008 	str.w	fp, [sp, #8]
 80046ee:	9903      	ldr	r1, [sp, #12]
 80046f0:	e7d7      	b.n	80046a2 <__hexnan+0x2e>
 80046f2:	2a29      	cmp	r2, #41	; 0x29
 80046f4:	d14a      	bne.n	800478c <__hexnan+0x118>
 80046f6:	3102      	adds	r1, #2
 80046f8:	f8ca 1000 	str.w	r1, [sl]
 80046fc:	f1bb 0f00 	cmp.w	fp, #0
 8004700:	d044      	beq.n	800478c <__hexnan+0x118>
 8004702:	454c      	cmp	r4, r9
 8004704:	d206      	bcs.n	8004714 <__hexnan+0xa0>
 8004706:	2d07      	cmp	r5, #7
 8004708:	dc04      	bgt.n	8004714 <__hexnan+0xa0>
 800470a:	462a      	mov	r2, r5
 800470c:	4649      	mov	r1, r9
 800470e:	4620      	mov	r0, r4
 8004710:	f7ff ff8a 	bl	8004628 <L_shift>
 8004714:	4544      	cmp	r4, r8
 8004716:	d928      	bls.n	800476a <__hexnan+0xf6>
 8004718:	4643      	mov	r3, r8
 800471a:	f854 2b04 	ldr.w	r2, [r4], #4
 800471e:	42a6      	cmp	r6, r4
 8004720:	f843 2b04 	str.w	r2, [r3], #4
 8004724:	d2f9      	bcs.n	800471a <__hexnan+0xa6>
 8004726:	2200      	movs	r2, #0
 8004728:	f843 2b04 	str.w	r2, [r3], #4
 800472c:	429e      	cmp	r6, r3
 800472e:	d2fb      	bcs.n	8004728 <__hexnan+0xb4>
 8004730:	6833      	ldr	r3, [r6, #0]
 8004732:	b91b      	cbnz	r3, 800473c <__hexnan+0xc8>
 8004734:	4546      	cmp	r6, r8
 8004736:	d127      	bne.n	8004788 <__hexnan+0x114>
 8004738:	2301      	movs	r3, #1
 800473a:	6033      	str	r3, [r6, #0]
 800473c:	2005      	movs	r0, #5
 800473e:	e026      	b.n	800478e <__hexnan+0x11a>
 8004740:	3501      	adds	r5, #1
 8004742:	2d08      	cmp	r5, #8
 8004744:	f10b 0b01 	add.w	fp, fp, #1
 8004748:	dd06      	ble.n	8004758 <__hexnan+0xe4>
 800474a:	4544      	cmp	r4, r8
 800474c:	d9cf      	bls.n	80046ee <__hexnan+0x7a>
 800474e:	2300      	movs	r3, #0
 8004750:	2501      	movs	r5, #1
 8004752:	f844 3c04 	str.w	r3, [r4, #-4]
 8004756:	3c04      	subs	r4, #4
 8004758:	6822      	ldr	r2, [r4, #0]
 800475a:	f000 000f 	and.w	r0, r0, #15
 800475e:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 8004762:	6020      	str	r0, [r4, #0]
 8004764:	e7c3      	b.n	80046ee <__hexnan+0x7a>
 8004766:	2508      	movs	r5, #8
 8004768:	e7c1      	b.n	80046ee <__hexnan+0x7a>
 800476a:	9b01      	ldr	r3, [sp, #4]
 800476c:	2b00      	cmp	r3, #0
 800476e:	d0df      	beq.n	8004730 <__hexnan+0xbc>
 8004770:	f04f 32ff 	mov.w	r2, #4294967295
 8004774:	f1c3 0320 	rsb	r3, r3, #32
 8004778:	fa22 f303 	lsr.w	r3, r2, r3
 800477c:	f857 2c04 	ldr.w	r2, [r7, #-4]
 8004780:	401a      	ands	r2, r3
 8004782:	f847 2c04 	str.w	r2, [r7, #-4]
 8004786:	e7d3      	b.n	8004730 <__hexnan+0xbc>
 8004788:	3e04      	subs	r6, #4
 800478a:	e7d1      	b.n	8004730 <__hexnan+0xbc>
 800478c:	2004      	movs	r0, #4
 800478e:	b007      	add	sp, #28
 8004790:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08004794 <__localeconv_l>:
 8004794:	30f0      	adds	r0, #240	; 0xf0
 8004796:	4770      	bx	lr

08004798 <malloc>:
 8004798:	4b02      	ldr	r3, [pc, #8]	; (80047a4 <malloc+0xc>)
 800479a:	4601      	mov	r1, r0
 800479c:	6818      	ldr	r0, [r3, #0]
 800479e:	f000 bc45 	b.w	800502c <_malloc_r>
 80047a2:	bf00      	nop
 80047a4:	20000030 	.word	0x20000030

080047a8 <__ascii_mbtowc>:
 80047a8:	b082      	sub	sp, #8
 80047aa:	b901      	cbnz	r1, 80047ae <__ascii_mbtowc+0x6>
 80047ac:	a901      	add	r1, sp, #4
 80047ae:	b142      	cbz	r2, 80047c2 <__ascii_mbtowc+0x1a>
 80047b0:	b14b      	cbz	r3, 80047c6 <__ascii_mbtowc+0x1e>
 80047b2:	7813      	ldrb	r3, [r2, #0]
 80047b4:	600b      	str	r3, [r1, #0]
 80047b6:	7812      	ldrb	r2, [r2, #0]
 80047b8:	1c10      	adds	r0, r2, #0
 80047ba:	bf18      	it	ne
 80047bc:	2001      	movne	r0, #1
 80047be:	b002      	add	sp, #8
 80047c0:	4770      	bx	lr
 80047c2:	4610      	mov	r0, r2
 80047c4:	e7fb      	b.n	80047be <__ascii_mbtowc+0x16>
 80047c6:	f06f 0001 	mvn.w	r0, #1
 80047ca:	e7f8      	b.n	80047be <__ascii_mbtowc+0x16>

080047cc <memcpy>:
 80047cc:	b510      	push	{r4, lr}
 80047ce:	1e43      	subs	r3, r0, #1
 80047d0:	440a      	add	r2, r1
 80047d2:	4291      	cmp	r1, r2
 80047d4:	d100      	bne.n	80047d8 <memcpy+0xc>
 80047d6:	bd10      	pop	{r4, pc}
 80047d8:	f811 4b01 	ldrb.w	r4, [r1], #1
 80047dc:	f803 4f01 	strb.w	r4, [r3, #1]!
 80047e0:	e7f7      	b.n	80047d2 <memcpy+0x6>

080047e2 <_Balloc>:
 80047e2:	b570      	push	{r4, r5, r6, lr}
 80047e4:	6a45      	ldr	r5, [r0, #36]	; 0x24
 80047e6:	4604      	mov	r4, r0
 80047e8:	460e      	mov	r6, r1
 80047ea:	b93d      	cbnz	r5, 80047fc <_Balloc+0x1a>
 80047ec:	2010      	movs	r0, #16
 80047ee:	f7ff ffd3 	bl	8004798 <malloc>
 80047f2:	6260      	str	r0, [r4, #36]	; 0x24
 80047f4:	e9c0 5501 	strd	r5, r5, [r0, #4]
 80047f8:	6005      	str	r5, [r0, #0]
 80047fa:	60c5      	str	r5, [r0, #12]
 80047fc:	6a65      	ldr	r5, [r4, #36]	; 0x24
 80047fe:	68eb      	ldr	r3, [r5, #12]
 8004800:	b183      	cbz	r3, 8004824 <_Balloc+0x42>
 8004802:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004804:	68db      	ldr	r3, [r3, #12]
 8004806:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 800480a:	b9b8      	cbnz	r0, 800483c <_Balloc+0x5a>
 800480c:	2101      	movs	r1, #1
 800480e:	fa01 f506 	lsl.w	r5, r1, r6
 8004812:	1d6a      	adds	r2, r5, #5
 8004814:	0092      	lsls	r2, r2, #2
 8004816:	4620      	mov	r0, r4
 8004818:	f000 fbf9 	bl	800500e <_calloc_r>
 800481c:	b160      	cbz	r0, 8004838 <_Balloc+0x56>
 800481e:	e9c0 6501 	strd	r6, r5, [r0, #4]
 8004822:	e00e      	b.n	8004842 <_Balloc+0x60>
 8004824:	2221      	movs	r2, #33	; 0x21
 8004826:	2104      	movs	r1, #4
 8004828:	4620      	mov	r0, r4
 800482a:	f000 fbf0 	bl	800500e <_calloc_r>
 800482e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004830:	60e8      	str	r0, [r5, #12]
 8004832:	68db      	ldr	r3, [r3, #12]
 8004834:	2b00      	cmp	r3, #0
 8004836:	d1e4      	bne.n	8004802 <_Balloc+0x20>
 8004838:	2000      	movs	r0, #0
 800483a:	bd70      	pop	{r4, r5, r6, pc}
 800483c:	6802      	ldr	r2, [r0, #0]
 800483e:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
 8004842:	2300      	movs	r3, #0
 8004844:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8004848:	e7f7      	b.n	800483a <_Balloc+0x58>

0800484a <_Bfree>:
 800484a:	b570      	push	{r4, r5, r6, lr}
 800484c:	6a44      	ldr	r4, [r0, #36]	; 0x24
 800484e:	4606      	mov	r6, r0
 8004850:	460d      	mov	r5, r1
 8004852:	b93c      	cbnz	r4, 8004864 <_Bfree+0x1a>
 8004854:	2010      	movs	r0, #16
 8004856:	f7ff ff9f 	bl	8004798 <malloc>
 800485a:	6270      	str	r0, [r6, #36]	; 0x24
 800485c:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8004860:	6004      	str	r4, [r0, #0]
 8004862:	60c4      	str	r4, [r0, #12]
 8004864:	b13d      	cbz	r5, 8004876 <_Bfree+0x2c>
 8004866:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8004868:	686a      	ldr	r2, [r5, #4]
 800486a:	68db      	ldr	r3, [r3, #12]
 800486c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8004870:	6029      	str	r1, [r5, #0]
 8004872:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
 8004876:	bd70      	pop	{r4, r5, r6, pc}

08004878 <__multadd>:
 8004878:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800487c:	461f      	mov	r7, r3
 800487e:	4606      	mov	r6, r0
 8004880:	460c      	mov	r4, r1
 8004882:	2300      	movs	r3, #0
 8004884:	690d      	ldr	r5, [r1, #16]
 8004886:	f101 0c14 	add.w	ip, r1, #20
 800488a:	f8dc 0000 	ldr.w	r0, [ip]
 800488e:	3301      	adds	r3, #1
 8004890:	b281      	uxth	r1, r0
 8004892:	fb02 7101 	mla	r1, r2, r1, r7
 8004896:	0c00      	lsrs	r0, r0, #16
 8004898:	0c0f      	lsrs	r7, r1, #16
 800489a:	fb02 7000 	mla	r0, r2, r0, r7
 800489e:	b289      	uxth	r1, r1
 80048a0:	eb01 4100 	add.w	r1, r1, r0, lsl #16
 80048a4:	429d      	cmp	r5, r3
 80048a6:	ea4f 4710 	mov.w	r7, r0, lsr #16
 80048aa:	f84c 1b04 	str.w	r1, [ip], #4
 80048ae:	dcec      	bgt.n	800488a <__multadd+0x12>
 80048b0:	b1d7      	cbz	r7, 80048e8 <__multadd+0x70>
 80048b2:	68a3      	ldr	r3, [r4, #8]
 80048b4:	42ab      	cmp	r3, r5
 80048b6:	dc12      	bgt.n	80048de <__multadd+0x66>
 80048b8:	6861      	ldr	r1, [r4, #4]
 80048ba:	4630      	mov	r0, r6
 80048bc:	3101      	adds	r1, #1
 80048be:	f7ff ff90 	bl	80047e2 <_Balloc>
 80048c2:	4680      	mov	r8, r0
 80048c4:	6922      	ldr	r2, [r4, #16]
 80048c6:	f104 010c 	add.w	r1, r4, #12
 80048ca:	3202      	adds	r2, #2
 80048cc:	0092      	lsls	r2, r2, #2
 80048ce:	300c      	adds	r0, #12
 80048d0:	f7ff ff7c 	bl	80047cc <memcpy>
 80048d4:	4621      	mov	r1, r4
 80048d6:	4630      	mov	r0, r6
 80048d8:	f7ff ffb7 	bl	800484a <_Bfree>
 80048dc:	4644      	mov	r4, r8
 80048de:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80048e2:	3501      	adds	r5, #1
 80048e4:	615f      	str	r7, [r3, #20]
 80048e6:	6125      	str	r5, [r4, #16]
 80048e8:	4620      	mov	r0, r4
 80048ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080048ee <__s2b>:
 80048ee:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80048f2:	4615      	mov	r5, r2
 80048f4:	2209      	movs	r2, #9
 80048f6:	461f      	mov	r7, r3
 80048f8:	3308      	adds	r3, #8
 80048fa:	460c      	mov	r4, r1
 80048fc:	fb93 f3f2 	sdiv	r3, r3, r2
 8004900:	4606      	mov	r6, r0
 8004902:	2201      	movs	r2, #1
 8004904:	2100      	movs	r1, #0
 8004906:	429a      	cmp	r2, r3
 8004908:	db20      	blt.n	800494c <__s2b+0x5e>
 800490a:	4630      	mov	r0, r6
 800490c:	f7ff ff69 	bl	80047e2 <_Balloc>
 8004910:	9b08      	ldr	r3, [sp, #32]
 8004912:	2d09      	cmp	r5, #9
 8004914:	6143      	str	r3, [r0, #20]
 8004916:	f04f 0301 	mov.w	r3, #1
 800491a:	6103      	str	r3, [r0, #16]
 800491c:	dd19      	ble.n	8004952 <__s2b+0x64>
 800491e:	f104 0809 	add.w	r8, r4, #9
 8004922:	46c1      	mov	r9, r8
 8004924:	442c      	add	r4, r5
 8004926:	f819 3b01 	ldrb.w	r3, [r9], #1
 800492a:	4601      	mov	r1, r0
 800492c:	3b30      	subs	r3, #48	; 0x30
 800492e:	220a      	movs	r2, #10
 8004930:	4630      	mov	r0, r6
 8004932:	f7ff ffa1 	bl	8004878 <__multadd>
 8004936:	45a1      	cmp	r9, r4
 8004938:	d1f5      	bne.n	8004926 <__s2b+0x38>
 800493a:	eb08 0405 	add.w	r4, r8, r5
 800493e:	3c08      	subs	r4, #8
 8004940:	1b2d      	subs	r5, r5, r4
 8004942:	1963      	adds	r3, r4, r5
 8004944:	42bb      	cmp	r3, r7
 8004946:	db07      	blt.n	8004958 <__s2b+0x6a>
 8004948:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800494c:	0052      	lsls	r2, r2, #1
 800494e:	3101      	adds	r1, #1
 8004950:	e7d9      	b.n	8004906 <__s2b+0x18>
 8004952:	340a      	adds	r4, #10
 8004954:	2509      	movs	r5, #9
 8004956:	e7f3      	b.n	8004940 <__s2b+0x52>
 8004958:	f814 3b01 	ldrb.w	r3, [r4], #1
 800495c:	4601      	mov	r1, r0
 800495e:	3b30      	subs	r3, #48	; 0x30
 8004960:	220a      	movs	r2, #10
 8004962:	4630      	mov	r0, r6
 8004964:	f7ff ff88 	bl	8004878 <__multadd>
 8004968:	e7eb      	b.n	8004942 <__s2b+0x54>

0800496a <__hi0bits>:
 800496a:	0c02      	lsrs	r2, r0, #16
 800496c:	0412      	lsls	r2, r2, #16
 800496e:	4603      	mov	r3, r0
 8004970:	b9b2      	cbnz	r2, 80049a0 <__hi0bits+0x36>
 8004972:	0403      	lsls	r3, r0, #16
 8004974:	2010      	movs	r0, #16
 8004976:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800497a:	bf04      	itt	eq
 800497c:	021b      	lsleq	r3, r3, #8
 800497e:	3008      	addeq	r0, #8
 8004980:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8004984:	bf04      	itt	eq
 8004986:	011b      	lsleq	r3, r3, #4
 8004988:	3004      	addeq	r0, #4
 800498a:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800498e:	bf04      	itt	eq
 8004990:	009b      	lsleq	r3, r3, #2
 8004992:	3002      	addeq	r0, #2
 8004994:	2b00      	cmp	r3, #0
 8004996:	db06      	blt.n	80049a6 <__hi0bits+0x3c>
 8004998:	005b      	lsls	r3, r3, #1
 800499a:	d503      	bpl.n	80049a4 <__hi0bits+0x3a>
 800499c:	3001      	adds	r0, #1
 800499e:	4770      	bx	lr
 80049a0:	2000      	movs	r0, #0
 80049a2:	e7e8      	b.n	8004976 <__hi0bits+0xc>
 80049a4:	2020      	movs	r0, #32
 80049a6:	4770      	bx	lr

080049a8 <__lo0bits>:
 80049a8:	6803      	ldr	r3, [r0, #0]
 80049aa:	4601      	mov	r1, r0
 80049ac:	f013 0207 	ands.w	r2, r3, #7
 80049b0:	d00b      	beq.n	80049ca <__lo0bits+0x22>
 80049b2:	07da      	lsls	r2, r3, #31
 80049b4:	d423      	bmi.n	80049fe <__lo0bits+0x56>
 80049b6:	0798      	lsls	r0, r3, #30
 80049b8:	bf49      	itett	mi
 80049ba:	085b      	lsrmi	r3, r3, #1
 80049bc:	089b      	lsrpl	r3, r3, #2
 80049be:	2001      	movmi	r0, #1
 80049c0:	600b      	strmi	r3, [r1, #0]
 80049c2:	bf5c      	itt	pl
 80049c4:	600b      	strpl	r3, [r1, #0]
 80049c6:	2002      	movpl	r0, #2
 80049c8:	4770      	bx	lr
 80049ca:	b298      	uxth	r0, r3
 80049cc:	b9a8      	cbnz	r0, 80049fa <__lo0bits+0x52>
 80049ce:	2010      	movs	r0, #16
 80049d0:	0c1b      	lsrs	r3, r3, #16
 80049d2:	f013 0fff 	tst.w	r3, #255	; 0xff
 80049d6:	bf04      	itt	eq
 80049d8:	0a1b      	lsreq	r3, r3, #8
 80049da:	3008      	addeq	r0, #8
 80049dc:	071a      	lsls	r2, r3, #28
 80049de:	bf04      	itt	eq
 80049e0:	091b      	lsreq	r3, r3, #4
 80049e2:	3004      	addeq	r0, #4
 80049e4:	079a      	lsls	r2, r3, #30
 80049e6:	bf04      	itt	eq
 80049e8:	089b      	lsreq	r3, r3, #2
 80049ea:	3002      	addeq	r0, #2
 80049ec:	07da      	lsls	r2, r3, #31
 80049ee:	d402      	bmi.n	80049f6 <__lo0bits+0x4e>
 80049f0:	085b      	lsrs	r3, r3, #1
 80049f2:	d006      	beq.n	8004a02 <__lo0bits+0x5a>
 80049f4:	3001      	adds	r0, #1
 80049f6:	600b      	str	r3, [r1, #0]
 80049f8:	4770      	bx	lr
 80049fa:	4610      	mov	r0, r2
 80049fc:	e7e9      	b.n	80049d2 <__lo0bits+0x2a>
 80049fe:	2000      	movs	r0, #0
 8004a00:	4770      	bx	lr
 8004a02:	2020      	movs	r0, #32
 8004a04:	4770      	bx	lr

08004a06 <__i2b>:
 8004a06:	b510      	push	{r4, lr}
 8004a08:	460c      	mov	r4, r1
 8004a0a:	2101      	movs	r1, #1
 8004a0c:	f7ff fee9 	bl	80047e2 <_Balloc>
 8004a10:	2201      	movs	r2, #1
 8004a12:	6144      	str	r4, [r0, #20]
 8004a14:	6102      	str	r2, [r0, #16]
 8004a16:	bd10      	pop	{r4, pc}

08004a18 <__multiply>:
 8004a18:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004a1c:	4614      	mov	r4, r2
 8004a1e:	690a      	ldr	r2, [r1, #16]
 8004a20:	6923      	ldr	r3, [r4, #16]
 8004a22:	4688      	mov	r8, r1
 8004a24:	429a      	cmp	r2, r3
 8004a26:	bfbe      	ittt	lt
 8004a28:	460b      	movlt	r3, r1
 8004a2a:	46a0      	movlt	r8, r4
 8004a2c:	461c      	movlt	r4, r3
 8004a2e:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8004a32:	f8d4 9010 	ldr.w	r9, [r4, #16]
 8004a36:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8004a3a:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8004a3e:	eb07 0609 	add.w	r6, r7, r9
 8004a42:	42b3      	cmp	r3, r6
 8004a44:	bfb8      	it	lt
 8004a46:	3101      	addlt	r1, #1
 8004a48:	f7ff fecb 	bl	80047e2 <_Balloc>
 8004a4c:	f100 0514 	add.w	r5, r0, #20
 8004a50:	462b      	mov	r3, r5
 8004a52:	2200      	movs	r2, #0
 8004a54:	eb05 0e86 	add.w	lr, r5, r6, lsl #2
 8004a58:	4573      	cmp	r3, lr
 8004a5a:	d316      	bcc.n	8004a8a <__multiply+0x72>
 8004a5c:	f104 0214 	add.w	r2, r4, #20
 8004a60:	f108 0114 	add.w	r1, r8, #20
 8004a64:	eb02 0389 	add.w	r3, r2, r9, lsl #2
 8004a68:	eb01 0787 	add.w	r7, r1, r7, lsl #2
 8004a6c:	9300      	str	r3, [sp, #0]
 8004a6e:	9b00      	ldr	r3, [sp, #0]
 8004a70:	9201      	str	r2, [sp, #4]
 8004a72:	4293      	cmp	r3, r2
 8004a74:	d80c      	bhi.n	8004a90 <__multiply+0x78>
 8004a76:	2e00      	cmp	r6, #0
 8004a78:	dd03      	ble.n	8004a82 <__multiply+0x6a>
 8004a7a:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 8004a7e:	2b00      	cmp	r3, #0
 8004a80:	d05d      	beq.n	8004b3e <__multiply+0x126>
 8004a82:	6106      	str	r6, [r0, #16]
 8004a84:	b003      	add	sp, #12
 8004a86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004a8a:	f843 2b04 	str.w	r2, [r3], #4
 8004a8e:	e7e3      	b.n	8004a58 <__multiply+0x40>
 8004a90:	f8b2 b000 	ldrh.w	fp, [r2]
 8004a94:	f1bb 0f00 	cmp.w	fp, #0
 8004a98:	d023      	beq.n	8004ae2 <__multiply+0xca>
 8004a9a:	4689      	mov	r9, r1
 8004a9c:	46ac      	mov	ip, r5
 8004a9e:	f04f 0800 	mov.w	r8, #0
 8004aa2:	f859 4b04 	ldr.w	r4, [r9], #4
 8004aa6:	f8dc a000 	ldr.w	sl, [ip]
 8004aaa:	b2a3      	uxth	r3, r4
 8004aac:	fa1f fa8a 	uxth.w	sl, sl
 8004ab0:	fb0b a303 	mla	r3, fp, r3, sl
 8004ab4:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 8004ab8:	f8dc 4000 	ldr.w	r4, [ip]
 8004abc:	4443      	add	r3, r8
 8004abe:	ea4f 4814 	mov.w	r8, r4, lsr #16
 8004ac2:	fb0b 840a 	mla	r4, fp, sl, r8
 8004ac6:	46e2      	mov	sl, ip
 8004ac8:	eb04 4413 	add.w	r4, r4, r3, lsr #16
 8004acc:	b29b      	uxth	r3, r3
 8004ace:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8004ad2:	454f      	cmp	r7, r9
 8004ad4:	ea4f 4814 	mov.w	r8, r4, lsr #16
 8004ad8:	f84a 3b04 	str.w	r3, [sl], #4
 8004adc:	d82b      	bhi.n	8004b36 <__multiply+0x11e>
 8004ade:	f8cc 8004 	str.w	r8, [ip, #4]
 8004ae2:	9b01      	ldr	r3, [sp, #4]
 8004ae4:	3204      	adds	r2, #4
 8004ae6:	f8b3 a002 	ldrh.w	sl, [r3, #2]
 8004aea:	f1ba 0f00 	cmp.w	sl, #0
 8004aee:	d020      	beq.n	8004b32 <__multiply+0x11a>
 8004af0:	4689      	mov	r9, r1
 8004af2:	46a8      	mov	r8, r5
 8004af4:	f04f 0b00 	mov.w	fp, #0
 8004af8:	682b      	ldr	r3, [r5, #0]
 8004afa:	f8b9 c000 	ldrh.w	ip, [r9]
 8004afe:	f8b8 4002 	ldrh.w	r4, [r8, #2]
 8004b02:	b29b      	uxth	r3, r3
 8004b04:	fb0a 440c 	mla	r4, sl, ip, r4
 8004b08:	46c4      	mov	ip, r8
 8004b0a:	445c      	add	r4, fp
 8004b0c:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8004b10:	f84c 3b04 	str.w	r3, [ip], #4
 8004b14:	f859 3b04 	ldr.w	r3, [r9], #4
 8004b18:	f8b8 b004 	ldrh.w	fp, [r8, #4]
 8004b1c:	0c1b      	lsrs	r3, r3, #16
 8004b1e:	fb0a b303 	mla	r3, sl, r3, fp
 8004b22:	454f      	cmp	r7, r9
 8004b24:	eb03 4314 	add.w	r3, r3, r4, lsr #16
 8004b28:	ea4f 4b13 	mov.w	fp, r3, lsr #16
 8004b2c:	d805      	bhi.n	8004b3a <__multiply+0x122>
 8004b2e:	f8c8 3004 	str.w	r3, [r8, #4]
 8004b32:	3504      	adds	r5, #4
 8004b34:	e79b      	b.n	8004a6e <__multiply+0x56>
 8004b36:	46d4      	mov	ip, sl
 8004b38:	e7b3      	b.n	8004aa2 <__multiply+0x8a>
 8004b3a:	46e0      	mov	r8, ip
 8004b3c:	e7dd      	b.n	8004afa <__multiply+0xe2>
 8004b3e:	3e01      	subs	r6, #1
 8004b40:	e799      	b.n	8004a76 <__multiply+0x5e>
	...

08004b44 <__pow5mult>:
 8004b44:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004b48:	4615      	mov	r5, r2
 8004b4a:	f012 0203 	ands.w	r2, r2, #3
 8004b4e:	4606      	mov	r6, r0
 8004b50:	460f      	mov	r7, r1
 8004b52:	d007      	beq.n	8004b64 <__pow5mult+0x20>
 8004b54:	4c21      	ldr	r4, [pc, #132]	; (8004bdc <__pow5mult+0x98>)
 8004b56:	3a01      	subs	r2, #1
 8004b58:	2300      	movs	r3, #0
 8004b5a:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8004b5e:	f7ff fe8b 	bl	8004878 <__multadd>
 8004b62:	4607      	mov	r7, r0
 8004b64:	10ad      	asrs	r5, r5, #2
 8004b66:	d035      	beq.n	8004bd4 <__pow5mult+0x90>
 8004b68:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8004b6a:	b93c      	cbnz	r4, 8004b7c <__pow5mult+0x38>
 8004b6c:	2010      	movs	r0, #16
 8004b6e:	f7ff fe13 	bl	8004798 <malloc>
 8004b72:	6270      	str	r0, [r6, #36]	; 0x24
 8004b74:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8004b78:	6004      	str	r4, [r0, #0]
 8004b7a:	60c4      	str	r4, [r0, #12]
 8004b7c:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8004b80:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8004b84:	b94c      	cbnz	r4, 8004b9a <__pow5mult+0x56>
 8004b86:	f240 2171 	movw	r1, #625	; 0x271
 8004b8a:	4630      	mov	r0, r6
 8004b8c:	f7ff ff3b 	bl	8004a06 <__i2b>
 8004b90:	2300      	movs	r3, #0
 8004b92:	4604      	mov	r4, r0
 8004b94:	f8c8 0008 	str.w	r0, [r8, #8]
 8004b98:	6003      	str	r3, [r0, #0]
 8004b9a:	f04f 0800 	mov.w	r8, #0
 8004b9e:	07eb      	lsls	r3, r5, #31
 8004ba0:	d50a      	bpl.n	8004bb8 <__pow5mult+0x74>
 8004ba2:	4639      	mov	r1, r7
 8004ba4:	4622      	mov	r2, r4
 8004ba6:	4630      	mov	r0, r6
 8004ba8:	f7ff ff36 	bl	8004a18 <__multiply>
 8004bac:	4681      	mov	r9, r0
 8004bae:	4639      	mov	r1, r7
 8004bb0:	4630      	mov	r0, r6
 8004bb2:	f7ff fe4a 	bl	800484a <_Bfree>
 8004bb6:	464f      	mov	r7, r9
 8004bb8:	106d      	asrs	r5, r5, #1
 8004bba:	d00b      	beq.n	8004bd4 <__pow5mult+0x90>
 8004bbc:	6820      	ldr	r0, [r4, #0]
 8004bbe:	b938      	cbnz	r0, 8004bd0 <__pow5mult+0x8c>
 8004bc0:	4622      	mov	r2, r4
 8004bc2:	4621      	mov	r1, r4
 8004bc4:	4630      	mov	r0, r6
 8004bc6:	f7ff ff27 	bl	8004a18 <__multiply>
 8004bca:	6020      	str	r0, [r4, #0]
 8004bcc:	f8c0 8000 	str.w	r8, [r0]
 8004bd0:	4604      	mov	r4, r0
 8004bd2:	e7e4      	b.n	8004b9e <__pow5mult+0x5a>
 8004bd4:	4638      	mov	r0, r7
 8004bd6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004bda:	bf00      	nop
 8004bdc:	08007670 	.word	0x08007670

08004be0 <__lshift>:
 8004be0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004be4:	460c      	mov	r4, r1
 8004be6:	4607      	mov	r7, r0
 8004be8:	4616      	mov	r6, r2
 8004bea:	6923      	ldr	r3, [r4, #16]
 8004bec:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8004bf0:	eb0a 0903 	add.w	r9, sl, r3
 8004bf4:	6849      	ldr	r1, [r1, #4]
 8004bf6:	68a3      	ldr	r3, [r4, #8]
 8004bf8:	f109 0501 	add.w	r5, r9, #1
 8004bfc:	42ab      	cmp	r3, r5
 8004bfe:	db32      	blt.n	8004c66 <__lshift+0x86>
 8004c00:	4638      	mov	r0, r7
 8004c02:	f7ff fdee 	bl	80047e2 <_Balloc>
 8004c06:	2300      	movs	r3, #0
 8004c08:	4680      	mov	r8, r0
 8004c0a:	461a      	mov	r2, r3
 8004c0c:	f100 0114 	add.w	r1, r0, #20
 8004c10:	4553      	cmp	r3, sl
 8004c12:	db2b      	blt.n	8004c6c <__lshift+0x8c>
 8004c14:	6920      	ldr	r0, [r4, #16]
 8004c16:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8004c1a:	f104 0314 	add.w	r3, r4, #20
 8004c1e:	f016 021f 	ands.w	r2, r6, #31
 8004c22:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8004c26:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8004c2a:	d025      	beq.n	8004c78 <__lshift+0x98>
 8004c2c:	2000      	movs	r0, #0
 8004c2e:	f1c2 0e20 	rsb	lr, r2, #32
 8004c32:	468a      	mov	sl, r1
 8004c34:	681e      	ldr	r6, [r3, #0]
 8004c36:	4096      	lsls	r6, r2
 8004c38:	4330      	orrs	r0, r6
 8004c3a:	f84a 0b04 	str.w	r0, [sl], #4
 8004c3e:	f853 0b04 	ldr.w	r0, [r3], #4
 8004c42:	459c      	cmp	ip, r3
 8004c44:	fa20 f00e 	lsr.w	r0, r0, lr
 8004c48:	d814      	bhi.n	8004c74 <__lshift+0x94>
 8004c4a:	6048      	str	r0, [r1, #4]
 8004c4c:	b108      	cbz	r0, 8004c52 <__lshift+0x72>
 8004c4e:	f109 0502 	add.w	r5, r9, #2
 8004c52:	3d01      	subs	r5, #1
 8004c54:	4638      	mov	r0, r7
 8004c56:	f8c8 5010 	str.w	r5, [r8, #16]
 8004c5a:	4621      	mov	r1, r4
 8004c5c:	f7ff fdf5 	bl	800484a <_Bfree>
 8004c60:	4640      	mov	r0, r8
 8004c62:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004c66:	3101      	adds	r1, #1
 8004c68:	005b      	lsls	r3, r3, #1
 8004c6a:	e7c7      	b.n	8004bfc <__lshift+0x1c>
 8004c6c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8004c70:	3301      	adds	r3, #1
 8004c72:	e7cd      	b.n	8004c10 <__lshift+0x30>
 8004c74:	4651      	mov	r1, sl
 8004c76:	e7dc      	b.n	8004c32 <__lshift+0x52>
 8004c78:	3904      	subs	r1, #4
 8004c7a:	f853 2b04 	ldr.w	r2, [r3], #4
 8004c7e:	459c      	cmp	ip, r3
 8004c80:	f841 2f04 	str.w	r2, [r1, #4]!
 8004c84:	d8f9      	bhi.n	8004c7a <__lshift+0x9a>
 8004c86:	e7e4      	b.n	8004c52 <__lshift+0x72>

08004c88 <__mcmp>:
 8004c88:	6903      	ldr	r3, [r0, #16]
 8004c8a:	690a      	ldr	r2, [r1, #16]
 8004c8c:	b530      	push	{r4, r5, lr}
 8004c8e:	1a9b      	subs	r3, r3, r2
 8004c90:	d10c      	bne.n	8004cac <__mcmp+0x24>
 8004c92:	0092      	lsls	r2, r2, #2
 8004c94:	3014      	adds	r0, #20
 8004c96:	3114      	adds	r1, #20
 8004c98:	1884      	adds	r4, r0, r2
 8004c9a:	4411      	add	r1, r2
 8004c9c:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8004ca0:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8004ca4:	4295      	cmp	r5, r2
 8004ca6:	d003      	beq.n	8004cb0 <__mcmp+0x28>
 8004ca8:	d305      	bcc.n	8004cb6 <__mcmp+0x2e>
 8004caa:	2301      	movs	r3, #1
 8004cac:	4618      	mov	r0, r3
 8004cae:	bd30      	pop	{r4, r5, pc}
 8004cb0:	42a0      	cmp	r0, r4
 8004cb2:	d3f3      	bcc.n	8004c9c <__mcmp+0x14>
 8004cb4:	e7fa      	b.n	8004cac <__mcmp+0x24>
 8004cb6:	f04f 33ff 	mov.w	r3, #4294967295
 8004cba:	e7f7      	b.n	8004cac <__mcmp+0x24>

08004cbc <__mdiff>:
 8004cbc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004cc0:	460d      	mov	r5, r1
 8004cc2:	4607      	mov	r7, r0
 8004cc4:	4611      	mov	r1, r2
 8004cc6:	4628      	mov	r0, r5
 8004cc8:	4614      	mov	r4, r2
 8004cca:	f7ff ffdd 	bl	8004c88 <__mcmp>
 8004cce:	1e06      	subs	r6, r0, #0
 8004cd0:	d108      	bne.n	8004ce4 <__mdiff+0x28>
 8004cd2:	4631      	mov	r1, r6
 8004cd4:	4638      	mov	r0, r7
 8004cd6:	f7ff fd84 	bl	80047e2 <_Balloc>
 8004cda:	2301      	movs	r3, #1
 8004cdc:	e9c0 3604 	strd	r3, r6, [r0, #16]
 8004ce0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004ce4:	bfa4      	itt	ge
 8004ce6:	4623      	movge	r3, r4
 8004ce8:	462c      	movge	r4, r5
 8004cea:	4638      	mov	r0, r7
 8004cec:	6861      	ldr	r1, [r4, #4]
 8004cee:	bfa6      	itte	ge
 8004cf0:	461d      	movge	r5, r3
 8004cf2:	2600      	movge	r6, #0
 8004cf4:	2601      	movlt	r6, #1
 8004cf6:	f7ff fd74 	bl	80047e2 <_Balloc>
 8004cfa:	f04f 0e00 	mov.w	lr, #0
 8004cfe:	60c6      	str	r6, [r0, #12]
 8004d00:	692b      	ldr	r3, [r5, #16]
 8004d02:	6926      	ldr	r6, [r4, #16]
 8004d04:	f104 0214 	add.w	r2, r4, #20
 8004d08:	f105 0914 	add.w	r9, r5, #20
 8004d0c:	eb02 0786 	add.w	r7, r2, r6, lsl #2
 8004d10:	eb09 0883 	add.w	r8, r9, r3, lsl #2
 8004d14:	f100 0114 	add.w	r1, r0, #20
 8004d18:	f852 ab04 	ldr.w	sl, [r2], #4
 8004d1c:	f859 5b04 	ldr.w	r5, [r9], #4
 8004d20:	fa1f f38a 	uxth.w	r3, sl
 8004d24:	4473      	add	r3, lr
 8004d26:	b2ac      	uxth	r4, r5
 8004d28:	1b1b      	subs	r3, r3, r4
 8004d2a:	0c2c      	lsrs	r4, r5, #16
 8004d2c:	ebc4 441a 	rsb	r4, r4, sl, lsr #16
 8004d30:	eb04 4423 	add.w	r4, r4, r3, asr #16
 8004d34:	b29b      	uxth	r3, r3
 8004d36:	ea4f 4e24 	mov.w	lr, r4, asr #16
 8004d3a:	45c8      	cmp	r8, r9
 8004d3c:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8004d40:	4694      	mov	ip, r2
 8004d42:	f841 4b04 	str.w	r4, [r1], #4
 8004d46:	d8e7      	bhi.n	8004d18 <__mdiff+0x5c>
 8004d48:	45bc      	cmp	ip, r7
 8004d4a:	d304      	bcc.n	8004d56 <__mdiff+0x9a>
 8004d4c:	f851 3d04 	ldr.w	r3, [r1, #-4]!
 8004d50:	b183      	cbz	r3, 8004d74 <__mdiff+0xb8>
 8004d52:	6106      	str	r6, [r0, #16]
 8004d54:	e7c4      	b.n	8004ce0 <__mdiff+0x24>
 8004d56:	f85c 4b04 	ldr.w	r4, [ip], #4
 8004d5a:	b2a2      	uxth	r2, r4
 8004d5c:	4472      	add	r2, lr
 8004d5e:	1413      	asrs	r3, r2, #16
 8004d60:	eb03 4314 	add.w	r3, r3, r4, lsr #16
 8004d64:	b292      	uxth	r2, r2
 8004d66:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8004d6a:	ea4f 4e23 	mov.w	lr, r3, asr #16
 8004d6e:	f841 2b04 	str.w	r2, [r1], #4
 8004d72:	e7e9      	b.n	8004d48 <__mdiff+0x8c>
 8004d74:	3e01      	subs	r6, #1
 8004d76:	e7e9      	b.n	8004d4c <__mdiff+0x90>

08004d78 <__ulp>:
 8004d78:	4b10      	ldr	r3, [pc, #64]	; (8004dbc <__ulp+0x44>)
 8004d7a:	400b      	ands	r3, r1
 8004d7c:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
 8004d80:	2b00      	cmp	r3, #0
 8004d82:	dd02      	ble.n	8004d8a <__ulp+0x12>
 8004d84:	2000      	movs	r0, #0
 8004d86:	4619      	mov	r1, r3
 8004d88:	4770      	bx	lr
 8004d8a:	425b      	negs	r3, r3
 8004d8c:	151b      	asrs	r3, r3, #20
 8004d8e:	2b13      	cmp	r3, #19
 8004d90:	f04f 0000 	mov.w	r0, #0
 8004d94:	f04f 0100 	mov.w	r1, #0
 8004d98:	dc04      	bgt.n	8004da4 <__ulp+0x2c>
 8004d9a:	f44f 2200 	mov.w	r2, #524288	; 0x80000
 8004d9e:	fa42 f103 	asr.w	r1, r2, r3
 8004da2:	4770      	bx	lr
 8004da4:	2201      	movs	r2, #1
 8004da6:	3b14      	subs	r3, #20
 8004da8:	2b1e      	cmp	r3, #30
 8004daa:	bfce      	itee	gt
 8004dac:	4613      	movgt	r3, r2
 8004dae:	f1c3 031f 	rsble	r3, r3, #31
 8004db2:	fa02 f303 	lslle.w	r3, r2, r3
 8004db6:	4618      	mov	r0, r3
 8004db8:	4770      	bx	lr
 8004dba:	bf00      	nop
 8004dbc:	7ff00000 	.word	0x7ff00000

08004dc0 <__b2d>:
 8004dc0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004dc4:	6907      	ldr	r7, [r0, #16]
 8004dc6:	f100 0914 	add.w	r9, r0, #20
 8004dca:	eb09 0787 	add.w	r7, r9, r7, lsl #2
 8004dce:	f857 6c04 	ldr.w	r6, [r7, #-4]
 8004dd2:	f1a7 0804 	sub.w	r8, r7, #4
 8004dd6:	4630      	mov	r0, r6
 8004dd8:	f7ff fdc7 	bl	800496a <__hi0bits>
 8004ddc:	f1c0 0320 	rsb	r3, r0, #32
 8004de0:	280a      	cmp	r0, #10
 8004de2:	600b      	str	r3, [r1, #0]
 8004de4:	491e      	ldr	r1, [pc, #120]	; (8004e60 <__b2d+0xa0>)
 8004de6:	dc17      	bgt.n	8004e18 <__b2d+0x58>
 8004de8:	45c1      	cmp	r9, r8
 8004dea:	bf28      	it	cs
 8004dec:	2200      	movcs	r2, #0
 8004dee:	f1c0 0c0b 	rsb	ip, r0, #11
 8004df2:	fa26 f30c 	lsr.w	r3, r6, ip
 8004df6:	bf38      	it	cc
 8004df8:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 8004dfc:	ea43 0501 	orr.w	r5, r3, r1
 8004e00:	f100 0315 	add.w	r3, r0, #21
 8004e04:	fa06 f303 	lsl.w	r3, r6, r3
 8004e08:	fa22 f20c 	lsr.w	r2, r2, ip
 8004e0c:	ea43 0402 	orr.w	r4, r3, r2
 8004e10:	4620      	mov	r0, r4
 8004e12:	4629      	mov	r1, r5
 8004e14:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004e18:	45c1      	cmp	r9, r8
 8004e1a:	bf3a      	itte	cc
 8004e1c:	f1a7 0808 	subcc.w	r8, r7, #8
 8004e20:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 8004e24:	2200      	movcs	r2, #0
 8004e26:	f1b0 030b 	subs.w	r3, r0, #11
 8004e2a:	d015      	beq.n	8004e58 <__b2d+0x98>
 8004e2c:	409e      	lsls	r6, r3
 8004e2e:	f1c3 0720 	rsb	r7, r3, #32
 8004e32:	f046 567f 	orr.w	r6, r6, #1069547520	; 0x3fc00000
 8004e36:	fa22 f107 	lsr.w	r1, r2, r7
 8004e3a:	45c8      	cmp	r8, r9
 8004e3c:	f446 1640 	orr.w	r6, r6, #3145728	; 0x300000
 8004e40:	ea46 0501 	orr.w	r5, r6, r1
 8004e44:	bf94      	ite	ls
 8004e46:	2100      	movls	r1, #0
 8004e48:	f858 1c04 	ldrhi.w	r1, [r8, #-4]
 8004e4c:	fa02 f003 	lsl.w	r0, r2, r3
 8004e50:	40f9      	lsrs	r1, r7
 8004e52:	ea40 0401 	orr.w	r4, r0, r1
 8004e56:	e7db      	b.n	8004e10 <__b2d+0x50>
 8004e58:	ea46 0501 	orr.w	r5, r6, r1
 8004e5c:	4614      	mov	r4, r2
 8004e5e:	e7d7      	b.n	8004e10 <__b2d+0x50>
 8004e60:	3ff00000 	.word	0x3ff00000

08004e64 <__d2b>:
 8004e64:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8004e68:	461c      	mov	r4, r3
 8004e6a:	e9dd 6508 	ldrd	r6, r5, [sp, #32]
 8004e6e:	2101      	movs	r1, #1
 8004e70:	4690      	mov	r8, r2
 8004e72:	f7ff fcb6 	bl	80047e2 <_Balloc>
 8004e76:	f3c4 0213 	ubfx	r2, r4, #0, #20
 8004e7a:	f3c4 540a 	ubfx	r4, r4, #20, #11
 8004e7e:	4607      	mov	r7, r0
 8004e80:	bb34      	cbnz	r4, 8004ed0 <__d2b+0x6c>
 8004e82:	9201      	str	r2, [sp, #4]
 8004e84:	f1b8 0200 	subs.w	r2, r8, #0
 8004e88:	d027      	beq.n	8004eda <__d2b+0x76>
 8004e8a:	a802      	add	r0, sp, #8
 8004e8c:	f840 2d08 	str.w	r2, [r0, #-8]!
 8004e90:	f7ff fd8a 	bl	80049a8 <__lo0bits>
 8004e94:	9900      	ldr	r1, [sp, #0]
 8004e96:	b1f0      	cbz	r0, 8004ed6 <__d2b+0x72>
 8004e98:	9a01      	ldr	r2, [sp, #4]
 8004e9a:	f1c0 0320 	rsb	r3, r0, #32
 8004e9e:	fa02 f303 	lsl.w	r3, r2, r3
 8004ea2:	430b      	orrs	r3, r1
 8004ea4:	40c2      	lsrs	r2, r0
 8004ea6:	617b      	str	r3, [r7, #20]
 8004ea8:	9201      	str	r2, [sp, #4]
 8004eaa:	9b01      	ldr	r3, [sp, #4]
 8004eac:	2b00      	cmp	r3, #0
 8004eae:	bf14      	ite	ne
 8004eb0:	2102      	movne	r1, #2
 8004eb2:	2101      	moveq	r1, #1
 8004eb4:	61bb      	str	r3, [r7, #24]
 8004eb6:	6139      	str	r1, [r7, #16]
 8004eb8:	b1c4      	cbz	r4, 8004eec <__d2b+0x88>
 8004eba:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 8004ebe:	4404      	add	r4, r0
 8004ec0:	6034      	str	r4, [r6, #0]
 8004ec2:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8004ec6:	6028      	str	r0, [r5, #0]
 8004ec8:	4638      	mov	r0, r7
 8004eca:	b002      	add	sp, #8
 8004ecc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004ed0:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8004ed4:	e7d5      	b.n	8004e82 <__d2b+0x1e>
 8004ed6:	6179      	str	r1, [r7, #20]
 8004ed8:	e7e7      	b.n	8004eaa <__d2b+0x46>
 8004eda:	a801      	add	r0, sp, #4
 8004edc:	f7ff fd64 	bl	80049a8 <__lo0bits>
 8004ee0:	2101      	movs	r1, #1
 8004ee2:	9b01      	ldr	r3, [sp, #4]
 8004ee4:	6139      	str	r1, [r7, #16]
 8004ee6:	617b      	str	r3, [r7, #20]
 8004ee8:	3020      	adds	r0, #32
 8004eea:	e7e5      	b.n	8004eb8 <__d2b+0x54>
 8004eec:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8004ef0:	eb07 0381 	add.w	r3, r7, r1, lsl #2
 8004ef4:	6030      	str	r0, [r6, #0]
 8004ef6:	6918      	ldr	r0, [r3, #16]
 8004ef8:	f7ff fd37 	bl	800496a <__hi0bits>
 8004efc:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 8004f00:	e7e1      	b.n	8004ec6 <__d2b+0x62>

08004f02 <__ratio>:
 8004f02:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004f06:	4688      	mov	r8, r1
 8004f08:	4669      	mov	r1, sp
 8004f0a:	4681      	mov	r9, r0
 8004f0c:	f7ff ff58 	bl	8004dc0 <__b2d>
 8004f10:	468b      	mov	fp, r1
 8004f12:	4606      	mov	r6, r0
 8004f14:	460f      	mov	r7, r1
 8004f16:	4640      	mov	r0, r8
 8004f18:	a901      	add	r1, sp, #4
 8004f1a:	f7ff ff51 	bl	8004dc0 <__b2d>
 8004f1e:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8004f22:	f8d8 2010 	ldr.w	r2, [r8, #16]
 8004f26:	460d      	mov	r5, r1
 8004f28:	eba3 0c02 	sub.w	ip, r3, r2
 8004f2c:	e9dd 3200 	ldrd	r3, r2, [sp]
 8004f30:	1a9b      	subs	r3, r3, r2
 8004f32:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 8004f36:	2b00      	cmp	r3, #0
 8004f38:	bfd5      	itete	le
 8004f3a:	460a      	movle	r2, r1
 8004f3c:	463a      	movgt	r2, r7
 8004f3e:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8004f42:	eb02 5b03 	addgt.w	fp, r2, r3, lsl #20
 8004f46:	bfd8      	it	le
 8004f48:	eb02 5503 	addle.w	r5, r2, r3, lsl #20
 8004f4c:	462b      	mov	r3, r5
 8004f4e:	4602      	mov	r2, r0
 8004f50:	4659      	mov	r1, fp
 8004f52:	4630      	mov	r0, r6
 8004f54:	f7fb fbfa 	bl	800074c <__aeabi_ddiv>
 8004f58:	b003      	add	sp, #12
 8004f5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08004f60 <_mprec_log10>:
 8004f60:	2817      	cmp	r0, #23
 8004f62:	b5d0      	push	{r4, r6, r7, lr}
 8004f64:	4604      	mov	r4, r0
 8004f66:	dc05      	bgt.n	8004f74 <_mprec_log10+0x14>
 8004f68:	4b08      	ldr	r3, [pc, #32]	; (8004f8c <_mprec_log10+0x2c>)
 8004f6a:	eb03 04c0 	add.w	r4, r3, r0, lsl #3
 8004f6e:	e9d4 0100 	ldrd	r0, r1, [r4]
 8004f72:	bdd0      	pop	{r4, r6, r7, pc}
 8004f74:	2000      	movs	r0, #0
 8004f76:	2600      	movs	r6, #0
 8004f78:	4905      	ldr	r1, [pc, #20]	; (8004f90 <_mprec_log10+0x30>)
 8004f7a:	4f06      	ldr	r7, [pc, #24]	; (8004f94 <_mprec_log10+0x34>)
 8004f7c:	4632      	mov	r2, r6
 8004f7e:	463b      	mov	r3, r7
 8004f80:	f7fb faba 	bl	80004f8 <__aeabi_dmul>
 8004f84:	3c01      	subs	r4, #1
 8004f86:	d1f9      	bne.n	8004f7c <_mprec_log10+0x1c>
 8004f88:	e7f3      	b.n	8004f72 <_mprec_log10+0x12>
 8004f8a:	bf00      	nop
 8004f8c:	080075a8 	.word	0x080075a8
 8004f90:	3ff00000 	.word	0x3ff00000
 8004f94:	40240000 	.word	0x40240000

08004f98 <__copybits>:
 8004f98:	3901      	subs	r1, #1
 8004f9a:	b510      	push	{r4, lr}
 8004f9c:	1149      	asrs	r1, r1, #5
 8004f9e:	6914      	ldr	r4, [r2, #16]
 8004fa0:	3101      	adds	r1, #1
 8004fa2:	f102 0314 	add.w	r3, r2, #20
 8004fa6:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8004faa:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8004fae:	42a3      	cmp	r3, r4
 8004fb0:	4602      	mov	r2, r0
 8004fb2:	d303      	bcc.n	8004fbc <__copybits+0x24>
 8004fb4:	2300      	movs	r3, #0
 8004fb6:	428a      	cmp	r2, r1
 8004fb8:	d305      	bcc.n	8004fc6 <__copybits+0x2e>
 8004fba:	bd10      	pop	{r4, pc}
 8004fbc:	f853 2b04 	ldr.w	r2, [r3], #4
 8004fc0:	f840 2b04 	str.w	r2, [r0], #4
 8004fc4:	e7f3      	b.n	8004fae <__copybits+0x16>
 8004fc6:	f842 3b04 	str.w	r3, [r2], #4
 8004fca:	e7f4      	b.n	8004fb6 <__copybits+0x1e>

08004fcc <__any_on>:
 8004fcc:	f100 0214 	add.w	r2, r0, #20
 8004fd0:	6900      	ldr	r0, [r0, #16]
 8004fd2:	114b      	asrs	r3, r1, #5
 8004fd4:	4298      	cmp	r0, r3
 8004fd6:	b510      	push	{r4, lr}
 8004fd8:	db11      	blt.n	8004ffe <__any_on+0x32>
 8004fda:	dd0a      	ble.n	8004ff2 <__any_on+0x26>
 8004fdc:	f011 011f 	ands.w	r1, r1, #31
 8004fe0:	d007      	beq.n	8004ff2 <__any_on+0x26>
 8004fe2:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8004fe6:	fa24 f001 	lsr.w	r0, r4, r1
 8004fea:	fa00 f101 	lsl.w	r1, r0, r1
 8004fee:	428c      	cmp	r4, r1
 8004ff0:	d10b      	bne.n	800500a <__any_on+0x3e>
 8004ff2:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8004ff6:	4293      	cmp	r3, r2
 8004ff8:	d803      	bhi.n	8005002 <__any_on+0x36>
 8004ffa:	2000      	movs	r0, #0
 8004ffc:	bd10      	pop	{r4, pc}
 8004ffe:	4603      	mov	r3, r0
 8005000:	e7f7      	b.n	8004ff2 <__any_on+0x26>
 8005002:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8005006:	2900      	cmp	r1, #0
 8005008:	d0f5      	beq.n	8004ff6 <__any_on+0x2a>
 800500a:	2001      	movs	r0, #1
 800500c:	e7f6      	b.n	8004ffc <__any_on+0x30>

0800500e <_calloc_r>:
 800500e:	b538      	push	{r3, r4, r5, lr}
 8005010:	fb02 f401 	mul.w	r4, r2, r1
 8005014:	4621      	mov	r1, r4
 8005016:	f000 f809 	bl	800502c <_malloc_r>
 800501a:	4605      	mov	r5, r0
 800501c:	b118      	cbz	r0, 8005026 <_calloc_r+0x18>
 800501e:	4622      	mov	r2, r4
 8005020:	2100      	movs	r1, #0
 8005022:	f7fe f89f 	bl	8003164 <memset>
 8005026:	4628      	mov	r0, r5
 8005028:	bd38      	pop	{r3, r4, r5, pc}
	...

0800502c <_malloc_r>:
 800502c:	b570      	push	{r4, r5, r6, lr}
 800502e:	1ccd      	adds	r5, r1, #3
 8005030:	f025 0503 	bic.w	r5, r5, #3
 8005034:	3508      	adds	r5, #8
 8005036:	2d0c      	cmp	r5, #12
 8005038:	bf38      	it	cc
 800503a:	250c      	movcc	r5, #12
 800503c:	2d00      	cmp	r5, #0
 800503e:	4606      	mov	r6, r0
 8005040:	db01      	blt.n	8005046 <_malloc_r+0x1a>
 8005042:	42a9      	cmp	r1, r5
 8005044:	d903      	bls.n	800504e <_malloc_r+0x22>
 8005046:	230c      	movs	r3, #12
 8005048:	6033      	str	r3, [r6, #0]
 800504a:	2000      	movs	r0, #0
 800504c:	bd70      	pop	{r4, r5, r6, pc}
 800504e:	f000 fea7 	bl	8005da0 <__malloc_lock>
 8005052:	4a21      	ldr	r2, [pc, #132]	; (80050d8 <_malloc_r+0xac>)
 8005054:	6814      	ldr	r4, [r2, #0]
 8005056:	4621      	mov	r1, r4
 8005058:	b991      	cbnz	r1, 8005080 <_malloc_r+0x54>
 800505a:	4c20      	ldr	r4, [pc, #128]	; (80050dc <_malloc_r+0xb0>)
 800505c:	6823      	ldr	r3, [r4, #0]
 800505e:	b91b      	cbnz	r3, 8005068 <_malloc_r+0x3c>
 8005060:	4630      	mov	r0, r6
 8005062:	f000 f83d 	bl	80050e0 <_sbrk_r>
 8005066:	6020      	str	r0, [r4, #0]
 8005068:	4629      	mov	r1, r5
 800506a:	4630      	mov	r0, r6
 800506c:	f000 f838 	bl	80050e0 <_sbrk_r>
 8005070:	1c43      	adds	r3, r0, #1
 8005072:	d124      	bne.n	80050be <_malloc_r+0x92>
 8005074:	230c      	movs	r3, #12
 8005076:	4630      	mov	r0, r6
 8005078:	6033      	str	r3, [r6, #0]
 800507a:	f000 fe92 	bl	8005da2 <__malloc_unlock>
 800507e:	e7e4      	b.n	800504a <_malloc_r+0x1e>
 8005080:	680b      	ldr	r3, [r1, #0]
 8005082:	1b5b      	subs	r3, r3, r5
 8005084:	d418      	bmi.n	80050b8 <_malloc_r+0x8c>
 8005086:	2b0b      	cmp	r3, #11
 8005088:	d90f      	bls.n	80050aa <_malloc_r+0x7e>
 800508a:	600b      	str	r3, [r1, #0]
 800508c:	18cc      	adds	r4, r1, r3
 800508e:	50cd      	str	r5, [r1, r3]
 8005090:	4630      	mov	r0, r6
 8005092:	f000 fe86 	bl	8005da2 <__malloc_unlock>
 8005096:	f104 000b 	add.w	r0, r4, #11
 800509a:	1d23      	adds	r3, r4, #4
 800509c:	f020 0007 	bic.w	r0, r0, #7
 80050a0:	1ac3      	subs	r3, r0, r3
 80050a2:	d0d3      	beq.n	800504c <_malloc_r+0x20>
 80050a4:	425a      	negs	r2, r3
 80050a6:	50e2      	str	r2, [r4, r3]
 80050a8:	e7d0      	b.n	800504c <_malloc_r+0x20>
 80050aa:	684b      	ldr	r3, [r1, #4]
 80050ac:	428c      	cmp	r4, r1
 80050ae:	bf16      	itet	ne
 80050b0:	6063      	strne	r3, [r4, #4]
 80050b2:	6013      	streq	r3, [r2, #0]
 80050b4:	460c      	movne	r4, r1
 80050b6:	e7eb      	b.n	8005090 <_malloc_r+0x64>
 80050b8:	460c      	mov	r4, r1
 80050ba:	6849      	ldr	r1, [r1, #4]
 80050bc:	e7cc      	b.n	8005058 <_malloc_r+0x2c>
 80050be:	1cc4      	adds	r4, r0, #3
 80050c0:	f024 0403 	bic.w	r4, r4, #3
 80050c4:	42a0      	cmp	r0, r4
 80050c6:	d005      	beq.n	80050d4 <_malloc_r+0xa8>
 80050c8:	1a21      	subs	r1, r4, r0
 80050ca:	4630      	mov	r0, r6
 80050cc:	f000 f808 	bl	80050e0 <_sbrk_r>
 80050d0:	3001      	adds	r0, #1
 80050d2:	d0cf      	beq.n	8005074 <_malloc_r+0x48>
 80050d4:	6025      	str	r5, [r4, #0]
 80050d6:	e7db      	b.n	8005090 <_malloc_r+0x64>
 80050d8:	2000023c 	.word	0x2000023c
 80050dc:	20000240 	.word	0x20000240

080050e0 <_sbrk_r>:
 80050e0:	b538      	push	{r3, r4, r5, lr}
 80050e2:	2300      	movs	r3, #0
 80050e4:	4c05      	ldr	r4, [pc, #20]	; (80050fc <_sbrk_r+0x1c>)
 80050e6:	4605      	mov	r5, r0
 80050e8:	4608      	mov	r0, r1
 80050ea:	6023      	str	r3, [r4, #0]
 80050ec:	f7fd ff8a 	bl	8003004 <_sbrk>
 80050f0:	1c43      	adds	r3, r0, #1
 80050f2:	d102      	bne.n	80050fa <_sbrk_r+0x1a>
 80050f4:	6823      	ldr	r3, [r4, #0]
 80050f6:	b103      	cbz	r3, 80050fa <_sbrk_r+0x1a>
 80050f8:	602b      	str	r3, [r5, #0]
 80050fa:	bd38      	pop	{r3, r4, r5, pc}
 80050fc:	200003a8 	.word	0x200003a8

08005100 <__ascii_wctomb>:
 8005100:	b149      	cbz	r1, 8005116 <__ascii_wctomb+0x16>
 8005102:	2aff      	cmp	r2, #255	; 0xff
 8005104:	bf8b      	itete	hi
 8005106:	238a      	movhi	r3, #138	; 0x8a
 8005108:	700a      	strbls	r2, [r1, #0]
 800510a:	6003      	strhi	r3, [r0, #0]
 800510c:	2001      	movls	r0, #1
 800510e:	bf88      	it	hi
 8005110:	f04f 30ff 	movhi.w	r0, #4294967295
 8005114:	4770      	bx	lr
 8005116:	4608      	mov	r0, r1
 8005118:	4770      	bx	lr

0800511a <quorem>:
 800511a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800511e:	6903      	ldr	r3, [r0, #16]
 8005120:	690c      	ldr	r4, [r1, #16]
 8005122:	4680      	mov	r8, r0
 8005124:	42a3      	cmp	r3, r4
 8005126:	f2c0 8084 	blt.w	8005232 <quorem+0x118>
 800512a:	3c01      	subs	r4, #1
 800512c:	f101 0714 	add.w	r7, r1, #20
 8005130:	f100 0614 	add.w	r6, r0, #20
 8005134:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
 8005138:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 800513c:	3501      	adds	r5, #1
 800513e:	fbb0 f5f5 	udiv	r5, r0, r5
 8005142:	ea4f 0c84 	mov.w	ip, r4, lsl #2
 8005146:	eb06 030c 	add.w	r3, r6, ip
 800514a:	eb07 090c 	add.w	r9, r7, ip
 800514e:	9301      	str	r3, [sp, #4]
 8005150:	b39d      	cbz	r5, 80051ba <quorem+0xa0>
 8005152:	f04f 0a00 	mov.w	sl, #0
 8005156:	4638      	mov	r0, r7
 8005158:	46b6      	mov	lr, r6
 800515a:	46d3      	mov	fp, sl
 800515c:	f850 2b04 	ldr.w	r2, [r0], #4
 8005160:	b293      	uxth	r3, r2
 8005162:	fb05 a303 	mla	r3, r5, r3, sl
 8005166:	0c12      	lsrs	r2, r2, #16
 8005168:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800516c:	fb05 a202 	mla	r2, r5, r2, sl
 8005170:	b29b      	uxth	r3, r3
 8005172:	ebab 0303 	sub.w	r3, fp, r3
 8005176:	f8de b000 	ldr.w	fp, [lr]
 800517a:	ea4f 4a12 	mov.w	sl, r2, lsr #16
 800517e:	fa1f fb8b 	uxth.w	fp, fp
 8005182:	445b      	add	r3, fp
 8005184:	fa1f fb82 	uxth.w	fp, r2
 8005188:	f8de 2000 	ldr.w	r2, [lr]
 800518c:	4581      	cmp	r9, r0
 800518e:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
 8005192:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8005196:	b29b      	uxth	r3, r3
 8005198:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800519c:	ea4f 4b22 	mov.w	fp, r2, asr #16
 80051a0:	f84e 3b04 	str.w	r3, [lr], #4
 80051a4:	d2da      	bcs.n	800515c <quorem+0x42>
 80051a6:	f856 300c 	ldr.w	r3, [r6, ip]
 80051aa:	b933      	cbnz	r3, 80051ba <quorem+0xa0>
 80051ac:	9b01      	ldr	r3, [sp, #4]
 80051ae:	3b04      	subs	r3, #4
 80051b0:	429e      	cmp	r6, r3
 80051b2:	461a      	mov	r2, r3
 80051b4:	d331      	bcc.n	800521a <quorem+0x100>
 80051b6:	f8c8 4010 	str.w	r4, [r8, #16]
 80051ba:	4640      	mov	r0, r8
 80051bc:	f7ff fd64 	bl	8004c88 <__mcmp>
 80051c0:	2800      	cmp	r0, #0
 80051c2:	db26      	blt.n	8005212 <quorem+0xf8>
 80051c4:	4630      	mov	r0, r6
 80051c6:	f04f 0c00 	mov.w	ip, #0
 80051ca:	3501      	adds	r5, #1
 80051cc:	f857 1b04 	ldr.w	r1, [r7], #4
 80051d0:	f8d0 e000 	ldr.w	lr, [r0]
 80051d4:	b28b      	uxth	r3, r1
 80051d6:	ebac 0303 	sub.w	r3, ip, r3
 80051da:	fa1f f28e 	uxth.w	r2, lr
 80051de:	4413      	add	r3, r2
 80051e0:	0c0a      	lsrs	r2, r1, #16
 80051e2:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 80051e6:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80051ea:	b29b      	uxth	r3, r3
 80051ec:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80051f0:	45b9      	cmp	r9, r7
 80051f2:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80051f6:	f840 3b04 	str.w	r3, [r0], #4
 80051fa:	d2e7      	bcs.n	80051cc <quorem+0xb2>
 80051fc:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
 8005200:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 8005204:	b92a      	cbnz	r2, 8005212 <quorem+0xf8>
 8005206:	3b04      	subs	r3, #4
 8005208:	429e      	cmp	r6, r3
 800520a:	461a      	mov	r2, r3
 800520c:	d30b      	bcc.n	8005226 <quorem+0x10c>
 800520e:	f8c8 4010 	str.w	r4, [r8, #16]
 8005212:	4628      	mov	r0, r5
 8005214:	b003      	add	sp, #12
 8005216:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800521a:	6812      	ldr	r2, [r2, #0]
 800521c:	3b04      	subs	r3, #4
 800521e:	2a00      	cmp	r2, #0
 8005220:	d1c9      	bne.n	80051b6 <quorem+0x9c>
 8005222:	3c01      	subs	r4, #1
 8005224:	e7c4      	b.n	80051b0 <quorem+0x96>
 8005226:	6812      	ldr	r2, [r2, #0]
 8005228:	3b04      	subs	r3, #4
 800522a:	2a00      	cmp	r2, #0
 800522c:	d1ef      	bne.n	800520e <quorem+0xf4>
 800522e:	3c01      	subs	r4, #1
 8005230:	e7ea      	b.n	8005208 <quorem+0xee>
 8005232:	2000      	movs	r0, #0
 8005234:	e7ee      	b.n	8005214 <quorem+0xfa>
	...

08005238 <_dtoa_r>:
 8005238:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800523c:	4616      	mov	r6, r2
 800523e:	461f      	mov	r7, r3
 8005240:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8005242:	b095      	sub	sp, #84	; 0x54
 8005244:	4604      	mov	r4, r0
 8005246:	f8dd 8084 	ldr.w	r8, [sp, #132]	; 0x84
 800524a:	e9cd 6702 	strd	r6, r7, [sp, #8]
 800524e:	b93d      	cbnz	r5, 8005260 <_dtoa_r+0x28>
 8005250:	2010      	movs	r0, #16
 8005252:	f7ff faa1 	bl	8004798 <malloc>
 8005256:	6260      	str	r0, [r4, #36]	; 0x24
 8005258:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800525c:	6005      	str	r5, [r0, #0]
 800525e:	60c5      	str	r5, [r0, #12]
 8005260:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005262:	6819      	ldr	r1, [r3, #0]
 8005264:	b151      	cbz	r1, 800527c <_dtoa_r+0x44>
 8005266:	685a      	ldr	r2, [r3, #4]
 8005268:	2301      	movs	r3, #1
 800526a:	4093      	lsls	r3, r2
 800526c:	604a      	str	r2, [r1, #4]
 800526e:	608b      	str	r3, [r1, #8]
 8005270:	4620      	mov	r0, r4
 8005272:	f7ff faea 	bl	800484a <_Bfree>
 8005276:	2200      	movs	r2, #0
 8005278:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800527a:	601a      	str	r2, [r3, #0]
 800527c:	1e3b      	subs	r3, r7, #0
 800527e:	bfaf      	iteee	ge
 8005280:	2300      	movge	r3, #0
 8005282:	2201      	movlt	r2, #1
 8005284:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8005288:	9303      	strlt	r3, [sp, #12]
 800528a:	bfac      	ite	ge
 800528c:	f8c8 3000 	strge.w	r3, [r8]
 8005290:	f8c8 2000 	strlt.w	r2, [r8]
 8005294:	4bae      	ldr	r3, [pc, #696]	; (8005550 <_dtoa_r+0x318>)
 8005296:	f8dd 800c 	ldr.w	r8, [sp, #12]
 800529a:	ea33 0308 	bics.w	r3, r3, r8
 800529e:	d11b      	bne.n	80052d8 <_dtoa_r+0xa0>
 80052a0:	f242 730f 	movw	r3, #9999	; 0x270f
 80052a4:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80052a6:	6013      	str	r3, [r2, #0]
 80052a8:	9b02      	ldr	r3, [sp, #8]
 80052aa:	b923      	cbnz	r3, 80052b6 <_dtoa_r+0x7e>
 80052ac:	f3c8 0013 	ubfx	r0, r8, #0, #20
 80052b0:	2800      	cmp	r0, #0
 80052b2:	f000 8545 	beq.w	8005d40 <_dtoa_r+0xb08>
 80052b6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80052b8:	b953      	cbnz	r3, 80052d0 <_dtoa_r+0x98>
 80052ba:	4ba6      	ldr	r3, [pc, #664]	; (8005554 <_dtoa_r+0x31c>)
 80052bc:	e021      	b.n	8005302 <_dtoa_r+0xca>
 80052be:	4ba6      	ldr	r3, [pc, #664]	; (8005558 <_dtoa_r+0x320>)
 80052c0:	9306      	str	r3, [sp, #24]
 80052c2:	3308      	adds	r3, #8
 80052c4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80052c6:	6013      	str	r3, [r2, #0]
 80052c8:	9806      	ldr	r0, [sp, #24]
 80052ca:	b015      	add	sp, #84	; 0x54
 80052cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80052d0:	4ba0      	ldr	r3, [pc, #640]	; (8005554 <_dtoa_r+0x31c>)
 80052d2:	9306      	str	r3, [sp, #24]
 80052d4:	3303      	adds	r3, #3
 80052d6:	e7f5      	b.n	80052c4 <_dtoa_r+0x8c>
 80052d8:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 80052dc:	2200      	movs	r2, #0
 80052de:	2300      	movs	r3, #0
 80052e0:	4630      	mov	r0, r6
 80052e2:	4639      	mov	r1, r7
 80052e4:	f7fb fb70 	bl	80009c8 <__aeabi_dcmpeq>
 80052e8:	4682      	mov	sl, r0
 80052ea:	b160      	cbz	r0, 8005306 <_dtoa_r+0xce>
 80052ec:	2301      	movs	r3, #1
 80052ee:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80052f0:	6013      	str	r3, [r2, #0]
 80052f2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80052f4:	2b00      	cmp	r3, #0
 80052f6:	f000 8520 	beq.w	8005d3a <_dtoa_r+0xb02>
 80052fa:	4b98      	ldr	r3, [pc, #608]	; (800555c <_dtoa_r+0x324>)
 80052fc:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80052fe:	6013      	str	r3, [r2, #0]
 8005300:	3b01      	subs	r3, #1
 8005302:	9306      	str	r3, [sp, #24]
 8005304:	e7e0      	b.n	80052c8 <_dtoa_r+0x90>
 8005306:	ab12      	add	r3, sp, #72	; 0x48
 8005308:	9301      	str	r3, [sp, #4]
 800530a:	ab13      	add	r3, sp, #76	; 0x4c
 800530c:	9300      	str	r3, [sp, #0]
 800530e:	4632      	mov	r2, r6
 8005310:	463b      	mov	r3, r7
 8005312:	4620      	mov	r0, r4
 8005314:	f7ff fda6 	bl	8004e64 <__d2b>
 8005318:	f3c8 550a 	ubfx	r5, r8, #20, #11
 800531c:	4683      	mov	fp, r0
 800531e:	2d00      	cmp	r5, #0
 8005320:	d07d      	beq.n	800541e <_dtoa_r+0x1e6>
 8005322:	46b0      	mov	r8, r6
 8005324:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8005328:	f043 597f 	orr.w	r9, r3, #1069547520	; 0x3fc00000
 800532c:	f449 1940 	orr.w	r9, r9, #3145728	; 0x300000
 8005330:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8005334:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
 8005338:	2200      	movs	r2, #0
 800533a:	4b89      	ldr	r3, [pc, #548]	; (8005560 <_dtoa_r+0x328>)
 800533c:	4640      	mov	r0, r8
 800533e:	4649      	mov	r1, r9
 8005340:	f7fa ff22 	bl	8000188 <__aeabi_dsub>
 8005344:	a37c      	add	r3, pc, #496	; (adr r3, 8005538 <_dtoa_r+0x300>)
 8005346:	e9d3 2300 	ldrd	r2, r3, [r3]
 800534a:	f7fb f8d5 	bl	80004f8 <__aeabi_dmul>
 800534e:	a37c      	add	r3, pc, #496	; (adr r3, 8005540 <_dtoa_r+0x308>)
 8005350:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005354:	f7fa ff1a 	bl	800018c <__adddf3>
 8005358:	4606      	mov	r6, r0
 800535a:	4628      	mov	r0, r5
 800535c:	460f      	mov	r7, r1
 800535e:	f7fb f861 	bl	8000424 <__aeabi_i2d>
 8005362:	a379      	add	r3, pc, #484	; (adr r3, 8005548 <_dtoa_r+0x310>)
 8005364:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005368:	f7fb f8c6 	bl	80004f8 <__aeabi_dmul>
 800536c:	4602      	mov	r2, r0
 800536e:	460b      	mov	r3, r1
 8005370:	4630      	mov	r0, r6
 8005372:	4639      	mov	r1, r7
 8005374:	f7fa ff0a 	bl	800018c <__adddf3>
 8005378:	4606      	mov	r6, r0
 800537a:	460f      	mov	r7, r1
 800537c:	f7fb fb6c 	bl	8000a58 <__aeabi_d2iz>
 8005380:	2200      	movs	r2, #0
 8005382:	4682      	mov	sl, r0
 8005384:	2300      	movs	r3, #0
 8005386:	4630      	mov	r0, r6
 8005388:	4639      	mov	r1, r7
 800538a:	f7fb fb27 	bl	80009dc <__aeabi_dcmplt>
 800538e:	b148      	cbz	r0, 80053a4 <_dtoa_r+0x16c>
 8005390:	4650      	mov	r0, sl
 8005392:	f7fb f847 	bl	8000424 <__aeabi_i2d>
 8005396:	4632      	mov	r2, r6
 8005398:	463b      	mov	r3, r7
 800539a:	f7fb fb15 	bl	80009c8 <__aeabi_dcmpeq>
 800539e:	b908      	cbnz	r0, 80053a4 <_dtoa_r+0x16c>
 80053a0:	f10a 3aff 	add.w	sl, sl, #4294967295
 80053a4:	f1ba 0f16 	cmp.w	sl, #22
 80053a8:	d85a      	bhi.n	8005460 <_dtoa_r+0x228>
 80053aa:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80053ae:	496d      	ldr	r1, [pc, #436]	; (8005564 <_dtoa_r+0x32c>)
 80053b0:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
 80053b4:	e9d1 0100 	ldrd	r0, r1, [r1]
 80053b8:	f7fb fb2e 	bl	8000a18 <__aeabi_dcmpgt>
 80053bc:	2800      	cmp	r0, #0
 80053be:	d051      	beq.n	8005464 <_dtoa_r+0x22c>
 80053c0:	2300      	movs	r3, #0
 80053c2:	f10a 3aff 	add.w	sl, sl, #4294967295
 80053c6:	930d      	str	r3, [sp, #52]	; 0x34
 80053c8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80053ca:	1b5d      	subs	r5, r3, r5
 80053cc:	1e6b      	subs	r3, r5, #1
 80053ce:	9307      	str	r3, [sp, #28]
 80053d0:	bf43      	ittte	mi
 80053d2:	2300      	movmi	r3, #0
 80053d4:	f1c5 0901 	rsbmi	r9, r5, #1
 80053d8:	9307      	strmi	r3, [sp, #28]
 80053da:	f04f 0900 	movpl.w	r9, #0
 80053de:	f1ba 0f00 	cmp.w	sl, #0
 80053e2:	db41      	blt.n	8005468 <_dtoa_r+0x230>
 80053e4:	9b07      	ldr	r3, [sp, #28]
 80053e6:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 80053ea:	4453      	add	r3, sl
 80053ec:	9307      	str	r3, [sp, #28]
 80053ee:	2300      	movs	r3, #0
 80053f0:	9308      	str	r3, [sp, #32]
 80053f2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80053f4:	2b09      	cmp	r3, #9
 80053f6:	f200 808f 	bhi.w	8005518 <_dtoa_r+0x2e0>
 80053fa:	2b05      	cmp	r3, #5
 80053fc:	bfc4      	itt	gt
 80053fe:	3b04      	subgt	r3, #4
 8005400:	931e      	strgt	r3, [sp, #120]	; 0x78
 8005402:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8005404:	bfc8      	it	gt
 8005406:	2500      	movgt	r5, #0
 8005408:	f1a3 0302 	sub.w	r3, r3, #2
 800540c:	bfd8      	it	le
 800540e:	2501      	movle	r5, #1
 8005410:	2b03      	cmp	r3, #3
 8005412:	f200 808d 	bhi.w	8005530 <_dtoa_r+0x2f8>
 8005416:	e8df f003 	tbb	[pc, r3]
 800541a:	7d7b      	.short	0x7d7b
 800541c:	6f2f      	.short	0x6f2f
 800541e:	e9dd 5312 	ldrd	r5, r3, [sp, #72]	; 0x48
 8005422:	441d      	add	r5, r3
 8005424:	f205 4032 	addw	r0, r5, #1074	; 0x432
 8005428:	2820      	cmp	r0, #32
 800542a:	dd13      	ble.n	8005454 <_dtoa_r+0x21c>
 800542c:	f1c0 0040 	rsb	r0, r0, #64	; 0x40
 8005430:	9b02      	ldr	r3, [sp, #8]
 8005432:	fa08 f800 	lsl.w	r8, r8, r0
 8005436:	f205 4012 	addw	r0, r5, #1042	; 0x412
 800543a:	fa23 f000 	lsr.w	r0, r3, r0
 800543e:	ea48 0000 	orr.w	r0, r8, r0
 8005442:	f7fa ffdf 	bl	8000404 <__aeabi_ui2d>
 8005446:	2301      	movs	r3, #1
 8005448:	4680      	mov	r8, r0
 800544a:	f1a1 79f8 	sub.w	r9, r1, #32505856	; 0x1f00000
 800544e:	3d01      	subs	r5, #1
 8005450:	9310      	str	r3, [sp, #64]	; 0x40
 8005452:	e771      	b.n	8005338 <_dtoa_r+0x100>
 8005454:	9b02      	ldr	r3, [sp, #8]
 8005456:	f1c0 0020 	rsb	r0, r0, #32
 800545a:	fa03 f000 	lsl.w	r0, r3, r0
 800545e:	e7f0      	b.n	8005442 <_dtoa_r+0x20a>
 8005460:	2301      	movs	r3, #1
 8005462:	e7b0      	b.n	80053c6 <_dtoa_r+0x18e>
 8005464:	900d      	str	r0, [sp, #52]	; 0x34
 8005466:	e7af      	b.n	80053c8 <_dtoa_r+0x190>
 8005468:	f1ca 0300 	rsb	r3, sl, #0
 800546c:	9308      	str	r3, [sp, #32]
 800546e:	2300      	movs	r3, #0
 8005470:	eba9 090a 	sub.w	r9, r9, sl
 8005474:	930c      	str	r3, [sp, #48]	; 0x30
 8005476:	e7bc      	b.n	80053f2 <_dtoa_r+0x1ba>
 8005478:	2301      	movs	r3, #1
 800547a:	9309      	str	r3, [sp, #36]	; 0x24
 800547c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800547e:	2b00      	cmp	r3, #0
 8005480:	dd74      	ble.n	800556c <_dtoa_r+0x334>
 8005482:	4698      	mov	r8, r3
 8005484:	9304      	str	r3, [sp, #16]
 8005486:	2200      	movs	r2, #0
 8005488:	6a66      	ldr	r6, [r4, #36]	; 0x24
 800548a:	6072      	str	r2, [r6, #4]
 800548c:	2204      	movs	r2, #4
 800548e:	f102 0014 	add.w	r0, r2, #20
 8005492:	4298      	cmp	r0, r3
 8005494:	6871      	ldr	r1, [r6, #4]
 8005496:	d96e      	bls.n	8005576 <_dtoa_r+0x33e>
 8005498:	4620      	mov	r0, r4
 800549a:	f7ff f9a2 	bl	80047e2 <_Balloc>
 800549e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80054a0:	6030      	str	r0, [r6, #0]
 80054a2:	681b      	ldr	r3, [r3, #0]
 80054a4:	f1b8 0f0e 	cmp.w	r8, #14
 80054a8:	9306      	str	r3, [sp, #24]
 80054aa:	f200 80ed 	bhi.w	8005688 <_dtoa_r+0x450>
 80054ae:	2d00      	cmp	r5, #0
 80054b0:	f000 80ea 	beq.w	8005688 <_dtoa_r+0x450>
 80054b4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80054b8:	f1ba 0f00 	cmp.w	sl, #0
 80054bc:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
 80054c0:	dd77      	ble.n	80055b2 <_dtoa_r+0x37a>
 80054c2:	4a28      	ldr	r2, [pc, #160]	; (8005564 <_dtoa_r+0x32c>)
 80054c4:	f00a 030f 	and.w	r3, sl, #15
 80054c8:	ea4f 162a 	mov.w	r6, sl, asr #4
 80054cc:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 80054d0:	06f0      	lsls	r0, r6, #27
 80054d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80054d6:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 80054da:	d568      	bpl.n	80055ae <_dtoa_r+0x376>
 80054dc:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 80054e0:	4b21      	ldr	r3, [pc, #132]	; (8005568 <_dtoa_r+0x330>)
 80054e2:	2503      	movs	r5, #3
 80054e4:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80054e8:	f7fb f930 	bl	800074c <__aeabi_ddiv>
 80054ec:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80054f0:	f006 060f 	and.w	r6, r6, #15
 80054f4:	4f1c      	ldr	r7, [pc, #112]	; (8005568 <_dtoa_r+0x330>)
 80054f6:	e04f      	b.n	8005598 <_dtoa_r+0x360>
 80054f8:	2301      	movs	r3, #1
 80054fa:	9309      	str	r3, [sp, #36]	; 0x24
 80054fc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80054fe:	4453      	add	r3, sl
 8005500:	f103 0801 	add.w	r8, r3, #1
 8005504:	9304      	str	r3, [sp, #16]
 8005506:	4643      	mov	r3, r8
 8005508:	2b01      	cmp	r3, #1
 800550a:	bfb8      	it	lt
 800550c:	2301      	movlt	r3, #1
 800550e:	e7ba      	b.n	8005486 <_dtoa_r+0x24e>
 8005510:	2300      	movs	r3, #0
 8005512:	e7b2      	b.n	800547a <_dtoa_r+0x242>
 8005514:	2300      	movs	r3, #0
 8005516:	e7f0      	b.n	80054fa <_dtoa_r+0x2c2>
 8005518:	2501      	movs	r5, #1
 800551a:	2300      	movs	r3, #0
 800551c:	9509      	str	r5, [sp, #36]	; 0x24
 800551e:	931e      	str	r3, [sp, #120]	; 0x78
 8005520:	f04f 33ff 	mov.w	r3, #4294967295
 8005524:	2200      	movs	r2, #0
 8005526:	9304      	str	r3, [sp, #16]
 8005528:	4698      	mov	r8, r3
 800552a:	2312      	movs	r3, #18
 800552c:	921f      	str	r2, [sp, #124]	; 0x7c
 800552e:	e7aa      	b.n	8005486 <_dtoa_r+0x24e>
 8005530:	2301      	movs	r3, #1
 8005532:	9309      	str	r3, [sp, #36]	; 0x24
 8005534:	e7f4      	b.n	8005520 <_dtoa_r+0x2e8>
 8005536:	bf00      	nop
 8005538:	636f4361 	.word	0x636f4361
 800553c:	3fd287a7 	.word	0x3fd287a7
 8005540:	8b60c8b3 	.word	0x8b60c8b3
 8005544:	3fc68a28 	.word	0x3fc68a28
 8005548:	509f79fb 	.word	0x509f79fb
 800554c:	3fd34413 	.word	0x3fd34413
 8005550:	7ff00000 	.word	0x7ff00000
 8005554:	08007786 	.word	0x08007786
 8005558:	0800777d 	.word	0x0800777d
 800555c:	0800778b 	.word	0x0800778b
 8005560:	3ff80000 	.word	0x3ff80000
 8005564:	080075a8 	.word	0x080075a8
 8005568:	08007580 	.word	0x08007580
 800556c:	2301      	movs	r3, #1
 800556e:	9304      	str	r3, [sp, #16]
 8005570:	4698      	mov	r8, r3
 8005572:	461a      	mov	r2, r3
 8005574:	e7da      	b.n	800552c <_dtoa_r+0x2f4>
 8005576:	3101      	adds	r1, #1
 8005578:	6071      	str	r1, [r6, #4]
 800557a:	0052      	lsls	r2, r2, #1
 800557c:	e787      	b.n	800548e <_dtoa_r+0x256>
 800557e:	07f1      	lsls	r1, r6, #31
 8005580:	d508      	bpl.n	8005594 <_dtoa_r+0x35c>
 8005582:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8005586:	e9d7 2300 	ldrd	r2, r3, [r7]
 800558a:	f7fa ffb5 	bl	80004f8 <__aeabi_dmul>
 800558e:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8005592:	3501      	adds	r5, #1
 8005594:	1076      	asrs	r6, r6, #1
 8005596:	3708      	adds	r7, #8
 8005598:	2e00      	cmp	r6, #0
 800559a:	d1f0      	bne.n	800557e <_dtoa_r+0x346>
 800559c:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80055a0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80055a4:	f7fb f8d2 	bl	800074c <__aeabi_ddiv>
 80055a8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80055ac:	e01b      	b.n	80055e6 <_dtoa_r+0x3ae>
 80055ae:	2502      	movs	r5, #2
 80055b0:	e7a0      	b.n	80054f4 <_dtoa_r+0x2bc>
 80055b2:	f000 80a4 	beq.w	80056fe <_dtoa_r+0x4c6>
 80055b6:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 80055ba:	f1ca 0600 	rsb	r6, sl, #0
 80055be:	4ba0      	ldr	r3, [pc, #640]	; (8005840 <_dtoa_r+0x608>)
 80055c0:	f006 020f 	and.w	r2, r6, #15
 80055c4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80055c8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80055cc:	f7fa ff94 	bl	80004f8 <__aeabi_dmul>
 80055d0:	2502      	movs	r5, #2
 80055d2:	2300      	movs	r3, #0
 80055d4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80055d8:	4f9a      	ldr	r7, [pc, #616]	; (8005844 <_dtoa_r+0x60c>)
 80055da:	1136      	asrs	r6, r6, #4
 80055dc:	2e00      	cmp	r6, #0
 80055de:	f040 8083 	bne.w	80056e8 <_dtoa_r+0x4b0>
 80055e2:	2b00      	cmp	r3, #0
 80055e4:	d1e0      	bne.n	80055a8 <_dtoa_r+0x370>
 80055e6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80055e8:	2b00      	cmp	r3, #0
 80055ea:	f000 808a 	beq.w	8005702 <_dtoa_r+0x4ca>
 80055ee:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80055f2:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 80055f6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 80055fa:	2200      	movs	r2, #0
 80055fc:	4b92      	ldr	r3, [pc, #584]	; (8005848 <_dtoa_r+0x610>)
 80055fe:	f7fb f9ed 	bl	80009dc <__aeabi_dcmplt>
 8005602:	2800      	cmp	r0, #0
 8005604:	d07d      	beq.n	8005702 <_dtoa_r+0x4ca>
 8005606:	f1b8 0f00 	cmp.w	r8, #0
 800560a:	d07a      	beq.n	8005702 <_dtoa_r+0x4ca>
 800560c:	9b04      	ldr	r3, [sp, #16]
 800560e:	2b00      	cmp	r3, #0
 8005610:	dd36      	ble.n	8005680 <_dtoa_r+0x448>
 8005612:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8005616:	2200      	movs	r2, #0
 8005618:	4b8c      	ldr	r3, [pc, #560]	; (800584c <_dtoa_r+0x614>)
 800561a:	f7fa ff6d 	bl	80004f8 <__aeabi_dmul>
 800561e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8005622:	9e04      	ldr	r6, [sp, #16]
 8005624:	f10a 37ff 	add.w	r7, sl, #4294967295
 8005628:	3501      	adds	r5, #1
 800562a:	4628      	mov	r0, r5
 800562c:	f7fa fefa 	bl	8000424 <__aeabi_i2d>
 8005630:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8005634:	f7fa ff60 	bl	80004f8 <__aeabi_dmul>
 8005638:	2200      	movs	r2, #0
 800563a:	4b85      	ldr	r3, [pc, #532]	; (8005850 <_dtoa_r+0x618>)
 800563c:	f7fa fda6 	bl	800018c <__adddf3>
 8005640:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
 8005644:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8005648:	950b      	str	r5, [sp, #44]	; 0x2c
 800564a:	2e00      	cmp	r6, #0
 800564c:	d15c      	bne.n	8005708 <_dtoa_r+0x4d0>
 800564e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8005652:	2200      	movs	r2, #0
 8005654:	4b7f      	ldr	r3, [pc, #508]	; (8005854 <_dtoa_r+0x61c>)
 8005656:	f7fa fd97 	bl	8000188 <__aeabi_dsub>
 800565a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800565c:	462b      	mov	r3, r5
 800565e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8005662:	f7fb f9d9 	bl	8000a18 <__aeabi_dcmpgt>
 8005666:	2800      	cmp	r0, #0
 8005668:	f040 8281 	bne.w	8005b6e <_dtoa_r+0x936>
 800566c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8005670:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005672:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 8005676:	f7fb f9b1 	bl	80009dc <__aeabi_dcmplt>
 800567a:	2800      	cmp	r0, #0
 800567c:	f040 8275 	bne.w	8005b6a <_dtoa_r+0x932>
 8005680:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 8005684:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8005688:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800568a:	2b00      	cmp	r3, #0
 800568c:	f2c0 814b 	blt.w	8005926 <_dtoa_r+0x6ee>
 8005690:	f1ba 0f0e 	cmp.w	sl, #14
 8005694:	f300 8147 	bgt.w	8005926 <_dtoa_r+0x6ee>
 8005698:	4b69      	ldr	r3, [pc, #420]	; (8005840 <_dtoa_r+0x608>)
 800569a:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 800569e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80056a2:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80056a6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80056a8:	2b00      	cmp	r3, #0
 80056aa:	f280 80d7 	bge.w	800585c <_dtoa_r+0x624>
 80056ae:	f1b8 0f00 	cmp.w	r8, #0
 80056b2:	f300 80d3 	bgt.w	800585c <_dtoa_r+0x624>
 80056b6:	f040 8257 	bne.w	8005b68 <_dtoa_r+0x930>
 80056ba:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80056be:	2200      	movs	r2, #0
 80056c0:	4b64      	ldr	r3, [pc, #400]	; (8005854 <_dtoa_r+0x61c>)
 80056c2:	f7fa ff19 	bl	80004f8 <__aeabi_dmul>
 80056c6:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80056ca:	f7fb f99b 	bl	8000a04 <__aeabi_dcmpge>
 80056ce:	4646      	mov	r6, r8
 80056d0:	4647      	mov	r7, r8
 80056d2:	2800      	cmp	r0, #0
 80056d4:	f040 822d 	bne.w	8005b32 <_dtoa_r+0x8fa>
 80056d8:	9b06      	ldr	r3, [sp, #24]
 80056da:	9a06      	ldr	r2, [sp, #24]
 80056dc:	1c5d      	adds	r5, r3, #1
 80056de:	2331      	movs	r3, #49	; 0x31
 80056e0:	f10a 0a01 	add.w	sl, sl, #1
 80056e4:	7013      	strb	r3, [r2, #0]
 80056e6:	e228      	b.n	8005b3a <_dtoa_r+0x902>
 80056e8:	07f2      	lsls	r2, r6, #31
 80056ea:	d505      	bpl.n	80056f8 <_dtoa_r+0x4c0>
 80056ec:	e9d7 2300 	ldrd	r2, r3, [r7]
 80056f0:	f7fa ff02 	bl	80004f8 <__aeabi_dmul>
 80056f4:	2301      	movs	r3, #1
 80056f6:	3501      	adds	r5, #1
 80056f8:	1076      	asrs	r6, r6, #1
 80056fa:	3708      	adds	r7, #8
 80056fc:	e76e      	b.n	80055dc <_dtoa_r+0x3a4>
 80056fe:	2502      	movs	r5, #2
 8005700:	e771      	b.n	80055e6 <_dtoa_r+0x3ae>
 8005702:	4657      	mov	r7, sl
 8005704:	4646      	mov	r6, r8
 8005706:	e790      	b.n	800562a <_dtoa_r+0x3f2>
 8005708:	4b4d      	ldr	r3, [pc, #308]	; (8005840 <_dtoa_r+0x608>)
 800570a:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 800570e:	e953 0102 	ldrd	r0, r1, [r3, #-8]
 8005712:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005714:	2b00      	cmp	r3, #0
 8005716:	d048      	beq.n	80057aa <_dtoa_r+0x572>
 8005718:	4602      	mov	r2, r0
 800571a:	460b      	mov	r3, r1
 800571c:	2000      	movs	r0, #0
 800571e:	494e      	ldr	r1, [pc, #312]	; (8005858 <_dtoa_r+0x620>)
 8005720:	f7fb f814 	bl	800074c <__aeabi_ddiv>
 8005724:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8005728:	f7fa fd2e 	bl	8000188 <__aeabi_dsub>
 800572c:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8005730:	9d06      	ldr	r5, [sp, #24]
 8005732:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8005736:	f7fb f98f 	bl	8000a58 <__aeabi_d2iz>
 800573a:	9011      	str	r0, [sp, #68]	; 0x44
 800573c:	f7fa fe72 	bl	8000424 <__aeabi_i2d>
 8005740:	4602      	mov	r2, r0
 8005742:	460b      	mov	r3, r1
 8005744:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8005748:	f7fa fd1e 	bl	8000188 <__aeabi_dsub>
 800574c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800574e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8005752:	3330      	adds	r3, #48	; 0x30
 8005754:	f805 3b01 	strb.w	r3, [r5], #1
 8005758:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800575c:	f7fb f93e 	bl	80009dc <__aeabi_dcmplt>
 8005760:	2800      	cmp	r0, #0
 8005762:	d163      	bne.n	800582c <_dtoa_r+0x5f4>
 8005764:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8005768:	2000      	movs	r0, #0
 800576a:	4937      	ldr	r1, [pc, #220]	; (8005848 <_dtoa_r+0x610>)
 800576c:	f7fa fd0c 	bl	8000188 <__aeabi_dsub>
 8005770:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8005774:	f7fb f932 	bl	80009dc <__aeabi_dcmplt>
 8005778:	2800      	cmp	r0, #0
 800577a:	f040 80b5 	bne.w	80058e8 <_dtoa_r+0x6b0>
 800577e:	9b06      	ldr	r3, [sp, #24]
 8005780:	1aeb      	subs	r3, r5, r3
 8005782:	429e      	cmp	r6, r3
 8005784:	f77f af7c 	ble.w	8005680 <_dtoa_r+0x448>
 8005788:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800578c:	2200      	movs	r2, #0
 800578e:	4b2f      	ldr	r3, [pc, #188]	; (800584c <_dtoa_r+0x614>)
 8005790:	f7fa feb2 	bl	80004f8 <__aeabi_dmul>
 8005794:	2200      	movs	r2, #0
 8005796:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 800579a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800579e:	4b2b      	ldr	r3, [pc, #172]	; (800584c <_dtoa_r+0x614>)
 80057a0:	f7fa feaa 	bl	80004f8 <__aeabi_dmul>
 80057a4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80057a8:	e7c3      	b.n	8005732 <_dtoa_r+0x4fa>
 80057aa:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80057ae:	f7fa fea3 	bl	80004f8 <__aeabi_dmul>
 80057b2:	9b06      	ldr	r3, [sp, #24]
 80057b4:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 80057b8:	199d      	adds	r5, r3, r6
 80057ba:	461e      	mov	r6, r3
 80057bc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80057c0:	f7fb f94a 	bl	8000a58 <__aeabi_d2iz>
 80057c4:	9011      	str	r0, [sp, #68]	; 0x44
 80057c6:	f7fa fe2d 	bl	8000424 <__aeabi_i2d>
 80057ca:	4602      	mov	r2, r0
 80057cc:	460b      	mov	r3, r1
 80057ce:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80057d2:	f7fa fcd9 	bl	8000188 <__aeabi_dsub>
 80057d6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80057d8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80057dc:	3330      	adds	r3, #48	; 0x30
 80057de:	f806 3b01 	strb.w	r3, [r6], #1
 80057e2:	42ae      	cmp	r6, r5
 80057e4:	f04f 0200 	mov.w	r2, #0
 80057e8:	d124      	bne.n	8005834 <_dtoa_r+0x5fc>
 80057ea:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 80057ee:	4b1a      	ldr	r3, [pc, #104]	; (8005858 <_dtoa_r+0x620>)
 80057f0:	f7fa fccc 	bl	800018c <__adddf3>
 80057f4:	4602      	mov	r2, r0
 80057f6:	460b      	mov	r3, r1
 80057f8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80057fc:	f7fb f90c 	bl	8000a18 <__aeabi_dcmpgt>
 8005800:	2800      	cmp	r0, #0
 8005802:	d171      	bne.n	80058e8 <_dtoa_r+0x6b0>
 8005804:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8005808:	2000      	movs	r0, #0
 800580a:	4913      	ldr	r1, [pc, #76]	; (8005858 <_dtoa_r+0x620>)
 800580c:	f7fa fcbc 	bl	8000188 <__aeabi_dsub>
 8005810:	4602      	mov	r2, r0
 8005812:	460b      	mov	r3, r1
 8005814:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8005818:	f7fb f8e0 	bl	80009dc <__aeabi_dcmplt>
 800581c:	2800      	cmp	r0, #0
 800581e:	f43f af2f 	beq.w	8005680 <_dtoa_r+0x448>
 8005822:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8005826:	1e6a      	subs	r2, r5, #1
 8005828:	2b30      	cmp	r3, #48	; 0x30
 800582a:	d001      	beq.n	8005830 <_dtoa_r+0x5f8>
 800582c:	46ba      	mov	sl, r7
 800582e:	e04a      	b.n	80058c6 <_dtoa_r+0x68e>
 8005830:	4615      	mov	r5, r2
 8005832:	e7f6      	b.n	8005822 <_dtoa_r+0x5ea>
 8005834:	4b05      	ldr	r3, [pc, #20]	; (800584c <_dtoa_r+0x614>)
 8005836:	f7fa fe5f 	bl	80004f8 <__aeabi_dmul>
 800583a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800583e:	e7bd      	b.n	80057bc <_dtoa_r+0x584>
 8005840:	080075a8 	.word	0x080075a8
 8005844:	08007580 	.word	0x08007580
 8005848:	3ff00000 	.word	0x3ff00000
 800584c:	40240000 	.word	0x40240000
 8005850:	401c0000 	.word	0x401c0000
 8005854:	40140000 	.word	0x40140000
 8005858:	3fe00000 	.word	0x3fe00000
 800585c:	9d06      	ldr	r5, [sp, #24]
 800585e:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8005862:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8005866:	4630      	mov	r0, r6
 8005868:	4639      	mov	r1, r7
 800586a:	f7fa ff6f 	bl	800074c <__aeabi_ddiv>
 800586e:	f7fb f8f3 	bl	8000a58 <__aeabi_d2iz>
 8005872:	4681      	mov	r9, r0
 8005874:	f7fa fdd6 	bl	8000424 <__aeabi_i2d>
 8005878:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800587c:	f7fa fe3c 	bl	80004f8 <__aeabi_dmul>
 8005880:	4602      	mov	r2, r0
 8005882:	460b      	mov	r3, r1
 8005884:	4630      	mov	r0, r6
 8005886:	4639      	mov	r1, r7
 8005888:	f7fa fc7e 	bl	8000188 <__aeabi_dsub>
 800588c:	f109 0630 	add.w	r6, r9, #48	; 0x30
 8005890:	f805 6b01 	strb.w	r6, [r5], #1
 8005894:	9e06      	ldr	r6, [sp, #24]
 8005896:	4602      	mov	r2, r0
 8005898:	1bae      	subs	r6, r5, r6
 800589a:	45b0      	cmp	r8, r6
 800589c:	460b      	mov	r3, r1
 800589e:	d135      	bne.n	800590c <_dtoa_r+0x6d4>
 80058a0:	f7fa fc74 	bl	800018c <__adddf3>
 80058a4:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80058a8:	4606      	mov	r6, r0
 80058aa:	460f      	mov	r7, r1
 80058ac:	f7fb f8b4 	bl	8000a18 <__aeabi_dcmpgt>
 80058b0:	b9c8      	cbnz	r0, 80058e6 <_dtoa_r+0x6ae>
 80058b2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80058b6:	4630      	mov	r0, r6
 80058b8:	4639      	mov	r1, r7
 80058ba:	f7fb f885 	bl	80009c8 <__aeabi_dcmpeq>
 80058be:	b110      	cbz	r0, 80058c6 <_dtoa_r+0x68e>
 80058c0:	f019 0f01 	tst.w	r9, #1
 80058c4:	d10f      	bne.n	80058e6 <_dtoa_r+0x6ae>
 80058c6:	4659      	mov	r1, fp
 80058c8:	4620      	mov	r0, r4
 80058ca:	f7fe ffbe 	bl	800484a <_Bfree>
 80058ce:	2300      	movs	r3, #0
 80058d0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80058d2:	702b      	strb	r3, [r5, #0]
 80058d4:	f10a 0301 	add.w	r3, sl, #1
 80058d8:	6013      	str	r3, [r2, #0]
 80058da:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80058dc:	2b00      	cmp	r3, #0
 80058de:	f43f acf3 	beq.w	80052c8 <_dtoa_r+0x90>
 80058e2:	601d      	str	r5, [r3, #0]
 80058e4:	e4f0      	b.n	80052c8 <_dtoa_r+0x90>
 80058e6:	4657      	mov	r7, sl
 80058e8:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 80058ec:	1e6b      	subs	r3, r5, #1
 80058ee:	2a39      	cmp	r2, #57	; 0x39
 80058f0:	d106      	bne.n	8005900 <_dtoa_r+0x6c8>
 80058f2:	9a06      	ldr	r2, [sp, #24]
 80058f4:	429a      	cmp	r2, r3
 80058f6:	d107      	bne.n	8005908 <_dtoa_r+0x6d0>
 80058f8:	2330      	movs	r3, #48	; 0x30
 80058fa:	7013      	strb	r3, [r2, #0]
 80058fc:	4613      	mov	r3, r2
 80058fe:	3701      	adds	r7, #1
 8005900:	781a      	ldrb	r2, [r3, #0]
 8005902:	3201      	adds	r2, #1
 8005904:	701a      	strb	r2, [r3, #0]
 8005906:	e791      	b.n	800582c <_dtoa_r+0x5f4>
 8005908:	461d      	mov	r5, r3
 800590a:	e7ed      	b.n	80058e8 <_dtoa_r+0x6b0>
 800590c:	2200      	movs	r2, #0
 800590e:	4b99      	ldr	r3, [pc, #612]	; (8005b74 <_dtoa_r+0x93c>)
 8005910:	f7fa fdf2 	bl	80004f8 <__aeabi_dmul>
 8005914:	2200      	movs	r2, #0
 8005916:	2300      	movs	r3, #0
 8005918:	4606      	mov	r6, r0
 800591a:	460f      	mov	r7, r1
 800591c:	f7fb f854 	bl	80009c8 <__aeabi_dcmpeq>
 8005920:	2800      	cmp	r0, #0
 8005922:	d09e      	beq.n	8005862 <_dtoa_r+0x62a>
 8005924:	e7cf      	b.n	80058c6 <_dtoa_r+0x68e>
 8005926:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005928:	2a00      	cmp	r2, #0
 800592a:	f000 8088 	beq.w	8005a3e <_dtoa_r+0x806>
 800592e:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8005930:	2a01      	cmp	r2, #1
 8005932:	dc6d      	bgt.n	8005a10 <_dtoa_r+0x7d8>
 8005934:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8005936:	2a00      	cmp	r2, #0
 8005938:	d066      	beq.n	8005a08 <_dtoa_r+0x7d0>
 800593a:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800593e:	464d      	mov	r5, r9
 8005940:	9e08      	ldr	r6, [sp, #32]
 8005942:	9a07      	ldr	r2, [sp, #28]
 8005944:	2101      	movs	r1, #1
 8005946:	441a      	add	r2, r3
 8005948:	4620      	mov	r0, r4
 800594a:	4499      	add	r9, r3
 800594c:	9207      	str	r2, [sp, #28]
 800594e:	f7ff f85a 	bl	8004a06 <__i2b>
 8005952:	4607      	mov	r7, r0
 8005954:	2d00      	cmp	r5, #0
 8005956:	dd0b      	ble.n	8005970 <_dtoa_r+0x738>
 8005958:	9b07      	ldr	r3, [sp, #28]
 800595a:	2b00      	cmp	r3, #0
 800595c:	dd08      	ble.n	8005970 <_dtoa_r+0x738>
 800595e:	42ab      	cmp	r3, r5
 8005960:	bfa8      	it	ge
 8005962:	462b      	movge	r3, r5
 8005964:	9a07      	ldr	r2, [sp, #28]
 8005966:	eba9 0903 	sub.w	r9, r9, r3
 800596a:	1aed      	subs	r5, r5, r3
 800596c:	1ad3      	subs	r3, r2, r3
 800596e:	9307      	str	r3, [sp, #28]
 8005970:	9b08      	ldr	r3, [sp, #32]
 8005972:	b1eb      	cbz	r3, 80059b0 <_dtoa_r+0x778>
 8005974:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005976:	2b00      	cmp	r3, #0
 8005978:	d065      	beq.n	8005a46 <_dtoa_r+0x80e>
 800597a:	b18e      	cbz	r6, 80059a0 <_dtoa_r+0x768>
 800597c:	4639      	mov	r1, r7
 800597e:	4632      	mov	r2, r6
 8005980:	4620      	mov	r0, r4
 8005982:	f7ff f8df 	bl	8004b44 <__pow5mult>
 8005986:	465a      	mov	r2, fp
 8005988:	4601      	mov	r1, r0
 800598a:	4607      	mov	r7, r0
 800598c:	4620      	mov	r0, r4
 800598e:	f7ff f843 	bl	8004a18 <__multiply>
 8005992:	4659      	mov	r1, fp
 8005994:	900a      	str	r0, [sp, #40]	; 0x28
 8005996:	4620      	mov	r0, r4
 8005998:	f7fe ff57 	bl	800484a <_Bfree>
 800599c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800599e:	469b      	mov	fp, r3
 80059a0:	9b08      	ldr	r3, [sp, #32]
 80059a2:	1b9a      	subs	r2, r3, r6
 80059a4:	d004      	beq.n	80059b0 <_dtoa_r+0x778>
 80059a6:	4659      	mov	r1, fp
 80059a8:	4620      	mov	r0, r4
 80059aa:	f7ff f8cb 	bl	8004b44 <__pow5mult>
 80059ae:	4683      	mov	fp, r0
 80059b0:	2101      	movs	r1, #1
 80059b2:	4620      	mov	r0, r4
 80059b4:	f7ff f827 	bl	8004a06 <__i2b>
 80059b8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80059ba:	4606      	mov	r6, r0
 80059bc:	2b00      	cmp	r3, #0
 80059be:	f000 81c6 	beq.w	8005d4e <_dtoa_r+0xb16>
 80059c2:	461a      	mov	r2, r3
 80059c4:	4601      	mov	r1, r0
 80059c6:	4620      	mov	r0, r4
 80059c8:	f7ff f8bc 	bl	8004b44 <__pow5mult>
 80059cc:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80059ce:	4606      	mov	r6, r0
 80059d0:	2b01      	cmp	r3, #1
 80059d2:	dc3e      	bgt.n	8005a52 <_dtoa_r+0x81a>
 80059d4:	9b02      	ldr	r3, [sp, #8]
 80059d6:	2b00      	cmp	r3, #0
 80059d8:	d137      	bne.n	8005a4a <_dtoa_r+0x812>
 80059da:	9b03      	ldr	r3, [sp, #12]
 80059dc:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80059e0:	2b00      	cmp	r3, #0
 80059e2:	d134      	bne.n	8005a4e <_dtoa_r+0x816>
 80059e4:	9b03      	ldr	r3, [sp, #12]
 80059e6:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80059ea:	0d1b      	lsrs	r3, r3, #20
 80059ec:	051b      	lsls	r3, r3, #20
 80059ee:	b12b      	cbz	r3, 80059fc <_dtoa_r+0x7c4>
 80059f0:	9b07      	ldr	r3, [sp, #28]
 80059f2:	f109 0901 	add.w	r9, r9, #1
 80059f6:	3301      	adds	r3, #1
 80059f8:	9307      	str	r3, [sp, #28]
 80059fa:	2301      	movs	r3, #1
 80059fc:	9308      	str	r3, [sp, #32]
 80059fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005a00:	2b00      	cmp	r3, #0
 8005a02:	d128      	bne.n	8005a56 <_dtoa_r+0x81e>
 8005a04:	2001      	movs	r0, #1
 8005a06:	e02e      	b.n	8005a66 <_dtoa_r+0x82e>
 8005a08:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005a0a:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8005a0e:	e796      	b.n	800593e <_dtoa_r+0x706>
 8005a10:	9b08      	ldr	r3, [sp, #32]
 8005a12:	f108 36ff 	add.w	r6, r8, #4294967295
 8005a16:	42b3      	cmp	r3, r6
 8005a18:	bfb7      	itett	lt
 8005a1a:	9b08      	ldrlt	r3, [sp, #32]
 8005a1c:	1b9e      	subge	r6, r3, r6
 8005a1e:	1af2      	sublt	r2, r6, r3
 8005a20:	9b0c      	ldrlt	r3, [sp, #48]	; 0x30
 8005a22:	bfbf      	itttt	lt
 8005a24:	9608      	strlt	r6, [sp, #32]
 8005a26:	189b      	addlt	r3, r3, r2
 8005a28:	930c      	strlt	r3, [sp, #48]	; 0x30
 8005a2a:	2600      	movlt	r6, #0
 8005a2c:	f1b8 0f00 	cmp.w	r8, #0
 8005a30:	bfb9      	ittee	lt
 8005a32:	eba9 0508 	sublt.w	r5, r9, r8
 8005a36:	2300      	movlt	r3, #0
 8005a38:	464d      	movge	r5, r9
 8005a3a:	4643      	movge	r3, r8
 8005a3c:	e781      	b.n	8005942 <_dtoa_r+0x70a>
 8005a3e:	9e08      	ldr	r6, [sp, #32]
 8005a40:	464d      	mov	r5, r9
 8005a42:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8005a44:	e786      	b.n	8005954 <_dtoa_r+0x71c>
 8005a46:	9a08      	ldr	r2, [sp, #32]
 8005a48:	e7ad      	b.n	80059a6 <_dtoa_r+0x76e>
 8005a4a:	2300      	movs	r3, #0
 8005a4c:	e7d6      	b.n	80059fc <_dtoa_r+0x7c4>
 8005a4e:	9b02      	ldr	r3, [sp, #8]
 8005a50:	e7d4      	b.n	80059fc <_dtoa_r+0x7c4>
 8005a52:	2300      	movs	r3, #0
 8005a54:	9308      	str	r3, [sp, #32]
 8005a56:	6933      	ldr	r3, [r6, #16]
 8005a58:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8005a5c:	6918      	ldr	r0, [r3, #16]
 8005a5e:	f7fe ff84 	bl	800496a <__hi0bits>
 8005a62:	f1c0 0020 	rsb	r0, r0, #32
 8005a66:	9b07      	ldr	r3, [sp, #28]
 8005a68:	4418      	add	r0, r3
 8005a6a:	f010 001f 	ands.w	r0, r0, #31
 8005a6e:	d047      	beq.n	8005b00 <_dtoa_r+0x8c8>
 8005a70:	f1c0 0320 	rsb	r3, r0, #32
 8005a74:	2b04      	cmp	r3, #4
 8005a76:	dd3b      	ble.n	8005af0 <_dtoa_r+0x8b8>
 8005a78:	9b07      	ldr	r3, [sp, #28]
 8005a7a:	f1c0 001c 	rsb	r0, r0, #28
 8005a7e:	4481      	add	r9, r0
 8005a80:	4405      	add	r5, r0
 8005a82:	4403      	add	r3, r0
 8005a84:	9307      	str	r3, [sp, #28]
 8005a86:	f1b9 0f00 	cmp.w	r9, #0
 8005a8a:	dd05      	ble.n	8005a98 <_dtoa_r+0x860>
 8005a8c:	4659      	mov	r1, fp
 8005a8e:	464a      	mov	r2, r9
 8005a90:	4620      	mov	r0, r4
 8005a92:	f7ff f8a5 	bl	8004be0 <__lshift>
 8005a96:	4683      	mov	fp, r0
 8005a98:	9b07      	ldr	r3, [sp, #28]
 8005a9a:	2b00      	cmp	r3, #0
 8005a9c:	dd05      	ble.n	8005aaa <_dtoa_r+0x872>
 8005a9e:	4631      	mov	r1, r6
 8005aa0:	461a      	mov	r2, r3
 8005aa2:	4620      	mov	r0, r4
 8005aa4:	f7ff f89c 	bl	8004be0 <__lshift>
 8005aa8:	4606      	mov	r6, r0
 8005aaa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005aac:	b353      	cbz	r3, 8005b04 <_dtoa_r+0x8cc>
 8005aae:	4631      	mov	r1, r6
 8005ab0:	4658      	mov	r0, fp
 8005ab2:	f7ff f8e9 	bl	8004c88 <__mcmp>
 8005ab6:	2800      	cmp	r0, #0
 8005ab8:	da24      	bge.n	8005b04 <_dtoa_r+0x8cc>
 8005aba:	2300      	movs	r3, #0
 8005abc:	4659      	mov	r1, fp
 8005abe:	220a      	movs	r2, #10
 8005ac0:	4620      	mov	r0, r4
 8005ac2:	f7fe fed9 	bl	8004878 <__multadd>
 8005ac6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005ac8:	f10a 3aff 	add.w	sl, sl, #4294967295
 8005acc:	4683      	mov	fp, r0
 8005ace:	2b00      	cmp	r3, #0
 8005ad0:	f000 8144 	beq.w	8005d5c <_dtoa_r+0xb24>
 8005ad4:	2300      	movs	r3, #0
 8005ad6:	4639      	mov	r1, r7
 8005ad8:	220a      	movs	r2, #10
 8005ada:	4620      	mov	r0, r4
 8005adc:	f7fe fecc 	bl	8004878 <__multadd>
 8005ae0:	9b04      	ldr	r3, [sp, #16]
 8005ae2:	4607      	mov	r7, r0
 8005ae4:	2b00      	cmp	r3, #0
 8005ae6:	dc4d      	bgt.n	8005b84 <_dtoa_r+0x94c>
 8005ae8:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8005aea:	2b02      	cmp	r3, #2
 8005aec:	dd4a      	ble.n	8005b84 <_dtoa_r+0x94c>
 8005aee:	e011      	b.n	8005b14 <_dtoa_r+0x8dc>
 8005af0:	d0c9      	beq.n	8005a86 <_dtoa_r+0x84e>
 8005af2:	9a07      	ldr	r2, [sp, #28]
 8005af4:	331c      	adds	r3, #28
 8005af6:	441a      	add	r2, r3
 8005af8:	4499      	add	r9, r3
 8005afa:	441d      	add	r5, r3
 8005afc:	4613      	mov	r3, r2
 8005afe:	e7c1      	b.n	8005a84 <_dtoa_r+0x84c>
 8005b00:	4603      	mov	r3, r0
 8005b02:	e7f6      	b.n	8005af2 <_dtoa_r+0x8ba>
 8005b04:	f1b8 0f00 	cmp.w	r8, #0
 8005b08:	dc36      	bgt.n	8005b78 <_dtoa_r+0x940>
 8005b0a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8005b0c:	2b02      	cmp	r3, #2
 8005b0e:	dd33      	ble.n	8005b78 <_dtoa_r+0x940>
 8005b10:	f8cd 8010 	str.w	r8, [sp, #16]
 8005b14:	9b04      	ldr	r3, [sp, #16]
 8005b16:	b963      	cbnz	r3, 8005b32 <_dtoa_r+0x8fa>
 8005b18:	4631      	mov	r1, r6
 8005b1a:	2205      	movs	r2, #5
 8005b1c:	4620      	mov	r0, r4
 8005b1e:	f7fe feab 	bl	8004878 <__multadd>
 8005b22:	4601      	mov	r1, r0
 8005b24:	4606      	mov	r6, r0
 8005b26:	4658      	mov	r0, fp
 8005b28:	f7ff f8ae 	bl	8004c88 <__mcmp>
 8005b2c:	2800      	cmp	r0, #0
 8005b2e:	f73f add3 	bgt.w	80056d8 <_dtoa_r+0x4a0>
 8005b32:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8005b34:	9d06      	ldr	r5, [sp, #24]
 8005b36:	ea6f 0a03 	mvn.w	sl, r3
 8005b3a:	f04f 0900 	mov.w	r9, #0
 8005b3e:	4631      	mov	r1, r6
 8005b40:	4620      	mov	r0, r4
 8005b42:	f7fe fe82 	bl	800484a <_Bfree>
 8005b46:	2f00      	cmp	r7, #0
 8005b48:	f43f aebd 	beq.w	80058c6 <_dtoa_r+0x68e>
 8005b4c:	f1b9 0f00 	cmp.w	r9, #0
 8005b50:	d005      	beq.n	8005b5e <_dtoa_r+0x926>
 8005b52:	45b9      	cmp	r9, r7
 8005b54:	d003      	beq.n	8005b5e <_dtoa_r+0x926>
 8005b56:	4649      	mov	r1, r9
 8005b58:	4620      	mov	r0, r4
 8005b5a:	f7fe fe76 	bl	800484a <_Bfree>
 8005b5e:	4639      	mov	r1, r7
 8005b60:	4620      	mov	r0, r4
 8005b62:	f7fe fe72 	bl	800484a <_Bfree>
 8005b66:	e6ae      	b.n	80058c6 <_dtoa_r+0x68e>
 8005b68:	2600      	movs	r6, #0
 8005b6a:	4637      	mov	r7, r6
 8005b6c:	e7e1      	b.n	8005b32 <_dtoa_r+0x8fa>
 8005b6e:	46ba      	mov	sl, r7
 8005b70:	4637      	mov	r7, r6
 8005b72:	e5b1      	b.n	80056d8 <_dtoa_r+0x4a0>
 8005b74:	40240000 	.word	0x40240000
 8005b78:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005b7a:	f8cd 8010 	str.w	r8, [sp, #16]
 8005b7e:	2b00      	cmp	r3, #0
 8005b80:	f000 80f3 	beq.w	8005d6a <_dtoa_r+0xb32>
 8005b84:	2d00      	cmp	r5, #0
 8005b86:	dd05      	ble.n	8005b94 <_dtoa_r+0x95c>
 8005b88:	4639      	mov	r1, r7
 8005b8a:	462a      	mov	r2, r5
 8005b8c:	4620      	mov	r0, r4
 8005b8e:	f7ff f827 	bl	8004be0 <__lshift>
 8005b92:	4607      	mov	r7, r0
 8005b94:	9b08      	ldr	r3, [sp, #32]
 8005b96:	2b00      	cmp	r3, #0
 8005b98:	d04c      	beq.n	8005c34 <_dtoa_r+0x9fc>
 8005b9a:	6879      	ldr	r1, [r7, #4]
 8005b9c:	4620      	mov	r0, r4
 8005b9e:	f7fe fe20 	bl	80047e2 <_Balloc>
 8005ba2:	4605      	mov	r5, r0
 8005ba4:	693a      	ldr	r2, [r7, #16]
 8005ba6:	f107 010c 	add.w	r1, r7, #12
 8005baa:	3202      	adds	r2, #2
 8005bac:	0092      	lsls	r2, r2, #2
 8005bae:	300c      	adds	r0, #12
 8005bb0:	f7fe fe0c 	bl	80047cc <memcpy>
 8005bb4:	2201      	movs	r2, #1
 8005bb6:	4629      	mov	r1, r5
 8005bb8:	4620      	mov	r0, r4
 8005bba:	f7ff f811 	bl	8004be0 <__lshift>
 8005bbe:	46b9      	mov	r9, r7
 8005bc0:	4607      	mov	r7, r0
 8005bc2:	9b06      	ldr	r3, [sp, #24]
 8005bc4:	9307      	str	r3, [sp, #28]
 8005bc6:	9b02      	ldr	r3, [sp, #8]
 8005bc8:	f003 0301 	and.w	r3, r3, #1
 8005bcc:	9308      	str	r3, [sp, #32]
 8005bce:	4631      	mov	r1, r6
 8005bd0:	4658      	mov	r0, fp
 8005bd2:	f7ff faa2 	bl	800511a <quorem>
 8005bd6:	4649      	mov	r1, r9
 8005bd8:	4605      	mov	r5, r0
 8005bda:	f100 0830 	add.w	r8, r0, #48	; 0x30
 8005bde:	4658      	mov	r0, fp
 8005be0:	f7ff f852 	bl	8004c88 <__mcmp>
 8005be4:	463a      	mov	r2, r7
 8005be6:	9002      	str	r0, [sp, #8]
 8005be8:	4631      	mov	r1, r6
 8005bea:	4620      	mov	r0, r4
 8005bec:	f7ff f866 	bl	8004cbc <__mdiff>
 8005bf0:	68c3      	ldr	r3, [r0, #12]
 8005bf2:	4602      	mov	r2, r0
 8005bf4:	bb03      	cbnz	r3, 8005c38 <_dtoa_r+0xa00>
 8005bf6:	4601      	mov	r1, r0
 8005bf8:	9009      	str	r0, [sp, #36]	; 0x24
 8005bfa:	4658      	mov	r0, fp
 8005bfc:	f7ff f844 	bl	8004c88 <__mcmp>
 8005c00:	4603      	mov	r3, r0
 8005c02:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005c04:	4611      	mov	r1, r2
 8005c06:	4620      	mov	r0, r4
 8005c08:	9309      	str	r3, [sp, #36]	; 0x24
 8005c0a:	f7fe fe1e 	bl	800484a <_Bfree>
 8005c0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005c10:	b9a3      	cbnz	r3, 8005c3c <_dtoa_r+0xa04>
 8005c12:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8005c14:	b992      	cbnz	r2, 8005c3c <_dtoa_r+0xa04>
 8005c16:	9a08      	ldr	r2, [sp, #32]
 8005c18:	b982      	cbnz	r2, 8005c3c <_dtoa_r+0xa04>
 8005c1a:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8005c1e:	d029      	beq.n	8005c74 <_dtoa_r+0xa3c>
 8005c20:	9b02      	ldr	r3, [sp, #8]
 8005c22:	2b00      	cmp	r3, #0
 8005c24:	dd01      	ble.n	8005c2a <_dtoa_r+0x9f2>
 8005c26:	f105 0831 	add.w	r8, r5, #49	; 0x31
 8005c2a:	9b07      	ldr	r3, [sp, #28]
 8005c2c:	1c5d      	adds	r5, r3, #1
 8005c2e:	f883 8000 	strb.w	r8, [r3]
 8005c32:	e784      	b.n	8005b3e <_dtoa_r+0x906>
 8005c34:	4638      	mov	r0, r7
 8005c36:	e7c2      	b.n	8005bbe <_dtoa_r+0x986>
 8005c38:	2301      	movs	r3, #1
 8005c3a:	e7e3      	b.n	8005c04 <_dtoa_r+0x9cc>
 8005c3c:	9a02      	ldr	r2, [sp, #8]
 8005c3e:	2a00      	cmp	r2, #0
 8005c40:	db04      	blt.n	8005c4c <_dtoa_r+0xa14>
 8005c42:	d123      	bne.n	8005c8c <_dtoa_r+0xa54>
 8005c44:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8005c46:	bb0a      	cbnz	r2, 8005c8c <_dtoa_r+0xa54>
 8005c48:	9a08      	ldr	r2, [sp, #32]
 8005c4a:	b9fa      	cbnz	r2, 8005c8c <_dtoa_r+0xa54>
 8005c4c:	2b00      	cmp	r3, #0
 8005c4e:	ddec      	ble.n	8005c2a <_dtoa_r+0x9f2>
 8005c50:	4659      	mov	r1, fp
 8005c52:	2201      	movs	r2, #1
 8005c54:	4620      	mov	r0, r4
 8005c56:	f7fe ffc3 	bl	8004be0 <__lshift>
 8005c5a:	4631      	mov	r1, r6
 8005c5c:	4683      	mov	fp, r0
 8005c5e:	f7ff f813 	bl	8004c88 <__mcmp>
 8005c62:	2800      	cmp	r0, #0
 8005c64:	dc03      	bgt.n	8005c6e <_dtoa_r+0xa36>
 8005c66:	d1e0      	bne.n	8005c2a <_dtoa_r+0x9f2>
 8005c68:	f018 0f01 	tst.w	r8, #1
 8005c6c:	d0dd      	beq.n	8005c2a <_dtoa_r+0x9f2>
 8005c6e:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8005c72:	d1d8      	bne.n	8005c26 <_dtoa_r+0x9ee>
 8005c74:	9b07      	ldr	r3, [sp, #28]
 8005c76:	9a07      	ldr	r2, [sp, #28]
 8005c78:	1c5d      	adds	r5, r3, #1
 8005c7a:	2339      	movs	r3, #57	; 0x39
 8005c7c:	7013      	strb	r3, [r2, #0]
 8005c7e:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8005c82:	1e6a      	subs	r2, r5, #1
 8005c84:	2b39      	cmp	r3, #57	; 0x39
 8005c86:	d04d      	beq.n	8005d24 <_dtoa_r+0xaec>
 8005c88:	3301      	adds	r3, #1
 8005c8a:	e052      	b.n	8005d32 <_dtoa_r+0xafa>
 8005c8c:	9a07      	ldr	r2, [sp, #28]
 8005c8e:	2b00      	cmp	r3, #0
 8005c90:	f102 0501 	add.w	r5, r2, #1
 8005c94:	dd06      	ble.n	8005ca4 <_dtoa_r+0xa6c>
 8005c96:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8005c9a:	d0eb      	beq.n	8005c74 <_dtoa_r+0xa3c>
 8005c9c:	f108 0801 	add.w	r8, r8, #1
 8005ca0:	9b07      	ldr	r3, [sp, #28]
 8005ca2:	e7c4      	b.n	8005c2e <_dtoa_r+0x9f6>
 8005ca4:	9b06      	ldr	r3, [sp, #24]
 8005ca6:	9a04      	ldr	r2, [sp, #16]
 8005ca8:	1aeb      	subs	r3, r5, r3
 8005caa:	4293      	cmp	r3, r2
 8005cac:	f805 8c01 	strb.w	r8, [r5, #-1]
 8005cb0:	d021      	beq.n	8005cf6 <_dtoa_r+0xabe>
 8005cb2:	4659      	mov	r1, fp
 8005cb4:	2300      	movs	r3, #0
 8005cb6:	220a      	movs	r2, #10
 8005cb8:	4620      	mov	r0, r4
 8005cba:	f7fe fddd 	bl	8004878 <__multadd>
 8005cbe:	45b9      	cmp	r9, r7
 8005cc0:	4683      	mov	fp, r0
 8005cc2:	f04f 0300 	mov.w	r3, #0
 8005cc6:	f04f 020a 	mov.w	r2, #10
 8005cca:	4649      	mov	r1, r9
 8005ccc:	4620      	mov	r0, r4
 8005cce:	d105      	bne.n	8005cdc <_dtoa_r+0xaa4>
 8005cd0:	f7fe fdd2 	bl	8004878 <__multadd>
 8005cd4:	4681      	mov	r9, r0
 8005cd6:	4607      	mov	r7, r0
 8005cd8:	9507      	str	r5, [sp, #28]
 8005cda:	e778      	b.n	8005bce <_dtoa_r+0x996>
 8005cdc:	f7fe fdcc 	bl	8004878 <__multadd>
 8005ce0:	4639      	mov	r1, r7
 8005ce2:	4681      	mov	r9, r0
 8005ce4:	2300      	movs	r3, #0
 8005ce6:	220a      	movs	r2, #10
 8005ce8:	4620      	mov	r0, r4
 8005cea:	f7fe fdc5 	bl	8004878 <__multadd>
 8005cee:	4607      	mov	r7, r0
 8005cf0:	e7f2      	b.n	8005cd8 <_dtoa_r+0xaa0>
 8005cf2:	f04f 0900 	mov.w	r9, #0
 8005cf6:	4659      	mov	r1, fp
 8005cf8:	2201      	movs	r2, #1
 8005cfa:	4620      	mov	r0, r4
 8005cfc:	f7fe ff70 	bl	8004be0 <__lshift>
 8005d00:	4631      	mov	r1, r6
 8005d02:	4683      	mov	fp, r0
 8005d04:	f7fe ffc0 	bl	8004c88 <__mcmp>
 8005d08:	2800      	cmp	r0, #0
 8005d0a:	dcb8      	bgt.n	8005c7e <_dtoa_r+0xa46>
 8005d0c:	d102      	bne.n	8005d14 <_dtoa_r+0xadc>
 8005d0e:	f018 0f01 	tst.w	r8, #1
 8005d12:	d1b4      	bne.n	8005c7e <_dtoa_r+0xa46>
 8005d14:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8005d18:	1e6a      	subs	r2, r5, #1
 8005d1a:	2b30      	cmp	r3, #48	; 0x30
 8005d1c:	f47f af0f 	bne.w	8005b3e <_dtoa_r+0x906>
 8005d20:	4615      	mov	r5, r2
 8005d22:	e7f7      	b.n	8005d14 <_dtoa_r+0xadc>
 8005d24:	9b06      	ldr	r3, [sp, #24]
 8005d26:	4293      	cmp	r3, r2
 8005d28:	d105      	bne.n	8005d36 <_dtoa_r+0xafe>
 8005d2a:	2331      	movs	r3, #49	; 0x31
 8005d2c:	9a06      	ldr	r2, [sp, #24]
 8005d2e:	f10a 0a01 	add.w	sl, sl, #1
 8005d32:	7013      	strb	r3, [r2, #0]
 8005d34:	e703      	b.n	8005b3e <_dtoa_r+0x906>
 8005d36:	4615      	mov	r5, r2
 8005d38:	e7a1      	b.n	8005c7e <_dtoa_r+0xa46>
 8005d3a:	4b17      	ldr	r3, [pc, #92]	; (8005d98 <_dtoa_r+0xb60>)
 8005d3c:	f7ff bae1 	b.w	8005302 <_dtoa_r+0xca>
 8005d40:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005d42:	2b00      	cmp	r3, #0
 8005d44:	f47f aabb 	bne.w	80052be <_dtoa_r+0x86>
 8005d48:	4b14      	ldr	r3, [pc, #80]	; (8005d9c <_dtoa_r+0xb64>)
 8005d4a:	f7ff bada 	b.w	8005302 <_dtoa_r+0xca>
 8005d4e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8005d50:	2b01      	cmp	r3, #1
 8005d52:	f77f ae3f 	ble.w	80059d4 <_dtoa_r+0x79c>
 8005d56:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005d58:	9308      	str	r3, [sp, #32]
 8005d5a:	e653      	b.n	8005a04 <_dtoa_r+0x7cc>
 8005d5c:	9b04      	ldr	r3, [sp, #16]
 8005d5e:	2b00      	cmp	r3, #0
 8005d60:	dc03      	bgt.n	8005d6a <_dtoa_r+0xb32>
 8005d62:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8005d64:	2b02      	cmp	r3, #2
 8005d66:	f73f aed5 	bgt.w	8005b14 <_dtoa_r+0x8dc>
 8005d6a:	9d06      	ldr	r5, [sp, #24]
 8005d6c:	4631      	mov	r1, r6
 8005d6e:	4658      	mov	r0, fp
 8005d70:	f7ff f9d3 	bl	800511a <quorem>
 8005d74:	9b06      	ldr	r3, [sp, #24]
 8005d76:	f100 0830 	add.w	r8, r0, #48	; 0x30
 8005d7a:	f805 8b01 	strb.w	r8, [r5], #1
 8005d7e:	9a04      	ldr	r2, [sp, #16]
 8005d80:	1aeb      	subs	r3, r5, r3
 8005d82:	429a      	cmp	r2, r3
 8005d84:	ddb5      	ble.n	8005cf2 <_dtoa_r+0xaba>
 8005d86:	4659      	mov	r1, fp
 8005d88:	2300      	movs	r3, #0
 8005d8a:	220a      	movs	r2, #10
 8005d8c:	4620      	mov	r0, r4
 8005d8e:	f7fe fd73 	bl	8004878 <__multadd>
 8005d92:	4683      	mov	fp, r0
 8005d94:	e7ea      	b.n	8005d6c <_dtoa_r+0xb34>
 8005d96:	bf00      	nop
 8005d98:	0800778a 	.word	0x0800778a
 8005d9c:	0800777d 	.word	0x0800777d

08005da0 <__malloc_lock>:
 8005da0:	4770      	bx	lr

08005da2 <__malloc_unlock>:
 8005da2:	4770      	bx	lr

08005da4 <cos>:
 8005da4:	b530      	push	{r4, r5, lr}
 8005da6:	4a18      	ldr	r2, [pc, #96]	; (8005e08 <cos+0x64>)
 8005da8:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8005dac:	4293      	cmp	r3, r2
 8005dae:	b087      	sub	sp, #28
 8005db0:	dc04      	bgt.n	8005dbc <cos+0x18>
 8005db2:	2200      	movs	r2, #0
 8005db4:	2300      	movs	r3, #0
 8005db6:	f000 fc37 	bl	8006628 <__kernel_cos>
 8005dba:	e006      	b.n	8005dca <cos+0x26>
 8005dbc:	4a13      	ldr	r2, [pc, #76]	; (8005e0c <cos+0x68>)
 8005dbe:	4293      	cmp	r3, r2
 8005dc0:	dd05      	ble.n	8005dce <cos+0x2a>
 8005dc2:	4602      	mov	r2, r0
 8005dc4:	460b      	mov	r3, r1
 8005dc6:	f7fa f9df 	bl	8000188 <__aeabi_dsub>
 8005dca:	b007      	add	sp, #28
 8005dcc:	bd30      	pop	{r4, r5, pc}
 8005dce:	aa02      	add	r2, sp, #8
 8005dd0:	f000 f98e 	bl	80060f0 <__ieee754_rem_pio2>
 8005dd4:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8005dd8:	f000 0403 	and.w	r4, r0, #3
 8005ddc:	2c01      	cmp	r4, #1
 8005dde:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8005de2:	d008      	beq.n	8005df6 <cos+0x52>
 8005de4:	2c02      	cmp	r4, #2
 8005de6:	d00c      	beq.n	8005e02 <cos+0x5e>
 8005de8:	2c00      	cmp	r4, #0
 8005dea:	d0e4      	beq.n	8005db6 <cos+0x12>
 8005dec:	2401      	movs	r4, #1
 8005dee:	9400      	str	r4, [sp, #0]
 8005df0:	f001 f822 	bl	8006e38 <__kernel_sin>
 8005df4:	e7e9      	b.n	8005dca <cos+0x26>
 8005df6:	9400      	str	r4, [sp, #0]
 8005df8:	f001 f81e 	bl	8006e38 <__kernel_sin>
 8005dfc:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8005e00:	e7e3      	b.n	8005dca <cos+0x26>
 8005e02:	f000 fc11 	bl	8006628 <__kernel_cos>
 8005e06:	e7f9      	b.n	8005dfc <cos+0x58>
 8005e08:	3fe921fb 	.word	0x3fe921fb
 8005e0c:	7fefffff 	.word	0x7fefffff

08005e10 <sin>:
 8005e10:	b530      	push	{r4, r5, lr}
 8005e12:	4a1a      	ldr	r2, [pc, #104]	; (8005e7c <sin+0x6c>)
 8005e14:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8005e18:	4293      	cmp	r3, r2
 8005e1a:	b087      	sub	sp, #28
 8005e1c:	dc06      	bgt.n	8005e2c <sin+0x1c>
 8005e1e:	2300      	movs	r3, #0
 8005e20:	2200      	movs	r2, #0
 8005e22:	9300      	str	r3, [sp, #0]
 8005e24:	2300      	movs	r3, #0
 8005e26:	f001 f807 	bl	8006e38 <__kernel_sin>
 8005e2a:	e006      	b.n	8005e3a <sin+0x2a>
 8005e2c:	4a14      	ldr	r2, [pc, #80]	; (8005e80 <sin+0x70>)
 8005e2e:	4293      	cmp	r3, r2
 8005e30:	dd05      	ble.n	8005e3e <sin+0x2e>
 8005e32:	4602      	mov	r2, r0
 8005e34:	460b      	mov	r3, r1
 8005e36:	f7fa f9a7 	bl	8000188 <__aeabi_dsub>
 8005e3a:	b007      	add	sp, #28
 8005e3c:	bd30      	pop	{r4, r5, pc}
 8005e3e:	aa02      	add	r2, sp, #8
 8005e40:	f000 f956 	bl	80060f0 <__ieee754_rem_pio2>
 8005e44:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8005e48:	f000 0403 	and.w	r4, r0, #3
 8005e4c:	2c01      	cmp	r4, #1
 8005e4e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8005e52:	d005      	beq.n	8005e60 <sin+0x50>
 8005e54:	2c02      	cmp	r4, #2
 8005e56:	d006      	beq.n	8005e66 <sin+0x56>
 8005e58:	b964      	cbnz	r4, 8005e74 <sin+0x64>
 8005e5a:	2401      	movs	r4, #1
 8005e5c:	9400      	str	r4, [sp, #0]
 8005e5e:	e7e2      	b.n	8005e26 <sin+0x16>
 8005e60:	f000 fbe2 	bl	8006628 <__kernel_cos>
 8005e64:	e7e9      	b.n	8005e3a <sin+0x2a>
 8005e66:	2401      	movs	r4, #1
 8005e68:	9400      	str	r4, [sp, #0]
 8005e6a:	f000 ffe5 	bl	8006e38 <__kernel_sin>
 8005e6e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8005e72:	e7e2      	b.n	8005e3a <sin+0x2a>
 8005e74:	f000 fbd8 	bl	8006628 <__kernel_cos>
 8005e78:	e7f9      	b.n	8005e6e <sin+0x5e>
 8005e7a:	bf00      	nop
 8005e7c:	3fe921fb 	.word	0x3fe921fb
 8005e80:	7fefffff 	.word	0x7fefffff

08005e84 <atan2>:
 8005e84:	f000 b854 	b.w	8005f30 <__ieee754_atan2>

08005e88 <sqrt>:
 8005e88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005e8c:	b08b      	sub	sp, #44	; 0x2c
 8005e8e:	4604      	mov	r4, r0
 8005e90:	460d      	mov	r5, r1
 8005e92:	f000 fb1d 	bl	80064d0 <__ieee754_sqrt>
 8005e96:	4b24      	ldr	r3, [pc, #144]	; (8005f28 <sqrt+0xa0>)
 8005e98:	4680      	mov	r8, r0
 8005e9a:	f993 a000 	ldrsb.w	sl, [r3]
 8005e9e:	4689      	mov	r9, r1
 8005ea0:	f1ba 3fff 	cmp.w	sl, #4294967295
 8005ea4:	d02b      	beq.n	8005efe <sqrt+0x76>
 8005ea6:	4622      	mov	r2, r4
 8005ea8:	462b      	mov	r3, r5
 8005eaa:	4620      	mov	r0, r4
 8005eac:	4629      	mov	r1, r5
 8005eae:	f7fa fdbd 	bl	8000a2c <__aeabi_dcmpun>
 8005eb2:	4683      	mov	fp, r0
 8005eb4:	bb18      	cbnz	r0, 8005efe <sqrt+0x76>
 8005eb6:	2600      	movs	r6, #0
 8005eb8:	2700      	movs	r7, #0
 8005eba:	4632      	mov	r2, r6
 8005ebc:	463b      	mov	r3, r7
 8005ebe:	4620      	mov	r0, r4
 8005ec0:	4629      	mov	r1, r5
 8005ec2:	f7fa fd8b 	bl	80009dc <__aeabi_dcmplt>
 8005ec6:	b1d0      	cbz	r0, 8005efe <sqrt+0x76>
 8005ec8:	2301      	movs	r3, #1
 8005eca:	9300      	str	r3, [sp, #0]
 8005ecc:	4b17      	ldr	r3, [pc, #92]	; (8005f2c <sqrt+0xa4>)
 8005ece:	f8cd b020 	str.w	fp, [sp, #32]
 8005ed2:	9301      	str	r3, [sp, #4]
 8005ed4:	e9cd 4504 	strd	r4, r5, [sp, #16]
 8005ed8:	e9cd 4502 	strd	r4, r5, [sp, #8]
 8005edc:	f1ba 0f00 	cmp.w	sl, #0
 8005ee0:	d112      	bne.n	8005f08 <sqrt+0x80>
 8005ee2:	e9cd 6706 	strd	r6, r7, [sp, #24]
 8005ee6:	4668      	mov	r0, sp
 8005ee8:	f001 fa72 	bl	80073d0 <matherr>
 8005eec:	b1b8      	cbz	r0, 8005f1e <sqrt+0x96>
 8005eee:	9b08      	ldr	r3, [sp, #32]
 8005ef0:	b11b      	cbz	r3, 8005efa <sqrt+0x72>
 8005ef2:	f7fd f90d 	bl	8003110 <__errno>
 8005ef6:	9b08      	ldr	r3, [sp, #32]
 8005ef8:	6003      	str	r3, [r0, #0]
 8005efa:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
 8005efe:	4640      	mov	r0, r8
 8005f00:	4649      	mov	r1, r9
 8005f02:	b00b      	add	sp, #44	; 0x2c
 8005f04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005f08:	4632      	mov	r2, r6
 8005f0a:	463b      	mov	r3, r7
 8005f0c:	4630      	mov	r0, r6
 8005f0e:	4639      	mov	r1, r7
 8005f10:	f7fa fc1c 	bl	800074c <__aeabi_ddiv>
 8005f14:	f1ba 0f02 	cmp.w	sl, #2
 8005f18:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8005f1c:	d1e3      	bne.n	8005ee6 <sqrt+0x5e>
 8005f1e:	f7fd f8f7 	bl	8003110 <__errno>
 8005f22:	2321      	movs	r3, #33	; 0x21
 8005f24:	6003      	str	r3, [r0, #0]
 8005f26:	e7e2      	b.n	8005eee <sqrt+0x66>
 8005f28:	20000200 	.word	0x20000200
 8005f2c:	0800778c 	.word	0x0800778c

08005f30 <__ieee754_atan2>:
 8005f30:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005f34:	4256      	negs	r6, r2
 8005f36:	f023 4c00 	bic.w	ip, r3, #2147483648	; 0x80000000
 8005f3a:	4316      	orrs	r6, r2
 8005f3c:	f8df 91a8 	ldr.w	r9, [pc, #424]	; 80060e8 <__ieee754_atan2+0x1b8>
 8005f40:	ea4c 76d6 	orr.w	r6, ip, r6, lsr #31
 8005f44:	454e      	cmp	r6, r9
 8005f46:	4604      	mov	r4, r0
 8005f48:	460d      	mov	r5, r1
 8005f4a:	469e      	mov	lr, r3
 8005f4c:	d808      	bhi.n	8005f60 <__ieee754_atan2+0x30>
 8005f4e:	4246      	negs	r6, r0
 8005f50:	f021 4700 	bic.w	r7, r1, #2147483648	; 0x80000000
 8005f54:	4306      	orrs	r6, r0
 8005f56:	ea47 76d6 	orr.w	r6, r7, r6, lsr #31
 8005f5a:	454e      	cmp	r6, r9
 8005f5c:	4688      	mov	r8, r1
 8005f5e:	d906      	bls.n	8005f6e <__ieee754_atan2+0x3e>
 8005f60:	4620      	mov	r0, r4
 8005f62:	4629      	mov	r1, r5
 8005f64:	f7fa f912 	bl	800018c <__adddf3>
 8005f68:	4604      	mov	r4, r0
 8005f6a:	460d      	mov	r5, r1
 8005f6c:	e030      	b.n	8005fd0 <__ieee754_atan2+0xa0>
 8005f6e:	f103 4640 	add.w	r6, r3, #3221225472	; 0xc0000000
 8005f72:	f506 1680 	add.w	r6, r6, #1048576	; 0x100000
 8005f76:	4316      	orrs	r6, r2
 8005f78:	d103      	bne.n	8005f82 <__ieee754_atan2+0x52>
 8005f7a:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005f7e:	f001 b813 	b.w	8006fa8 <atan>
 8005f82:	179e      	asrs	r6, r3, #30
 8005f84:	f006 0602 	and.w	r6, r6, #2
 8005f88:	ea46 76d1 	orr.w	r6, r6, r1, lsr #31
 8005f8c:	ea57 0100 	orrs.w	r1, r7, r0
 8005f90:	d107      	bne.n	8005fa2 <__ieee754_atan2+0x72>
 8005f92:	2e02      	cmp	r6, #2
 8005f94:	d079      	beq.n	800608a <__ieee754_atan2+0x15a>
 8005f96:	2e03      	cmp	r6, #3
 8005f98:	d11a      	bne.n	8005fd0 <__ieee754_atan2+0xa0>
 8005f9a:	a541      	add	r5, pc, #260	; (adr r5, 80060a0 <__ieee754_atan2+0x170>)
 8005f9c:	e9d5 4500 	ldrd	r4, r5, [r5]
 8005fa0:	e016      	b.n	8005fd0 <__ieee754_atan2+0xa0>
 8005fa2:	ea5c 0102 	orrs.w	r1, ip, r2
 8005fa6:	d106      	bne.n	8005fb6 <__ieee754_atan2+0x86>
 8005fa8:	f1b8 0f00 	cmp.w	r8, #0
 8005fac:	da71      	bge.n	8006092 <__ieee754_atan2+0x162>
 8005fae:	a53e      	add	r5, pc, #248	; (adr r5, 80060a8 <__ieee754_atan2+0x178>)
 8005fb0:	e9d5 4500 	ldrd	r4, r5, [r5]
 8005fb4:	e00c      	b.n	8005fd0 <__ieee754_atan2+0xa0>
 8005fb6:	45cc      	cmp	ip, r9
 8005fb8:	d123      	bne.n	8006002 <__ieee754_atan2+0xd2>
 8005fba:	4567      	cmp	r7, ip
 8005fbc:	d114      	bne.n	8005fe8 <__ieee754_atan2+0xb8>
 8005fbe:	2e02      	cmp	r6, #2
 8005fc0:	d00a      	beq.n	8005fd8 <__ieee754_atan2+0xa8>
 8005fc2:	2e03      	cmp	r6, #3
 8005fc4:	d00c      	beq.n	8005fe0 <__ieee754_atan2+0xb0>
 8005fc6:	2e01      	cmp	r6, #1
 8005fc8:	d15b      	bne.n	8006082 <__ieee754_atan2+0x152>
 8005fca:	a539      	add	r5, pc, #228	; (adr r5, 80060b0 <__ieee754_atan2+0x180>)
 8005fcc:	e9d5 4500 	ldrd	r4, r5, [r5]
 8005fd0:	4620      	mov	r0, r4
 8005fd2:	4629      	mov	r1, r5
 8005fd4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005fd8:	a537      	add	r5, pc, #220	; (adr r5, 80060b8 <__ieee754_atan2+0x188>)
 8005fda:	e9d5 4500 	ldrd	r4, r5, [r5]
 8005fde:	e7f7      	b.n	8005fd0 <__ieee754_atan2+0xa0>
 8005fe0:	a537      	add	r5, pc, #220	; (adr r5, 80060c0 <__ieee754_atan2+0x190>)
 8005fe2:	e9d5 4500 	ldrd	r4, r5, [r5]
 8005fe6:	e7f3      	b.n	8005fd0 <__ieee754_atan2+0xa0>
 8005fe8:	2e02      	cmp	r6, #2
 8005fea:	d04e      	beq.n	800608a <__ieee754_atan2+0x15a>
 8005fec:	2e03      	cmp	r6, #3
 8005fee:	d0d4      	beq.n	8005f9a <__ieee754_atan2+0x6a>
 8005ff0:	2e01      	cmp	r6, #1
 8005ff2:	f04f 0400 	mov.w	r4, #0
 8005ff6:	d102      	bne.n	8005ffe <__ieee754_atan2+0xce>
 8005ff8:	f04f 4500 	mov.w	r5, #2147483648	; 0x80000000
 8005ffc:	e7e8      	b.n	8005fd0 <__ieee754_atan2+0xa0>
 8005ffe:	2500      	movs	r5, #0
 8006000:	e7e6      	b.n	8005fd0 <__ieee754_atan2+0xa0>
 8006002:	454f      	cmp	r7, r9
 8006004:	d0d0      	beq.n	8005fa8 <__ieee754_atan2+0x78>
 8006006:	eba7 070c 	sub.w	r7, r7, ip
 800600a:	153f      	asrs	r7, r7, #20
 800600c:	2f3c      	cmp	r7, #60	; 0x3c
 800600e:	dc1e      	bgt.n	800604e <__ieee754_atan2+0x11e>
 8006010:	2b00      	cmp	r3, #0
 8006012:	da01      	bge.n	8006018 <__ieee754_atan2+0xe8>
 8006014:	373c      	adds	r7, #60	; 0x3c
 8006016:	db1e      	blt.n	8006056 <__ieee754_atan2+0x126>
 8006018:	4620      	mov	r0, r4
 800601a:	4629      	mov	r1, r5
 800601c:	f7fa fb96 	bl	800074c <__aeabi_ddiv>
 8006020:	f001 f94c 	bl	80072bc <fabs>
 8006024:	f000 ffc0 	bl	8006fa8 <atan>
 8006028:	4604      	mov	r4, r0
 800602a:	460d      	mov	r5, r1
 800602c:	2e01      	cmp	r6, #1
 800602e:	d015      	beq.n	800605c <__ieee754_atan2+0x12c>
 8006030:	2e02      	cmp	r6, #2
 8006032:	d017      	beq.n	8006064 <__ieee754_atan2+0x134>
 8006034:	2e00      	cmp	r6, #0
 8006036:	d0cb      	beq.n	8005fd0 <__ieee754_atan2+0xa0>
 8006038:	a323      	add	r3, pc, #140	; (adr r3, 80060c8 <__ieee754_atan2+0x198>)
 800603a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800603e:	4620      	mov	r0, r4
 8006040:	4629      	mov	r1, r5
 8006042:	f7fa f8a1 	bl	8000188 <__aeabi_dsub>
 8006046:	a322      	add	r3, pc, #136	; (adr r3, 80060d0 <__ieee754_atan2+0x1a0>)
 8006048:	e9d3 2300 	ldrd	r2, r3, [r3]
 800604c:	e016      	b.n	800607c <__ieee754_atan2+0x14c>
 800604e:	a522      	add	r5, pc, #136	; (adr r5, 80060d8 <__ieee754_atan2+0x1a8>)
 8006050:	e9d5 4500 	ldrd	r4, r5, [r5]
 8006054:	e7ea      	b.n	800602c <__ieee754_atan2+0xfc>
 8006056:	2400      	movs	r4, #0
 8006058:	2500      	movs	r5, #0
 800605a:	e7e7      	b.n	800602c <__ieee754_atan2+0xfc>
 800605c:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 8006060:	461d      	mov	r5, r3
 8006062:	e7b5      	b.n	8005fd0 <__ieee754_atan2+0xa0>
 8006064:	a318      	add	r3, pc, #96	; (adr r3, 80060c8 <__ieee754_atan2+0x198>)
 8006066:	e9d3 2300 	ldrd	r2, r3, [r3]
 800606a:	4620      	mov	r0, r4
 800606c:	4629      	mov	r1, r5
 800606e:	f7fa f88b 	bl	8000188 <__aeabi_dsub>
 8006072:	4602      	mov	r2, r0
 8006074:	460b      	mov	r3, r1
 8006076:	a116      	add	r1, pc, #88	; (adr r1, 80060d0 <__ieee754_atan2+0x1a0>)
 8006078:	e9d1 0100 	ldrd	r0, r1, [r1]
 800607c:	f7fa f884 	bl	8000188 <__aeabi_dsub>
 8006080:	e772      	b.n	8005f68 <__ieee754_atan2+0x38>
 8006082:	a517      	add	r5, pc, #92	; (adr r5, 80060e0 <__ieee754_atan2+0x1b0>)
 8006084:	e9d5 4500 	ldrd	r4, r5, [r5]
 8006088:	e7a2      	b.n	8005fd0 <__ieee754_atan2+0xa0>
 800608a:	a511      	add	r5, pc, #68	; (adr r5, 80060d0 <__ieee754_atan2+0x1a0>)
 800608c:	e9d5 4500 	ldrd	r4, r5, [r5]
 8006090:	e79e      	b.n	8005fd0 <__ieee754_atan2+0xa0>
 8006092:	a511      	add	r5, pc, #68	; (adr r5, 80060d8 <__ieee754_atan2+0x1a8>)
 8006094:	e9d5 4500 	ldrd	r4, r5, [r5]
 8006098:	e79a      	b.n	8005fd0 <__ieee754_atan2+0xa0>
 800609a:	bf00      	nop
 800609c:	f3af 8000 	nop.w
 80060a0:	54442d18 	.word	0x54442d18
 80060a4:	c00921fb 	.word	0xc00921fb
 80060a8:	54442d18 	.word	0x54442d18
 80060ac:	bff921fb 	.word	0xbff921fb
 80060b0:	54442d18 	.word	0x54442d18
 80060b4:	bfe921fb 	.word	0xbfe921fb
 80060b8:	7f3321d2 	.word	0x7f3321d2
 80060bc:	4002d97c 	.word	0x4002d97c
 80060c0:	7f3321d2 	.word	0x7f3321d2
 80060c4:	c002d97c 	.word	0xc002d97c
 80060c8:	33145c07 	.word	0x33145c07
 80060cc:	3ca1a626 	.word	0x3ca1a626
 80060d0:	54442d18 	.word	0x54442d18
 80060d4:	400921fb 	.word	0x400921fb
 80060d8:	54442d18 	.word	0x54442d18
 80060dc:	3ff921fb 	.word	0x3ff921fb
 80060e0:	54442d18 	.word	0x54442d18
 80060e4:	3fe921fb 	.word	0x3fe921fb
 80060e8:	7ff00000 	.word	0x7ff00000
 80060ec:	00000000 	.word	0x00000000

080060f0 <__ieee754_rem_pio2>:
 80060f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80060f4:	4614      	mov	r4, r2
 80060f6:	4ac2      	ldr	r2, [pc, #776]	; (8006400 <__ieee754_rem_pio2+0x310>)
 80060f8:	f021 4a00 	bic.w	sl, r1, #2147483648	; 0x80000000
 80060fc:	4592      	cmp	sl, r2
 80060fe:	b08d      	sub	sp, #52	; 0x34
 8006100:	468b      	mov	fp, r1
 8006102:	dc07      	bgt.n	8006114 <__ieee754_rem_pio2+0x24>
 8006104:	2200      	movs	r2, #0
 8006106:	2300      	movs	r3, #0
 8006108:	e9c4 0100 	strd	r0, r1, [r4]
 800610c:	e9c4 2302 	strd	r2, r3, [r4, #8]
 8006110:	2500      	movs	r5, #0
 8006112:	e023      	b.n	800615c <__ieee754_rem_pio2+0x6c>
 8006114:	4abb      	ldr	r2, [pc, #748]	; (8006404 <__ieee754_rem_pio2+0x314>)
 8006116:	4592      	cmp	sl, r2
 8006118:	dc71      	bgt.n	80061fe <__ieee754_rem_pio2+0x10e>
 800611a:	a3ab      	add	r3, pc, #684	; (adr r3, 80063c8 <__ieee754_rem_pio2+0x2d8>)
 800611c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006120:	2900      	cmp	r1, #0
 8006122:	4db9      	ldr	r5, [pc, #740]	; (8006408 <__ieee754_rem_pio2+0x318>)
 8006124:	dd36      	ble.n	8006194 <__ieee754_rem_pio2+0xa4>
 8006126:	f7fa f82f 	bl	8000188 <__aeabi_dsub>
 800612a:	45aa      	cmp	sl, r5
 800612c:	4606      	mov	r6, r0
 800612e:	460f      	mov	r7, r1
 8006130:	d018      	beq.n	8006164 <__ieee754_rem_pio2+0x74>
 8006132:	a3a7      	add	r3, pc, #668	; (adr r3, 80063d0 <__ieee754_rem_pio2+0x2e0>)
 8006134:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006138:	f7fa f826 	bl	8000188 <__aeabi_dsub>
 800613c:	4602      	mov	r2, r0
 800613e:	460b      	mov	r3, r1
 8006140:	4630      	mov	r0, r6
 8006142:	e9c4 2300 	strd	r2, r3, [r4]
 8006146:	4639      	mov	r1, r7
 8006148:	f7fa f81e 	bl	8000188 <__aeabi_dsub>
 800614c:	a3a0      	add	r3, pc, #640	; (adr r3, 80063d0 <__ieee754_rem_pio2+0x2e0>)
 800614e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006152:	f7fa f819 	bl	8000188 <__aeabi_dsub>
 8006156:	2501      	movs	r5, #1
 8006158:	e9c4 0102 	strd	r0, r1, [r4, #8]
 800615c:	4628      	mov	r0, r5
 800615e:	b00d      	add	sp, #52	; 0x34
 8006160:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006164:	a39c      	add	r3, pc, #624	; (adr r3, 80063d8 <__ieee754_rem_pio2+0x2e8>)
 8006166:	e9d3 2300 	ldrd	r2, r3, [r3]
 800616a:	f7fa f80d 	bl	8000188 <__aeabi_dsub>
 800616e:	a39c      	add	r3, pc, #624	; (adr r3, 80063e0 <__ieee754_rem_pio2+0x2f0>)
 8006170:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006174:	4606      	mov	r6, r0
 8006176:	460f      	mov	r7, r1
 8006178:	f7fa f806 	bl	8000188 <__aeabi_dsub>
 800617c:	4602      	mov	r2, r0
 800617e:	460b      	mov	r3, r1
 8006180:	4630      	mov	r0, r6
 8006182:	e9c4 2300 	strd	r2, r3, [r4]
 8006186:	4639      	mov	r1, r7
 8006188:	f7f9 fffe 	bl	8000188 <__aeabi_dsub>
 800618c:	a394      	add	r3, pc, #592	; (adr r3, 80063e0 <__ieee754_rem_pio2+0x2f0>)
 800618e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006192:	e7de      	b.n	8006152 <__ieee754_rem_pio2+0x62>
 8006194:	f7f9 fffa 	bl	800018c <__adddf3>
 8006198:	45aa      	cmp	sl, r5
 800619a:	4606      	mov	r6, r0
 800619c:	460f      	mov	r7, r1
 800619e:	d016      	beq.n	80061ce <__ieee754_rem_pio2+0xde>
 80061a0:	a38b      	add	r3, pc, #556	; (adr r3, 80063d0 <__ieee754_rem_pio2+0x2e0>)
 80061a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80061a6:	f7f9 fff1 	bl	800018c <__adddf3>
 80061aa:	4602      	mov	r2, r0
 80061ac:	460b      	mov	r3, r1
 80061ae:	4630      	mov	r0, r6
 80061b0:	e9c4 2300 	strd	r2, r3, [r4]
 80061b4:	4639      	mov	r1, r7
 80061b6:	f7f9 ffe7 	bl	8000188 <__aeabi_dsub>
 80061ba:	a385      	add	r3, pc, #532	; (adr r3, 80063d0 <__ieee754_rem_pio2+0x2e0>)
 80061bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80061c0:	f7f9 ffe4 	bl	800018c <__adddf3>
 80061c4:	f04f 35ff 	mov.w	r5, #4294967295
 80061c8:	e9c4 0102 	strd	r0, r1, [r4, #8]
 80061cc:	e7c6      	b.n	800615c <__ieee754_rem_pio2+0x6c>
 80061ce:	a382      	add	r3, pc, #520	; (adr r3, 80063d8 <__ieee754_rem_pio2+0x2e8>)
 80061d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80061d4:	f7f9 ffda 	bl	800018c <__adddf3>
 80061d8:	a381      	add	r3, pc, #516	; (adr r3, 80063e0 <__ieee754_rem_pio2+0x2f0>)
 80061da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80061de:	4606      	mov	r6, r0
 80061e0:	460f      	mov	r7, r1
 80061e2:	f7f9 ffd3 	bl	800018c <__adddf3>
 80061e6:	4602      	mov	r2, r0
 80061e8:	460b      	mov	r3, r1
 80061ea:	4630      	mov	r0, r6
 80061ec:	e9c4 2300 	strd	r2, r3, [r4]
 80061f0:	4639      	mov	r1, r7
 80061f2:	f7f9 ffc9 	bl	8000188 <__aeabi_dsub>
 80061f6:	a37a      	add	r3, pc, #488	; (adr r3, 80063e0 <__ieee754_rem_pio2+0x2f0>)
 80061f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80061fc:	e7e0      	b.n	80061c0 <__ieee754_rem_pio2+0xd0>
 80061fe:	4a83      	ldr	r2, [pc, #524]	; (800640c <__ieee754_rem_pio2+0x31c>)
 8006200:	4592      	cmp	sl, r2
 8006202:	f300 80d2 	bgt.w	80063aa <__ieee754_rem_pio2+0x2ba>
 8006206:	f001 f859 	bl	80072bc <fabs>
 800620a:	a377      	add	r3, pc, #476	; (adr r3, 80063e8 <__ieee754_rem_pio2+0x2f8>)
 800620c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006210:	4606      	mov	r6, r0
 8006212:	460f      	mov	r7, r1
 8006214:	f7fa f970 	bl	80004f8 <__aeabi_dmul>
 8006218:	2200      	movs	r2, #0
 800621a:	4b7d      	ldr	r3, [pc, #500]	; (8006410 <__ieee754_rem_pio2+0x320>)
 800621c:	f7f9 ffb6 	bl	800018c <__adddf3>
 8006220:	f7fa fc1a 	bl	8000a58 <__aeabi_d2iz>
 8006224:	4605      	mov	r5, r0
 8006226:	f7fa f8fd 	bl	8000424 <__aeabi_i2d>
 800622a:	a367      	add	r3, pc, #412	; (adr r3, 80063c8 <__ieee754_rem_pio2+0x2d8>)
 800622c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006230:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8006234:	f7fa f960 	bl	80004f8 <__aeabi_dmul>
 8006238:	4602      	mov	r2, r0
 800623a:	460b      	mov	r3, r1
 800623c:	4630      	mov	r0, r6
 800623e:	4639      	mov	r1, r7
 8006240:	f7f9 ffa2 	bl	8000188 <__aeabi_dsub>
 8006244:	a362      	add	r3, pc, #392	; (adr r3, 80063d0 <__ieee754_rem_pio2+0x2e0>)
 8006246:	e9d3 2300 	ldrd	r2, r3, [r3]
 800624a:	4606      	mov	r6, r0
 800624c:	460f      	mov	r7, r1
 800624e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006252:	f7fa f951 	bl	80004f8 <__aeabi_dmul>
 8006256:	2d1f      	cmp	r5, #31
 8006258:	4680      	mov	r8, r0
 800625a:	4689      	mov	r9, r1
 800625c:	dc0e      	bgt.n	800627c <__ieee754_rem_pio2+0x18c>
 800625e:	4b6d      	ldr	r3, [pc, #436]	; (8006414 <__ieee754_rem_pio2+0x324>)
 8006260:	1e6a      	subs	r2, r5, #1
 8006262:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8006266:	4553      	cmp	r3, sl
 8006268:	d008      	beq.n	800627c <__ieee754_rem_pio2+0x18c>
 800626a:	4642      	mov	r2, r8
 800626c:	464b      	mov	r3, r9
 800626e:	4630      	mov	r0, r6
 8006270:	4639      	mov	r1, r7
 8006272:	f7f9 ff89 	bl	8000188 <__aeabi_dsub>
 8006276:	e9c4 0100 	strd	r0, r1, [r4]
 800627a:	e011      	b.n	80062a0 <__ieee754_rem_pio2+0x1b0>
 800627c:	464b      	mov	r3, r9
 800627e:	4642      	mov	r2, r8
 8006280:	4630      	mov	r0, r6
 8006282:	4639      	mov	r1, r7
 8006284:	f7f9 ff80 	bl	8000188 <__aeabi_dsub>
 8006288:	ea4f 5a2a 	mov.w	sl, sl, asr #20
 800628c:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8006290:	ebaa 0303 	sub.w	r3, sl, r3
 8006294:	2b10      	cmp	r3, #16
 8006296:	dc1f      	bgt.n	80062d8 <__ieee754_rem_pio2+0x1e8>
 8006298:	4602      	mov	r2, r0
 800629a:	460b      	mov	r3, r1
 800629c:	e9c4 2300 	strd	r2, r3, [r4]
 80062a0:	e9d4 2a00 	ldrd	r2, sl, [r4]
 80062a4:	4630      	mov	r0, r6
 80062a6:	4653      	mov	r3, sl
 80062a8:	4639      	mov	r1, r7
 80062aa:	f7f9 ff6d 	bl	8000188 <__aeabi_dsub>
 80062ae:	4642      	mov	r2, r8
 80062b0:	464b      	mov	r3, r9
 80062b2:	f7f9 ff69 	bl	8000188 <__aeabi_dsub>
 80062b6:	4602      	mov	r2, r0
 80062b8:	460b      	mov	r3, r1
 80062ba:	f1bb 0f00 	cmp.w	fp, #0
 80062be:	e9c4 2302 	strd	r2, r3, [r4, #8]
 80062c2:	f6bf af4b 	bge.w	800615c <__ieee754_rem_pio2+0x6c>
 80062c6:	f10a 4300 	add.w	r3, sl, #2147483648	; 0x80000000
 80062ca:	e9c4 3001 	strd	r3, r0, [r4, #4]
 80062ce:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80062d2:	60e1      	str	r1, [r4, #12]
 80062d4:	426d      	negs	r5, r5
 80062d6:	e741      	b.n	800615c <__ieee754_rem_pio2+0x6c>
 80062d8:	a33f      	add	r3, pc, #252	; (adr r3, 80063d8 <__ieee754_rem_pio2+0x2e8>)
 80062da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80062de:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80062e2:	f7fa f909 	bl	80004f8 <__aeabi_dmul>
 80062e6:	4680      	mov	r8, r0
 80062e8:	4689      	mov	r9, r1
 80062ea:	4602      	mov	r2, r0
 80062ec:	460b      	mov	r3, r1
 80062ee:	4630      	mov	r0, r6
 80062f0:	4639      	mov	r1, r7
 80062f2:	f7f9 ff49 	bl	8000188 <__aeabi_dsub>
 80062f6:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80062fa:	4602      	mov	r2, r0
 80062fc:	460b      	mov	r3, r1
 80062fe:	4630      	mov	r0, r6
 8006300:	4639      	mov	r1, r7
 8006302:	f7f9 ff41 	bl	8000188 <__aeabi_dsub>
 8006306:	4642      	mov	r2, r8
 8006308:	464b      	mov	r3, r9
 800630a:	f7f9 ff3d 	bl	8000188 <__aeabi_dsub>
 800630e:	a334      	add	r3, pc, #208	; (adr r3, 80063e0 <__ieee754_rem_pio2+0x2f0>)
 8006310:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006314:	4606      	mov	r6, r0
 8006316:	460f      	mov	r7, r1
 8006318:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800631c:	f7fa f8ec 	bl	80004f8 <__aeabi_dmul>
 8006320:	4632      	mov	r2, r6
 8006322:	463b      	mov	r3, r7
 8006324:	f7f9 ff30 	bl	8000188 <__aeabi_dsub>
 8006328:	460b      	mov	r3, r1
 800632a:	4602      	mov	r2, r0
 800632c:	4680      	mov	r8, r0
 800632e:	4689      	mov	r9, r1
 8006330:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8006334:	f7f9 ff28 	bl	8000188 <__aeabi_dsub>
 8006338:	f3c1 530a 	ubfx	r3, r1, #20, #11
 800633c:	ebaa 0a03 	sub.w	sl, sl, r3
 8006340:	f1ba 0f31 	cmp.w	sl, #49	; 0x31
 8006344:	dc06      	bgt.n	8006354 <__ieee754_rem_pio2+0x264>
 8006346:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
 800634a:	4602      	mov	r2, r0
 800634c:	460b      	mov	r3, r1
 800634e:	e9c4 2300 	strd	r2, r3, [r4]
 8006352:	e7a5      	b.n	80062a0 <__ieee754_rem_pio2+0x1b0>
 8006354:	a326      	add	r3, pc, #152	; (adr r3, 80063f0 <__ieee754_rem_pio2+0x300>)
 8006356:	e9d3 2300 	ldrd	r2, r3, [r3]
 800635a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800635e:	f7fa f8cb 	bl	80004f8 <__aeabi_dmul>
 8006362:	4680      	mov	r8, r0
 8006364:	4689      	mov	r9, r1
 8006366:	4602      	mov	r2, r0
 8006368:	460b      	mov	r3, r1
 800636a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800636e:	f7f9 ff0b 	bl	8000188 <__aeabi_dsub>
 8006372:	4602      	mov	r2, r0
 8006374:	460b      	mov	r3, r1
 8006376:	4606      	mov	r6, r0
 8006378:	460f      	mov	r7, r1
 800637a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800637e:	f7f9 ff03 	bl	8000188 <__aeabi_dsub>
 8006382:	4642      	mov	r2, r8
 8006384:	464b      	mov	r3, r9
 8006386:	f7f9 feff 	bl	8000188 <__aeabi_dsub>
 800638a:	a31b      	add	r3, pc, #108	; (adr r3, 80063f8 <__ieee754_rem_pio2+0x308>)
 800638c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006390:	4680      	mov	r8, r0
 8006392:	4689      	mov	r9, r1
 8006394:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006398:	f7fa f8ae 	bl	80004f8 <__aeabi_dmul>
 800639c:	4642      	mov	r2, r8
 800639e:	464b      	mov	r3, r9
 80063a0:	f7f9 fef2 	bl	8000188 <__aeabi_dsub>
 80063a4:	4680      	mov	r8, r0
 80063a6:	4689      	mov	r9, r1
 80063a8:	e75f      	b.n	800626a <__ieee754_rem_pio2+0x17a>
 80063aa:	4a1b      	ldr	r2, [pc, #108]	; (8006418 <__ieee754_rem_pio2+0x328>)
 80063ac:	4592      	cmp	sl, r2
 80063ae:	dd35      	ble.n	800641c <__ieee754_rem_pio2+0x32c>
 80063b0:	4602      	mov	r2, r0
 80063b2:	460b      	mov	r3, r1
 80063b4:	f7f9 fee8 	bl	8000188 <__aeabi_dsub>
 80063b8:	e9c4 0102 	strd	r0, r1, [r4, #8]
 80063bc:	e9c4 0100 	strd	r0, r1, [r4]
 80063c0:	e6a6      	b.n	8006110 <__ieee754_rem_pio2+0x20>
 80063c2:	bf00      	nop
 80063c4:	f3af 8000 	nop.w
 80063c8:	54400000 	.word	0x54400000
 80063cc:	3ff921fb 	.word	0x3ff921fb
 80063d0:	1a626331 	.word	0x1a626331
 80063d4:	3dd0b461 	.word	0x3dd0b461
 80063d8:	1a600000 	.word	0x1a600000
 80063dc:	3dd0b461 	.word	0x3dd0b461
 80063e0:	2e037073 	.word	0x2e037073
 80063e4:	3ba3198a 	.word	0x3ba3198a
 80063e8:	6dc9c883 	.word	0x6dc9c883
 80063ec:	3fe45f30 	.word	0x3fe45f30
 80063f0:	2e000000 	.word	0x2e000000
 80063f4:	3ba3198a 	.word	0x3ba3198a
 80063f8:	252049c1 	.word	0x252049c1
 80063fc:	397b839a 	.word	0x397b839a
 8006400:	3fe921fb 	.word	0x3fe921fb
 8006404:	4002d97b 	.word	0x4002d97b
 8006408:	3ff921fb 	.word	0x3ff921fb
 800640c:	413921fb 	.word	0x413921fb
 8006410:	3fe00000 	.word	0x3fe00000
 8006414:	08007794 	.word	0x08007794
 8006418:	7fefffff 	.word	0x7fefffff
 800641c:	ea4f 552a 	mov.w	r5, sl, asr #20
 8006420:	f2a5 4516 	subw	r5, r5, #1046	; 0x416
 8006424:	ebaa 5105 	sub.w	r1, sl, r5, lsl #20
 8006428:	460f      	mov	r7, r1
 800642a:	4606      	mov	r6, r0
 800642c:	f7fa fb14 	bl	8000a58 <__aeabi_d2iz>
 8006430:	f7f9 fff8 	bl	8000424 <__aeabi_i2d>
 8006434:	4602      	mov	r2, r0
 8006436:	460b      	mov	r3, r1
 8006438:	4630      	mov	r0, r6
 800643a:	4639      	mov	r1, r7
 800643c:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8006440:	f7f9 fea2 	bl	8000188 <__aeabi_dsub>
 8006444:	2200      	movs	r2, #0
 8006446:	4b20      	ldr	r3, [pc, #128]	; (80064c8 <__ieee754_rem_pio2+0x3d8>)
 8006448:	f7fa f856 	bl	80004f8 <__aeabi_dmul>
 800644c:	460f      	mov	r7, r1
 800644e:	4606      	mov	r6, r0
 8006450:	f7fa fb02 	bl	8000a58 <__aeabi_d2iz>
 8006454:	f7f9 ffe6 	bl	8000424 <__aeabi_i2d>
 8006458:	4602      	mov	r2, r0
 800645a:	460b      	mov	r3, r1
 800645c:	4630      	mov	r0, r6
 800645e:	4639      	mov	r1, r7
 8006460:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8006464:	f7f9 fe90 	bl	8000188 <__aeabi_dsub>
 8006468:	2200      	movs	r2, #0
 800646a:	4b17      	ldr	r3, [pc, #92]	; (80064c8 <__ieee754_rem_pio2+0x3d8>)
 800646c:	f7fa f844 	bl	80004f8 <__aeabi_dmul>
 8006470:	f04f 0803 	mov.w	r8, #3
 8006474:	2600      	movs	r6, #0
 8006476:	2700      	movs	r7, #0
 8006478:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 800647c:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 8006480:	4632      	mov	r2, r6
 8006482:	e979 0102 	ldrd	r0, r1, [r9, #-8]!
 8006486:	463b      	mov	r3, r7
 8006488:	f108 3aff 	add.w	sl, r8, #4294967295
 800648c:	f7fa fa9c 	bl	80009c8 <__aeabi_dcmpeq>
 8006490:	b9b8      	cbnz	r0, 80064c2 <__ieee754_rem_pio2+0x3d2>
 8006492:	4b0e      	ldr	r3, [pc, #56]	; (80064cc <__ieee754_rem_pio2+0x3dc>)
 8006494:	462a      	mov	r2, r5
 8006496:	9301      	str	r3, [sp, #4]
 8006498:	2302      	movs	r3, #2
 800649a:	4621      	mov	r1, r4
 800649c:	9300      	str	r3, [sp, #0]
 800649e:	a806      	add	r0, sp, #24
 80064a0:	4643      	mov	r3, r8
 80064a2:	f000 f97f 	bl	80067a4 <__kernel_rem_pio2>
 80064a6:	f1bb 0f00 	cmp.w	fp, #0
 80064aa:	4605      	mov	r5, r0
 80064ac:	f6bf ae56 	bge.w	800615c <__ieee754_rem_pio2+0x6c>
 80064b0:	6863      	ldr	r3, [r4, #4]
 80064b2:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80064b6:	6063      	str	r3, [r4, #4]
 80064b8:	68e3      	ldr	r3, [r4, #12]
 80064ba:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80064be:	60e3      	str	r3, [r4, #12]
 80064c0:	e708      	b.n	80062d4 <__ieee754_rem_pio2+0x1e4>
 80064c2:	46d0      	mov	r8, sl
 80064c4:	e7dc      	b.n	8006480 <__ieee754_rem_pio2+0x390>
 80064c6:	bf00      	nop
 80064c8:	41700000 	.word	0x41700000
 80064cc:	08007814 	.word	0x08007814

080064d0 <__ieee754_sqrt>:
 80064d0:	4b54      	ldr	r3, [pc, #336]	; (8006624 <__ieee754_sqrt+0x154>)
 80064d2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80064d6:	438b      	bics	r3, r1
 80064d8:	4606      	mov	r6, r0
 80064da:	460d      	mov	r5, r1
 80064dc:	460a      	mov	r2, r1
 80064de:	460c      	mov	r4, r1
 80064e0:	d10f      	bne.n	8006502 <__ieee754_sqrt+0x32>
 80064e2:	4602      	mov	r2, r0
 80064e4:	460b      	mov	r3, r1
 80064e6:	f7fa f807 	bl	80004f8 <__aeabi_dmul>
 80064ea:	4602      	mov	r2, r0
 80064ec:	460b      	mov	r3, r1
 80064ee:	4630      	mov	r0, r6
 80064f0:	4629      	mov	r1, r5
 80064f2:	f7f9 fe4b 	bl	800018c <__adddf3>
 80064f6:	4606      	mov	r6, r0
 80064f8:	460d      	mov	r5, r1
 80064fa:	4630      	mov	r0, r6
 80064fc:	4629      	mov	r1, r5
 80064fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006502:	2900      	cmp	r1, #0
 8006504:	4607      	mov	r7, r0
 8006506:	4603      	mov	r3, r0
 8006508:	dc0e      	bgt.n	8006528 <__ieee754_sqrt+0x58>
 800650a:	f021 4c00 	bic.w	ip, r1, #2147483648	; 0x80000000
 800650e:	ea5c 0707 	orrs.w	r7, ip, r7
 8006512:	d0f2      	beq.n	80064fa <__ieee754_sqrt+0x2a>
 8006514:	b141      	cbz	r1, 8006528 <__ieee754_sqrt+0x58>
 8006516:	4602      	mov	r2, r0
 8006518:	460b      	mov	r3, r1
 800651a:	f7f9 fe35 	bl	8000188 <__aeabi_dsub>
 800651e:	4602      	mov	r2, r0
 8006520:	460b      	mov	r3, r1
 8006522:	f7fa f913 	bl	800074c <__aeabi_ddiv>
 8006526:	e7e6      	b.n	80064f6 <__ieee754_sqrt+0x26>
 8006528:	1512      	asrs	r2, r2, #20
 800652a:	d074      	beq.n	8006616 <__ieee754_sqrt+0x146>
 800652c:	f2a2 32ff 	subw	r2, r2, #1023	; 0x3ff
 8006530:	07d5      	lsls	r5, r2, #31
 8006532:	f04f 0500 	mov.w	r5, #0
 8006536:	f3c4 0413 	ubfx	r4, r4, #0, #20
 800653a:	bf48      	it	mi
 800653c:	0fd9      	lsrmi	r1, r3, #31
 800653e:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
 8006542:	bf44      	itt	mi
 8006544:	005b      	lslmi	r3, r3, #1
 8006546:	eb01 0444 	addmi.w	r4, r1, r4, lsl #1
 800654a:	1051      	asrs	r1, r2, #1
 800654c:	0fda      	lsrs	r2, r3, #31
 800654e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8006552:	4628      	mov	r0, r5
 8006554:	2216      	movs	r2, #22
 8006556:	f44f 1600 	mov.w	r6, #2097152	; 0x200000
 800655a:	005b      	lsls	r3, r3, #1
 800655c:	1987      	adds	r7, r0, r6
 800655e:	42a7      	cmp	r7, r4
 8006560:	bfde      	ittt	le
 8006562:	19b8      	addle	r0, r7, r6
 8006564:	1be4      	suble	r4, r4, r7
 8006566:	19ad      	addle	r5, r5, r6
 8006568:	0fdf      	lsrs	r7, r3, #31
 800656a:	3a01      	subs	r2, #1
 800656c:	eb07 0444 	add.w	r4, r7, r4, lsl #1
 8006570:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8006574:	ea4f 0656 	mov.w	r6, r6, lsr #1
 8006578:	d1f0      	bne.n	800655c <__ieee754_sqrt+0x8c>
 800657a:	f04f 0c20 	mov.w	ip, #32
 800657e:	4696      	mov	lr, r2
 8006580:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 8006584:	4284      	cmp	r4, r0
 8006586:	eb06 070e 	add.w	r7, r6, lr
 800658a:	dc02      	bgt.n	8006592 <__ieee754_sqrt+0xc2>
 800658c:	d112      	bne.n	80065b4 <__ieee754_sqrt+0xe4>
 800658e:	429f      	cmp	r7, r3
 8006590:	d810      	bhi.n	80065b4 <__ieee754_sqrt+0xe4>
 8006592:	2f00      	cmp	r7, #0
 8006594:	eb07 0e06 	add.w	lr, r7, r6
 8006598:	da42      	bge.n	8006620 <__ieee754_sqrt+0x150>
 800659a:	f1be 0f00 	cmp.w	lr, #0
 800659e:	db3f      	blt.n	8006620 <__ieee754_sqrt+0x150>
 80065a0:	f100 0801 	add.w	r8, r0, #1
 80065a4:	1a24      	subs	r4, r4, r0
 80065a6:	4640      	mov	r0, r8
 80065a8:	429f      	cmp	r7, r3
 80065aa:	bf88      	it	hi
 80065ac:	f104 34ff 	addhi.w	r4, r4, #4294967295
 80065b0:	1bdb      	subs	r3, r3, r7
 80065b2:	4432      	add	r2, r6
 80065b4:	0064      	lsls	r4, r4, #1
 80065b6:	f1bc 0c01 	subs.w	ip, ip, #1
 80065ba:	eb04 74d3 	add.w	r4, r4, r3, lsr #31
 80065be:	ea4f 0656 	mov.w	r6, r6, lsr #1
 80065c2:	ea4f 0343 	mov.w	r3, r3, lsl #1
 80065c6:	d1dd      	bne.n	8006584 <__ieee754_sqrt+0xb4>
 80065c8:	4323      	orrs	r3, r4
 80065ca:	d006      	beq.n	80065da <__ieee754_sqrt+0x10a>
 80065cc:	1c54      	adds	r4, r2, #1
 80065ce:	bf0b      	itete	eq
 80065d0:	4662      	moveq	r2, ip
 80065d2:	3201      	addne	r2, #1
 80065d4:	3501      	addeq	r5, #1
 80065d6:	f022 0201 	bicne.w	r2, r2, #1
 80065da:	106b      	asrs	r3, r5, #1
 80065dc:	0852      	lsrs	r2, r2, #1
 80065de:	07e8      	lsls	r0, r5, #31
 80065e0:	f103 537f 	add.w	r3, r3, #1069547520	; 0x3fc00000
 80065e4:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
 80065e8:	bf48      	it	mi
 80065ea:	f042 4200 	orrmi.w	r2, r2, #2147483648	; 0x80000000
 80065ee:	eb03 5501 	add.w	r5, r3, r1, lsl #20
 80065f2:	4616      	mov	r6, r2
 80065f4:	e781      	b.n	80064fa <__ieee754_sqrt+0x2a>
 80065f6:	0adc      	lsrs	r4, r3, #11
 80065f8:	3915      	subs	r1, #21
 80065fa:	055b      	lsls	r3, r3, #21
 80065fc:	2c00      	cmp	r4, #0
 80065fe:	d0fa      	beq.n	80065f6 <__ieee754_sqrt+0x126>
 8006600:	02e6      	lsls	r6, r4, #11
 8006602:	d50a      	bpl.n	800661a <__ieee754_sqrt+0x14a>
 8006604:	f1c2 0020 	rsb	r0, r2, #32
 8006608:	fa23 f000 	lsr.w	r0, r3, r0
 800660c:	1e55      	subs	r5, r2, #1
 800660e:	4093      	lsls	r3, r2
 8006610:	4304      	orrs	r4, r0
 8006612:	1b4a      	subs	r2, r1, r5
 8006614:	e78a      	b.n	800652c <__ieee754_sqrt+0x5c>
 8006616:	4611      	mov	r1, r2
 8006618:	e7f0      	b.n	80065fc <__ieee754_sqrt+0x12c>
 800661a:	0064      	lsls	r4, r4, #1
 800661c:	3201      	adds	r2, #1
 800661e:	e7ef      	b.n	8006600 <__ieee754_sqrt+0x130>
 8006620:	4680      	mov	r8, r0
 8006622:	e7bf      	b.n	80065a4 <__ieee754_sqrt+0xd4>
 8006624:	7ff00000 	.word	0x7ff00000

08006628 <__kernel_cos>:
 8006628:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800662c:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
 8006630:	f1b6 5f79 	cmp.w	r6, #1044381696	; 0x3e400000
 8006634:	4680      	mov	r8, r0
 8006636:	460f      	mov	r7, r1
 8006638:	e9cd 2300 	strd	r2, r3, [sp]
 800663c:	da04      	bge.n	8006648 <__kernel_cos+0x20>
 800663e:	f7fa fa0b 	bl	8000a58 <__aeabi_d2iz>
 8006642:	2800      	cmp	r0, #0
 8006644:	f000 8086 	beq.w	8006754 <__kernel_cos+0x12c>
 8006648:	4642      	mov	r2, r8
 800664a:	463b      	mov	r3, r7
 800664c:	4640      	mov	r0, r8
 800664e:	4639      	mov	r1, r7
 8006650:	f7f9 ff52 	bl	80004f8 <__aeabi_dmul>
 8006654:	2200      	movs	r2, #0
 8006656:	4b4e      	ldr	r3, [pc, #312]	; (8006790 <__kernel_cos+0x168>)
 8006658:	4604      	mov	r4, r0
 800665a:	460d      	mov	r5, r1
 800665c:	f7f9 ff4c 	bl	80004f8 <__aeabi_dmul>
 8006660:	a33f      	add	r3, pc, #252	; (adr r3, 8006760 <__kernel_cos+0x138>)
 8006662:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006666:	4682      	mov	sl, r0
 8006668:	468b      	mov	fp, r1
 800666a:	4620      	mov	r0, r4
 800666c:	4629      	mov	r1, r5
 800666e:	f7f9 ff43 	bl	80004f8 <__aeabi_dmul>
 8006672:	a33d      	add	r3, pc, #244	; (adr r3, 8006768 <__kernel_cos+0x140>)
 8006674:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006678:	f7f9 fd88 	bl	800018c <__adddf3>
 800667c:	4622      	mov	r2, r4
 800667e:	462b      	mov	r3, r5
 8006680:	f7f9 ff3a 	bl	80004f8 <__aeabi_dmul>
 8006684:	a33a      	add	r3, pc, #232	; (adr r3, 8006770 <__kernel_cos+0x148>)
 8006686:	e9d3 2300 	ldrd	r2, r3, [r3]
 800668a:	f7f9 fd7d 	bl	8000188 <__aeabi_dsub>
 800668e:	4622      	mov	r2, r4
 8006690:	462b      	mov	r3, r5
 8006692:	f7f9 ff31 	bl	80004f8 <__aeabi_dmul>
 8006696:	a338      	add	r3, pc, #224	; (adr r3, 8006778 <__kernel_cos+0x150>)
 8006698:	e9d3 2300 	ldrd	r2, r3, [r3]
 800669c:	f7f9 fd76 	bl	800018c <__adddf3>
 80066a0:	4622      	mov	r2, r4
 80066a2:	462b      	mov	r3, r5
 80066a4:	f7f9 ff28 	bl	80004f8 <__aeabi_dmul>
 80066a8:	a335      	add	r3, pc, #212	; (adr r3, 8006780 <__kernel_cos+0x158>)
 80066aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80066ae:	f7f9 fd6b 	bl	8000188 <__aeabi_dsub>
 80066b2:	4622      	mov	r2, r4
 80066b4:	462b      	mov	r3, r5
 80066b6:	f7f9 ff1f 	bl	80004f8 <__aeabi_dmul>
 80066ba:	a333      	add	r3, pc, #204	; (adr r3, 8006788 <__kernel_cos+0x160>)
 80066bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80066c0:	f7f9 fd64 	bl	800018c <__adddf3>
 80066c4:	4622      	mov	r2, r4
 80066c6:	462b      	mov	r3, r5
 80066c8:	f7f9 ff16 	bl	80004f8 <__aeabi_dmul>
 80066cc:	4622      	mov	r2, r4
 80066ce:	462b      	mov	r3, r5
 80066d0:	f7f9 ff12 	bl	80004f8 <__aeabi_dmul>
 80066d4:	e9dd 2300 	ldrd	r2, r3, [sp]
 80066d8:	4604      	mov	r4, r0
 80066da:	460d      	mov	r5, r1
 80066dc:	4640      	mov	r0, r8
 80066de:	4639      	mov	r1, r7
 80066e0:	f7f9 ff0a 	bl	80004f8 <__aeabi_dmul>
 80066e4:	460b      	mov	r3, r1
 80066e6:	4602      	mov	r2, r0
 80066e8:	4629      	mov	r1, r5
 80066ea:	4620      	mov	r0, r4
 80066ec:	f7f9 fd4c 	bl	8000188 <__aeabi_dsub>
 80066f0:	4b28      	ldr	r3, [pc, #160]	; (8006794 <__kernel_cos+0x16c>)
 80066f2:	4680      	mov	r8, r0
 80066f4:	429e      	cmp	r6, r3
 80066f6:	4689      	mov	r9, r1
 80066f8:	dc0e      	bgt.n	8006718 <__kernel_cos+0xf0>
 80066fa:	4602      	mov	r2, r0
 80066fc:	460b      	mov	r3, r1
 80066fe:	4650      	mov	r0, sl
 8006700:	4659      	mov	r1, fp
 8006702:	f7f9 fd41 	bl	8000188 <__aeabi_dsub>
 8006706:	4602      	mov	r2, r0
 8006708:	2000      	movs	r0, #0
 800670a:	460b      	mov	r3, r1
 800670c:	4922      	ldr	r1, [pc, #136]	; (8006798 <__kernel_cos+0x170>)
 800670e:	f7f9 fd3b 	bl	8000188 <__aeabi_dsub>
 8006712:	b003      	add	sp, #12
 8006714:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006718:	2400      	movs	r4, #0
 800671a:	4b20      	ldr	r3, [pc, #128]	; (800679c <__kernel_cos+0x174>)
 800671c:	4622      	mov	r2, r4
 800671e:	429e      	cmp	r6, r3
 8006720:	bfcc      	ite	gt
 8006722:	4d1f      	ldrgt	r5, [pc, #124]	; (80067a0 <__kernel_cos+0x178>)
 8006724:	f5a6 1500 	suble.w	r5, r6, #2097152	; 0x200000
 8006728:	462b      	mov	r3, r5
 800672a:	2000      	movs	r0, #0
 800672c:	491a      	ldr	r1, [pc, #104]	; (8006798 <__kernel_cos+0x170>)
 800672e:	f7f9 fd2b 	bl	8000188 <__aeabi_dsub>
 8006732:	4622      	mov	r2, r4
 8006734:	4606      	mov	r6, r0
 8006736:	460f      	mov	r7, r1
 8006738:	462b      	mov	r3, r5
 800673a:	4650      	mov	r0, sl
 800673c:	4659      	mov	r1, fp
 800673e:	f7f9 fd23 	bl	8000188 <__aeabi_dsub>
 8006742:	4642      	mov	r2, r8
 8006744:	464b      	mov	r3, r9
 8006746:	f7f9 fd1f 	bl	8000188 <__aeabi_dsub>
 800674a:	4602      	mov	r2, r0
 800674c:	460b      	mov	r3, r1
 800674e:	4630      	mov	r0, r6
 8006750:	4639      	mov	r1, r7
 8006752:	e7dc      	b.n	800670e <__kernel_cos+0xe6>
 8006754:	2000      	movs	r0, #0
 8006756:	4910      	ldr	r1, [pc, #64]	; (8006798 <__kernel_cos+0x170>)
 8006758:	e7db      	b.n	8006712 <__kernel_cos+0xea>
 800675a:	bf00      	nop
 800675c:	f3af 8000 	nop.w
 8006760:	be8838d4 	.word	0xbe8838d4
 8006764:	bda8fae9 	.word	0xbda8fae9
 8006768:	bdb4b1c4 	.word	0xbdb4b1c4
 800676c:	3e21ee9e 	.word	0x3e21ee9e
 8006770:	809c52ad 	.word	0x809c52ad
 8006774:	3e927e4f 	.word	0x3e927e4f
 8006778:	19cb1590 	.word	0x19cb1590
 800677c:	3efa01a0 	.word	0x3efa01a0
 8006780:	16c15177 	.word	0x16c15177
 8006784:	3f56c16c 	.word	0x3f56c16c
 8006788:	5555554c 	.word	0x5555554c
 800678c:	3fa55555 	.word	0x3fa55555
 8006790:	3fe00000 	.word	0x3fe00000
 8006794:	3fd33332 	.word	0x3fd33332
 8006798:	3ff00000 	.word	0x3ff00000
 800679c:	3fe90000 	.word	0x3fe90000
 80067a0:	3fd20000 	.word	0x3fd20000

080067a4 <__kernel_rem_pio2>:
 80067a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80067a8:	f5ad 7d19 	sub.w	sp, sp, #612	; 0x264
 80067ac:	9307      	str	r3, [sp, #28]
 80067ae:	9104      	str	r1, [sp, #16]
 80067b0:	4bbf      	ldr	r3, [pc, #764]	; (8006ab0 <__kernel_rem_pio2+0x30c>)
 80067b2:	99a2      	ldr	r1, [sp, #648]	; 0x288
 80067b4:	1ed4      	subs	r4, r2, #3
 80067b6:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80067ba:	2500      	movs	r5, #0
 80067bc:	9302      	str	r3, [sp, #8]
 80067be:	9b07      	ldr	r3, [sp, #28]
 80067c0:	9008      	str	r0, [sp, #32]
 80067c2:	3b01      	subs	r3, #1
 80067c4:	9306      	str	r3, [sp, #24]
 80067c6:	2318      	movs	r3, #24
 80067c8:	fb94 f4f3 	sdiv	r4, r4, r3
 80067cc:	f06f 0317 	mvn.w	r3, #23
 80067d0:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
 80067d4:	fb04 3303 	mla	r3, r4, r3, r3
 80067d8:	eb03 0a02 	add.w	sl, r3, r2
 80067dc:	9a06      	ldr	r2, [sp, #24]
 80067de:	9b02      	ldr	r3, [sp, #8]
 80067e0:	1aa7      	subs	r7, r4, r2
 80067e2:	eb03 0802 	add.w	r8, r3, r2
 80067e6:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
 80067e8:	2200      	movs	r2, #0
 80067ea:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 80067ee:	2300      	movs	r3, #0
 80067f0:	ae1e      	add	r6, sp, #120	; 0x78
 80067f2:	4545      	cmp	r5, r8
 80067f4:	dd14      	ble.n	8006820 <__kernel_rem_pio2+0x7c>
 80067f6:	2600      	movs	r6, #0
 80067f8:	f50d 7bdc 	add.w	fp, sp, #440	; 0x1b8
 80067fc:	9b02      	ldr	r3, [sp, #8]
 80067fe:	429e      	cmp	r6, r3
 8006800:	dc39      	bgt.n	8006876 <__kernel_rem_pio2+0xd2>
 8006802:	9b08      	ldr	r3, [sp, #32]
 8006804:	f04f 0800 	mov.w	r8, #0
 8006808:	3b08      	subs	r3, #8
 800680a:	9300      	str	r3, [sp, #0]
 800680c:	9b07      	ldr	r3, [sp, #28]
 800680e:	f04f 0900 	mov.w	r9, #0
 8006812:	199d      	adds	r5, r3, r6
 8006814:	ab20      	add	r3, sp, #128	; 0x80
 8006816:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800681a:	9305      	str	r3, [sp, #20]
 800681c:	2700      	movs	r7, #0
 800681e:	e023      	b.n	8006868 <__kernel_rem_pio2+0xc4>
 8006820:	42ef      	cmn	r7, r5
 8006822:	d40b      	bmi.n	800683c <__kernel_rem_pio2+0x98>
 8006824:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 8006828:	e9cd 2300 	strd	r2, r3, [sp]
 800682c:	f7f9 fdfa 	bl	8000424 <__aeabi_i2d>
 8006830:	e9dd 2300 	ldrd	r2, r3, [sp]
 8006834:	e9e6 0102 	strd	r0, r1, [r6, #8]!
 8006838:	3501      	adds	r5, #1
 800683a:	e7da      	b.n	80067f2 <__kernel_rem_pio2+0x4e>
 800683c:	4610      	mov	r0, r2
 800683e:	4619      	mov	r1, r3
 8006840:	e7f8      	b.n	8006834 <__kernel_rem_pio2+0x90>
 8006842:	9905      	ldr	r1, [sp, #20]
 8006844:	9d00      	ldr	r5, [sp, #0]
 8006846:	e971 2302 	ldrd	r2, r3, [r1, #-8]!
 800684a:	9105      	str	r1, [sp, #20]
 800684c:	e9f5 0102 	ldrd	r0, r1, [r5, #8]!
 8006850:	9500      	str	r5, [sp, #0]
 8006852:	f7f9 fe51 	bl	80004f8 <__aeabi_dmul>
 8006856:	4602      	mov	r2, r0
 8006858:	460b      	mov	r3, r1
 800685a:	4640      	mov	r0, r8
 800685c:	4649      	mov	r1, r9
 800685e:	f7f9 fc95 	bl	800018c <__adddf3>
 8006862:	4680      	mov	r8, r0
 8006864:	4689      	mov	r9, r1
 8006866:	3701      	adds	r7, #1
 8006868:	9b06      	ldr	r3, [sp, #24]
 800686a:	429f      	cmp	r7, r3
 800686c:	dde9      	ble.n	8006842 <__kernel_rem_pio2+0x9e>
 800686e:	e9eb 8902 	strd	r8, r9, [fp, #8]!
 8006872:	3601      	adds	r6, #1
 8006874:	e7c2      	b.n	80067fc <__kernel_rem_pio2+0x58>
 8006876:	9b02      	ldr	r3, [sp, #8]
 8006878:	aa0c      	add	r2, sp, #48	; 0x30
 800687a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800687e:	930b      	str	r3, [sp, #44]	; 0x2c
 8006880:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
 8006882:	9f02      	ldr	r7, [sp, #8]
 8006884:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8006888:	930a      	str	r3, [sp, #40]	; 0x28
 800688a:	2600      	movs	r6, #0
 800688c:	ab98      	add	r3, sp, #608	; 0x260
 800688e:	f107 5b00 	add.w	fp, r7, #536870912	; 0x20000000
 8006892:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8006896:	f10b 3bff 	add.w	fp, fp, #4294967295
 800689a:	e953 8928 	ldrd	r8, r9, [r3, #-160]	; 0xa0
 800689e:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80068a2:	ab98      	add	r3, sp, #608	; 0x260
 80068a4:	445b      	add	r3, fp
 80068a6:	f1a3 0498 	sub.w	r4, r3, #152	; 0x98
 80068aa:	1bbb      	subs	r3, r7, r6
 80068ac:	2b00      	cmp	r3, #0
 80068ae:	dc71      	bgt.n	8006994 <__kernel_rem_pio2+0x1f0>
 80068b0:	4652      	mov	r2, sl
 80068b2:	4640      	mov	r0, r8
 80068b4:	4649      	mov	r1, r9
 80068b6:	f000 fd8f 	bl	80073d8 <scalbn>
 80068ba:	2200      	movs	r2, #0
 80068bc:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 80068c0:	4604      	mov	r4, r0
 80068c2:	460d      	mov	r5, r1
 80068c4:	f7f9 fe18 	bl	80004f8 <__aeabi_dmul>
 80068c8:	f000 fcfe 	bl	80072c8 <floor>
 80068cc:	2200      	movs	r2, #0
 80068ce:	4b79      	ldr	r3, [pc, #484]	; (8006ab4 <__kernel_rem_pio2+0x310>)
 80068d0:	f7f9 fe12 	bl	80004f8 <__aeabi_dmul>
 80068d4:	4602      	mov	r2, r0
 80068d6:	460b      	mov	r3, r1
 80068d8:	4620      	mov	r0, r4
 80068da:	4629      	mov	r1, r5
 80068dc:	f7f9 fc54 	bl	8000188 <__aeabi_dsub>
 80068e0:	460d      	mov	r5, r1
 80068e2:	4604      	mov	r4, r0
 80068e4:	f7fa f8b8 	bl	8000a58 <__aeabi_d2iz>
 80068e8:	9005      	str	r0, [sp, #20]
 80068ea:	f7f9 fd9b 	bl	8000424 <__aeabi_i2d>
 80068ee:	4602      	mov	r2, r0
 80068f0:	460b      	mov	r3, r1
 80068f2:	4620      	mov	r0, r4
 80068f4:	4629      	mov	r1, r5
 80068f6:	f7f9 fc47 	bl	8000188 <__aeabi_dsub>
 80068fa:	f1ba 0f00 	cmp.w	sl, #0
 80068fe:	4680      	mov	r8, r0
 8006900:	4689      	mov	r9, r1
 8006902:	dd6c      	ble.n	80069de <__kernel_rem_pio2+0x23a>
 8006904:	1e7a      	subs	r2, r7, #1
 8006906:	ab0c      	add	r3, sp, #48	; 0x30
 8006908:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800690c:	f1ca 0118 	rsb	r1, sl, #24
 8006910:	9c05      	ldr	r4, [sp, #20]
 8006912:	fa40 f301 	asr.w	r3, r0, r1
 8006916:	441c      	add	r4, r3
 8006918:	408b      	lsls	r3, r1
 800691a:	1ac0      	subs	r0, r0, r3
 800691c:	ab0c      	add	r3, sp, #48	; 0x30
 800691e:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
 8006922:	f1ca 0317 	rsb	r3, sl, #23
 8006926:	9405      	str	r4, [sp, #20]
 8006928:	fa40 f303 	asr.w	r3, r0, r3
 800692c:	9300      	str	r3, [sp, #0]
 800692e:	9b00      	ldr	r3, [sp, #0]
 8006930:	2b00      	cmp	r3, #0
 8006932:	dd62      	ble.n	80069fa <__kernel_rem_pio2+0x256>
 8006934:	2200      	movs	r2, #0
 8006936:	f06f 417f 	mvn.w	r1, #4278190080	; 0xff000000
 800693a:	4614      	mov	r4, r2
 800693c:	9b05      	ldr	r3, [sp, #20]
 800693e:	3301      	adds	r3, #1
 8006940:	9305      	str	r3, [sp, #20]
 8006942:	4297      	cmp	r7, r2
 8006944:	f300 809f 	bgt.w	8006a86 <__kernel_rem_pio2+0x2e2>
 8006948:	f1ba 0f00 	cmp.w	sl, #0
 800694c:	dd07      	ble.n	800695e <__kernel_rem_pio2+0x1ba>
 800694e:	f1ba 0f01 	cmp.w	sl, #1
 8006952:	f000 80bb 	beq.w	8006acc <__kernel_rem_pio2+0x328>
 8006956:	f1ba 0f02 	cmp.w	sl, #2
 800695a:	f000 80c1 	beq.w	8006ae0 <__kernel_rem_pio2+0x33c>
 800695e:	9b00      	ldr	r3, [sp, #0]
 8006960:	2b02      	cmp	r3, #2
 8006962:	d14a      	bne.n	80069fa <__kernel_rem_pio2+0x256>
 8006964:	4642      	mov	r2, r8
 8006966:	464b      	mov	r3, r9
 8006968:	2000      	movs	r0, #0
 800696a:	4953      	ldr	r1, [pc, #332]	; (8006ab8 <__kernel_rem_pio2+0x314>)
 800696c:	f7f9 fc0c 	bl	8000188 <__aeabi_dsub>
 8006970:	4680      	mov	r8, r0
 8006972:	4689      	mov	r9, r1
 8006974:	2c00      	cmp	r4, #0
 8006976:	d040      	beq.n	80069fa <__kernel_rem_pio2+0x256>
 8006978:	4652      	mov	r2, sl
 800697a:	2000      	movs	r0, #0
 800697c:	494e      	ldr	r1, [pc, #312]	; (8006ab8 <__kernel_rem_pio2+0x314>)
 800697e:	f000 fd2b 	bl	80073d8 <scalbn>
 8006982:	4602      	mov	r2, r0
 8006984:	460b      	mov	r3, r1
 8006986:	4640      	mov	r0, r8
 8006988:	4649      	mov	r1, r9
 800698a:	f7f9 fbfd 	bl	8000188 <__aeabi_dsub>
 800698e:	4680      	mov	r8, r0
 8006990:	4689      	mov	r9, r1
 8006992:	e032      	b.n	80069fa <__kernel_rem_pio2+0x256>
 8006994:	2200      	movs	r2, #0
 8006996:	4b49      	ldr	r3, [pc, #292]	; (8006abc <__kernel_rem_pio2+0x318>)
 8006998:	4640      	mov	r0, r8
 800699a:	4649      	mov	r1, r9
 800699c:	f7f9 fdac 	bl	80004f8 <__aeabi_dmul>
 80069a0:	f7fa f85a 	bl	8000a58 <__aeabi_d2iz>
 80069a4:	f7f9 fd3e 	bl	8000424 <__aeabi_i2d>
 80069a8:	2200      	movs	r2, #0
 80069aa:	4b45      	ldr	r3, [pc, #276]	; (8006ac0 <__kernel_rem_pio2+0x31c>)
 80069ac:	e9cd 0100 	strd	r0, r1, [sp]
 80069b0:	f7f9 fda2 	bl	80004f8 <__aeabi_dmul>
 80069b4:	4602      	mov	r2, r0
 80069b6:	460b      	mov	r3, r1
 80069b8:	4640      	mov	r0, r8
 80069ba:	4649      	mov	r1, r9
 80069bc:	f7f9 fbe4 	bl	8000188 <__aeabi_dsub>
 80069c0:	f7fa f84a 	bl	8000a58 <__aeabi_d2iz>
 80069c4:	ab0c      	add	r3, sp, #48	; 0x30
 80069c6:	f843 0026 	str.w	r0, [r3, r6, lsl #2]
 80069ca:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 80069ce:	e9dd 0100 	ldrd	r0, r1, [sp]
 80069d2:	f7f9 fbdb 	bl	800018c <__adddf3>
 80069d6:	3601      	adds	r6, #1
 80069d8:	4680      	mov	r8, r0
 80069da:	4689      	mov	r9, r1
 80069dc:	e765      	b.n	80068aa <__kernel_rem_pio2+0x106>
 80069de:	d105      	bne.n	80069ec <__kernel_rem_pio2+0x248>
 80069e0:	1e7b      	subs	r3, r7, #1
 80069e2:	aa0c      	add	r2, sp, #48	; 0x30
 80069e4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80069e8:	15c3      	asrs	r3, r0, #23
 80069ea:	e79f      	b.n	800692c <__kernel_rem_pio2+0x188>
 80069ec:	2200      	movs	r2, #0
 80069ee:	4b35      	ldr	r3, [pc, #212]	; (8006ac4 <__kernel_rem_pio2+0x320>)
 80069f0:	f7fa f808 	bl	8000a04 <__aeabi_dcmpge>
 80069f4:	2800      	cmp	r0, #0
 80069f6:	d143      	bne.n	8006a80 <__kernel_rem_pio2+0x2dc>
 80069f8:	9000      	str	r0, [sp, #0]
 80069fa:	2200      	movs	r2, #0
 80069fc:	2300      	movs	r3, #0
 80069fe:	4640      	mov	r0, r8
 8006a00:	4649      	mov	r1, r9
 8006a02:	f7f9 ffe1 	bl	80009c8 <__aeabi_dcmpeq>
 8006a06:	2800      	cmp	r0, #0
 8006a08:	f000 80c3 	beq.w	8006b92 <__kernel_rem_pio2+0x3ee>
 8006a0c:	1e7c      	subs	r4, r7, #1
 8006a0e:	4623      	mov	r3, r4
 8006a10:	2200      	movs	r2, #0
 8006a12:	9902      	ldr	r1, [sp, #8]
 8006a14:	428b      	cmp	r3, r1
 8006a16:	da6a      	bge.n	8006aee <__kernel_rem_pio2+0x34a>
 8006a18:	2a00      	cmp	r2, #0
 8006a1a:	f000 8084 	beq.w	8006b26 <__kernel_rem_pio2+0x382>
 8006a1e:	ab0c      	add	r3, sp, #48	; 0x30
 8006a20:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8006a24:	f1aa 0a18 	sub.w	sl, sl, #24
 8006a28:	2b00      	cmp	r3, #0
 8006a2a:	f000 80b0 	beq.w	8006b8e <__kernel_rem_pio2+0x3ea>
 8006a2e:	4652      	mov	r2, sl
 8006a30:	2000      	movs	r0, #0
 8006a32:	4921      	ldr	r1, [pc, #132]	; (8006ab8 <__kernel_rem_pio2+0x314>)
 8006a34:	f000 fcd0 	bl	80073d8 <scalbn>
 8006a38:	4625      	mov	r5, r4
 8006a3a:	4606      	mov	r6, r0
 8006a3c:	460f      	mov	r7, r1
 8006a3e:	f04f 0a00 	mov.w	sl, #0
 8006a42:	00e3      	lsls	r3, r4, #3
 8006a44:	aa98      	add	r2, sp, #608	; 0x260
 8006a46:	eb02 0803 	add.w	r8, r2, r3
 8006a4a:	f8df b070 	ldr.w	fp, [pc, #112]	; 8006abc <__kernel_rem_pio2+0x318>
 8006a4e:	9306      	str	r3, [sp, #24]
 8006a50:	f1a8 0898 	sub.w	r8, r8, #152	; 0x98
 8006a54:	2d00      	cmp	r5, #0
 8006a56:	f280 80d2 	bge.w	8006bfe <__kernel_rem_pio2+0x45a>
 8006a5a:	2500      	movs	r5, #0
 8006a5c:	9a06      	ldr	r2, [sp, #24]
 8006a5e:	ab98      	add	r3, sp, #608	; 0x260
 8006a60:	189e      	adds	r6, r3, r2
 8006a62:	3ea8      	subs	r6, #168	; 0xa8
 8006a64:	1b63      	subs	r3, r4, r5
 8006a66:	2b00      	cmp	r3, #0
 8006a68:	f2c0 80f9 	blt.w	8006c5e <__kernel_rem_pio2+0x4ba>
 8006a6c:	f8df 9058 	ldr.w	r9, [pc, #88]	; 8006ac8 <__kernel_rem_pio2+0x324>
 8006a70:	eba6 08c5 	sub.w	r8, r6, r5, lsl #3
 8006a74:	f04f 0a00 	mov.w	sl, #0
 8006a78:	f04f 0b00 	mov.w	fp, #0
 8006a7c:	2700      	movs	r7, #0
 8006a7e:	e0e2      	b.n	8006c46 <__kernel_rem_pio2+0x4a2>
 8006a80:	2302      	movs	r3, #2
 8006a82:	9300      	str	r3, [sp, #0]
 8006a84:	e756      	b.n	8006934 <__kernel_rem_pio2+0x190>
 8006a86:	ab0c      	add	r3, sp, #48	; 0x30
 8006a88:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8006a8c:	b94c      	cbnz	r4, 8006aa2 <__kernel_rem_pio2+0x2fe>
 8006a8e:	b12b      	cbz	r3, 8006a9c <__kernel_rem_pio2+0x2f8>
 8006a90:	f1c3 7380 	rsb	r3, r3, #16777216	; 0x1000000
 8006a94:	a80c      	add	r0, sp, #48	; 0x30
 8006a96:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8006a9a:	2301      	movs	r3, #1
 8006a9c:	3201      	adds	r2, #1
 8006a9e:	461c      	mov	r4, r3
 8006aa0:	e74f      	b.n	8006942 <__kernel_rem_pio2+0x19e>
 8006aa2:	1acb      	subs	r3, r1, r3
 8006aa4:	a80c      	add	r0, sp, #48	; 0x30
 8006aa6:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8006aaa:	4623      	mov	r3, r4
 8006aac:	e7f6      	b.n	8006a9c <__kernel_rem_pio2+0x2f8>
 8006aae:	bf00      	nop
 8006ab0:	08007960 	.word	0x08007960
 8006ab4:	40200000 	.word	0x40200000
 8006ab8:	3ff00000 	.word	0x3ff00000
 8006abc:	3e700000 	.word	0x3e700000
 8006ac0:	41700000 	.word	0x41700000
 8006ac4:	3fe00000 	.word	0x3fe00000
 8006ac8:	08007918 	.word	0x08007918
 8006acc:	1e7a      	subs	r2, r7, #1
 8006ace:	ab0c      	add	r3, sp, #48	; 0x30
 8006ad0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8006ad4:	f3c3 0316 	ubfx	r3, r3, #0, #23
 8006ad8:	a90c      	add	r1, sp, #48	; 0x30
 8006ada:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 8006ade:	e73e      	b.n	800695e <__kernel_rem_pio2+0x1ba>
 8006ae0:	1e7a      	subs	r2, r7, #1
 8006ae2:	ab0c      	add	r3, sp, #48	; 0x30
 8006ae4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8006ae8:	f3c3 0315 	ubfx	r3, r3, #0, #22
 8006aec:	e7f4      	b.n	8006ad8 <__kernel_rem_pio2+0x334>
 8006aee:	a90c      	add	r1, sp, #48	; 0x30
 8006af0:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 8006af4:	3b01      	subs	r3, #1
 8006af6:	430a      	orrs	r2, r1
 8006af8:	e78b      	b.n	8006a12 <__kernel_rem_pio2+0x26e>
 8006afa:	3401      	adds	r4, #1
 8006afc:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 8006b00:	2a00      	cmp	r2, #0
 8006b02:	d0fa      	beq.n	8006afa <__kernel_rem_pio2+0x356>
 8006b04:	ab98      	add	r3, sp, #608	; 0x260
 8006b06:	449b      	add	fp, r3
 8006b08:	9b07      	ldr	r3, [sp, #28]
 8006b0a:	1c7e      	adds	r6, r7, #1
 8006b0c:	19dd      	adds	r5, r3, r7
 8006b0e:	ab98      	add	r3, sp, #608	; 0x260
 8006b10:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 8006b14:	f1ab 0b98 	sub.w	fp, fp, #152	; 0x98
 8006b18:	f5a5 75f4 	sub.w	r5, r5, #488	; 0x1e8
 8006b1c:	443c      	add	r4, r7
 8006b1e:	42b4      	cmp	r4, r6
 8006b20:	da04      	bge.n	8006b2c <__kernel_rem_pio2+0x388>
 8006b22:	4627      	mov	r7, r4
 8006b24:	e6b1      	b.n	800688a <__kernel_rem_pio2+0xe6>
 8006b26:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006b28:	2401      	movs	r4, #1
 8006b2a:	e7e7      	b.n	8006afc <__kernel_rem_pio2+0x358>
 8006b2c:	f105 0308 	add.w	r3, r5, #8
 8006b30:	9309      	str	r3, [sp, #36]	; 0x24
 8006b32:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006b34:	2700      	movs	r7, #0
 8006b36:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 8006b3a:	f7f9 fc73 	bl	8000424 <__aeabi_i2d>
 8006b3e:	f04f 0800 	mov.w	r8, #0
 8006b42:	f04f 0900 	mov.w	r9, #0
 8006b46:	9b08      	ldr	r3, [sp, #32]
 8006b48:	e9c5 0102 	strd	r0, r1, [r5, #8]
 8006b4c:	3b08      	subs	r3, #8
 8006b4e:	9300      	str	r3, [sp, #0]
 8006b50:	f105 0310 	add.w	r3, r5, #16
 8006b54:	9305      	str	r3, [sp, #20]
 8006b56:	9b06      	ldr	r3, [sp, #24]
 8006b58:	429f      	cmp	r7, r3
 8006b5a:	dd04      	ble.n	8006b66 <__kernel_rem_pio2+0x3c2>
 8006b5c:	e9eb 8902 	strd	r8, r9, [fp, #8]!
 8006b60:	3601      	adds	r6, #1
 8006b62:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8006b64:	e7db      	b.n	8006b1e <__kernel_rem_pio2+0x37a>
 8006b66:	9905      	ldr	r1, [sp, #20]
 8006b68:	9d00      	ldr	r5, [sp, #0]
 8006b6a:	e971 2302 	ldrd	r2, r3, [r1, #-8]!
 8006b6e:	9105      	str	r1, [sp, #20]
 8006b70:	e9f5 0102 	ldrd	r0, r1, [r5, #8]!
 8006b74:	9500      	str	r5, [sp, #0]
 8006b76:	f7f9 fcbf 	bl	80004f8 <__aeabi_dmul>
 8006b7a:	4602      	mov	r2, r0
 8006b7c:	460b      	mov	r3, r1
 8006b7e:	4640      	mov	r0, r8
 8006b80:	4649      	mov	r1, r9
 8006b82:	f7f9 fb03 	bl	800018c <__adddf3>
 8006b86:	3701      	adds	r7, #1
 8006b88:	4680      	mov	r8, r0
 8006b8a:	4689      	mov	r9, r1
 8006b8c:	e7e3      	b.n	8006b56 <__kernel_rem_pio2+0x3b2>
 8006b8e:	3c01      	subs	r4, #1
 8006b90:	e745      	b.n	8006a1e <__kernel_rem_pio2+0x27a>
 8006b92:	f1ca 0200 	rsb	r2, sl, #0
 8006b96:	4640      	mov	r0, r8
 8006b98:	4649      	mov	r1, r9
 8006b9a:	f000 fc1d 	bl	80073d8 <scalbn>
 8006b9e:	2200      	movs	r2, #0
 8006ba0:	4ba3      	ldr	r3, [pc, #652]	; (8006e30 <__kernel_rem_pio2+0x68c>)
 8006ba2:	4604      	mov	r4, r0
 8006ba4:	460d      	mov	r5, r1
 8006ba6:	f7f9 ff2d 	bl	8000a04 <__aeabi_dcmpge>
 8006baa:	b1f8      	cbz	r0, 8006bec <__kernel_rem_pio2+0x448>
 8006bac:	2200      	movs	r2, #0
 8006bae:	4ba1      	ldr	r3, [pc, #644]	; (8006e34 <__kernel_rem_pio2+0x690>)
 8006bb0:	4620      	mov	r0, r4
 8006bb2:	4629      	mov	r1, r5
 8006bb4:	f7f9 fca0 	bl	80004f8 <__aeabi_dmul>
 8006bb8:	f7f9 ff4e 	bl	8000a58 <__aeabi_d2iz>
 8006bbc:	4606      	mov	r6, r0
 8006bbe:	f7f9 fc31 	bl	8000424 <__aeabi_i2d>
 8006bc2:	2200      	movs	r2, #0
 8006bc4:	4b9a      	ldr	r3, [pc, #616]	; (8006e30 <__kernel_rem_pio2+0x68c>)
 8006bc6:	f7f9 fc97 	bl	80004f8 <__aeabi_dmul>
 8006bca:	460b      	mov	r3, r1
 8006bcc:	4602      	mov	r2, r0
 8006bce:	4629      	mov	r1, r5
 8006bd0:	4620      	mov	r0, r4
 8006bd2:	f7f9 fad9 	bl	8000188 <__aeabi_dsub>
 8006bd6:	f7f9 ff3f 	bl	8000a58 <__aeabi_d2iz>
 8006bda:	1c7c      	adds	r4, r7, #1
 8006bdc:	ab0c      	add	r3, sp, #48	; 0x30
 8006bde:	f843 0027 	str.w	r0, [r3, r7, lsl #2]
 8006be2:	f10a 0a18 	add.w	sl, sl, #24
 8006be6:	f843 6024 	str.w	r6, [r3, r4, lsl #2]
 8006bea:	e720      	b.n	8006a2e <__kernel_rem_pio2+0x28a>
 8006bec:	4620      	mov	r0, r4
 8006bee:	4629      	mov	r1, r5
 8006bf0:	f7f9 ff32 	bl	8000a58 <__aeabi_d2iz>
 8006bf4:	ab0c      	add	r3, sp, #48	; 0x30
 8006bf6:	f843 0027 	str.w	r0, [r3, r7, lsl #2]
 8006bfa:	463c      	mov	r4, r7
 8006bfc:	e717      	b.n	8006a2e <__kernel_rem_pio2+0x28a>
 8006bfe:	ab0c      	add	r3, sp, #48	; 0x30
 8006c00:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8006c04:	f7f9 fc0e 	bl	8000424 <__aeabi_i2d>
 8006c08:	4632      	mov	r2, r6
 8006c0a:	463b      	mov	r3, r7
 8006c0c:	f7f9 fc74 	bl	80004f8 <__aeabi_dmul>
 8006c10:	4652      	mov	r2, sl
 8006c12:	e968 0102 	strd	r0, r1, [r8, #-8]!
 8006c16:	465b      	mov	r3, fp
 8006c18:	4630      	mov	r0, r6
 8006c1a:	4639      	mov	r1, r7
 8006c1c:	f7f9 fc6c 	bl	80004f8 <__aeabi_dmul>
 8006c20:	3d01      	subs	r5, #1
 8006c22:	4606      	mov	r6, r0
 8006c24:	460f      	mov	r7, r1
 8006c26:	e715      	b.n	8006a54 <__kernel_rem_pio2+0x2b0>
 8006c28:	e9f8 2302 	ldrd	r2, r3, [r8, #8]!
 8006c2c:	e9f9 0102 	ldrd	r0, r1, [r9, #8]!
 8006c30:	f7f9 fc62 	bl	80004f8 <__aeabi_dmul>
 8006c34:	4602      	mov	r2, r0
 8006c36:	460b      	mov	r3, r1
 8006c38:	4650      	mov	r0, sl
 8006c3a:	4659      	mov	r1, fp
 8006c3c:	f7f9 faa6 	bl	800018c <__adddf3>
 8006c40:	4682      	mov	sl, r0
 8006c42:	468b      	mov	fp, r1
 8006c44:	3701      	adds	r7, #1
 8006c46:	9b02      	ldr	r3, [sp, #8]
 8006c48:	429f      	cmp	r7, r3
 8006c4a:	dc01      	bgt.n	8006c50 <__kernel_rem_pio2+0x4ac>
 8006c4c:	42bd      	cmp	r5, r7
 8006c4e:	daeb      	bge.n	8006c28 <__kernel_rem_pio2+0x484>
 8006c50:	ab48      	add	r3, sp, #288	; 0x120
 8006c52:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8006c56:	e9c3 ab00 	strd	sl, fp, [r3]
 8006c5a:	3501      	adds	r5, #1
 8006c5c:	e702      	b.n	8006a64 <__kernel_rem_pio2+0x2c0>
 8006c5e:	9ba2      	ldr	r3, [sp, #648]	; 0x288
 8006c60:	2b03      	cmp	r3, #3
 8006c62:	d86c      	bhi.n	8006d3e <__kernel_rem_pio2+0x59a>
 8006c64:	e8df f003 	tbb	[pc, r3]
 8006c68:	022f2f59 	.word	0x022f2f59
 8006c6c:	9a06      	ldr	r2, [sp, #24]
 8006c6e:	ab48      	add	r3, sp, #288	; 0x120
 8006c70:	189d      	adds	r5, r3, r2
 8006c72:	46aa      	mov	sl, r5
 8006c74:	46a3      	mov	fp, r4
 8006c76:	f1bb 0f00 	cmp.w	fp, #0
 8006c7a:	f300 8087 	bgt.w	8006d8c <__kernel_rem_pio2+0x5e8>
 8006c7e:	46a2      	mov	sl, r4
 8006c80:	f1ba 0f01 	cmp.w	sl, #1
 8006c84:	f300 809f 	bgt.w	8006dc6 <__kernel_rem_pio2+0x622>
 8006c88:	2700      	movs	r7, #0
 8006c8a:	463e      	mov	r6, r7
 8006c8c:	9d06      	ldr	r5, [sp, #24]
 8006c8e:	ab48      	add	r3, sp, #288	; 0x120
 8006c90:	3508      	adds	r5, #8
 8006c92:	441d      	add	r5, r3
 8006c94:	2c01      	cmp	r4, #1
 8006c96:	f300 80b3 	bgt.w	8006e00 <__kernel_rem_pio2+0x65c>
 8006c9a:	9b00      	ldr	r3, [sp, #0]
 8006c9c:	9d48      	ldr	r5, [sp, #288]	; 0x120
 8006c9e:	9849      	ldr	r0, [sp, #292]	; 0x124
 8006ca0:	9c4a      	ldr	r4, [sp, #296]	; 0x128
 8006ca2:	994b      	ldr	r1, [sp, #300]	; 0x12c
 8006ca4:	2b00      	cmp	r3, #0
 8006ca6:	f040 80b5 	bne.w	8006e14 <__kernel_rem_pio2+0x670>
 8006caa:	4603      	mov	r3, r0
 8006cac:	462a      	mov	r2, r5
 8006cae:	9804      	ldr	r0, [sp, #16]
 8006cb0:	e9c0 2300 	strd	r2, r3, [r0]
 8006cb4:	4622      	mov	r2, r4
 8006cb6:	460b      	mov	r3, r1
 8006cb8:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8006cbc:	463a      	mov	r2, r7
 8006cbe:	4633      	mov	r3, r6
 8006cc0:	e9c0 2304 	strd	r2, r3, [r0, #16]
 8006cc4:	e03b      	b.n	8006d3e <__kernel_rem_pio2+0x59a>
 8006cc6:	f04f 0c00 	mov.w	ip, #0
 8006cca:	4626      	mov	r6, r4
 8006ccc:	4667      	mov	r7, ip
 8006cce:	9d06      	ldr	r5, [sp, #24]
 8006cd0:	ab48      	add	r3, sp, #288	; 0x120
 8006cd2:	3508      	adds	r5, #8
 8006cd4:	441d      	add	r5, r3
 8006cd6:	2e00      	cmp	r6, #0
 8006cd8:	da42      	bge.n	8006d60 <__kernel_rem_pio2+0x5bc>
 8006cda:	9b00      	ldr	r3, [sp, #0]
 8006cdc:	2b00      	cmp	r3, #0
 8006cde:	d049      	beq.n	8006d74 <__kernel_rem_pio2+0x5d0>
 8006ce0:	f107 4100 	add.w	r1, r7, #2147483648	; 0x80000000
 8006ce4:	4662      	mov	r2, ip
 8006ce6:	460b      	mov	r3, r1
 8006ce8:	9904      	ldr	r1, [sp, #16]
 8006cea:	2601      	movs	r6, #1
 8006cec:	e9c1 2300 	strd	r2, r3, [r1]
 8006cf0:	a948      	add	r1, sp, #288	; 0x120
 8006cf2:	463b      	mov	r3, r7
 8006cf4:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006cf8:	f7f9 fa46 	bl	8000188 <__aeabi_dsub>
 8006cfc:	4684      	mov	ip, r0
 8006cfe:	460f      	mov	r7, r1
 8006d00:	ad48      	add	r5, sp, #288	; 0x120
 8006d02:	42b4      	cmp	r4, r6
 8006d04:	da38      	bge.n	8006d78 <__kernel_rem_pio2+0x5d4>
 8006d06:	9b00      	ldr	r3, [sp, #0]
 8006d08:	b10b      	cbz	r3, 8006d0e <__kernel_rem_pio2+0x56a>
 8006d0a:	f107 4700 	add.w	r7, r7, #2147483648	; 0x80000000
 8006d0e:	4662      	mov	r2, ip
 8006d10:	463b      	mov	r3, r7
 8006d12:	9904      	ldr	r1, [sp, #16]
 8006d14:	e9c1 2302 	strd	r2, r3, [r1, #8]
 8006d18:	e011      	b.n	8006d3e <__kernel_rem_pio2+0x59a>
 8006d1a:	2700      	movs	r7, #0
 8006d1c:	463d      	mov	r5, r7
 8006d1e:	9b06      	ldr	r3, [sp, #24]
 8006d20:	aa98      	add	r2, sp, #608	; 0x260
 8006d22:	4413      	add	r3, r2
 8006d24:	f5a3 769c 	sub.w	r6, r3, #312	; 0x138
 8006d28:	2c00      	cmp	r4, #0
 8006d2a:	da0f      	bge.n	8006d4c <__kernel_rem_pio2+0x5a8>
 8006d2c:	9b00      	ldr	r3, [sp, #0]
 8006d2e:	b10b      	cbz	r3, 8006d34 <__kernel_rem_pio2+0x590>
 8006d30:	f105 4500 	add.w	r5, r5, #2147483648	; 0x80000000
 8006d34:	463a      	mov	r2, r7
 8006d36:	462b      	mov	r3, r5
 8006d38:	9904      	ldr	r1, [sp, #16]
 8006d3a:	e9c1 2300 	strd	r2, r3, [r1]
 8006d3e:	9b05      	ldr	r3, [sp, #20]
 8006d40:	f003 0007 	and.w	r0, r3, #7
 8006d44:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
 8006d48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006d4c:	4638      	mov	r0, r7
 8006d4e:	e976 2302 	ldrd	r2, r3, [r6, #-8]!
 8006d52:	4629      	mov	r1, r5
 8006d54:	f7f9 fa1a 	bl	800018c <__adddf3>
 8006d58:	3c01      	subs	r4, #1
 8006d5a:	4607      	mov	r7, r0
 8006d5c:	460d      	mov	r5, r1
 8006d5e:	e7e3      	b.n	8006d28 <__kernel_rem_pio2+0x584>
 8006d60:	4660      	mov	r0, ip
 8006d62:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
 8006d66:	4639      	mov	r1, r7
 8006d68:	f7f9 fa10 	bl	800018c <__adddf3>
 8006d6c:	3e01      	subs	r6, #1
 8006d6e:	4684      	mov	ip, r0
 8006d70:	460f      	mov	r7, r1
 8006d72:	e7b0      	b.n	8006cd6 <__kernel_rem_pio2+0x532>
 8006d74:	4639      	mov	r1, r7
 8006d76:	e7b5      	b.n	8006ce4 <__kernel_rem_pio2+0x540>
 8006d78:	4660      	mov	r0, ip
 8006d7a:	e9f5 2302 	ldrd	r2, r3, [r5, #8]!
 8006d7e:	4639      	mov	r1, r7
 8006d80:	f7f9 fa04 	bl	800018c <__adddf3>
 8006d84:	3601      	adds	r6, #1
 8006d86:	4684      	mov	ip, r0
 8006d88:	460f      	mov	r7, r1
 8006d8a:	e7ba      	b.n	8006d02 <__kernel_rem_pio2+0x55e>
 8006d8c:	e97a 8902 	ldrd	r8, r9, [sl, #-8]!
 8006d90:	e9da 2302 	ldrd	r2, r3, [sl, #8]
 8006d94:	4640      	mov	r0, r8
 8006d96:	4649      	mov	r1, r9
 8006d98:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8006d9c:	f7f9 f9f6 	bl	800018c <__adddf3>
 8006da0:	4602      	mov	r2, r0
 8006da2:	460b      	mov	r3, r1
 8006da4:	4606      	mov	r6, r0
 8006da6:	460f      	mov	r7, r1
 8006da8:	4640      	mov	r0, r8
 8006daa:	4649      	mov	r1, r9
 8006dac:	f7f9 f9ec 	bl	8000188 <__aeabi_dsub>
 8006db0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8006db4:	f7f9 f9ea 	bl	800018c <__adddf3>
 8006db8:	f10b 3bff 	add.w	fp, fp, #4294967295
 8006dbc:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8006dc0:	e9ca 6700 	strd	r6, r7, [sl]
 8006dc4:	e757      	b.n	8006c76 <__kernel_rem_pio2+0x4d2>
 8006dc6:	e975 6702 	ldrd	r6, r7, [r5, #-8]!
 8006dca:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8006dce:	4630      	mov	r0, r6
 8006dd0:	4639      	mov	r1, r7
 8006dd2:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8006dd6:	f7f9 f9d9 	bl	800018c <__adddf3>
 8006dda:	4602      	mov	r2, r0
 8006ddc:	460b      	mov	r3, r1
 8006dde:	4680      	mov	r8, r0
 8006de0:	4689      	mov	r9, r1
 8006de2:	4630      	mov	r0, r6
 8006de4:	4639      	mov	r1, r7
 8006de6:	f7f9 f9cf 	bl	8000188 <__aeabi_dsub>
 8006dea:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8006dee:	f7f9 f9cd 	bl	800018c <__adddf3>
 8006df2:	f10a 3aff 	add.w	sl, sl, #4294967295
 8006df6:	e9c5 0102 	strd	r0, r1, [r5, #8]
 8006dfa:	e9c5 8900 	strd	r8, r9, [r5]
 8006dfe:	e73f      	b.n	8006c80 <__kernel_rem_pio2+0x4dc>
 8006e00:	4638      	mov	r0, r7
 8006e02:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
 8006e06:	4631      	mov	r1, r6
 8006e08:	f7f9 f9c0 	bl	800018c <__adddf3>
 8006e0c:	3c01      	subs	r4, #1
 8006e0e:	4607      	mov	r7, r0
 8006e10:	460e      	mov	r6, r1
 8006e12:	e73f      	b.n	8006c94 <__kernel_rem_pio2+0x4f0>
 8006e14:	9b04      	ldr	r3, [sp, #16]
 8006e16:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 8006e1a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8006e1e:	f106 4600 	add.w	r6, r6, #2147483648	; 0x80000000
 8006e22:	601d      	str	r5, [r3, #0]
 8006e24:	e9c3 0401 	strd	r0, r4, [r3, #4]
 8006e28:	e9c3 1703 	strd	r1, r7, [r3, #12]
 8006e2c:	615e      	str	r6, [r3, #20]
 8006e2e:	e786      	b.n	8006d3e <__kernel_rem_pio2+0x59a>
 8006e30:	41700000 	.word	0x41700000
 8006e34:	3e700000 	.word	0x3e700000

08006e38 <__kernel_sin>:
 8006e38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006e3c:	b086      	sub	sp, #24
 8006e3e:	e9cd 2300 	strd	r2, r3, [sp]
 8006e42:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8006e46:	f1b3 5f79 	cmp.w	r3, #1044381696	; 0x3e400000
 8006e4a:	4682      	mov	sl, r0
 8006e4c:	460c      	mov	r4, r1
 8006e4e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8006e50:	da03      	bge.n	8006e5a <__kernel_sin+0x22>
 8006e52:	f7f9 fe01 	bl	8000a58 <__aeabi_d2iz>
 8006e56:	2800      	cmp	r0, #0
 8006e58:	d050      	beq.n	8006efc <__kernel_sin+0xc4>
 8006e5a:	4652      	mov	r2, sl
 8006e5c:	4623      	mov	r3, r4
 8006e5e:	4650      	mov	r0, sl
 8006e60:	4621      	mov	r1, r4
 8006e62:	f7f9 fb49 	bl	80004f8 <__aeabi_dmul>
 8006e66:	4606      	mov	r6, r0
 8006e68:	460f      	mov	r7, r1
 8006e6a:	4602      	mov	r2, r0
 8006e6c:	460b      	mov	r3, r1
 8006e6e:	4650      	mov	r0, sl
 8006e70:	4621      	mov	r1, r4
 8006e72:	f7f9 fb41 	bl	80004f8 <__aeabi_dmul>
 8006e76:	a33e      	add	r3, pc, #248	; (adr r3, 8006f70 <__kernel_sin+0x138>)
 8006e78:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006e7c:	4680      	mov	r8, r0
 8006e7e:	4689      	mov	r9, r1
 8006e80:	4630      	mov	r0, r6
 8006e82:	4639      	mov	r1, r7
 8006e84:	f7f9 fb38 	bl	80004f8 <__aeabi_dmul>
 8006e88:	a33b      	add	r3, pc, #236	; (adr r3, 8006f78 <__kernel_sin+0x140>)
 8006e8a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006e8e:	f7f9 f97b 	bl	8000188 <__aeabi_dsub>
 8006e92:	4632      	mov	r2, r6
 8006e94:	463b      	mov	r3, r7
 8006e96:	f7f9 fb2f 	bl	80004f8 <__aeabi_dmul>
 8006e9a:	a339      	add	r3, pc, #228	; (adr r3, 8006f80 <__kernel_sin+0x148>)
 8006e9c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006ea0:	f7f9 f974 	bl	800018c <__adddf3>
 8006ea4:	4632      	mov	r2, r6
 8006ea6:	463b      	mov	r3, r7
 8006ea8:	f7f9 fb26 	bl	80004f8 <__aeabi_dmul>
 8006eac:	a336      	add	r3, pc, #216	; (adr r3, 8006f88 <__kernel_sin+0x150>)
 8006eae:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006eb2:	f7f9 f969 	bl	8000188 <__aeabi_dsub>
 8006eb6:	4632      	mov	r2, r6
 8006eb8:	463b      	mov	r3, r7
 8006eba:	f7f9 fb1d 	bl	80004f8 <__aeabi_dmul>
 8006ebe:	a334      	add	r3, pc, #208	; (adr r3, 8006f90 <__kernel_sin+0x158>)
 8006ec0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006ec4:	f7f9 f962 	bl	800018c <__adddf3>
 8006ec8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8006ecc:	b9dd      	cbnz	r5, 8006f06 <__kernel_sin+0xce>
 8006ece:	4602      	mov	r2, r0
 8006ed0:	460b      	mov	r3, r1
 8006ed2:	4630      	mov	r0, r6
 8006ed4:	4639      	mov	r1, r7
 8006ed6:	f7f9 fb0f 	bl	80004f8 <__aeabi_dmul>
 8006eda:	a32f      	add	r3, pc, #188	; (adr r3, 8006f98 <__kernel_sin+0x160>)
 8006edc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006ee0:	f7f9 f952 	bl	8000188 <__aeabi_dsub>
 8006ee4:	4642      	mov	r2, r8
 8006ee6:	464b      	mov	r3, r9
 8006ee8:	f7f9 fb06 	bl	80004f8 <__aeabi_dmul>
 8006eec:	4602      	mov	r2, r0
 8006eee:	460b      	mov	r3, r1
 8006ef0:	4650      	mov	r0, sl
 8006ef2:	4621      	mov	r1, r4
 8006ef4:	f7f9 f94a 	bl	800018c <__adddf3>
 8006ef8:	4682      	mov	sl, r0
 8006efa:	460c      	mov	r4, r1
 8006efc:	4650      	mov	r0, sl
 8006efe:	4621      	mov	r1, r4
 8006f00:	b006      	add	sp, #24
 8006f02:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006f06:	2200      	movs	r2, #0
 8006f08:	e9dd 0100 	ldrd	r0, r1, [sp]
 8006f0c:	4b24      	ldr	r3, [pc, #144]	; (8006fa0 <__kernel_sin+0x168>)
 8006f0e:	f7f9 faf3 	bl	80004f8 <__aeabi_dmul>
 8006f12:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8006f16:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8006f1a:	4640      	mov	r0, r8
 8006f1c:	4649      	mov	r1, r9
 8006f1e:	f7f9 faeb 	bl	80004f8 <__aeabi_dmul>
 8006f22:	4602      	mov	r2, r0
 8006f24:	460b      	mov	r3, r1
 8006f26:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8006f2a:	f7f9 f92d 	bl	8000188 <__aeabi_dsub>
 8006f2e:	4632      	mov	r2, r6
 8006f30:	463b      	mov	r3, r7
 8006f32:	f7f9 fae1 	bl	80004f8 <__aeabi_dmul>
 8006f36:	e9dd 2300 	ldrd	r2, r3, [sp]
 8006f3a:	f7f9 f925 	bl	8000188 <__aeabi_dsub>
 8006f3e:	a316      	add	r3, pc, #88	; (adr r3, 8006f98 <__kernel_sin+0x160>)
 8006f40:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006f44:	4606      	mov	r6, r0
 8006f46:	460f      	mov	r7, r1
 8006f48:	4640      	mov	r0, r8
 8006f4a:	4649      	mov	r1, r9
 8006f4c:	f7f9 fad4 	bl	80004f8 <__aeabi_dmul>
 8006f50:	4602      	mov	r2, r0
 8006f52:	460b      	mov	r3, r1
 8006f54:	4630      	mov	r0, r6
 8006f56:	4639      	mov	r1, r7
 8006f58:	f7f9 f918 	bl	800018c <__adddf3>
 8006f5c:	4602      	mov	r2, r0
 8006f5e:	460b      	mov	r3, r1
 8006f60:	4650      	mov	r0, sl
 8006f62:	4621      	mov	r1, r4
 8006f64:	f7f9 f910 	bl	8000188 <__aeabi_dsub>
 8006f68:	e7c6      	b.n	8006ef8 <__kernel_sin+0xc0>
 8006f6a:	bf00      	nop
 8006f6c:	f3af 8000 	nop.w
 8006f70:	5acfd57c 	.word	0x5acfd57c
 8006f74:	3de5d93a 	.word	0x3de5d93a
 8006f78:	8a2b9ceb 	.word	0x8a2b9ceb
 8006f7c:	3e5ae5e6 	.word	0x3e5ae5e6
 8006f80:	57b1fe7d 	.word	0x57b1fe7d
 8006f84:	3ec71de3 	.word	0x3ec71de3
 8006f88:	19c161d5 	.word	0x19c161d5
 8006f8c:	3f2a01a0 	.word	0x3f2a01a0
 8006f90:	1110f8a6 	.word	0x1110f8a6
 8006f94:	3f811111 	.word	0x3f811111
 8006f98:	55555549 	.word	0x55555549
 8006f9c:	3fc55555 	.word	0x3fc55555
 8006fa0:	3fe00000 	.word	0x3fe00000
 8006fa4:	00000000 	.word	0x00000000

08006fa8 <atan>:
 8006fa8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006fac:	4bb6      	ldr	r3, [pc, #728]	; (8007288 <atan+0x2e0>)
 8006fae:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
 8006fb2:	429e      	cmp	r6, r3
 8006fb4:	4604      	mov	r4, r0
 8006fb6:	460d      	mov	r5, r1
 8006fb8:	468b      	mov	fp, r1
 8006fba:	dd17      	ble.n	8006fec <atan+0x44>
 8006fbc:	4bb3      	ldr	r3, [pc, #716]	; (800728c <atan+0x2e4>)
 8006fbe:	429e      	cmp	r6, r3
 8006fc0:	dc01      	bgt.n	8006fc6 <atan+0x1e>
 8006fc2:	d109      	bne.n	8006fd8 <atan+0x30>
 8006fc4:	b140      	cbz	r0, 8006fd8 <atan+0x30>
 8006fc6:	4622      	mov	r2, r4
 8006fc8:	462b      	mov	r3, r5
 8006fca:	4620      	mov	r0, r4
 8006fcc:	4629      	mov	r1, r5
 8006fce:	f7f9 f8dd 	bl	800018c <__adddf3>
 8006fd2:	4604      	mov	r4, r0
 8006fd4:	460d      	mov	r5, r1
 8006fd6:	e005      	b.n	8006fe4 <atan+0x3c>
 8006fd8:	f1bb 0f00 	cmp.w	fp, #0
 8006fdc:	4cac      	ldr	r4, [pc, #688]	; (8007290 <atan+0x2e8>)
 8006fde:	f340 8121 	ble.w	8007224 <atan+0x27c>
 8006fe2:	4dac      	ldr	r5, [pc, #688]	; (8007294 <atan+0x2ec>)
 8006fe4:	4620      	mov	r0, r4
 8006fe6:	4629      	mov	r1, r5
 8006fe8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006fec:	4baa      	ldr	r3, [pc, #680]	; (8007298 <atan+0x2f0>)
 8006fee:	429e      	cmp	r6, r3
 8006ff0:	dc11      	bgt.n	8007016 <atan+0x6e>
 8006ff2:	f1a3 73de 	sub.w	r3, r3, #29097984	; 0x1bc0000
 8006ff6:	429e      	cmp	r6, r3
 8006ff8:	dc0a      	bgt.n	8007010 <atan+0x68>
 8006ffa:	a38b      	add	r3, pc, #556	; (adr r3, 8007228 <atan+0x280>)
 8006ffc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007000:	f7f9 f8c4 	bl	800018c <__adddf3>
 8007004:	2200      	movs	r2, #0
 8007006:	4ba5      	ldr	r3, [pc, #660]	; (800729c <atan+0x2f4>)
 8007008:	f7f9 fd06 	bl	8000a18 <__aeabi_dcmpgt>
 800700c:	2800      	cmp	r0, #0
 800700e:	d1e9      	bne.n	8006fe4 <atan+0x3c>
 8007010:	f04f 3aff 	mov.w	sl, #4294967295
 8007014:	e027      	b.n	8007066 <atan+0xbe>
 8007016:	f000 f951 	bl	80072bc <fabs>
 800701a:	4ba1      	ldr	r3, [pc, #644]	; (80072a0 <atan+0x2f8>)
 800701c:	4604      	mov	r4, r0
 800701e:	429e      	cmp	r6, r3
 8007020:	460d      	mov	r5, r1
 8007022:	f300 80b8 	bgt.w	8007196 <atan+0x1ee>
 8007026:	f5a3 2350 	sub.w	r3, r3, #851968	; 0xd0000
 800702a:	429e      	cmp	r6, r3
 800702c:	f300 809c 	bgt.w	8007168 <atan+0x1c0>
 8007030:	4602      	mov	r2, r0
 8007032:	460b      	mov	r3, r1
 8007034:	f7f9 f8aa 	bl	800018c <__adddf3>
 8007038:	2200      	movs	r2, #0
 800703a:	4b98      	ldr	r3, [pc, #608]	; (800729c <atan+0x2f4>)
 800703c:	f7f9 f8a4 	bl	8000188 <__aeabi_dsub>
 8007040:	2200      	movs	r2, #0
 8007042:	4606      	mov	r6, r0
 8007044:	460f      	mov	r7, r1
 8007046:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800704a:	4620      	mov	r0, r4
 800704c:	4629      	mov	r1, r5
 800704e:	f7f9 f89d 	bl	800018c <__adddf3>
 8007052:	4602      	mov	r2, r0
 8007054:	460b      	mov	r3, r1
 8007056:	4630      	mov	r0, r6
 8007058:	4639      	mov	r1, r7
 800705a:	f7f9 fb77 	bl	800074c <__aeabi_ddiv>
 800705e:	f04f 0a00 	mov.w	sl, #0
 8007062:	4604      	mov	r4, r0
 8007064:	460d      	mov	r5, r1
 8007066:	4622      	mov	r2, r4
 8007068:	462b      	mov	r3, r5
 800706a:	4620      	mov	r0, r4
 800706c:	4629      	mov	r1, r5
 800706e:	f7f9 fa43 	bl	80004f8 <__aeabi_dmul>
 8007072:	4602      	mov	r2, r0
 8007074:	460b      	mov	r3, r1
 8007076:	4680      	mov	r8, r0
 8007078:	4689      	mov	r9, r1
 800707a:	f7f9 fa3d 	bl	80004f8 <__aeabi_dmul>
 800707e:	a36c      	add	r3, pc, #432	; (adr r3, 8007230 <atan+0x288>)
 8007080:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007084:	4606      	mov	r6, r0
 8007086:	460f      	mov	r7, r1
 8007088:	f7f9 fa36 	bl	80004f8 <__aeabi_dmul>
 800708c:	a36a      	add	r3, pc, #424	; (adr r3, 8007238 <atan+0x290>)
 800708e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007092:	f7f9 f87b 	bl	800018c <__adddf3>
 8007096:	4632      	mov	r2, r6
 8007098:	463b      	mov	r3, r7
 800709a:	f7f9 fa2d 	bl	80004f8 <__aeabi_dmul>
 800709e:	a368      	add	r3, pc, #416	; (adr r3, 8007240 <atan+0x298>)
 80070a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80070a4:	f7f9 f872 	bl	800018c <__adddf3>
 80070a8:	4632      	mov	r2, r6
 80070aa:	463b      	mov	r3, r7
 80070ac:	f7f9 fa24 	bl	80004f8 <__aeabi_dmul>
 80070b0:	a365      	add	r3, pc, #404	; (adr r3, 8007248 <atan+0x2a0>)
 80070b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80070b6:	f7f9 f869 	bl	800018c <__adddf3>
 80070ba:	4632      	mov	r2, r6
 80070bc:	463b      	mov	r3, r7
 80070be:	f7f9 fa1b 	bl	80004f8 <__aeabi_dmul>
 80070c2:	a363      	add	r3, pc, #396	; (adr r3, 8007250 <atan+0x2a8>)
 80070c4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80070c8:	f7f9 f860 	bl	800018c <__adddf3>
 80070cc:	4632      	mov	r2, r6
 80070ce:	463b      	mov	r3, r7
 80070d0:	f7f9 fa12 	bl	80004f8 <__aeabi_dmul>
 80070d4:	a360      	add	r3, pc, #384	; (adr r3, 8007258 <atan+0x2b0>)
 80070d6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80070da:	f7f9 f857 	bl	800018c <__adddf3>
 80070de:	4642      	mov	r2, r8
 80070e0:	464b      	mov	r3, r9
 80070e2:	f7f9 fa09 	bl	80004f8 <__aeabi_dmul>
 80070e6:	a35e      	add	r3, pc, #376	; (adr r3, 8007260 <atan+0x2b8>)
 80070e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80070ec:	4680      	mov	r8, r0
 80070ee:	4689      	mov	r9, r1
 80070f0:	4630      	mov	r0, r6
 80070f2:	4639      	mov	r1, r7
 80070f4:	f7f9 fa00 	bl	80004f8 <__aeabi_dmul>
 80070f8:	a35b      	add	r3, pc, #364	; (adr r3, 8007268 <atan+0x2c0>)
 80070fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80070fe:	f7f9 f843 	bl	8000188 <__aeabi_dsub>
 8007102:	4632      	mov	r2, r6
 8007104:	463b      	mov	r3, r7
 8007106:	f7f9 f9f7 	bl	80004f8 <__aeabi_dmul>
 800710a:	a359      	add	r3, pc, #356	; (adr r3, 8007270 <atan+0x2c8>)
 800710c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007110:	f7f9 f83a 	bl	8000188 <__aeabi_dsub>
 8007114:	4632      	mov	r2, r6
 8007116:	463b      	mov	r3, r7
 8007118:	f7f9 f9ee 	bl	80004f8 <__aeabi_dmul>
 800711c:	a356      	add	r3, pc, #344	; (adr r3, 8007278 <atan+0x2d0>)
 800711e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007122:	f7f9 f831 	bl	8000188 <__aeabi_dsub>
 8007126:	4632      	mov	r2, r6
 8007128:	463b      	mov	r3, r7
 800712a:	f7f9 f9e5 	bl	80004f8 <__aeabi_dmul>
 800712e:	a354      	add	r3, pc, #336	; (adr r3, 8007280 <atan+0x2d8>)
 8007130:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007134:	f7f9 f828 	bl	8000188 <__aeabi_dsub>
 8007138:	4632      	mov	r2, r6
 800713a:	463b      	mov	r3, r7
 800713c:	f7f9 f9dc 	bl	80004f8 <__aeabi_dmul>
 8007140:	4602      	mov	r2, r0
 8007142:	460b      	mov	r3, r1
 8007144:	4640      	mov	r0, r8
 8007146:	4649      	mov	r1, r9
 8007148:	f7f9 f820 	bl	800018c <__adddf3>
 800714c:	4622      	mov	r2, r4
 800714e:	462b      	mov	r3, r5
 8007150:	f7f9 f9d2 	bl	80004f8 <__aeabi_dmul>
 8007154:	f1ba 3fff 	cmp.w	sl, #4294967295
 8007158:	4602      	mov	r2, r0
 800715a:	460b      	mov	r3, r1
 800715c:	d144      	bne.n	80071e8 <atan+0x240>
 800715e:	4620      	mov	r0, r4
 8007160:	4629      	mov	r1, r5
 8007162:	f7f9 f811 	bl	8000188 <__aeabi_dsub>
 8007166:	e734      	b.n	8006fd2 <atan+0x2a>
 8007168:	2200      	movs	r2, #0
 800716a:	4b4c      	ldr	r3, [pc, #304]	; (800729c <atan+0x2f4>)
 800716c:	f7f9 f80c 	bl	8000188 <__aeabi_dsub>
 8007170:	2200      	movs	r2, #0
 8007172:	4606      	mov	r6, r0
 8007174:	460f      	mov	r7, r1
 8007176:	4b49      	ldr	r3, [pc, #292]	; (800729c <atan+0x2f4>)
 8007178:	4620      	mov	r0, r4
 800717a:	4629      	mov	r1, r5
 800717c:	f7f9 f806 	bl	800018c <__adddf3>
 8007180:	4602      	mov	r2, r0
 8007182:	460b      	mov	r3, r1
 8007184:	4630      	mov	r0, r6
 8007186:	4639      	mov	r1, r7
 8007188:	f7f9 fae0 	bl	800074c <__aeabi_ddiv>
 800718c:	f04f 0a01 	mov.w	sl, #1
 8007190:	4604      	mov	r4, r0
 8007192:	460d      	mov	r5, r1
 8007194:	e767      	b.n	8007066 <atan+0xbe>
 8007196:	4b43      	ldr	r3, [pc, #268]	; (80072a4 <atan+0x2fc>)
 8007198:	429e      	cmp	r6, r3
 800719a:	dc1a      	bgt.n	80071d2 <atan+0x22a>
 800719c:	2200      	movs	r2, #0
 800719e:	4b42      	ldr	r3, [pc, #264]	; (80072a8 <atan+0x300>)
 80071a0:	f7f8 fff2 	bl	8000188 <__aeabi_dsub>
 80071a4:	2200      	movs	r2, #0
 80071a6:	4606      	mov	r6, r0
 80071a8:	460f      	mov	r7, r1
 80071aa:	4b3f      	ldr	r3, [pc, #252]	; (80072a8 <atan+0x300>)
 80071ac:	4620      	mov	r0, r4
 80071ae:	4629      	mov	r1, r5
 80071b0:	f7f9 f9a2 	bl	80004f8 <__aeabi_dmul>
 80071b4:	2200      	movs	r2, #0
 80071b6:	4b39      	ldr	r3, [pc, #228]	; (800729c <atan+0x2f4>)
 80071b8:	f7f8 ffe8 	bl	800018c <__adddf3>
 80071bc:	4602      	mov	r2, r0
 80071be:	460b      	mov	r3, r1
 80071c0:	4630      	mov	r0, r6
 80071c2:	4639      	mov	r1, r7
 80071c4:	f7f9 fac2 	bl	800074c <__aeabi_ddiv>
 80071c8:	f04f 0a02 	mov.w	sl, #2
 80071cc:	4604      	mov	r4, r0
 80071ce:	460d      	mov	r5, r1
 80071d0:	e749      	b.n	8007066 <atan+0xbe>
 80071d2:	4602      	mov	r2, r0
 80071d4:	460b      	mov	r3, r1
 80071d6:	2000      	movs	r0, #0
 80071d8:	4934      	ldr	r1, [pc, #208]	; (80072ac <atan+0x304>)
 80071da:	f7f9 fab7 	bl	800074c <__aeabi_ddiv>
 80071de:	f04f 0a03 	mov.w	sl, #3
 80071e2:	4604      	mov	r4, r0
 80071e4:	460d      	mov	r5, r1
 80071e6:	e73e      	b.n	8007066 <atan+0xbe>
 80071e8:	4b31      	ldr	r3, [pc, #196]	; (80072b0 <atan+0x308>)
 80071ea:	4e32      	ldr	r6, [pc, #200]	; (80072b4 <atan+0x30c>)
 80071ec:	ea4f 0aca 	mov.w	sl, sl, lsl #3
 80071f0:	4456      	add	r6, sl
 80071f2:	449a      	add	sl, r3
 80071f4:	e9da 2300 	ldrd	r2, r3, [sl]
 80071f8:	f7f8 ffc6 	bl	8000188 <__aeabi_dsub>
 80071fc:	4622      	mov	r2, r4
 80071fe:	462b      	mov	r3, r5
 8007200:	f7f8 ffc2 	bl	8000188 <__aeabi_dsub>
 8007204:	4602      	mov	r2, r0
 8007206:	460b      	mov	r3, r1
 8007208:	e9d6 0100 	ldrd	r0, r1, [r6]
 800720c:	f7f8 ffbc 	bl	8000188 <__aeabi_dsub>
 8007210:	f1bb 0f00 	cmp.w	fp, #0
 8007214:	4604      	mov	r4, r0
 8007216:	460d      	mov	r5, r1
 8007218:	f6bf aee4 	bge.w	8006fe4 <atan+0x3c>
 800721c:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8007220:	461d      	mov	r5, r3
 8007222:	e6df      	b.n	8006fe4 <atan+0x3c>
 8007224:	4d24      	ldr	r5, [pc, #144]	; (80072b8 <atan+0x310>)
 8007226:	e6dd      	b.n	8006fe4 <atan+0x3c>
 8007228:	8800759c 	.word	0x8800759c
 800722c:	7e37e43c 	.word	0x7e37e43c
 8007230:	e322da11 	.word	0xe322da11
 8007234:	3f90ad3a 	.word	0x3f90ad3a
 8007238:	24760deb 	.word	0x24760deb
 800723c:	3fa97b4b 	.word	0x3fa97b4b
 8007240:	a0d03d51 	.word	0xa0d03d51
 8007244:	3fb10d66 	.word	0x3fb10d66
 8007248:	c54c206e 	.word	0xc54c206e
 800724c:	3fb745cd 	.word	0x3fb745cd
 8007250:	920083ff 	.word	0x920083ff
 8007254:	3fc24924 	.word	0x3fc24924
 8007258:	5555550d 	.word	0x5555550d
 800725c:	3fd55555 	.word	0x3fd55555
 8007260:	2c6a6c2f 	.word	0x2c6a6c2f
 8007264:	bfa2b444 	.word	0xbfa2b444
 8007268:	52defd9a 	.word	0x52defd9a
 800726c:	3fadde2d 	.word	0x3fadde2d
 8007270:	af749a6d 	.word	0xaf749a6d
 8007274:	3fb3b0f2 	.word	0x3fb3b0f2
 8007278:	fe231671 	.word	0xfe231671
 800727c:	3fbc71c6 	.word	0x3fbc71c6
 8007280:	9998ebc4 	.word	0x9998ebc4
 8007284:	3fc99999 	.word	0x3fc99999
 8007288:	440fffff 	.word	0x440fffff
 800728c:	7ff00000 	.word	0x7ff00000
 8007290:	54442d18 	.word	0x54442d18
 8007294:	3ff921fb 	.word	0x3ff921fb
 8007298:	3fdbffff 	.word	0x3fdbffff
 800729c:	3ff00000 	.word	0x3ff00000
 80072a0:	3ff2ffff 	.word	0x3ff2ffff
 80072a4:	40037fff 	.word	0x40037fff
 80072a8:	3ff80000 	.word	0x3ff80000
 80072ac:	bff00000 	.word	0xbff00000
 80072b0:	08007990 	.word	0x08007990
 80072b4:	08007970 	.word	0x08007970
 80072b8:	bff921fb 	.word	0xbff921fb

080072bc <fabs>:
 80072bc:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 80072c0:	4619      	mov	r1, r3
 80072c2:	4770      	bx	lr
 80072c4:	0000      	movs	r0, r0
	...

080072c8 <floor>:
 80072c8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80072cc:	f3c1 580a 	ubfx	r8, r1, #20, #11
 80072d0:	f2a8 36ff 	subw	r6, r8, #1023	; 0x3ff
 80072d4:	2e13      	cmp	r6, #19
 80072d6:	4607      	mov	r7, r0
 80072d8:	460b      	mov	r3, r1
 80072da:	460c      	mov	r4, r1
 80072dc:	4605      	mov	r5, r0
 80072de:	dc35      	bgt.n	800734c <floor+0x84>
 80072e0:	2e00      	cmp	r6, #0
 80072e2:	da16      	bge.n	8007312 <floor+0x4a>
 80072e4:	a336      	add	r3, pc, #216	; (adr r3, 80073c0 <floor+0xf8>)
 80072e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80072ea:	f7f8 ff4f 	bl	800018c <__adddf3>
 80072ee:	2200      	movs	r2, #0
 80072f0:	2300      	movs	r3, #0
 80072f2:	f7f9 fb91 	bl	8000a18 <__aeabi_dcmpgt>
 80072f6:	b148      	cbz	r0, 800730c <floor+0x44>
 80072f8:	2c00      	cmp	r4, #0
 80072fa:	da5b      	bge.n	80073b4 <floor+0xec>
 80072fc:	2500      	movs	r5, #0
 80072fe:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 8007302:	4a31      	ldr	r2, [pc, #196]	; (80073c8 <floor+0x100>)
 8007304:	433b      	orrs	r3, r7
 8007306:	42ab      	cmp	r3, r5
 8007308:	bf18      	it	ne
 800730a:	4614      	movne	r4, r2
 800730c:	4623      	mov	r3, r4
 800730e:	462f      	mov	r7, r5
 8007310:	e026      	b.n	8007360 <floor+0x98>
 8007312:	4a2e      	ldr	r2, [pc, #184]	; (80073cc <floor+0x104>)
 8007314:	fa42 f806 	asr.w	r8, r2, r6
 8007318:	ea01 0208 	and.w	r2, r1, r8
 800731c:	4302      	orrs	r2, r0
 800731e:	d01f      	beq.n	8007360 <floor+0x98>
 8007320:	a327      	add	r3, pc, #156	; (adr r3, 80073c0 <floor+0xf8>)
 8007322:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007326:	f7f8 ff31 	bl	800018c <__adddf3>
 800732a:	2200      	movs	r2, #0
 800732c:	2300      	movs	r3, #0
 800732e:	f7f9 fb73 	bl	8000a18 <__aeabi_dcmpgt>
 8007332:	2800      	cmp	r0, #0
 8007334:	d0ea      	beq.n	800730c <floor+0x44>
 8007336:	2c00      	cmp	r4, #0
 8007338:	bfbe      	ittt	lt
 800733a:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 800733e:	fa43 f606 	asrlt.w	r6, r3, r6
 8007342:	19a4      	addlt	r4, r4, r6
 8007344:	ea24 0408 	bic.w	r4, r4, r8
 8007348:	2500      	movs	r5, #0
 800734a:	e7df      	b.n	800730c <floor+0x44>
 800734c:	2e33      	cmp	r6, #51	; 0x33
 800734e:	dd0b      	ble.n	8007368 <floor+0xa0>
 8007350:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8007354:	d104      	bne.n	8007360 <floor+0x98>
 8007356:	4602      	mov	r2, r0
 8007358:	f7f8 ff18 	bl	800018c <__adddf3>
 800735c:	4607      	mov	r7, r0
 800735e:	460b      	mov	r3, r1
 8007360:	4638      	mov	r0, r7
 8007362:	4619      	mov	r1, r3
 8007364:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007368:	f04f 32ff 	mov.w	r2, #4294967295
 800736c:	f2a8 4813 	subw	r8, r8, #1043	; 0x413
 8007370:	fa22 f808 	lsr.w	r8, r2, r8
 8007374:	ea18 0f00 	tst.w	r8, r0
 8007378:	d0f2      	beq.n	8007360 <floor+0x98>
 800737a:	a311      	add	r3, pc, #68	; (adr r3, 80073c0 <floor+0xf8>)
 800737c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007380:	f7f8 ff04 	bl	800018c <__adddf3>
 8007384:	2200      	movs	r2, #0
 8007386:	2300      	movs	r3, #0
 8007388:	f7f9 fb46 	bl	8000a18 <__aeabi_dcmpgt>
 800738c:	2800      	cmp	r0, #0
 800738e:	d0bd      	beq.n	800730c <floor+0x44>
 8007390:	2c00      	cmp	r4, #0
 8007392:	da02      	bge.n	800739a <floor+0xd2>
 8007394:	2e14      	cmp	r6, #20
 8007396:	d103      	bne.n	80073a0 <floor+0xd8>
 8007398:	3401      	adds	r4, #1
 800739a:	ea25 0508 	bic.w	r5, r5, r8
 800739e:	e7b5      	b.n	800730c <floor+0x44>
 80073a0:	2301      	movs	r3, #1
 80073a2:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 80073a6:	fa03 f606 	lsl.w	r6, r3, r6
 80073aa:	4435      	add	r5, r6
 80073ac:	42bd      	cmp	r5, r7
 80073ae:	bf38      	it	cc
 80073b0:	18e4      	addcc	r4, r4, r3
 80073b2:	e7f2      	b.n	800739a <floor+0xd2>
 80073b4:	2500      	movs	r5, #0
 80073b6:	462c      	mov	r4, r5
 80073b8:	e7a8      	b.n	800730c <floor+0x44>
 80073ba:	bf00      	nop
 80073bc:	f3af 8000 	nop.w
 80073c0:	8800759c 	.word	0x8800759c
 80073c4:	7e37e43c 	.word	0x7e37e43c
 80073c8:	bff00000 	.word	0xbff00000
 80073cc:	000fffff 	.word	0x000fffff

080073d0 <matherr>:
 80073d0:	2000      	movs	r0, #0
 80073d2:	4770      	bx	lr
 80073d4:	0000      	movs	r0, r0
	...

080073d8 <scalbn>:
 80073d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80073da:	4616      	mov	r6, r2
 80073dc:	f3c1 520a 	ubfx	r2, r1, #20, #11
 80073e0:	4604      	mov	r4, r0
 80073e2:	460d      	mov	r5, r1
 80073e4:	460b      	mov	r3, r1
 80073e6:	b982      	cbnz	r2, 800740a <scalbn+0x32>
 80073e8:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 80073ec:	4303      	orrs	r3, r0
 80073ee:	d034      	beq.n	800745a <scalbn+0x82>
 80073f0:	4b2d      	ldr	r3, [pc, #180]	; (80074a8 <scalbn+0xd0>)
 80073f2:	2200      	movs	r2, #0
 80073f4:	f7f9 f880 	bl	80004f8 <__aeabi_dmul>
 80073f8:	4b2c      	ldr	r3, [pc, #176]	; (80074ac <scalbn+0xd4>)
 80073fa:	4604      	mov	r4, r0
 80073fc:	429e      	cmp	r6, r3
 80073fe:	460d      	mov	r5, r1
 8007400:	da0d      	bge.n	800741e <scalbn+0x46>
 8007402:	a325      	add	r3, pc, #148	; (adr r3, 8007498 <scalbn+0xc0>)
 8007404:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007408:	e01c      	b.n	8007444 <scalbn+0x6c>
 800740a:	f240 77ff 	movw	r7, #2047	; 0x7ff
 800740e:	42ba      	cmp	r2, r7
 8007410:	d109      	bne.n	8007426 <scalbn+0x4e>
 8007412:	4602      	mov	r2, r0
 8007414:	f7f8 feba 	bl	800018c <__adddf3>
 8007418:	4604      	mov	r4, r0
 800741a:	460d      	mov	r5, r1
 800741c:	e01d      	b.n	800745a <scalbn+0x82>
 800741e:	460b      	mov	r3, r1
 8007420:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8007424:	3a36      	subs	r2, #54	; 0x36
 8007426:	f240 71fe 	movw	r1, #2046	; 0x7fe
 800742a:	4432      	add	r2, r6
 800742c:	428a      	cmp	r2, r1
 800742e:	dd0c      	ble.n	800744a <scalbn+0x72>
 8007430:	4622      	mov	r2, r4
 8007432:	462b      	mov	r3, r5
 8007434:	a11a      	add	r1, pc, #104	; (adr r1, 80074a0 <scalbn+0xc8>)
 8007436:	e9d1 0100 	ldrd	r0, r1, [r1]
 800743a:	f000 f83b 	bl	80074b4 <copysign>
 800743e:	a318      	add	r3, pc, #96	; (adr r3, 80074a0 <scalbn+0xc8>)
 8007440:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007444:	f7f9 f858 	bl	80004f8 <__aeabi_dmul>
 8007448:	e7e6      	b.n	8007418 <scalbn+0x40>
 800744a:	2a00      	cmp	r2, #0
 800744c:	dd08      	ble.n	8007460 <scalbn+0x88>
 800744e:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8007452:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8007456:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 800745a:	4620      	mov	r0, r4
 800745c:	4629      	mov	r1, r5
 800745e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007460:	f112 0f35 	cmn.w	r2, #53	; 0x35
 8007464:	da0b      	bge.n	800747e <scalbn+0xa6>
 8007466:	f24c 3350 	movw	r3, #50000	; 0xc350
 800746a:	429e      	cmp	r6, r3
 800746c:	4622      	mov	r2, r4
 800746e:	462b      	mov	r3, r5
 8007470:	dce0      	bgt.n	8007434 <scalbn+0x5c>
 8007472:	a109      	add	r1, pc, #36	; (adr r1, 8007498 <scalbn+0xc0>)
 8007474:	e9d1 0100 	ldrd	r0, r1, [r1]
 8007478:	f000 f81c 	bl	80074b4 <copysign>
 800747c:	e7c1      	b.n	8007402 <scalbn+0x2a>
 800747e:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8007482:	3236      	adds	r2, #54	; 0x36
 8007484:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8007488:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 800748c:	4620      	mov	r0, r4
 800748e:	4629      	mov	r1, r5
 8007490:	2200      	movs	r2, #0
 8007492:	4b07      	ldr	r3, [pc, #28]	; (80074b0 <scalbn+0xd8>)
 8007494:	e7d6      	b.n	8007444 <scalbn+0x6c>
 8007496:	bf00      	nop
 8007498:	c2f8f359 	.word	0xc2f8f359
 800749c:	01a56e1f 	.word	0x01a56e1f
 80074a0:	8800759c 	.word	0x8800759c
 80074a4:	7e37e43c 	.word	0x7e37e43c
 80074a8:	43500000 	.word	0x43500000
 80074ac:	ffff3cb0 	.word	0xffff3cb0
 80074b0:	3c900000 	.word	0x3c900000

080074b4 <copysign>:
 80074b4:	b530      	push	{r4, r5, lr}
 80074b6:	f021 4200 	bic.w	r2, r1, #2147483648	; 0x80000000
 80074ba:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 80074be:	ea42 0503 	orr.w	r5, r2, r3
 80074c2:	4629      	mov	r1, r5
 80074c4:	bd30      	pop	{r4, r5, pc}
	...

080074c8 <_init>:
 80074c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80074ca:	bf00      	nop
 80074cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80074ce:	bc08      	pop	{r3}
 80074d0:	469e      	mov	lr, r3
 80074d2:	4770      	bx	lr

080074d4 <_fini>:
 80074d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80074d6:	bf00      	nop
 80074d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80074da:	bc08      	pop	{r3}
 80074dc:	469e      	mov	lr, r3
 80074de:	4770      	bx	lr
