
lcd_driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001248  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000022  00800060  00001248  000012dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800082  00800082  000012fe  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000012fe  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000135c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00001398  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000070d  00000000  00000000  00001440  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005c0  00000000  00000000  00001b4d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006a3  00000000  00000000  0000210d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000164  00000000  00000000  000027b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003e1  00000000  00000000  00002914  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000007b  00000000  00000000  00002cf5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  00002d70  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
       4:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
       8:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
       c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      18:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      1c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      20:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      24:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      2c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      38:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      4c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	00 40       	sbci	r16, 0x00	; 0
      56:	7a 10       	cpse	r7, r10
      58:	f3 5a       	subi	r31, 0xA3	; 163
      5a:	00 a0       	ldd	r0, Z+32	; 0x20
      5c:	72 4e       	sbci	r23, 0xE2	; 226
      5e:	18 09       	sbc	r17, r8
      60:	00 10       	cpse	r0, r0
      62:	a5 d4       	rcall	.+2378   	; 0x9ae <__stack+0x14f>
      64:	e8 00       	.word	0x00e8	; ????
      66:	00 e8       	ldi	r16, 0x80	; 128
      68:	76 48       	sbci	r23, 0x86	; 134
      6a:	17 00       	.word	0x0017	; ????
      6c:	00 e4       	ldi	r16, 0x40	; 64
      6e:	0b 54       	subi	r16, 0x4B	; 75
      70:	02 00       	.word	0x0002	; ????
      72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
      74:	9a 3b       	cpi	r25, 0xBA	; 186
      76:	00 00       	nop
      78:	00 e1       	ldi	r16, 0x10	; 16
      7a:	f5 05       	cpc	r31, r5
      7c:	00 00       	nop
      7e:	80 96       	adiw	r24, 0x20	; 32
      80:	98 00       	.word	0x0098	; ????
      82:	00 00       	nop
      84:	40 42       	sbci	r20, 0x20	; 32
      86:	0f 00       	.word	0x000f	; ????
      88:	00 00       	nop
      8a:	a0 86       	std	Z+8, r10	; 0x08
      8c:	01 00       	.word	0x0001	; ????
      8e:	00 00       	nop
      90:	10 27       	eor	r17, r16
      92:	00 00       	nop
      94:	00 00       	nop
      96:	e8 03       	fmulsu	r22, r16
      98:	00 00       	nop
      9a:	00 00       	nop
      9c:	64 00       	.word	0x0064	; ????
      9e:	00 00       	nop
      a0:	00 00       	nop
      a2:	0a 00       	.word	0x000a	; ????
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	01 00       	.word	0x0001	; ????
      aa:	00 00       	nop
      ac:	00 00       	nop
      ae:	2c 76       	andi	r18, 0x6C	; 108
      b0:	d8 88       	ldd	r13, Y+16	; 0x10
      b2:	dc 67       	ori	r29, 0x7C	; 124
      b4:	4f 08       	sbc	r4, r15
      b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
      b8:	c1 df       	rcall	.-126    	; 0x3c <__FUSE_REGION_LENGTH__+0x3a>
      ba:	ae 59       	subi	r26, 0x9E	; 158
      bc:	e1 b1       	in	r30, 0x01	; 1
      be:	b7 96       	adiw	r30, 0x27	; 39
      c0:	e5 e3       	ldi	r30, 0x35	; 53
      c2:	e4 53       	subi	r30, 0x34	; 52
      c4:	c6 3a       	cpi	r28, 0xA6	; 166
      c6:	e6 51       	subi	r30, 0x16	; 22
      c8:	99 76       	andi	r25, 0x69	; 105
      ca:	96 e8       	ldi	r25, 0x86	; 134
      cc:	e6 c2       	rjmp	.+1484   	; 0x69a <__addsf3x+0x1a>
      ce:	84 26       	eor	r8, r20
      d0:	eb 89       	ldd	r30, Y+19	; 0x13
      d2:	8c 9b       	sbis	0x11, 4	; 17
      d4:	62 ed       	ldi	r22, 0xD2	; 210
      d6:	40 7c       	andi	r20, 0xC0	; 192
      d8:	6f fc       	.word	0xfc6f	; ????
      da:	ef bc       	out	0x2f, r14	; 47
      dc:	9c 9f       	mul	r25, r28
      de:	40 f2       	brcs	.-112    	; 0x70 <__trampolines_end+0x1c>
      e0:	ba a5       	ldd	r27, Y+42	; 0x2a
      e2:	6f a5       	ldd	r22, Y+47	; 0x2f
      e4:	f4 90       	lpm	r15, Z
      e6:	05 5a       	subi	r16, 0xA5	; 165
      e8:	2a f7       	brpl	.-54     	; 0xb4 <__trampolines_end+0x60>
      ea:	5c 93       	st	X, r21
      ec:	6b 6c       	ori	r22, 0xCB	; 203
      ee:	f9 67       	ori	r31, 0x79	; 121
      f0:	6d c1       	rjmp	.+730    	; 0x3cc <LCD_write_CMD+0x62>
      f2:	1b fc       	.word	0xfc1b	; ????
      f4:	e0 e4       	ldi	r30, 0x40	; 64
      f6:	0d 47       	sbci	r16, 0x7D	; 125
      f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
      fa:	20 e6       	ldi	r18, 0x60	; 96
      fc:	b5 00       	.word	0x00b5	; ????
      fe:	d0 ed       	ldi	r29, 0xD0	; 208
     100:	90 2e       	mov	r9, r16
     102:	03 00       	.word	0x0003	; ????
     104:	94 35       	cpi	r25, 0x54	; 84
     106:	77 05       	cpc	r23, r7
     108:	00 80       	ld	r0, Z
     10a:	84 1e       	adc	r8, r20
     10c:	08 00       	.word	0x0008	; ????
     10e:	00 20       	and	r0, r0
     110:	4e 0a       	sbc	r4, r30
     112:	00 00       	nop
     114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
     116:	0c 33       	cpi	r16, 0x3C	; 60
     118:	33 33       	cpi	r19, 0x33	; 51
     11a:	33 0f       	add	r19, r19
     11c:	98 6e       	ori	r25, 0xE8	; 232
     11e:	12 83       	std	Z+2, r17	; 0x02
     120:	11 41       	sbci	r17, 0x11	; 17
     122:	ef 8d       	ldd	r30, Y+31	; 0x1f
     124:	21 14       	cp	r2, r1
     126:	89 3b       	cpi	r24, 0xB9	; 185
     128:	e6 55       	subi	r30, 0x56	; 86
     12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
     12c:	fe e6       	ldi	r31, 0x6E	; 110
     12e:	db 18       	sub	r13, r11
     130:	d1 84       	ldd	r13, Z+9	; 0x09
     132:	4b 38       	cpi	r20, 0x8B	; 139
     134:	1b f7       	brvc	.-58     	; 0xfc <__trampolines_end+0xa8>
     136:	7c 1d       	adc	r23, r12
     138:	90 1d       	adc	r25, r0
     13a:	a4 bb       	out	0x14, r26	; 20
     13c:	e4 24       	eor	r14, r4
     13e:	20 32       	cpi	r18, 0x20	; 32
     140:	84 72       	andi	r24, 0x24	; 36
     142:	5e 22       	and	r5, r30
     144:	81 00       	.word	0x0081	; ????
     146:	c9 f1       	breq	.+114    	; 0x1ba <Keypad_getkey+0x10>
     148:	24 ec       	ldi	r18, 0xC4	; 196
     14a:	a1 e5       	ldi	r26, 0x51	; 81
     14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
     14e:	11 24       	eor	r1, r1
     150:	1f be       	out	0x3f, r1	; 63
     152:	cf e5       	ldi	r28, 0x5F	; 95
     154:	d8 e0       	ldi	r29, 0x08	; 8
     156:	de bf       	out	0x3e, r29	; 62
     158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
     15a:	10 e0       	ldi	r17, 0x00	; 0
     15c:	a0 e6       	ldi	r26, 0x60	; 96
     15e:	b0 e0       	ldi	r27, 0x00	; 0
     160:	e8 e4       	ldi	r30, 0x48	; 72
     162:	f2 e1       	ldi	r31, 0x12	; 18
     164:	02 c0       	rjmp	.+4      	; 0x16a <__do_copy_data+0x10>
     166:	05 90       	lpm	r0, Z+
     168:	0d 92       	st	X+, r0
     16a:	a2 38       	cpi	r26, 0x82	; 130
     16c:	b1 07       	cpc	r27, r17
     16e:	d9 f7       	brne	.-10     	; 0x166 <__do_copy_data+0xc>

00000170 <__do_clear_bss>:
     170:	20 e0       	ldi	r18, 0x00	; 0
     172:	a2 e8       	ldi	r26, 0x82	; 130
     174:	b0 e0       	ldi	r27, 0x00	; 0
     176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
     178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
     17a:	a4 38       	cpi	r26, 0x84	; 132
     17c:	b2 07       	cpc	r27, r18
     17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
     180:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <main>
     184:	0c 94 22 09 	jmp	0x1244	; 0x1244 <_exit>

00000188 <__bad_interrupt>:
     188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <Keypad_init>:

int Key_padRow[] = {R0, R1, R2, R3}; //rows of the keypad
int Key_padCol[] = {C0, C1, C2, C3};//columns
char flag1=1;
void Keypad_init(){
	DataDir_KEYPAD_PORT &= ~((1 << R0) | (1 << R1) | (1 << R2) | (1 << R3));
     18c:	81 b3       	in	r24, 0x11	; 17
     18e:	92 b3       	in	r25, 0x12	; 18
     190:	80 7f       	andi	r24, 0xF0	; 240
     192:	92 bb       	out	0x12, r25	; 18
     194:	81 bb       	out	0x11, r24	; 17
	DataDir_KEYPAD_PORT |= ((1 << C0) | (1 << C1) | (1 << C2) | (1 << C3));
     196:	81 b3       	in	r24, 0x11	; 17
     198:	92 b3       	in	r25, 0x12	; 18
     19a:	80 6f       	ori	r24, 0xF0	; 240
     19c:	92 bb       	out	0x12, r25	; 18
     19e:	81 bb       	out	0x11, r24	; 17
	KEYPAD_PORT = 0xFF;
     1a0:	8f ef       	ldi	r24, 0xFF	; 255
     1a2:	90 e0       	ldi	r25, 0x00	; 0
     1a4:	93 bb       	out	0x13, r25	; 19
     1a6:	82 bb       	out	0x12, r24	; 18
     1a8:	08 95       	ret

000001aa <Keypad_getkey>:
}

char Keypad_getkey(){
	int i,j;
	for (i = 0; i < 4; i++){
     1aa:	60 e0       	ldi	r22, 0x00	; 0
     1ac:	70 e0       	ldi	r23, 0x00	; 0
     1ae:	a6 c0       	rjmp	.+332    	; 0x2fc <Keypad_getkey+0x152>
		KEYPAD_PORT |= ((1<<Key_padCol[0]) | (1<<Key_padCol[1]) | (1<<Key_padCol[2]) | (1<<Key_padCol[3]));
     1b0:	42 b3       	in	r20, 0x12	; 18
     1b2:	53 b3       	in	r21, 0x13	; 19
     1b4:	e1 e6       	ldi	r30, 0x61	; 97
     1b6:	f0 e0       	ldi	r31, 0x00	; 0
     1b8:	81 e0       	ldi	r24, 0x01	; 1
     1ba:	90 e0       	ldi	r25, 0x00	; 0
     1bc:	dc 01       	movw	r26, r24
     1be:	00 80       	ld	r0, Z
     1c0:	02 c0       	rjmp	.+4      	; 0x1c6 <Keypad_getkey+0x1c>
     1c2:	aa 0f       	add	r26, r26
     1c4:	bb 1f       	adc	r27, r27
     1c6:	0a 94       	dec	r0
     1c8:	e2 f7       	brpl	.-8      	; 0x1c2 <Keypad_getkey+0x18>
     1ca:	9c 01       	movw	r18, r24
     1cc:	02 80       	ldd	r0, Z+2	; 0x02
     1ce:	02 c0       	rjmp	.+4      	; 0x1d4 <Keypad_getkey+0x2a>
     1d0:	22 0f       	add	r18, r18
     1d2:	33 1f       	adc	r19, r19
     1d4:	0a 94       	dec	r0
     1d6:	e2 f7       	brpl	.-8      	; 0x1d0 <Keypad_getkey+0x26>
     1d8:	2a 2b       	or	r18, r26
     1da:	3b 2b       	or	r19, r27
     1dc:	dc 01       	movw	r26, r24
     1de:	04 80       	ldd	r0, Z+4	; 0x04
     1e0:	02 c0       	rjmp	.+4      	; 0x1e6 <Keypad_getkey+0x3c>
     1e2:	aa 0f       	add	r26, r26
     1e4:	bb 1f       	adc	r27, r27
     1e6:	0a 94       	dec	r0
     1e8:	e2 f7       	brpl	.-8      	; 0x1e2 <Keypad_getkey+0x38>
     1ea:	2a 2b       	or	r18, r26
     1ec:	3b 2b       	or	r19, r27
     1ee:	dc 01       	movw	r26, r24
     1f0:	06 80       	ldd	r0, Z+6	; 0x06
     1f2:	02 c0       	rjmp	.+4      	; 0x1f8 <Keypad_getkey+0x4e>
     1f4:	aa 0f       	add	r26, r26
     1f6:	bb 1f       	adc	r27, r27
     1f8:	0a 94       	dec	r0
     1fa:	e2 f7       	brpl	.-8      	; 0x1f4 <Keypad_getkey+0x4a>
     1fc:	2a 2b       	or	r18, r26
     1fe:	3b 2b       	or	r19, r27
     200:	24 2b       	or	r18, r20
     202:	35 2b       	or	r19, r21
     204:	33 bb       	out	0x13, r19	; 19
     206:	22 bb       	out	0x12, r18	; 18
		KEYPAD_PORT &= ~(1<<Key_padCol[i]);
     208:	22 b3       	in	r18, 0x12	; 18
     20a:	33 b3       	in	r19, 0x13	; 19
     20c:	fb 01       	movw	r30, r22
     20e:	ee 0f       	add	r30, r30
     210:	ff 1f       	adc	r31, r31
     212:	ef 59       	subi	r30, 0x9F	; 159
     214:	ff 4f       	sbci	r31, 0xFF	; 255
     216:	00 80       	ld	r0, Z
     218:	02 c0       	rjmp	.+4      	; 0x21e <Keypad_getkey+0x74>
     21a:	88 0f       	add	r24, r24
     21c:	99 1f       	adc	r25, r25
     21e:	0a 94       	dec	r0
     220:	e2 f7       	brpl	.-8      	; 0x21a <Keypad_getkey+0x70>
     222:	80 95       	com	r24
     224:	90 95       	com	r25
     226:	82 23       	and	r24, r18
     228:	93 23       	and	r25, r19
     22a:	93 bb       	out	0x13, r25	; 19
     22c:	82 bb       	out	0x12, r24	; 18
		for(j = 0; j < 4; j++){
     22e:	80 e0       	ldi	r24, 0x00	; 0
     230:	90 e0       	ldi	r25, 0x00	; 0
     232:	5e c0       	rjmp	.+188    	; 0x2f0 <Keypad_getkey+0x146>
			if (!(keypadPIN & (1 << Key_padRow[j])))
     234:	40 b3       	in	r20, 0x10	; 16
     236:	51 b3       	in	r21, 0x11	; 17
     238:	fc 01       	movw	r30, r24
     23a:	ee 0f       	add	r30, r30
     23c:	ff 1f       	adc	r31, r31
     23e:	e7 59       	subi	r30, 0x97	; 151
     240:	ff 4f       	sbci	r31, 0xFF	; 255
     242:	21 e0       	ldi	r18, 0x01	; 1
     244:	30 e0       	ldi	r19, 0x00	; 0
     246:	00 80       	ld	r0, Z
     248:	02 c0       	rjmp	.+4      	; 0x24e <Keypad_getkey+0xa4>
     24a:	22 0f       	add	r18, r18
     24c:	33 1f       	adc	r19, r19
     24e:	0a 94       	dec	r0
     250:	e2 f7       	brpl	.-8      	; 0x24a <Keypad_getkey+0xa0>
     252:	24 23       	and	r18, r20
     254:	35 23       	and	r19, r21
     256:	23 2b       	or	r18, r19
     258:	09 f0       	breq	.+2      	; 0x25c <Keypad_getkey+0xb2>
     25a:	46 c0       	rjmp	.+140    	; 0x2e8 <Keypad_getkey+0x13e>
			{
				if(flag1==1){
     25c:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     260:	21 30       	cpi	r18, 0x01	; 1
     262:	09 f0       	breq	.+2      	; 0x266 <Keypad_getkey+0xbc>
     264:	44 c0       	rjmp	.+136    	; 0x2ee <Keypad_getkey+0x144>
					flag1=0;
     266:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
					switch(i){
     26a:	61 30       	cpi	r22, 0x01	; 1
     26c:	71 05       	cpc	r23, r1
     26e:	c1 f0       	breq	.+48     	; 0x2a0 <Keypad_getkey+0xf6>
     270:	24 f4       	brge	.+8      	; 0x27a <Keypad_getkey+0xd0>
     272:	61 15       	cp	r22, r1
     274:	71 05       	cpc	r23, r1
     276:	41 f0       	breq	.+16     	; 0x288 <Keypad_getkey+0xde>
     278:	3a c0       	rjmp	.+116    	; 0x2ee <Keypad_getkey+0x144>
     27a:	62 30       	cpi	r22, 0x02	; 2
     27c:	71 05       	cpc	r23, r1
     27e:	e1 f0       	breq	.+56     	; 0x2b8 <Keypad_getkey+0x10e>
     280:	63 30       	cpi	r22, 0x03	; 3
     282:	71 05       	cpc	r23, r1
     284:	29 f1       	breq	.+74     	; 0x2d0 <Keypad_getkey+0x126>
     286:	33 c0       	rjmp	.+102    	; 0x2ee <Keypad_getkey+0x144>
						case (0):
						if (j == 0) return '7';
     288:	00 97       	sbiw	r24, 0x00	; 0
     28a:	f1 f1       	breq	.+124    	; 0x308 <Keypad_getkey+0x15e>
						else if (j == 1) return '4';
     28c:	81 30       	cpi	r24, 0x01	; 1
     28e:	91 05       	cpc	r25, r1
     290:	e9 f1       	breq	.+122    	; 0x30c <Keypad_getkey+0x162>
						else if (j == 2) return '1';
     292:	82 30       	cpi	r24, 0x02	; 2
     294:	91 05       	cpc	r25, r1
     296:	e1 f1       	breq	.+120    	; 0x310 <Keypad_getkey+0x166>
						else if (j == 3) return '?';
     298:	83 30       	cpi	r24, 0x03	; 3
     29a:	91 05       	cpc	r25, r1
     29c:	41 f5       	brne	.+80     	; 0x2ee <Keypad_getkey+0x144>
     29e:	3a c0       	rjmp	.+116    	; 0x314 <Keypad_getkey+0x16a>
						break;
						case (1):
						if (j == 0) return '8';
     2a0:	00 97       	sbiw	r24, 0x00	; 0
     2a2:	d1 f1       	breq	.+116    	; 0x318 <Keypad_getkey+0x16e>
						else if (j == 1) return '5';
     2a4:	81 30       	cpi	r24, 0x01	; 1
     2a6:	91 05       	cpc	r25, r1
     2a8:	c9 f1       	breq	.+114    	; 0x31c <Keypad_getkey+0x172>
						else if (j == 2) return '2';
     2aa:	82 30       	cpi	r24, 0x02	; 2
     2ac:	91 05       	cpc	r25, r1
     2ae:	c1 f1       	breq	.+112    	; 0x320 <Keypad_getkey+0x176>
						else if (j == 3) return '0';
     2b0:	83 30       	cpi	r24, 0x03	; 3
     2b2:	91 05       	cpc	r25, r1
     2b4:	e1 f4       	brne	.+56     	; 0x2ee <Keypad_getkey+0x144>
     2b6:	36 c0       	rjmp	.+108    	; 0x324 <Keypad_getkey+0x17a>
						break;
						case (2):
						if (j == 0) return '9';
     2b8:	00 97       	sbiw	r24, 0x00	; 0
     2ba:	b1 f1       	breq	.+108    	; 0x328 <Keypad_getkey+0x17e>
						else if (j == 1) return '6';
     2bc:	81 30       	cpi	r24, 0x01	; 1
     2be:	91 05       	cpc	r25, r1
     2c0:	a9 f1       	breq	.+106    	; 0x32c <Keypad_getkey+0x182>
						else if (j == 2) return '3';
     2c2:	82 30       	cpi	r24, 0x02	; 2
     2c4:	91 05       	cpc	r25, r1
     2c6:	a1 f1       	breq	.+104    	; 0x330 <Keypad_getkey+0x186>
						else if (j == 3) return '=';
     2c8:	83 30       	cpi	r24, 0x03	; 3
     2ca:	91 05       	cpc	r25, r1
     2cc:	81 f4       	brne	.+32     	; 0x2ee <Keypad_getkey+0x144>
     2ce:	32 c0       	rjmp	.+100    	; 0x334 <Keypad_getkey+0x18a>
						break;
						case (3):
						if (j == 0) return '/';
     2d0:	00 97       	sbiw	r24, 0x00	; 0
     2d2:	91 f1       	breq	.+100    	; 0x338 <Keypad_getkey+0x18e>
						else if (j == 1) return '*';
     2d4:	81 30       	cpi	r24, 0x01	; 1
     2d6:	91 05       	cpc	r25, r1
     2d8:	89 f1       	breq	.+98     	; 0x33c <Keypad_getkey+0x192>
						else if (j == 2) return '-';
     2da:	82 30       	cpi	r24, 0x02	; 2
     2dc:	91 05       	cpc	r25, r1
     2de:	81 f1       	breq	.+96     	; 0x340 <Keypad_getkey+0x196>
						else if (j == 3) return '+';
     2e0:	83 30       	cpi	r24, 0x03	; 3
     2e2:	91 05       	cpc	r25, r1
     2e4:	21 f4       	brne	.+8      	; 0x2ee <Keypad_getkey+0x144>
     2e6:	2e c0       	rjmp	.+92     	; 0x344 <Keypad_getkey+0x19a>
						break;
					}	
				}	
				
			}
			else flag1=1;
     2e8:	21 e0       	ldi	r18, 0x01	; 1
     2ea:	20 93 60 00 	sts	0x0060, r18	; 0x800060 <__DATA_REGION_ORIGIN__>
char Keypad_getkey(){
	int i,j;
	for (i = 0; i < 4; i++){
		KEYPAD_PORT |= ((1<<Key_padCol[0]) | (1<<Key_padCol[1]) | (1<<Key_padCol[2]) | (1<<Key_padCol[3]));
		KEYPAD_PORT &= ~(1<<Key_padCol[i]);
		for(j = 0; j < 4; j++){
     2ee:	01 96       	adiw	r24, 0x01	; 1
     2f0:	84 30       	cpi	r24, 0x04	; 4
     2f2:	91 05       	cpc	r25, r1
     2f4:	0c f4       	brge	.+2      	; 0x2f8 <Keypad_getkey+0x14e>
     2f6:	9e cf       	rjmp	.-196    	; 0x234 <Keypad_getkey+0x8a>
	KEYPAD_PORT = 0xFF;
}

char Keypad_getkey(){
	int i,j;
	for (i = 0; i < 4; i++){
     2f8:	6f 5f       	subi	r22, 0xFF	; 255
     2fa:	7f 4f       	sbci	r23, 0xFF	; 255
     2fc:	64 30       	cpi	r22, 0x04	; 4
     2fe:	71 05       	cpc	r23, r1
     300:	0c f4       	brge	.+2      	; 0x304 <Keypad_getkey+0x15a>
     302:	56 cf       	rjmp	.-340    	; 0x1b0 <Keypad_getkey+0x6>
				
			}
			else flag1=1;
		}
	}
	return 'A';
     304:	81 e4       	ldi	r24, 0x41	; 65
     306:	08 95       	ret
			{
				if(flag1==1){
					flag1=0;
					switch(i){
						case (0):
						if (j == 0) return '7';
     308:	87 e3       	ldi	r24, 0x37	; 55
     30a:	08 95       	ret
						else if (j == 1) return '4';
     30c:	84 e3       	ldi	r24, 0x34	; 52
     30e:	08 95       	ret
						else if (j == 2) return '1';
     310:	81 e3       	ldi	r24, 0x31	; 49
     312:	08 95       	ret
						else if (j == 3) return '?';
     314:	8f e3       	ldi	r24, 0x3F	; 63
     316:	08 95       	ret
						break;
						case (1):
						if (j == 0) return '8';
     318:	88 e3       	ldi	r24, 0x38	; 56
     31a:	08 95       	ret
						else if (j == 1) return '5';
     31c:	85 e3       	ldi	r24, 0x35	; 53
     31e:	08 95       	ret
						else if (j == 2) return '2';
     320:	82 e3       	ldi	r24, 0x32	; 50
     322:	08 95       	ret
						else if (j == 3) return '0';
     324:	80 e3       	ldi	r24, 0x30	; 48
     326:	08 95       	ret
						break;
						case (2):
						if (j == 0) return '9';
     328:	89 e3       	ldi	r24, 0x39	; 57
     32a:	08 95       	ret
						else if (j == 1) return '6';
     32c:	86 e3       	ldi	r24, 0x36	; 54
     32e:	08 95       	ret
						else if (j == 2) return '3';
     330:	83 e3       	ldi	r24, 0x33	; 51
     332:	08 95       	ret
						else if (j == 3) return '=';
     334:	8d e3       	ldi	r24, 0x3D	; 61
     336:	08 95       	ret
						break;
						case (3):
						if (j == 0) return '/';
     338:	8f e2       	ldi	r24, 0x2F	; 47
     33a:	08 95       	ret
						else if (j == 1) return '*';
     33c:	8a e2       	ldi	r24, 0x2A	; 42
     33e:	08 95       	ret
						else if (j == 2) return '-';
     340:	8d e2       	ldi	r24, 0x2D	; 45
     342:	08 95       	ret
						else if (j == 3) return '+';
     344:	8b e2       	ldi	r24, 0x2B	; 43
			}
			else flag1=1;
		}
	}
	return 'A';
     346:	08 95       	ret

00000348 <LCD_SEND_EN>:
 *  Author: 20102
 */ 
static unsigned flag_init=0;
#include "LCD.h"
void LCD_SEND_EN(){
	setpit(lCD_PORT,E);
     348:	8b b3       	in	r24, 0x1b	; 27
     34a:	9c b3       	in	r25, 0x1c	; 28
     34c:	81 60       	ori	r24, 0x01	; 1
     34e:	9c bb       	out	0x1c, r25	; 28
     350:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     352:	87 ee       	ldi	r24, 0xE7	; 231
     354:	93 e0       	ldi	r25, 0x03	; 3
     356:	01 97       	sbiw	r24, 0x01	; 1
     358:	f1 f7       	brne	.-4      	; 0x356 <LCD_SEND_EN+0xe>
     35a:	00 c0       	rjmp	.+0      	; 0x35c <LCD_SEND_EN+0x14>
     35c:	00 00       	nop
	_delay_ms(1);
	clearpit(lCD_PORT,E);
     35e:	8b b3       	in	r24, 0x1b	; 27
     360:	9c b3       	in	r25, 0x1c	; 28
     362:	8e 7f       	andi	r24, 0xFE	; 254
     364:	9c bb       	out	0x1c, r25	; 28
     366:	8b bb       	out	0x1b, r24	; 27
     368:	08 95       	ret

0000036a <LCD_write_CMD>:
}
void LCD_write_CMD(char CMD){
     36a:	cf 93       	push	r28
     36c:	df 93       	push	r29
     36e:	c8 2f       	mov	r28, r24
	clearpit(lCD_PORT,RS);
     370:	8b b3       	in	r24, 0x1b	; 27
     372:	9c b3       	in	r25, 0x1c	; 28
     374:	8b 7f       	andi	r24, 0xFB	; 251
     376:	9c bb       	out	0x1c, r25	; 28
     378:	8b bb       	out	0x1b, r24	; 27
	clearpit(lCD_PORT,RW);
     37a:	8b b3       	in	r24, 0x1b	; 27
     37c:	9c b3       	in	r25, 0x1c	; 28
     37e:	8d 7f       	andi	r24, 0xFD	; 253
     380:	9c bb       	out	0x1c, r25	; 28
     382:	8b bb       	out	0x1b, r24	; 27
	//for left 4 pit HSP 
	lCD_PORT &=~(0b1111<<4);
     384:	8b b3       	in	r24, 0x1b	; 27
     386:	9c b3       	in	r25, 0x1c	; 28
     388:	8f 70       	andi	r24, 0x0F	; 15
     38a:	9c bb       	out	0x1c, r25	; 28
     38c:	8b bb       	out	0x1b, r24	; 27
	lCD_PORT |=((CMD>>4)<<4);
     38e:	2b b3       	in	r18, 0x1b	; 27
     390:	3c b3       	in	r19, 0x1c	; 28
     392:	8c 2f       	mov	r24, r28
     394:	82 95       	swap	r24
     396:	8f 70       	andi	r24, 0x0F	; 15
     398:	40 e1       	ldi	r20, 0x10	; 16
     39a:	84 9f       	mul	r24, r20
     39c:	c0 01       	movw	r24, r0
     39e:	11 24       	eor	r1, r1
     3a0:	82 2b       	or	r24, r18
     3a2:	93 2b       	or	r25, r19
     3a4:	9c bb       	out	0x1c, r25	; 28
     3a6:	8b bb       	out	0x1b, r24	; 27
	LCD_SEND_EN();
     3a8:	0e 94 a4 01 	call	0x348	; 0x348 <LCD_SEND_EN>
	
	if(flag_init)
     3ac:	80 91 82 00 	lds	r24, 0x0082	; 0x800082 <__data_end>
     3b0:	90 91 83 00 	lds	r25, 0x0083	; 0x800083 <__data_end+0x1>
     3b4:	89 2b       	or	r24, r25
     3b6:	89 f0       	breq	.+34     	; 0x3da <LCD_write_CMD+0x70>
	{
		//for right 4 pit LSP 
	lCD_PORT &=~(0b1111<<4);
     3b8:	8b b3       	in	r24, 0x1b	; 27
     3ba:	9c b3       	in	r25, 0x1c	; 28
     3bc:	8f 70       	andi	r24, 0x0F	; 15
     3be:	9c bb       	out	0x1c, r25	; 28
     3c0:	8b bb       	out	0x1b, r24	; 27
	lCD_PORT |=(CMD<<4);
     3c2:	8b b3       	in	r24, 0x1b	; 27
     3c4:	9c b3       	in	r25, 0x1c	; 28
     3c6:	20 e1       	ldi	r18, 0x10	; 16
     3c8:	c2 9f       	mul	r28, r18
     3ca:	e0 01       	movw	r28, r0
     3cc:	11 24       	eor	r1, r1
     3ce:	c8 2b       	or	r28, r24
     3d0:	d9 2b       	or	r29, r25
     3d2:	dc bb       	out	0x1c, r29	; 28
     3d4:	cb bb       	out	0x1b, r28	; 27
	LCD_SEND_EN();
     3d6:	0e 94 a4 01 	call	0x348	; 0x348 <LCD_SEND_EN>
     3da:	8f ec       	ldi	r24, 0xCF	; 207
     3dc:	97 e0       	ldi	r25, 0x07	; 7
     3de:	01 97       	sbiw	r24, 0x01	; 1
     3e0:	f1 f7       	brne	.-4      	; 0x3de <LCD_write_CMD+0x74>
     3e2:	00 c0       	rjmp	.+0      	; 0x3e4 <LCD_write_CMD+0x7a>
     3e4:	00 00       	nop
	
	}
	_delay_ms(2);
}
     3e6:	df 91       	pop	r29
     3e8:	cf 91       	pop	r28
     3ea:	08 95       	ret

000003ec <LCD_Init>:
void LCD_Init(){
	flag_init=0;
     3ec:	10 92 83 00 	sts	0x0083, r1	; 0x800083 <__data_end+0x1>
     3f0:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__data_end>
	setport(lCD_DDR);
     3f4:	8f ef       	ldi	r24, 0xFF	; 255
     3f6:	90 e0       	ldi	r25, 0x00	; 0
     3f8:	9b bb       	out	0x1b, r25	; 27
     3fa:	8a bb       	out	0x1a, r24	; 26
     3fc:	8f e1       	ldi	r24, 0x1F	; 31
     3fe:	9e e4       	ldi	r25, 0x4E	; 78
     400:	01 97       	sbiw	r24, 0x01	; 1
     402:	f1 f7       	brne	.-4      	; 0x400 <__EEPROM_REGION_LENGTH__>
     404:	00 c0       	rjmp	.+0      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
     406:	00 00       	nop
	_delay_ms(20);
	LCD_write_CMD(0x20);
     408:	80 e2       	ldi	r24, 0x20	; 32
     40a:	0e 94 b5 01 	call	0x36a	; 0x36a <LCD_write_CMD>
	LCD_write_CMD(0x20);
     40e:	80 e2       	ldi	r24, 0x20	; 32
     410:	0e 94 b5 01 	call	0x36a	; 0x36a <LCD_write_CMD>
	LCD_write_CMD(0x80);// 2 line and 5x7 pixel N=1 f=0
     414:	80 e8       	ldi	r24, 0x80	; 128
     416:	0e 94 b5 01 	call	0x36a	; 0x36a <LCD_write_CMD>
     41a:	87 ee       	ldi	r24, 0xE7	; 231
     41c:	93 e0       	ldi	r25, 0x03	; 3
     41e:	01 97       	sbiw	r24, 0x01	; 1
     420:	f1 f7       	brne	.-4      	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
     422:	00 c0       	rjmp	.+0      	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
     424:	00 00       	nop
	_delay_ms(1);
	LCD_write_CMD(0x00);
     426:	80 e0       	ldi	r24, 0x00	; 0
     428:	0e 94 b5 01 	call	0x36a	; 0x36a <LCD_write_CMD>
	LCD_write_CMD(0xC0);//cerser
     42c:	80 ec       	ldi	r24, 0xC0	; 192
     42e:	0e 94 b5 01 	call	0x36a	; 0x36a <LCD_write_CMD>
     432:	87 ee       	ldi	r24, 0xE7	; 231
     434:	93 e0       	ldi	r25, 0x03	; 3
     436:	01 97       	sbiw	r24, 0x01	; 1
     438:	f1 f7       	brne	.-4      	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
     43a:	00 c0       	rjmp	.+0      	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
     43c:	00 00       	nop
	_delay_ms(1);
	LCD_write_CMD(0x00);
     43e:	80 e0       	ldi	r24, 0x00	; 0
     440:	0e 94 b5 01 	call	0x36a	; 0x36a <LCD_write_CMD>
	LCD_write_CMD(0x10);
     444:	80 e1       	ldi	r24, 0x10	; 16
     446:	0e 94 b5 01 	call	0x36a	; 0x36a <LCD_write_CMD>
     44a:	8f ec       	ldi	r24, 0xCF	; 207
     44c:	97 e0       	ldi	r25, 0x07	; 7
     44e:	01 97       	sbiw	r24, 0x01	; 1
     450:	f1 f7       	brne	.-4      	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
     452:	00 c0       	rjmp	.+0      	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
     454:	00 00       	nop
	_delay_ms(2);
	
	flag_init=1;
     456:	81 e0       	ldi	r24, 0x01	; 1
     458:	90 e0       	ldi	r25, 0x00	; 0
     45a:	90 93 83 00 	sts	0x0083, r25	; 0x800083 <__data_end+0x1>
     45e:	80 93 82 00 	sts	0x0082, r24	; 0x800082 <__data_end>
     462:	08 95       	ret

00000464 <LCD_write_data>:
}
void LCD_write_data(char data){
     464:	cf 93       	push	r28
     466:	c8 2f       	mov	r28, r24
	setpit(lCD_PORT,RS);
     468:	8b b3       	in	r24, 0x1b	; 27
     46a:	9c b3       	in	r25, 0x1c	; 28
     46c:	84 60       	ori	r24, 0x04	; 4
     46e:	9c bb       	out	0x1c, r25	; 28
     470:	8b bb       	out	0x1b, r24	; 27
	clearpit(lCD_PORT,RW);
     472:	8b b3       	in	r24, 0x1b	; 27
     474:	9c b3       	in	r25, 0x1c	; 28
     476:	8d 7f       	andi	r24, 0xFD	; 253
     478:	9c bb       	out	0x1c, r25	; 28
     47a:	8b bb       	out	0x1b, r24	; 27
	//for left 4 pit HSP
	lCD_PORT &=~(0b1111<<4);
     47c:	8b b3       	in	r24, 0x1b	; 27
     47e:	9c b3       	in	r25, 0x1c	; 28
     480:	8f 70       	andi	r24, 0x0F	; 15
     482:	9c bb       	out	0x1c, r25	; 28
     484:	8b bb       	out	0x1b, r24	; 27
	lCD_PORT |=((data>>4)<<4);
     486:	2b b3       	in	r18, 0x1b	; 27
     488:	3c b3       	in	r19, 0x1c	; 28
     48a:	8c 2f       	mov	r24, r28
     48c:	82 95       	swap	r24
     48e:	8f 70       	andi	r24, 0x0F	; 15
     490:	40 e1       	ldi	r20, 0x10	; 16
     492:	84 9f       	mul	r24, r20
     494:	c0 01       	movw	r24, r0
     496:	11 24       	eor	r1, r1
     498:	82 2b       	or	r24, r18
     49a:	93 2b       	or	r25, r19
     49c:	9c bb       	out	0x1c, r25	; 28
     49e:	8b bb       	out	0x1b, r24	; 27
	LCD_SEND_EN();
     4a0:	0e 94 a4 01 	call	0x348	; 0x348 <LCD_SEND_EN>
	
	//for right 4 pit LSP
	lCD_PORT &=~(0b1111<<4);
     4a4:	8b b3       	in	r24, 0x1b	; 27
     4a6:	9c b3       	in	r25, 0x1c	; 28
     4a8:	8f 70       	andi	r24, 0x0F	; 15
     4aa:	9c bb       	out	0x1c, r25	; 28
     4ac:	8b bb       	out	0x1b, r24	; 27
	lCD_PORT |=(data<<4);
     4ae:	2b b3       	in	r18, 0x1b	; 27
     4b0:	3c b3       	in	r19, 0x1c	; 28
     4b2:	40 e1       	ldi	r20, 0x10	; 16
     4b4:	c4 9f       	mul	r28, r20
     4b6:	c0 01       	movw	r24, r0
     4b8:	11 24       	eor	r1, r1
     4ba:	82 2b       	or	r24, r18
     4bc:	93 2b       	or	r25, r19
     4be:	9c bb       	out	0x1c, r25	; 28
     4c0:	8b bb       	out	0x1b, r24	; 27
	LCD_SEND_EN();
     4c2:	0e 94 a4 01 	call	0x348	; 0x348 <LCD_SEND_EN>
     4c6:	87 ee       	ldi	r24, 0xE7	; 231
     4c8:	93 e0       	ldi	r25, 0x03	; 3
     4ca:	01 97       	sbiw	r24, 0x01	; 1
     4cc:	f1 f7       	brne	.-4      	; 0x4ca <LCD_write_data+0x66>
     4ce:	00 c0       	rjmp	.+0      	; 0x4d0 <LCD_write_data+0x6c>
     4d0:	00 00       	nop
		
	
	_delay_ms(1);
}
     4d2:	cf 91       	pop	r28
     4d4:	08 95       	ret

000004d6 <LCD_write_string>:
void LCD_write_string(char* data){
     4d6:	cf 93       	push	r28
     4d8:	df 93       	push	r29
     4da:	ec 01       	movw	r28, r24
	setpit(lCD_PORT,RS);
     4dc:	8b b3       	in	r24, 0x1b	; 27
     4de:	9c b3       	in	r25, 0x1c	; 28
     4e0:	84 60       	ori	r24, 0x04	; 4
     4e2:	9c bb       	out	0x1c, r25	; 28
     4e4:	8b bb       	out	0x1b, r24	; 27
	clearpit(lCD_PORT,RW);
     4e6:	8b b3       	in	r24, 0x1b	; 27
     4e8:	9c b3       	in	r25, 0x1c	; 28
     4ea:	8d 7f       	andi	r24, 0xFD	; 253
     4ec:	9c bb       	out	0x1c, r25	; 28
     4ee:	8b bb       	out	0x1b, r24	; 27
	
	while((*data)!=0){
     4f0:	03 c0       	rjmp	.+6      	; 0x4f8 <LCD_write_string+0x22>
		
	LCD_write_data(*data);
     4f2:	0e 94 32 02 	call	0x464	; 0x464 <LCD_write_data>
		data++;
     4f6:	21 96       	adiw	r28, 0x01	; 1
}
void LCD_write_string(char* data){
	setpit(lCD_PORT,RS);
	clearpit(lCD_PORT,RW);
	
	while((*data)!=0){
     4f8:	88 81       	ld	r24, Y
     4fa:	81 11       	cpse	r24, r1
     4fc:	fa cf       	rjmp	.-12     	; 0x4f2 <LCD_write_string+0x1c>
		
	LCD_write_data(*data);
		data++;
	}
	
}
     4fe:	df 91       	pop	r29
     500:	cf 91       	pop	r28
     502:	08 95       	ret

00000504 <LCD_setcerser>:
void LCD_setcerser(char ROW , char COL){
     504:	cf 93       	push	r28
     506:	df 93       	push	r29
     508:	1f 92       	push	r1
     50a:	cd b7       	in	r28, 0x3d	; 61
     50c:	de b7       	in	r29, 0x3e	; 62
	volatile unsigned char addres ;
	if(ROW<2 && COL<16){
     50e:	82 30       	cpi	r24, 0x02	; 2
     510:	50 f4       	brcc	.+20     	; 0x526 <LCD_setcerser+0x22>
     512:	60 31       	cpi	r22, 0x10	; 16
     514:	40 f4       	brcc	.+16     	; 0x526 <LCD_setcerser+0x22>
		addres =(0x40 * ROW) + COL ;
     516:	90 e4       	ldi	r25, 0x40	; 64
     518:	89 9f       	mul	r24, r25
     51a:	60 0d       	add	r22, r0
     51c:	11 24       	eor	r1, r1
     51e:	69 83       	std	Y+1, r22	; 0x01
		setpit(addres,7);
     520:	89 81       	ldd	r24, Y+1	; 0x01
     522:	80 68       	ori	r24, 0x80	; 128
     524:	89 83       	std	Y+1, r24	; 0x01
	}
	
	LCD_write_CMD(addres);
     526:	89 81       	ldd	r24, Y+1	; 0x01
     528:	0e 94 b5 01 	call	0x36a	; 0x36a <LCD_write_CMD>
}
     52c:	0f 90       	pop	r0
     52e:	df 91       	pop	r29
     530:	cf 91       	pop	r28
     532:	08 95       	ret

00000534 <LCD_clear>:
void LCD_clear(){
	LCD_write_CMD(LCD_CLEAR_SCREEN);
     534:	81 e0       	ldi	r24, 0x01	; 1
     536:	0e 94 b5 01 	call	0x36a	; 0x36a <LCD_write_CMD>
     53a:	08 95       	ret

0000053c <LCD_write_FLOATnumber>:
}

void LCD_write_FLOATnumber(float num,unsigned char digit){
     53c:	0f 93       	push	r16
     53e:	1f 93       	push	r17
     540:	cf 93       	push	r28
     542:	df 93       	push	r29
     544:	cd b7       	in	r28, 0x3d	; 61
     546:	de b7       	in	r29, 0x3e	; 62
     548:	64 97       	sbiw	r28, 0x14	; 20
     54a:	0f b6       	in	r0, 0x3f	; 63
     54c:	f8 94       	cli
     54e:	de bf       	out	0x3e, r29	; 62
     550:	0f be       	out	0x3f, r0	; 63
     552:	cd bf       	out	0x3d, r28	; 61
     554:	24 2f       	mov	r18, r20
	char text[20];
	dtostrf(num,0,digit,text);
     556:	8e 01       	movw	r16, r28
     558:	0f 5f       	subi	r16, 0xFF	; 255
     55a:	1f 4f       	sbci	r17, 0xFF	; 255
     55c:	40 e0       	ldi	r20, 0x00	; 0
     55e:	0e 94 e6 03 	call	0x7cc	; 0x7cc <dtostrf>
	LCD_write_string(text);
     562:	c8 01       	movw	r24, r16
     564:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <LCD_write_string>
}
     568:	64 96       	adiw	r28, 0x14	; 20
     56a:	0f b6       	in	r0, 0x3f	; 63
     56c:	f8 94       	cli
     56e:	de bf       	out	0x3e, r29	; 62
     570:	0f be       	out	0x3f, r0	; 63
     572:	cd bf       	out	0x3d, r28	; 61
     574:	df 91       	pop	r29
     576:	cf 91       	pop	r28
     578:	1f 91       	pop	r17
     57a:	0f 91       	pop	r16
     57c:	08 95       	ret

0000057e <LCD_write_INTnumber>:
void LCD_write_INTnumber(int num){
     57e:	0f 93       	push	r16
     580:	1f 93       	push	r17
     582:	cf 93       	push	r28
     584:	df 93       	push	r29
     586:	cd b7       	in	r28, 0x3d	; 61
     588:	de b7       	in	r29, 0x3e	; 62
     58a:	64 97       	sbiw	r28, 0x14	; 20
     58c:	0f b6       	in	r0, 0x3f	; 63
     58e:	f8 94       	cli
     590:	de bf       	out	0x3e, r29	; 62
     592:	0f be       	out	0x3f, r0	; 63
     594:	cd bf       	out	0x3d, r28	; 61
	char text[20];
	sprintf(text,"%d",num);
     596:	9f 93       	push	r25
     598:	8f 93       	push	r24
     59a:	81 e7       	ldi	r24, 0x71	; 113
     59c:	90 e0       	ldi	r25, 0x00	; 0
     59e:	9f 93       	push	r25
     5a0:	8f 93       	push	r24
     5a2:	8e 01       	movw	r16, r28
     5a4:	0f 5f       	subi	r16, 0xFF	; 255
     5a6:	1f 4f       	sbci	r17, 0xFF	; 255
     5a8:	1f 93       	push	r17
     5aa:	0f 93       	push	r16
     5ac:	0e 94 06 04 	call	0x80c	; 0x80c <sprintf>
	LCD_write_string(text);
     5b0:	c8 01       	movw	r24, r16
     5b2:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <LCD_write_string>
     5b6:	0f 90       	pop	r0
     5b8:	0f 90       	pop	r0
     5ba:	0f 90       	pop	r0
     5bc:	0f 90       	pop	r0
     5be:	0f 90       	pop	r0
     5c0:	0f 90       	pop	r0
     5c2:	64 96       	adiw	r28, 0x14	; 20
     5c4:	0f b6       	in	r0, 0x3f	; 63
     5c6:	f8 94       	cli
     5c8:	de bf       	out	0x3e, r29	; 62
     5ca:	0f be       	out	0x3f, r0	; 63
     5cc:	cd bf       	out	0x3d, r28	; 61
     5ce:	df 91       	pop	r29
     5d0:	cf 91       	pop	r28
     5d2:	1f 91       	pop	r17
     5d4:	0f 91       	pop	r16
     5d6:	08 95       	ret

000005d8 <main>:
#define F_CPU 4000000UL
#include "atmega32_DRIVERS/LCD_DRIVER/LCD.h"
#include "atmega32_DRIVERS/keypad/keypad.h"
int main(void)
{
	LCD_Init();
     5d8:	0e 94 f6 01 	call	0x3ec	; 0x3ec <LCD_Init>
	Keypad_init();
     5dc:	0e 94 c6 00 	call	0x18c	; 0x18c <Keypad_init>
	int i=10;
    
    float f =10.5;
     5e0:	0f 2e       	mov	r0, r31
     5e2:	c1 2c       	mov	r12, r1
     5e4:	d1 2c       	mov	r13, r1
     5e6:	f8 e2       	ldi	r31, 0x28	; 40
     5e8:	ef 2e       	mov	r14, r31
     5ea:	f1 e4       	ldi	r31, 0x41	; 65
     5ec:	ff 2e       	mov	r15, r31
     5ee:	f0 2d       	mov	r31, r0
#include "atmega32_DRIVERS/keypad/keypad.h"
int main(void)
{
	LCD_Init();
	Keypad_init();
	int i=10;
     5f0:	ca e0       	ldi	r28, 0x0A	; 10
     5f2:	d0 e0       	ldi	r29, 0x00	; 0
     5f4:	87 ee       	ldi	r24, 0xE7	; 231
     5f6:	93 e0       	ldi	r25, 0x03	; 3
     5f8:	01 97       	sbiw	r24, 0x01	; 1
     5fa:	f1 f7       	brne	.-4      	; 0x5f8 <main+0x20>
     5fc:	00 c0       	rjmp	.+0      	; 0x5fe <main+0x26>
     5fe:	00 00       	nop
    
    float f =10.5;
    while (1) 
    {
		_delay_ms(1);
		LCD_write_data(Keypad_getkey());
     600:	0e 94 d5 00 	call	0x1aa	; 0x1aa <Keypad_getkey>
     604:	0e 94 32 02 	call	0x464	; 0x464 <LCD_write_data>
		LCD_write_string(" moalshreif ");
     608:	84 e7       	ldi	r24, 0x74	; 116
     60a:	90 e0       	ldi	r25, 0x00	; 0
     60c:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <LCD_write_string>
		LCD_write_INTnumber(i);
     610:	ce 01       	movw	r24, r28
     612:	0e 94 bf 02 	call	0x57e	; 0x57e <LCD_write_INTnumber>
		LCD_setcerser(1,0);
     616:	60 e0       	ldi	r22, 0x00	; 0
     618:	81 e0       	ldi	r24, 0x01	; 1
     61a:	0e 94 82 02 	call	0x504	; 0x504 <LCD_setcerser>
		LCD_write_FLOATnumber(f,4);
     61e:	44 e0       	ldi	r20, 0x04	; 4
     620:	c7 01       	movw	r24, r14
     622:	b6 01       	movw	r22, r12
     624:	0e 94 9e 02 	call	0x53c	; 0x53c <LCD_write_FLOATnumber>
     628:	8f e4       	ldi	r24, 0x4F	; 79
     62a:	93 ec       	ldi	r25, 0xC3	; 195
     62c:	01 97       	sbiw	r24, 0x01	; 1
     62e:	f1 f7       	brne	.-4      	; 0x62c <main+0x54>
     630:	00 c0       	rjmp	.+0      	; 0x632 <main+0x5a>
     632:	00 00       	nop
		_delay_ms(50);
		LCD_clear();
     634:	0e 94 9a 02 	call	0x534	; 0x534 <LCD_clear>
		i--;
     638:	21 97       	sbiw	r28, 0x01	; 1
		f=f-.5f;
     63a:	20 e0       	ldi	r18, 0x00	; 0
     63c:	30 e0       	ldi	r19, 0x00	; 0
     63e:	40 e0       	ldi	r20, 0x00	; 0
     640:	5f e3       	ldi	r21, 0x3F	; 63
     642:	c7 01       	movw	r24, r14
     644:	b6 01       	movw	r22, r12
     646:	0e 94 28 03 	call	0x650	; 0x650 <__subsf3>
     64a:	6b 01       	movw	r12, r22
     64c:	7c 01       	movw	r14, r24
     64e:	d2 cf       	rjmp	.-92     	; 0x5f4 <main+0x1c>

00000650 <__subsf3>:
     650:	50 58       	subi	r21, 0x80	; 128

00000652 <__addsf3>:
     652:	bb 27       	eor	r27, r27
     654:	aa 27       	eor	r26, r26
     656:	0e 94 40 03 	call	0x680	; 0x680 <__addsf3x>
     65a:	0c 94 ac 03 	jmp	0x758	; 0x758 <__fp_round>
     65e:	0e 94 9e 03 	call	0x73c	; 0x73c <__fp_pscA>
     662:	38 f0       	brcs	.+14     	; 0x672 <__addsf3+0x20>
     664:	0e 94 a5 03 	call	0x74a	; 0x74a <__fp_pscB>
     668:	20 f0       	brcs	.+8      	; 0x672 <__addsf3+0x20>
     66a:	39 f4       	brne	.+14     	; 0x67a <__addsf3+0x28>
     66c:	9f 3f       	cpi	r25, 0xFF	; 255
     66e:	19 f4       	brne	.+6      	; 0x676 <__addsf3+0x24>
     670:	26 f4       	brtc	.+8      	; 0x67a <__addsf3+0x28>
     672:	0c 94 9b 03 	jmp	0x736	; 0x736 <__fp_nan>
     676:	0e f4       	brtc	.+2      	; 0x67a <__addsf3+0x28>
     678:	e0 95       	com	r30
     67a:	e7 fb       	bst	r30, 7
     67c:	0c 94 95 03 	jmp	0x72a	; 0x72a <__fp_inf>

00000680 <__addsf3x>:
     680:	e9 2f       	mov	r30, r25
     682:	0e 94 bd 03 	call	0x77a	; 0x77a <__fp_split3>
     686:	58 f3       	brcs	.-42     	; 0x65e <__addsf3+0xc>
     688:	ba 17       	cp	r27, r26
     68a:	62 07       	cpc	r22, r18
     68c:	73 07       	cpc	r23, r19
     68e:	84 07       	cpc	r24, r20
     690:	95 07       	cpc	r25, r21
     692:	20 f0       	brcs	.+8      	; 0x69c <__addsf3x+0x1c>
     694:	79 f4       	brne	.+30     	; 0x6b4 <__addsf3x+0x34>
     696:	a6 f5       	brtc	.+104    	; 0x700 <__addsf3x+0x80>
     698:	0c 94 df 03 	jmp	0x7be	; 0x7be <__fp_zero>
     69c:	0e f4       	brtc	.+2      	; 0x6a0 <__addsf3x+0x20>
     69e:	e0 95       	com	r30
     6a0:	0b 2e       	mov	r0, r27
     6a2:	ba 2f       	mov	r27, r26
     6a4:	a0 2d       	mov	r26, r0
     6a6:	0b 01       	movw	r0, r22
     6a8:	b9 01       	movw	r22, r18
     6aa:	90 01       	movw	r18, r0
     6ac:	0c 01       	movw	r0, r24
     6ae:	ca 01       	movw	r24, r20
     6b0:	a0 01       	movw	r20, r0
     6b2:	11 24       	eor	r1, r1
     6b4:	ff 27       	eor	r31, r31
     6b6:	59 1b       	sub	r21, r25
     6b8:	99 f0       	breq	.+38     	; 0x6e0 <__addsf3x+0x60>
     6ba:	59 3f       	cpi	r21, 0xF9	; 249
     6bc:	50 f4       	brcc	.+20     	; 0x6d2 <__addsf3x+0x52>
     6be:	50 3e       	cpi	r21, 0xE0	; 224
     6c0:	68 f1       	brcs	.+90     	; 0x71c <__addsf3x+0x9c>
     6c2:	1a 16       	cp	r1, r26
     6c4:	f0 40       	sbci	r31, 0x00	; 0
     6c6:	a2 2f       	mov	r26, r18
     6c8:	23 2f       	mov	r18, r19
     6ca:	34 2f       	mov	r19, r20
     6cc:	44 27       	eor	r20, r20
     6ce:	58 5f       	subi	r21, 0xF8	; 248
     6d0:	f3 cf       	rjmp	.-26     	; 0x6b8 <__addsf3x+0x38>
     6d2:	46 95       	lsr	r20
     6d4:	37 95       	ror	r19
     6d6:	27 95       	ror	r18
     6d8:	a7 95       	ror	r26
     6da:	f0 40       	sbci	r31, 0x00	; 0
     6dc:	53 95       	inc	r21
     6de:	c9 f7       	brne	.-14     	; 0x6d2 <__addsf3x+0x52>
     6e0:	7e f4       	brtc	.+30     	; 0x700 <__addsf3x+0x80>
     6e2:	1f 16       	cp	r1, r31
     6e4:	ba 0b       	sbc	r27, r26
     6e6:	62 0b       	sbc	r22, r18
     6e8:	73 0b       	sbc	r23, r19
     6ea:	84 0b       	sbc	r24, r20
     6ec:	ba f0       	brmi	.+46     	; 0x71c <__addsf3x+0x9c>
     6ee:	91 50       	subi	r25, 0x01	; 1
     6f0:	a1 f0       	breq	.+40     	; 0x71a <__addsf3x+0x9a>
     6f2:	ff 0f       	add	r31, r31
     6f4:	bb 1f       	adc	r27, r27
     6f6:	66 1f       	adc	r22, r22
     6f8:	77 1f       	adc	r23, r23
     6fa:	88 1f       	adc	r24, r24
     6fc:	c2 f7       	brpl	.-16     	; 0x6ee <__addsf3x+0x6e>
     6fe:	0e c0       	rjmp	.+28     	; 0x71c <__addsf3x+0x9c>
     700:	ba 0f       	add	r27, r26
     702:	62 1f       	adc	r22, r18
     704:	73 1f       	adc	r23, r19
     706:	84 1f       	adc	r24, r20
     708:	48 f4       	brcc	.+18     	; 0x71c <__addsf3x+0x9c>
     70a:	87 95       	ror	r24
     70c:	77 95       	ror	r23
     70e:	67 95       	ror	r22
     710:	b7 95       	ror	r27
     712:	f7 95       	ror	r31
     714:	9e 3f       	cpi	r25, 0xFE	; 254
     716:	08 f0       	brcs	.+2      	; 0x71a <__addsf3x+0x9a>
     718:	b0 cf       	rjmp	.-160    	; 0x67a <__addsf3+0x28>
     71a:	93 95       	inc	r25
     71c:	88 0f       	add	r24, r24
     71e:	08 f0       	brcs	.+2      	; 0x722 <__addsf3x+0xa2>
     720:	99 27       	eor	r25, r25
     722:	ee 0f       	add	r30, r30
     724:	97 95       	ror	r25
     726:	87 95       	ror	r24
     728:	08 95       	ret

0000072a <__fp_inf>:
     72a:	97 f9       	bld	r25, 7
     72c:	9f 67       	ori	r25, 0x7F	; 127
     72e:	80 e8       	ldi	r24, 0x80	; 128
     730:	70 e0       	ldi	r23, 0x00	; 0
     732:	60 e0       	ldi	r22, 0x00	; 0
     734:	08 95       	ret

00000736 <__fp_nan>:
     736:	9f ef       	ldi	r25, 0xFF	; 255
     738:	80 ec       	ldi	r24, 0xC0	; 192
     73a:	08 95       	ret

0000073c <__fp_pscA>:
     73c:	00 24       	eor	r0, r0
     73e:	0a 94       	dec	r0
     740:	16 16       	cp	r1, r22
     742:	17 06       	cpc	r1, r23
     744:	18 06       	cpc	r1, r24
     746:	09 06       	cpc	r0, r25
     748:	08 95       	ret

0000074a <__fp_pscB>:
     74a:	00 24       	eor	r0, r0
     74c:	0a 94       	dec	r0
     74e:	12 16       	cp	r1, r18
     750:	13 06       	cpc	r1, r19
     752:	14 06       	cpc	r1, r20
     754:	05 06       	cpc	r0, r21
     756:	08 95       	ret

00000758 <__fp_round>:
     758:	09 2e       	mov	r0, r25
     75a:	03 94       	inc	r0
     75c:	00 0c       	add	r0, r0
     75e:	11 f4       	brne	.+4      	; 0x764 <__fp_round+0xc>
     760:	88 23       	and	r24, r24
     762:	52 f0       	brmi	.+20     	; 0x778 <__fp_round+0x20>
     764:	bb 0f       	add	r27, r27
     766:	40 f4       	brcc	.+16     	; 0x778 <__fp_round+0x20>
     768:	bf 2b       	or	r27, r31
     76a:	11 f4       	brne	.+4      	; 0x770 <__fp_round+0x18>
     76c:	60 ff       	sbrs	r22, 0
     76e:	04 c0       	rjmp	.+8      	; 0x778 <__fp_round+0x20>
     770:	6f 5f       	subi	r22, 0xFF	; 255
     772:	7f 4f       	sbci	r23, 0xFF	; 255
     774:	8f 4f       	sbci	r24, 0xFF	; 255
     776:	9f 4f       	sbci	r25, 0xFF	; 255
     778:	08 95       	ret

0000077a <__fp_split3>:
     77a:	57 fd       	sbrc	r21, 7
     77c:	90 58       	subi	r25, 0x80	; 128
     77e:	44 0f       	add	r20, r20
     780:	55 1f       	adc	r21, r21
     782:	59 f0       	breq	.+22     	; 0x79a <__fp_splitA+0x10>
     784:	5f 3f       	cpi	r21, 0xFF	; 255
     786:	71 f0       	breq	.+28     	; 0x7a4 <__fp_splitA+0x1a>
     788:	47 95       	ror	r20

0000078a <__fp_splitA>:
     78a:	88 0f       	add	r24, r24
     78c:	97 fb       	bst	r25, 7
     78e:	99 1f       	adc	r25, r25
     790:	61 f0       	breq	.+24     	; 0x7aa <__fp_splitA+0x20>
     792:	9f 3f       	cpi	r25, 0xFF	; 255
     794:	79 f0       	breq	.+30     	; 0x7b4 <__fp_splitA+0x2a>
     796:	87 95       	ror	r24
     798:	08 95       	ret
     79a:	12 16       	cp	r1, r18
     79c:	13 06       	cpc	r1, r19
     79e:	14 06       	cpc	r1, r20
     7a0:	55 1f       	adc	r21, r21
     7a2:	f2 cf       	rjmp	.-28     	; 0x788 <__fp_split3+0xe>
     7a4:	46 95       	lsr	r20
     7a6:	f1 df       	rcall	.-30     	; 0x78a <__fp_splitA>
     7a8:	08 c0       	rjmp	.+16     	; 0x7ba <__fp_splitA+0x30>
     7aa:	16 16       	cp	r1, r22
     7ac:	17 06       	cpc	r1, r23
     7ae:	18 06       	cpc	r1, r24
     7b0:	99 1f       	adc	r25, r25
     7b2:	f1 cf       	rjmp	.-30     	; 0x796 <__fp_splitA+0xc>
     7b4:	86 95       	lsr	r24
     7b6:	71 05       	cpc	r23, r1
     7b8:	61 05       	cpc	r22, r1
     7ba:	08 94       	sec
     7bc:	08 95       	ret

000007be <__fp_zero>:
     7be:	e8 94       	clt

000007c0 <__fp_szero>:
     7c0:	bb 27       	eor	r27, r27
     7c2:	66 27       	eor	r22, r22
     7c4:	77 27       	eor	r23, r23
     7c6:	cb 01       	movw	r24, r22
     7c8:	97 f9       	bld	r25, 7
     7ca:	08 95       	ret

000007cc <dtostrf>:
     7cc:	ef 92       	push	r14
     7ce:	0f 93       	push	r16
     7d0:	1f 93       	push	r17
     7d2:	cf 93       	push	r28
     7d4:	df 93       	push	r29
     7d6:	e8 01       	movw	r28, r16
     7d8:	47 fd       	sbrc	r20, 7
     7da:	02 c0       	rjmp	.+4      	; 0x7e0 <dtostrf+0x14>
     7dc:	34 e0       	ldi	r19, 0x04	; 4
     7de:	01 c0       	rjmp	.+2      	; 0x7e2 <dtostrf+0x16>
     7e0:	34 e1       	ldi	r19, 0x14	; 20
     7e2:	04 2e       	mov	r0, r20
     7e4:	00 0c       	add	r0, r0
     7e6:	55 0b       	sbc	r21, r21
     7e8:	57 ff       	sbrs	r21, 7
     7ea:	03 c0       	rjmp	.+6      	; 0x7f2 <dtostrf+0x26>
     7ec:	51 95       	neg	r21
     7ee:	41 95       	neg	r20
     7f0:	51 09       	sbc	r21, r1
     7f2:	e3 2e       	mov	r14, r19
     7f4:	02 2f       	mov	r16, r18
     7f6:	24 2f       	mov	r18, r20
     7f8:	ae 01       	movw	r20, r28
     7fa:	0e 94 09 06 	call	0xc12	; 0xc12 <dtoa_prf>
     7fe:	ce 01       	movw	r24, r28
     800:	df 91       	pop	r29
     802:	cf 91       	pop	r28
     804:	1f 91       	pop	r17
     806:	0f 91       	pop	r16
     808:	ef 90       	pop	r14
     80a:	08 95       	ret

0000080c <sprintf>:
     80c:	ae e0       	ldi	r26, 0x0E	; 14
     80e:	b0 e0       	ldi	r27, 0x00	; 0
     810:	ec e0       	ldi	r30, 0x0C	; 12
     812:	f4 e0       	ldi	r31, 0x04	; 4
     814:	0c 94 f9 08 	jmp	0x11f2	; 0x11f2 <__prologue_saves__+0x1c>
     818:	0d 89       	ldd	r16, Y+21	; 0x15
     81a:	1e 89       	ldd	r17, Y+22	; 0x16
     81c:	86 e0       	ldi	r24, 0x06	; 6
     81e:	8c 83       	std	Y+4, r24	; 0x04
     820:	1a 83       	std	Y+2, r17	; 0x02
     822:	09 83       	std	Y+1, r16	; 0x01
     824:	8f ef       	ldi	r24, 0xFF	; 255
     826:	9f e7       	ldi	r25, 0x7F	; 127
     828:	9e 83       	std	Y+6, r25	; 0x06
     82a:	8d 83       	std	Y+5, r24	; 0x05
     82c:	ae 01       	movw	r20, r28
     82e:	47 5e       	subi	r20, 0xE7	; 231
     830:	5f 4f       	sbci	r21, 0xFF	; 255
     832:	6f 89       	ldd	r22, Y+23	; 0x17
     834:	78 8d       	ldd	r23, Y+24	; 0x18
     836:	ce 01       	movw	r24, r28
     838:	01 96       	adiw	r24, 0x01	; 1
     83a:	0e 94 28 04 	call	0x850	; 0x850 <vfprintf>
     83e:	ef 81       	ldd	r30, Y+7	; 0x07
     840:	f8 85       	ldd	r31, Y+8	; 0x08
     842:	e0 0f       	add	r30, r16
     844:	f1 1f       	adc	r31, r17
     846:	10 82       	st	Z, r1
     848:	2e 96       	adiw	r28, 0x0e	; 14
     84a:	e4 e0       	ldi	r30, 0x04	; 4
     84c:	0c 94 15 09 	jmp	0x122a	; 0x122a <__epilogue_restores__+0x1c>

00000850 <vfprintf>:
     850:	ab e0       	ldi	r26, 0x0B	; 11
     852:	b0 e0       	ldi	r27, 0x00	; 0
     854:	ee e2       	ldi	r30, 0x2E	; 46
     856:	f4 e0       	ldi	r31, 0x04	; 4
     858:	0c 94 eb 08 	jmp	0x11d6	; 0x11d6 <__prologue_saves__>
     85c:	6c 01       	movw	r12, r24
     85e:	7b 01       	movw	r14, r22
     860:	8a 01       	movw	r16, r20
     862:	fc 01       	movw	r30, r24
     864:	17 82       	std	Z+7, r1	; 0x07
     866:	16 82       	std	Z+6, r1	; 0x06
     868:	83 81       	ldd	r24, Z+3	; 0x03
     86a:	81 ff       	sbrs	r24, 1
     86c:	cc c1       	rjmp	.+920    	; 0xc06 <__stack+0x3a7>
     86e:	ce 01       	movw	r24, r28
     870:	01 96       	adiw	r24, 0x01	; 1
     872:	3c 01       	movw	r6, r24
     874:	f6 01       	movw	r30, r12
     876:	93 81       	ldd	r25, Z+3	; 0x03
     878:	f7 01       	movw	r30, r14
     87a:	93 fd       	sbrc	r25, 3
     87c:	85 91       	lpm	r24, Z+
     87e:	93 ff       	sbrs	r25, 3
     880:	81 91       	ld	r24, Z+
     882:	7f 01       	movw	r14, r30
     884:	88 23       	and	r24, r24
     886:	09 f4       	brne	.+2      	; 0x88a <__stack+0x2b>
     888:	ba c1       	rjmp	.+884    	; 0xbfe <__stack+0x39f>
     88a:	85 32       	cpi	r24, 0x25	; 37
     88c:	39 f4       	brne	.+14     	; 0x89c <__stack+0x3d>
     88e:	93 fd       	sbrc	r25, 3
     890:	85 91       	lpm	r24, Z+
     892:	93 ff       	sbrs	r25, 3
     894:	81 91       	ld	r24, Z+
     896:	7f 01       	movw	r14, r30
     898:	85 32       	cpi	r24, 0x25	; 37
     89a:	29 f4       	brne	.+10     	; 0x8a6 <__stack+0x47>
     89c:	b6 01       	movw	r22, r12
     89e:	90 e0       	ldi	r25, 0x00	; 0
     8a0:	0e 94 51 08 	call	0x10a2	; 0x10a2 <fputc>
     8a4:	e7 cf       	rjmp	.-50     	; 0x874 <__stack+0x15>
     8a6:	91 2c       	mov	r9, r1
     8a8:	21 2c       	mov	r2, r1
     8aa:	31 2c       	mov	r3, r1
     8ac:	ff e1       	ldi	r31, 0x1F	; 31
     8ae:	f3 15       	cp	r31, r3
     8b0:	d8 f0       	brcs	.+54     	; 0x8e8 <__stack+0x89>
     8b2:	8b 32       	cpi	r24, 0x2B	; 43
     8b4:	79 f0       	breq	.+30     	; 0x8d4 <__stack+0x75>
     8b6:	38 f4       	brcc	.+14     	; 0x8c6 <__stack+0x67>
     8b8:	80 32       	cpi	r24, 0x20	; 32
     8ba:	79 f0       	breq	.+30     	; 0x8da <__stack+0x7b>
     8bc:	83 32       	cpi	r24, 0x23	; 35
     8be:	a1 f4       	brne	.+40     	; 0x8e8 <__stack+0x89>
     8c0:	23 2d       	mov	r18, r3
     8c2:	20 61       	ori	r18, 0x10	; 16
     8c4:	1d c0       	rjmp	.+58     	; 0x900 <__stack+0xa1>
     8c6:	8d 32       	cpi	r24, 0x2D	; 45
     8c8:	61 f0       	breq	.+24     	; 0x8e2 <__stack+0x83>
     8ca:	80 33       	cpi	r24, 0x30	; 48
     8cc:	69 f4       	brne	.+26     	; 0x8e8 <__stack+0x89>
     8ce:	23 2d       	mov	r18, r3
     8d0:	21 60       	ori	r18, 0x01	; 1
     8d2:	16 c0       	rjmp	.+44     	; 0x900 <__stack+0xa1>
     8d4:	83 2d       	mov	r24, r3
     8d6:	82 60       	ori	r24, 0x02	; 2
     8d8:	38 2e       	mov	r3, r24
     8da:	e3 2d       	mov	r30, r3
     8dc:	e4 60       	ori	r30, 0x04	; 4
     8de:	3e 2e       	mov	r3, r30
     8e0:	2a c0       	rjmp	.+84     	; 0x936 <__stack+0xd7>
     8e2:	f3 2d       	mov	r31, r3
     8e4:	f8 60       	ori	r31, 0x08	; 8
     8e6:	1d c0       	rjmp	.+58     	; 0x922 <__stack+0xc3>
     8e8:	37 fc       	sbrc	r3, 7
     8ea:	2d c0       	rjmp	.+90     	; 0x946 <__stack+0xe7>
     8ec:	20 ed       	ldi	r18, 0xD0	; 208
     8ee:	28 0f       	add	r18, r24
     8f0:	2a 30       	cpi	r18, 0x0A	; 10
     8f2:	40 f0       	brcs	.+16     	; 0x904 <__stack+0xa5>
     8f4:	8e 32       	cpi	r24, 0x2E	; 46
     8f6:	b9 f4       	brne	.+46     	; 0x926 <__stack+0xc7>
     8f8:	36 fc       	sbrc	r3, 6
     8fa:	81 c1       	rjmp	.+770    	; 0xbfe <__stack+0x39f>
     8fc:	23 2d       	mov	r18, r3
     8fe:	20 64       	ori	r18, 0x40	; 64
     900:	32 2e       	mov	r3, r18
     902:	19 c0       	rjmp	.+50     	; 0x936 <__stack+0xd7>
     904:	36 fe       	sbrs	r3, 6
     906:	06 c0       	rjmp	.+12     	; 0x914 <__stack+0xb5>
     908:	8a e0       	ldi	r24, 0x0A	; 10
     90a:	98 9e       	mul	r9, r24
     90c:	20 0d       	add	r18, r0
     90e:	11 24       	eor	r1, r1
     910:	92 2e       	mov	r9, r18
     912:	11 c0       	rjmp	.+34     	; 0x936 <__stack+0xd7>
     914:	ea e0       	ldi	r30, 0x0A	; 10
     916:	2e 9e       	mul	r2, r30
     918:	20 0d       	add	r18, r0
     91a:	11 24       	eor	r1, r1
     91c:	22 2e       	mov	r2, r18
     91e:	f3 2d       	mov	r31, r3
     920:	f0 62       	ori	r31, 0x20	; 32
     922:	3f 2e       	mov	r3, r31
     924:	08 c0       	rjmp	.+16     	; 0x936 <__stack+0xd7>
     926:	8c 36       	cpi	r24, 0x6C	; 108
     928:	21 f4       	brne	.+8      	; 0x932 <__stack+0xd3>
     92a:	83 2d       	mov	r24, r3
     92c:	80 68       	ori	r24, 0x80	; 128
     92e:	38 2e       	mov	r3, r24
     930:	02 c0       	rjmp	.+4      	; 0x936 <__stack+0xd7>
     932:	88 36       	cpi	r24, 0x68	; 104
     934:	41 f4       	brne	.+16     	; 0x946 <__stack+0xe7>
     936:	f7 01       	movw	r30, r14
     938:	93 fd       	sbrc	r25, 3
     93a:	85 91       	lpm	r24, Z+
     93c:	93 ff       	sbrs	r25, 3
     93e:	81 91       	ld	r24, Z+
     940:	7f 01       	movw	r14, r30
     942:	81 11       	cpse	r24, r1
     944:	b3 cf       	rjmp	.-154    	; 0x8ac <__stack+0x4d>
     946:	98 2f       	mov	r25, r24
     948:	9f 7d       	andi	r25, 0xDF	; 223
     94a:	95 54       	subi	r25, 0x45	; 69
     94c:	93 30       	cpi	r25, 0x03	; 3
     94e:	28 f4       	brcc	.+10     	; 0x95a <__stack+0xfb>
     950:	0c 5f       	subi	r16, 0xFC	; 252
     952:	1f 4f       	sbci	r17, 0xFF	; 255
     954:	9f e3       	ldi	r25, 0x3F	; 63
     956:	99 83       	std	Y+1, r25	; 0x01
     958:	0d c0       	rjmp	.+26     	; 0x974 <__stack+0x115>
     95a:	83 36       	cpi	r24, 0x63	; 99
     95c:	31 f0       	breq	.+12     	; 0x96a <__stack+0x10b>
     95e:	83 37       	cpi	r24, 0x73	; 115
     960:	71 f0       	breq	.+28     	; 0x97e <__stack+0x11f>
     962:	83 35       	cpi	r24, 0x53	; 83
     964:	09 f0       	breq	.+2      	; 0x968 <__stack+0x109>
     966:	59 c0       	rjmp	.+178    	; 0xa1a <__stack+0x1bb>
     968:	21 c0       	rjmp	.+66     	; 0x9ac <__stack+0x14d>
     96a:	f8 01       	movw	r30, r16
     96c:	80 81       	ld	r24, Z
     96e:	89 83       	std	Y+1, r24	; 0x01
     970:	0e 5f       	subi	r16, 0xFE	; 254
     972:	1f 4f       	sbci	r17, 0xFF	; 255
     974:	88 24       	eor	r8, r8
     976:	83 94       	inc	r8
     978:	91 2c       	mov	r9, r1
     97a:	53 01       	movw	r10, r6
     97c:	13 c0       	rjmp	.+38     	; 0x9a4 <__stack+0x145>
     97e:	28 01       	movw	r4, r16
     980:	f2 e0       	ldi	r31, 0x02	; 2
     982:	4f 0e       	add	r4, r31
     984:	51 1c       	adc	r5, r1
     986:	f8 01       	movw	r30, r16
     988:	a0 80       	ld	r10, Z
     98a:	b1 80       	ldd	r11, Z+1	; 0x01
     98c:	36 fe       	sbrs	r3, 6
     98e:	03 c0       	rjmp	.+6      	; 0x996 <__stack+0x137>
     990:	69 2d       	mov	r22, r9
     992:	70 e0       	ldi	r23, 0x00	; 0
     994:	02 c0       	rjmp	.+4      	; 0x99a <__stack+0x13b>
     996:	6f ef       	ldi	r22, 0xFF	; 255
     998:	7f ef       	ldi	r23, 0xFF	; 255
     99a:	c5 01       	movw	r24, r10
     99c:	0e 94 46 08 	call	0x108c	; 0x108c <strnlen>
     9a0:	4c 01       	movw	r8, r24
     9a2:	82 01       	movw	r16, r4
     9a4:	f3 2d       	mov	r31, r3
     9a6:	ff 77       	andi	r31, 0x7F	; 127
     9a8:	3f 2e       	mov	r3, r31
     9aa:	16 c0       	rjmp	.+44     	; 0x9d8 <__stack+0x179>
     9ac:	28 01       	movw	r4, r16
     9ae:	22 e0       	ldi	r18, 0x02	; 2
     9b0:	42 0e       	add	r4, r18
     9b2:	51 1c       	adc	r5, r1
     9b4:	f8 01       	movw	r30, r16
     9b6:	a0 80       	ld	r10, Z
     9b8:	b1 80       	ldd	r11, Z+1	; 0x01
     9ba:	36 fe       	sbrs	r3, 6
     9bc:	03 c0       	rjmp	.+6      	; 0x9c4 <__stack+0x165>
     9be:	69 2d       	mov	r22, r9
     9c0:	70 e0       	ldi	r23, 0x00	; 0
     9c2:	02 c0       	rjmp	.+4      	; 0x9c8 <__stack+0x169>
     9c4:	6f ef       	ldi	r22, 0xFF	; 255
     9c6:	7f ef       	ldi	r23, 0xFF	; 255
     9c8:	c5 01       	movw	r24, r10
     9ca:	0e 94 3b 08 	call	0x1076	; 0x1076 <strnlen_P>
     9ce:	4c 01       	movw	r8, r24
     9d0:	f3 2d       	mov	r31, r3
     9d2:	f0 68       	ori	r31, 0x80	; 128
     9d4:	3f 2e       	mov	r3, r31
     9d6:	82 01       	movw	r16, r4
     9d8:	33 fc       	sbrc	r3, 3
     9da:	1b c0       	rjmp	.+54     	; 0xa12 <__stack+0x1b3>
     9dc:	82 2d       	mov	r24, r2
     9de:	90 e0       	ldi	r25, 0x00	; 0
     9e0:	88 16       	cp	r8, r24
     9e2:	99 06       	cpc	r9, r25
     9e4:	b0 f4       	brcc	.+44     	; 0xa12 <__stack+0x1b3>
     9e6:	b6 01       	movw	r22, r12
     9e8:	80 e2       	ldi	r24, 0x20	; 32
     9ea:	90 e0       	ldi	r25, 0x00	; 0
     9ec:	0e 94 51 08 	call	0x10a2	; 0x10a2 <fputc>
     9f0:	2a 94       	dec	r2
     9f2:	f4 cf       	rjmp	.-24     	; 0x9dc <__stack+0x17d>
     9f4:	f5 01       	movw	r30, r10
     9f6:	37 fc       	sbrc	r3, 7
     9f8:	85 91       	lpm	r24, Z+
     9fa:	37 fe       	sbrs	r3, 7
     9fc:	81 91       	ld	r24, Z+
     9fe:	5f 01       	movw	r10, r30
     a00:	b6 01       	movw	r22, r12
     a02:	90 e0       	ldi	r25, 0x00	; 0
     a04:	0e 94 51 08 	call	0x10a2	; 0x10a2 <fputc>
     a08:	21 10       	cpse	r2, r1
     a0a:	2a 94       	dec	r2
     a0c:	21 e0       	ldi	r18, 0x01	; 1
     a0e:	82 1a       	sub	r8, r18
     a10:	91 08       	sbc	r9, r1
     a12:	81 14       	cp	r8, r1
     a14:	91 04       	cpc	r9, r1
     a16:	71 f7       	brne	.-36     	; 0x9f4 <__stack+0x195>
     a18:	e8 c0       	rjmp	.+464    	; 0xbea <__stack+0x38b>
     a1a:	84 36       	cpi	r24, 0x64	; 100
     a1c:	11 f0       	breq	.+4      	; 0xa22 <__stack+0x1c3>
     a1e:	89 36       	cpi	r24, 0x69	; 105
     a20:	41 f5       	brne	.+80     	; 0xa72 <__stack+0x213>
     a22:	f8 01       	movw	r30, r16
     a24:	37 fe       	sbrs	r3, 7
     a26:	07 c0       	rjmp	.+14     	; 0xa36 <__stack+0x1d7>
     a28:	60 81       	ld	r22, Z
     a2a:	71 81       	ldd	r23, Z+1	; 0x01
     a2c:	82 81       	ldd	r24, Z+2	; 0x02
     a2e:	93 81       	ldd	r25, Z+3	; 0x03
     a30:	0c 5f       	subi	r16, 0xFC	; 252
     a32:	1f 4f       	sbci	r17, 0xFF	; 255
     a34:	08 c0       	rjmp	.+16     	; 0xa46 <__stack+0x1e7>
     a36:	60 81       	ld	r22, Z
     a38:	71 81       	ldd	r23, Z+1	; 0x01
     a3a:	07 2e       	mov	r0, r23
     a3c:	00 0c       	add	r0, r0
     a3e:	88 0b       	sbc	r24, r24
     a40:	99 0b       	sbc	r25, r25
     a42:	0e 5f       	subi	r16, 0xFE	; 254
     a44:	1f 4f       	sbci	r17, 0xFF	; 255
     a46:	f3 2d       	mov	r31, r3
     a48:	ff 76       	andi	r31, 0x6F	; 111
     a4a:	3f 2e       	mov	r3, r31
     a4c:	97 ff       	sbrs	r25, 7
     a4e:	09 c0       	rjmp	.+18     	; 0xa62 <__stack+0x203>
     a50:	90 95       	com	r25
     a52:	80 95       	com	r24
     a54:	70 95       	com	r23
     a56:	61 95       	neg	r22
     a58:	7f 4f       	sbci	r23, 0xFF	; 255
     a5a:	8f 4f       	sbci	r24, 0xFF	; 255
     a5c:	9f 4f       	sbci	r25, 0xFF	; 255
     a5e:	f0 68       	ori	r31, 0x80	; 128
     a60:	3f 2e       	mov	r3, r31
     a62:	2a e0       	ldi	r18, 0x0A	; 10
     a64:	30 e0       	ldi	r19, 0x00	; 0
     a66:	a3 01       	movw	r20, r6
     a68:	0e 94 8d 08 	call	0x111a	; 0x111a <__ultoa_invert>
     a6c:	88 2e       	mov	r8, r24
     a6e:	86 18       	sub	r8, r6
     a70:	45 c0       	rjmp	.+138    	; 0xafc <__stack+0x29d>
     a72:	85 37       	cpi	r24, 0x75	; 117
     a74:	31 f4       	brne	.+12     	; 0xa82 <__stack+0x223>
     a76:	23 2d       	mov	r18, r3
     a78:	2f 7e       	andi	r18, 0xEF	; 239
     a7a:	b2 2e       	mov	r11, r18
     a7c:	2a e0       	ldi	r18, 0x0A	; 10
     a7e:	30 e0       	ldi	r19, 0x00	; 0
     a80:	25 c0       	rjmp	.+74     	; 0xacc <__stack+0x26d>
     a82:	93 2d       	mov	r25, r3
     a84:	99 7f       	andi	r25, 0xF9	; 249
     a86:	b9 2e       	mov	r11, r25
     a88:	8f 36       	cpi	r24, 0x6F	; 111
     a8a:	c1 f0       	breq	.+48     	; 0xabc <__stack+0x25d>
     a8c:	18 f4       	brcc	.+6      	; 0xa94 <__stack+0x235>
     a8e:	88 35       	cpi	r24, 0x58	; 88
     a90:	79 f0       	breq	.+30     	; 0xab0 <__stack+0x251>
     a92:	b5 c0       	rjmp	.+362    	; 0xbfe <__stack+0x39f>
     a94:	80 37       	cpi	r24, 0x70	; 112
     a96:	19 f0       	breq	.+6      	; 0xa9e <__stack+0x23f>
     a98:	88 37       	cpi	r24, 0x78	; 120
     a9a:	21 f0       	breq	.+8      	; 0xaa4 <__stack+0x245>
     a9c:	b0 c0       	rjmp	.+352    	; 0xbfe <__stack+0x39f>
     a9e:	e9 2f       	mov	r30, r25
     aa0:	e0 61       	ori	r30, 0x10	; 16
     aa2:	be 2e       	mov	r11, r30
     aa4:	b4 fe       	sbrs	r11, 4
     aa6:	0d c0       	rjmp	.+26     	; 0xac2 <__stack+0x263>
     aa8:	fb 2d       	mov	r31, r11
     aaa:	f4 60       	ori	r31, 0x04	; 4
     aac:	bf 2e       	mov	r11, r31
     aae:	09 c0       	rjmp	.+18     	; 0xac2 <__stack+0x263>
     ab0:	34 fe       	sbrs	r3, 4
     ab2:	0a c0       	rjmp	.+20     	; 0xac8 <__stack+0x269>
     ab4:	29 2f       	mov	r18, r25
     ab6:	26 60       	ori	r18, 0x06	; 6
     ab8:	b2 2e       	mov	r11, r18
     aba:	06 c0       	rjmp	.+12     	; 0xac8 <__stack+0x269>
     abc:	28 e0       	ldi	r18, 0x08	; 8
     abe:	30 e0       	ldi	r19, 0x00	; 0
     ac0:	05 c0       	rjmp	.+10     	; 0xacc <__stack+0x26d>
     ac2:	20 e1       	ldi	r18, 0x10	; 16
     ac4:	30 e0       	ldi	r19, 0x00	; 0
     ac6:	02 c0       	rjmp	.+4      	; 0xacc <__stack+0x26d>
     ac8:	20 e1       	ldi	r18, 0x10	; 16
     aca:	32 e0       	ldi	r19, 0x02	; 2
     acc:	f8 01       	movw	r30, r16
     ace:	b7 fe       	sbrs	r11, 7
     ad0:	07 c0       	rjmp	.+14     	; 0xae0 <__stack+0x281>
     ad2:	60 81       	ld	r22, Z
     ad4:	71 81       	ldd	r23, Z+1	; 0x01
     ad6:	82 81       	ldd	r24, Z+2	; 0x02
     ad8:	93 81       	ldd	r25, Z+3	; 0x03
     ada:	0c 5f       	subi	r16, 0xFC	; 252
     adc:	1f 4f       	sbci	r17, 0xFF	; 255
     ade:	06 c0       	rjmp	.+12     	; 0xaec <__stack+0x28d>
     ae0:	60 81       	ld	r22, Z
     ae2:	71 81       	ldd	r23, Z+1	; 0x01
     ae4:	80 e0       	ldi	r24, 0x00	; 0
     ae6:	90 e0       	ldi	r25, 0x00	; 0
     ae8:	0e 5f       	subi	r16, 0xFE	; 254
     aea:	1f 4f       	sbci	r17, 0xFF	; 255
     aec:	a3 01       	movw	r20, r6
     aee:	0e 94 8d 08 	call	0x111a	; 0x111a <__ultoa_invert>
     af2:	88 2e       	mov	r8, r24
     af4:	86 18       	sub	r8, r6
     af6:	fb 2d       	mov	r31, r11
     af8:	ff 77       	andi	r31, 0x7F	; 127
     afa:	3f 2e       	mov	r3, r31
     afc:	36 fe       	sbrs	r3, 6
     afe:	0d c0       	rjmp	.+26     	; 0xb1a <__stack+0x2bb>
     b00:	23 2d       	mov	r18, r3
     b02:	2e 7f       	andi	r18, 0xFE	; 254
     b04:	a2 2e       	mov	r10, r18
     b06:	89 14       	cp	r8, r9
     b08:	58 f4       	brcc	.+22     	; 0xb20 <__stack+0x2c1>
     b0a:	34 fe       	sbrs	r3, 4
     b0c:	0b c0       	rjmp	.+22     	; 0xb24 <__stack+0x2c5>
     b0e:	32 fc       	sbrc	r3, 2
     b10:	09 c0       	rjmp	.+18     	; 0xb24 <__stack+0x2c5>
     b12:	83 2d       	mov	r24, r3
     b14:	8e 7e       	andi	r24, 0xEE	; 238
     b16:	a8 2e       	mov	r10, r24
     b18:	05 c0       	rjmp	.+10     	; 0xb24 <__stack+0x2c5>
     b1a:	b8 2c       	mov	r11, r8
     b1c:	a3 2c       	mov	r10, r3
     b1e:	03 c0       	rjmp	.+6      	; 0xb26 <__stack+0x2c7>
     b20:	b8 2c       	mov	r11, r8
     b22:	01 c0       	rjmp	.+2      	; 0xb26 <__stack+0x2c7>
     b24:	b9 2c       	mov	r11, r9
     b26:	a4 fe       	sbrs	r10, 4
     b28:	0f c0       	rjmp	.+30     	; 0xb48 <__stack+0x2e9>
     b2a:	fe 01       	movw	r30, r28
     b2c:	e8 0d       	add	r30, r8
     b2e:	f1 1d       	adc	r31, r1
     b30:	80 81       	ld	r24, Z
     b32:	80 33       	cpi	r24, 0x30	; 48
     b34:	21 f4       	brne	.+8      	; 0xb3e <__stack+0x2df>
     b36:	9a 2d       	mov	r25, r10
     b38:	99 7e       	andi	r25, 0xE9	; 233
     b3a:	a9 2e       	mov	r10, r25
     b3c:	09 c0       	rjmp	.+18     	; 0xb50 <__stack+0x2f1>
     b3e:	a2 fe       	sbrs	r10, 2
     b40:	06 c0       	rjmp	.+12     	; 0xb4e <__stack+0x2ef>
     b42:	b3 94       	inc	r11
     b44:	b3 94       	inc	r11
     b46:	04 c0       	rjmp	.+8      	; 0xb50 <__stack+0x2f1>
     b48:	8a 2d       	mov	r24, r10
     b4a:	86 78       	andi	r24, 0x86	; 134
     b4c:	09 f0       	breq	.+2      	; 0xb50 <__stack+0x2f1>
     b4e:	b3 94       	inc	r11
     b50:	a3 fc       	sbrc	r10, 3
     b52:	11 c0       	rjmp	.+34     	; 0xb76 <__stack+0x317>
     b54:	a0 fe       	sbrs	r10, 0
     b56:	06 c0       	rjmp	.+12     	; 0xb64 <__stack+0x305>
     b58:	b2 14       	cp	r11, r2
     b5a:	88 f4       	brcc	.+34     	; 0xb7e <__stack+0x31f>
     b5c:	28 0c       	add	r2, r8
     b5e:	92 2c       	mov	r9, r2
     b60:	9b 18       	sub	r9, r11
     b62:	0e c0       	rjmp	.+28     	; 0xb80 <__stack+0x321>
     b64:	b2 14       	cp	r11, r2
     b66:	60 f4       	brcc	.+24     	; 0xb80 <__stack+0x321>
     b68:	b6 01       	movw	r22, r12
     b6a:	80 e2       	ldi	r24, 0x20	; 32
     b6c:	90 e0       	ldi	r25, 0x00	; 0
     b6e:	0e 94 51 08 	call	0x10a2	; 0x10a2 <fputc>
     b72:	b3 94       	inc	r11
     b74:	f7 cf       	rjmp	.-18     	; 0xb64 <__stack+0x305>
     b76:	b2 14       	cp	r11, r2
     b78:	18 f4       	brcc	.+6      	; 0xb80 <__stack+0x321>
     b7a:	2b 18       	sub	r2, r11
     b7c:	02 c0       	rjmp	.+4      	; 0xb82 <__stack+0x323>
     b7e:	98 2c       	mov	r9, r8
     b80:	21 2c       	mov	r2, r1
     b82:	a4 fe       	sbrs	r10, 4
     b84:	10 c0       	rjmp	.+32     	; 0xba6 <__stack+0x347>
     b86:	b6 01       	movw	r22, r12
     b88:	80 e3       	ldi	r24, 0x30	; 48
     b8a:	90 e0       	ldi	r25, 0x00	; 0
     b8c:	0e 94 51 08 	call	0x10a2	; 0x10a2 <fputc>
     b90:	a2 fe       	sbrs	r10, 2
     b92:	17 c0       	rjmp	.+46     	; 0xbc2 <__stack+0x363>
     b94:	a1 fc       	sbrc	r10, 1
     b96:	03 c0       	rjmp	.+6      	; 0xb9e <__stack+0x33f>
     b98:	88 e7       	ldi	r24, 0x78	; 120
     b9a:	90 e0       	ldi	r25, 0x00	; 0
     b9c:	02 c0       	rjmp	.+4      	; 0xba2 <__stack+0x343>
     b9e:	88 e5       	ldi	r24, 0x58	; 88
     ba0:	90 e0       	ldi	r25, 0x00	; 0
     ba2:	b6 01       	movw	r22, r12
     ba4:	0c c0       	rjmp	.+24     	; 0xbbe <__stack+0x35f>
     ba6:	8a 2d       	mov	r24, r10
     ba8:	86 78       	andi	r24, 0x86	; 134
     baa:	59 f0       	breq	.+22     	; 0xbc2 <__stack+0x363>
     bac:	a1 fe       	sbrs	r10, 1
     bae:	02 c0       	rjmp	.+4      	; 0xbb4 <__stack+0x355>
     bb0:	8b e2       	ldi	r24, 0x2B	; 43
     bb2:	01 c0       	rjmp	.+2      	; 0xbb6 <__stack+0x357>
     bb4:	80 e2       	ldi	r24, 0x20	; 32
     bb6:	a7 fc       	sbrc	r10, 7
     bb8:	8d e2       	ldi	r24, 0x2D	; 45
     bba:	b6 01       	movw	r22, r12
     bbc:	90 e0       	ldi	r25, 0x00	; 0
     bbe:	0e 94 51 08 	call	0x10a2	; 0x10a2 <fputc>
     bc2:	89 14       	cp	r8, r9
     bc4:	38 f4       	brcc	.+14     	; 0xbd4 <__stack+0x375>
     bc6:	b6 01       	movw	r22, r12
     bc8:	80 e3       	ldi	r24, 0x30	; 48
     bca:	90 e0       	ldi	r25, 0x00	; 0
     bcc:	0e 94 51 08 	call	0x10a2	; 0x10a2 <fputc>
     bd0:	9a 94       	dec	r9
     bd2:	f7 cf       	rjmp	.-18     	; 0xbc2 <__stack+0x363>
     bd4:	8a 94       	dec	r8
     bd6:	f3 01       	movw	r30, r6
     bd8:	e8 0d       	add	r30, r8
     bda:	f1 1d       	adc	r31, r1
     bdc:	80 81       	ld	r24, Z
     bde:	b6 01       	movw	r22, r12
     be0:	90 e0       	ldi	r25, 0x00	; 0
     be2:	0e 94 51 08 	call	0x10a2	; 0x10a2 <fputc>
     be6:	81 10       	cpse	r8, r1
     be8:	f5 cf       	rjmp	.-22     	; 0xbd4 <__stack+0x375>
     bea:	22 20       	and	r2, r2
     bec:	09 f4       	brne	.+2      	; 0xbf0 <__stack+0x391>
     bee:	42 ce       	rjmp	.-892    	; 0x874 <__stack+0x15>
     bf0:	b6 01       	movw	r22, r12
     bf2:	80 e2       	ldi	r24, 0x20	; 32
     bf4:	90 e0       	ldi	r25, 0x00	; 0
     bf6:	0e 94 51 08 	call	0x10a2	; 0x10a2 <fputc>
     bfa:	2a 94       	dec	r2
     bfc:	f6 cf       	rjmp	.-20     	; 0xbea <__stack+0x38b>
     bfe:	f6 01       	movw	r30, r12
     c00:	86 81       	ldd	r24, Z+6	; 0x06
     c02:	97 81       	ldd	r25, Z+7	; 0x07
     c04:	02 c0       	rjmp	.+4      	; 0xc0a <__stack+0x3ab>
     c06:	8f ef       	ldi	r24, 0xFF	; 255
     c08:	9f ef       	ldi	r25, 0xFF	; 255
     c0a:	2b 96       	adiw	r28, 0x0b	; 11
     c0c:	e2 e1       	ldi	r30, 0x12	; 18
     c0e:	0c 94 07 09 	jmp	0x120e	; 0x120e <__epilogue_restores__>

00000c12 <dtoa_prf>:
     c12:	a9 e0       	ldi	r26, 0x09	; 9
     c14:	b0 e0       	ldi	r27, 0x00	; 0
     c16:	ef e0       	ldi	r30, 0x0F	; 15
     c18:	f6 e0       	ldi	r31, 0x06	; 6
     c1a:	0c 94 f1 08 	jmp	0x11e2	; 0x11e2 <__prologue_saves__+0xc>
     c1e:	6a 01       	movw	r12, r20
     c20:	12 2f       	mov	r17, r18
     c22:	b0 2e       	mov	r11, r16
     c24:	2b e3       	ldi	r18, 0x3B	; 59
     c26:	20 17       	cp	r18, r16
     c28:	20 f0       	brcs	.+8      	; 0xc32 <dtoa_prf+0x20>
     c2a:	ff 24       	eor	r15, r15
     c2c:	f3 94       	inc	r15
     c2e:	f0 0e       	add	r15, r16
     c30:	02 c0       	rjmp	.+4      	; 0xc36 <dtoa_prf+0x24>
     c32:	2c e3       	ldi	r18, 0x3C	; 60
     c34:	f2 2e       	mov	r15, r18
     c36:	0f 2d       	mov	r16, r15
     c38:	27 e0       	ldi	r18, 0x07	; 7
     c3a:	ae 01       	movw	r20, r28
     c3c:	4f 5f       	subi	r20, 0xFF	; 255
     c3e:	5f 4f       	sbci	r21, 0xFF	; 255
     c40:	0e 94 63 07 	call	0xec6	; 0xec6 <__ftoa_engine>
     c44:	bc 01       	movw	r22, r24
     c46:	49 81       	ldd	r20, Y+1	; 0x01
     c48:	84 2f       	mov	r24, r20
     c4a:	89 70       	andi	r24, 0x09	; 9
     c4c:	81 30       	cpi	r24, 0x01	; 1
     c4e:	31 f0       	breq	.+12     	; 0xc5c <dtoa_prf+0x4a>
     c50:	e1 fc       	sbrc	r14, 1
     c52:	06 c0       	rjmp	.+12     	; 0xc60 <dtoa_prf+0x4e>
     c54:	e0 fe       	sbrs	r14, 0
     c56:	06 c0       	rjmp	.+12     	; 0xc64 <dtoa_prf+0x52>
     c58:	90 e2       	ldi	r25, 0x20	; 32
     c5a:	05 c0       	rjmp	.+10     	; 0xc66 <dtoa_prf+0x54>
     c5c:	9d e2       	ldi	r25, 0x2D	; 45
     c5e:	03 c0       	rjmp	.+6      	; 0xc66 <dtoa_prf+0x54>
     c60:	9b e2       	ldi	r25, 0x2B	; 43
     c62:	01 c0       	rjmp	.+2      	; 0xc66 <dtoa_prf+0x54>
     c64:	90 e0       	ldi	r25, 0x00	; 0
     c66:	5e 2d       	mov	r21, r14
     c68:	50 71       	andi	r21, 0x10	; 16
     c6a:	43 ff       	sbrs	r20, 3
     c6c:	3c c0       	rjmp	.+120    	; 0xce6 <dtoa_prf+0xd4>
     c6e:	91 11       	cpse	r25, r1
     c70:	02 c0       	rjmp	.+4      	; 0xc76 <dtoa_prf+0x64>
     c72:	83 e0       	ldi	r24, 0x03	; 3
     c74:	01 c0       	rjmp	.+2      	; 0xc78 <dtoa_prf+0x66>
     c76:	84 e0       	ldi	r24, 0x04	; 4
     c78:	81 17       	cp	r24, r17
     c7a:	18 f4       	brcc	.+6      	; 0xc82 <dtoa_prf+0x70>
     c7c:	21 2f       	mov	r18, r17
     c7e:	28 1b       	sub	r18, r24
     c80:	01 c0       	rjmp	.+2      	; 0xc84 <dtoa_prf+0x72>
     c82:	20 e0       	ldi	r18, 0x00	; 0
     c84:	51 11       	cpse	r21, r1
     c86:	0b c0       	rjmp	.+22     	; 0xc9e <dtoa_prf+0x8c>
     c88:	f6 01       	movw	r30, r12
     c8a:	82 2f       	mov	r24, r18
     c8c:	30 e2       	ldi	r19, 0x20	; 32
     c8e:	88 23       	and	r24, r24
     c90:	19 f0       	breq	.+6      	; 0xc98 <dtoa_prf+0x86>
     c92:	31 93       	st	Z+, r19
     c94:	81 50       	subi	r24, 0x01	; 1
     c96:	fb cf       	rjmp	.-10     	; 0xc8e <dtoa_prf+0x7c>
     c98:	c2 0e       	add	r12, r18
     c9a:	d1 1c       	adc	r13, r1
     c9c:	20 e0       	ldi	r18, 0x00	; 0
     c9e:	99 23       	and	r25, r25
     ca0:	29 f0       	breq	.+10     	; 0xcac <dtoa_prf+0x9a>
     ca2:	d6 01       	movw	r26, r12
     ca4:	9c 93       	st	X, r25
     ca6:	f6 01       	movw	r30, r12
     ca8:	31 96       	adiw	r30, 0x01	; 1
     caa:	6f 01       	movw	r12, r30
     cac:	c6 01       	movw	r24, r12
     cae:	03 96       	adiw	r24, 0x03	; 3
     cb0:	e2 fe       	sbrs	r14, 2
     cb2:	0a c0       	rjmp	.+20     	; 0xcc8 <dtoa_prf+0xb6>
     cb4:	3e e4       	ldi	r19, 0x4E	; 78
     cb6:	d6 01       	movw	r26, r12
     cb8:	3c 93       	st	X, r19
     cba:	41 e4       	ldi	r20, 0x41	; 65
     cbc:	11 96       	adiw	r26, 0x01	; 1
     cbe:	4c 93       	st	X, r20
     cc0:	11 97       	sbiw	r26, 0x01	; 1
     cc2:	12 96       	adiw	r26, 0x02	; 2
     cc4:	3c 93       	st	X, r19
     cc6:	06 c0       	rjmp	.+12     	; 0xcd4 <dtoa_prf+0xc2>
     cc8:	3e e6       	ldi	r19, 0x6E	; 110
     cca:	f6 01       	movw	r30, r12
     ccc:	30 83       	st	Z, r19
     cce:	41 e6       	ldi	r20, 0x61	; 97
     cd0:	41 83       	std	Z+1, r20	; 0x01
     cd2:	32 83       	std	Z+2, r19	; 0x02
     cd4:	fc 01       	movw	r30, r24
     cd6:	32 2f       	mov	r19, r18
     cd8:	40 e2       	ldi	r20, 0x20	; 32
     cda:	33 23       	and	r19, r19
     cdc:	09 f4       	brne	.+2      	; 0xce0 <dtoa_prf+0xce>
     cde:	42 c0       	rjmp	.+132    	; 0xd64 <dtoa_prf+0x152>
     ce0:	41 93       	st	Z+, r20
     ce2:	31 50       	subi	r19, 0x01	; 1
     ce4:	fa cf       	rjmp	.-12     	; 0xcda <dtoa_prf+0xc8>
     ce6:	42 ff       	sbrs	r20, 2
     ce8:	44 c0       	rjmp	.+136    	; 0xd72 <dtoa_prf+0x160>
     cea:	91 11       	cpse	r25, r1
     cec:	02 c0       	rjmp	.+4      	; 0xcf2 <dtoa_prf+0xe0>
     cee:	83 e0       	ldi	r24, 0x03	; 3
     cf0:	01 c0       	rjmp	.+2      	; 0xcf4 <dtoa_prf+0xe2>
     cf2:	84 e0       	ldi	r24, 0x04	; 4
     cf4:	81 17       	cp	r24, r17
     cf6:	18 f4       	brcc	.+6      	; 0xcfe <dtoa_prf+0xec>
     cf8:	21 2f       	mov	r18, r17
     cfa:	28 1b       	sub	r18, r24
     cfc:	01 c0       	rjmp	.+2      	; 0xd00 <dtoa_prf+0xee>
     cfe:	20 e0       	ldi	r18, 0x00	; 0
     d00:	51 11       	cpse	r21, r1
     d02:	0b c0       	rjmp	.+22     	; 0xd1a <dtoa_prf+0x108>
     d04:	f6 01       	movw	r30, r12
     d06:	82 2f       	mov	r24, r18
     d08:	30 e2       	ldi	r19, 0x20	; 32
     d0a:	88 23       	and	r24, r24
     d0c:	19 f0       	breq	.+6      	; 0xd14 <dtoa_prf+0x102>
     d0e:	31 93       	st	Z+, r19
     d10:	81 50       	subi	r24, 0x01	; 1
     d12:	fb cf       	rjmp	.-10     	; 0xd0a <dtoa_prf+0xf8>
     d14:	c2 0e       	add	r12, r18
     d16:	d1 1c       	adc	r13, r1
     d18:	20 e0       	ldi	r18, 0x00	; 0
     d1a:	99 23       	and	r25, r25
     d1c:	29 f0       	breq	.+10     	; 0xd28 <dtoa_prf+0x116>
     d1e:	d6 01       	movw	r26, r12
     d20:	9c 93       	st	X, r25
     d22:	f6 01       	movw	r30, r12
     d24:	31 96       	adiw	r30, 0x01	; 1
     d26:	6f 01       	movw	r12, r30
     d28:	c6 01       	movw	r24, r12
     d2a:	03 96       	adiw	r24, 0x03	; 3
     d2c:	e2 fe       	sbrs	r14, 2
     d2e:	0b c0       	rjmp	.+22     	; 0xd46 <dtoa_prf+0x134>
     d30:	39 e4       	ldi	r19, 0x49	; 73
     d32:	d6 01       	movw	r26, r12
     d34:	3c 93       	st	X, r19
     d36:	3e e4       	ldi	r19, 0x4E	; 78
     d38:	11 96       	adiw	r26, 0x01	; 1
     d3a:	3c 93       	st	X, r19
     d3c:	11 97       	sbiw	r26, 0x01	; 1
     d3e:	36 e4       	ldi	r19, 0x46	; 70
     d40:	12 96       	adiw	r26, 0x02	; 2
     d42:	3c 93       	st	X, r19
     d44:	07 c0       	rjmp	.+14     	; 0xd54 <dtoa_prf+0x142>
     d46:	39 e6       	ldi	r19, 0x69	; 105
     d48:	f6 01       	movw	r30, r12
     d4a:	30 83       	st	Z, r19
     d4c:	3e e6       	ldi	r19, 0x6E	; 110
     d4e:	31 83       	std	Z+1, r19	; 0x01
     d50:	36 e6       	ldi	r19, 0x66	; 102
     d52:	32 83       	std	Z+2, r19	; 0x02
     d54:	fc 01       	movw	r30, r24
     d56:	32 2f       	mov	r19, r18
     d58:	40 e2       	ldi	r20, 0x20	; 32
     d5a:	33 23       	and	r19, r19
     d5c:	19 f0       	breq	.+6      	; 0xd64 <dtoa_prf+0x152>
     d5e:	41 93       	st	Z+, r20
     d60:	31 50       	subi	r19, 0x01	; 1
     d62:	fb cf       	rjmp	.-10     	; 0xd5a <dtoa_prf+0x148>
     d64:	fc 01       	movw	r30, r24
     d66:	e2 0f       	add	r30, r18
     d68:	f1 1d       	adc	r31, r1
     d6a:	10 82       	st	Z, r1
     d6c:	8e ef       	ldi	r24, 0xFE	; 254
     d6e:	9f ef       	ldi	r25, 0xFF	; 255
     d70:	a6 c0       	rjmp	.+332    	; 0xebe <dtoa_prf+0x2ac>
     d72:	21 e0       	ldi	r18, 0x01	; 1
     d74:	30 e0       	ldi	r19, 0x00	; 0
     d76:	91 11       	cpse	r25, r1
     d78:	02 c0       	rjmp	.+4      	; 0xd7e <dtoa_prf+0x16c>
     d7a:	20 e0       	ldi	r18, 0x00	; 0
     d7c:	30 e0       	ldi	r19, 0x00	; 0
     d7e:	16 16       	cp	r1, r22
     d80:	17 06       	cpc	r1, r23
     d82:	1c f4       	brge	.+6      	; 0xd8a <dtoa_prf+0x178>
     d84:	fb 01       	movw	r30, r22
     d86:	31 96       	adiw	r30, 0x01	; 1
     d88:	02 c0       	rjmp	.+4      	; 0xd8e <dtoa_prf+0x17c>
     d8a:	e1 e0       	ldi	r30, 0x01	; 1
     d8c:	f0 e0       	ldi	r31, 0x00	; 0
     d8e:	2e 0f       	add	r18, r30
     d90:	3f 1f       	adc	r19, r31
     d92:	bb 20       	and	r11, r11
     d94:	21 f0       	breq	.+8      	; 0xd9e <dtoa_prf+0x18c>
     d96:	eb 2d       	mov	r30, r11
     d98:	f0 e0       	ldi	r31, 0x00	; 0
     d9a:	31 96       	adiw	r30, 0x01	; 1
     d9c:	02 c0       	rjmp	.+4      	; 0xda2 <dtoa_prf+0x190>
     d9e:	e0 e0       	ldi	r30, 0x00	; 0
     da0:	f0 e0       	ldi	r31, 0x00	; 0
     da2:	2e 0f       	add	r18, r30
     da4:	3f 1f       	adc	r19, r31
     da6:	e1 2f       	mov	r30, r17
     da8:	f0 e0       	ldi	r31, 0x00	; 0
     daa:	2e 17       	cp	r18, r30
     dac:	3f 07       	cpc	r19, r31
     dae:	1c f4       	brge	.+6      	; 0xdb6 <dtoa_prf+0x1a4>
     db0:	12 1b       	sub	r17, r18
     db2:	21 2f       	mov	r18, r17
     db4:	01 c0       	rjmp	.+2      	; 0xdb8 <dtoa_prf+0x1a6>
     db6:	20 e0       	ldi	r18, 0x00	; 0
     db8:	8e 2d       	mov	r24, r14
     dba:	88 71       	andi	r24, 0x18	; 24
     dbc:	59 f4       	brne	.+22     	; 0xdd4 <dtoa_prf+0x1c2>
     dbe:	f6 01       	movw	r30, r12
     dc0:	82 2f       	mov	r24, r18
     dc2:	30 e2       	ldi	r19, 0x20	; 32
     dc4:	88 23       	and	r24, r24
     dc6:	19 f0       	breq	.+6      	; 0xdce <dtoa_prf+0x1bc>
     dc8:	31 93       	st	Z+, r19
     dca:	81 50       	subi	r24, 0x01	; 1
     dcc:	fb cf       	rjmp	.-10     	; 0xdc4 <dtoa_prf+0x1b2>
     dce:	c2 0e       	add	r12, r18
     dd0:	d1 1c       	adc	r13, r1
     dd2:	20 e0       	ldi	r18, 0x00	; 0
     dd4:	99 23       	and	r25, r25
     dd6:	29 f0       	breq	.+10     	; 0xde2 <dtoa_prf+0x1d0>
     dd8:	d6 01       	movw	r26, r12
     dda:	9c 93       	st	X, r25
     ddc:	f6 01       	movw	r30, r12
     dde:	31 96       	adiw	r30, 0x01	; 1
     de0:	6f 01       	movw	r12, r30
     de2:	51 11       	cpse	r21, r1
     de4:	0b c0       	rjmp	.+22     	; 0xdfc <dtoa_prf+0x1ea>
     de6:	f6 01       	movw	r30, r12
     de8:	82 2f       	mov	r24, r18
     dea:	90 e3       	ldi	r25, 0x30	; 48
     dec:	88 23       	and	r24, r24
     dee:	19 f0       	breq	.+6      	; 0xdf6 <dtoa_prf+0x1e4>
     df0:	91 93       	st	Z+, r25
     df2:	81 50       	subi	r24, 0x01	; 1
     df4:	fb cf       	rjmp	.-10     	; 0xdec <dtoa_prf+0x1da>
     df6:	c2 0e       	add	r12, r18
     df8:	d1 1c       	adc	r13, r1
     dfa:	20 e0       	ldi	r18, 0x00	; 0
     dfc:	0f 2d       	mov	r16, r15
     dfe:	06 0f       	add	r16, r22
     e00:	9a 81       	ldd	r25, Y+2	; 0x02
     e02:	34 2f       	mov	r19, r20
     e04:	30 71       	andi	r19, 0x10	; 16
     e06:	44 ff       	sbrs	r20, 4
     e08:	03 c0       	rjmp	.+6      	; 0xe10 <dtoa_prf+0x1fe>
     e0a:	91 33       	cpi	r25, 0x31	; 49
     e0c:	09 f4       	brne	.+2      	; 0xe10 <dtoa_prf+0x1fe>
     e0e:	01 50       	subi	r16, 0x01	; 1
     e10:	10 16       	cp	r1, r16
     e12:	24 f4       	brge	.+8      	; 0xe1c <dtoa_prf+0x20a>
     e14:	09 30       	cpi	r16, 0x09	; 9
     e16:	18 f0       	brcs	.+6      	; 0xe1e <dtoa_prf+0x20c>
     e18:	08 e0       	ldi	r16, 0x08	; 8
     e1a:	01 c0       	rjmp	.+2      	; 0xe1e <dtoa_prf+0x20c>
     e1c:	01 e0       	ldi	r16, 0x01	; 1
     e1e:	ab 01       	movw	r20, r22
     e20:	77 ff       	sbrs	r23, 7
     e22:	02 c0       	rjmp	.+4      	; 0xe28 <dtoa_prf+0x216>
     e24:	40 e0       	ldi	r20, 0x00	; 0
     e26:	50 e0       	ldi	r21, 0x00	; 0
     e28:	fb 01       	movw	r30, r22
     e2a:	e4 1b       	sub	r30, r20
     e2c:	f5 0b       	sbc	r31, r21
     e2e:	a1 e0       	ldi	r26, 0x01	; 1
     e30:	b0 e0       	ldi	r27, 0x00	; 0
     e32:	ac 0f       	add	r26, r28
     e34:	bd 1f       	adc	r27, r29
     e36:	ea 0f       	add	r30, r26
     e38:	fb 1f       	adc	r31, r27
     e3a:	8e e2       	ldi	r24, 0x2E	; 46
     e3c:	a8 2e       	mov	r10, r24
     e3e:	4b 01       	movw	r8, r22
     e40:	80 1a       	sub	r8, r16
     e42:	91 08       	sbc	r9, r1
     e44:	0b 2d       	mov	r16, r11
     e46:	10 e0       	ldi	r17, 0x00	; 0
     e48:	11 95       	neg	r17
     e4a:	01 95       	neg	r16
     e4c:	11 09       	sbc	r17, r1
     e4e:	4f 3f       	cpi	r20, 0xFF	; 255
     e50:	bf ef       	ldi	r27, 0xFF	; 255
     e52:	5b 07       	cpc	r21, r27
     e54:	21 f4       	brne	.+8      	; 0xe5e <dtoa_prf+0x24c>
     e56:	d6 01       	movw	r26, r12
     e58:	ac 92       	st	X, r10
     e5a:	11 96       	adiw	r26, 0x01	; 1
     e5c:	6d 01       	movw	r12, r26
     e5e:	64 17       	cp	r22, r20
     e60:	75 07       	cpc	r23, r21
     e62:	2c f0       	brlt	.+10     	; 0xe6e <dtoa_prf+0x25c>
     e64:	84 16       	cp	r8, r20
     e66:	95 06       	cpc	r9, r21
     e68:	14 f4       	brge	.+4      	; 0xe6e <dtoa_prf+0x25c>
     e6a:	81 81       	ldd	r24, Z+1	; 0x01
     e6c:	01 c0       	rjmp	.+2      	; 0xe70 <dtoa_prf+0x25e>
     e6e:	80 e3       	ldi	r24, 0x30	; 48
     e70:	41 50       	subi	r20, 0x01	; 1
     e72:	51 09       	sbc	r21, r1
     e74:	31 96       	adiw	r30, 0x01	; 1
     e76:	d6 01       	movw	r26, r12
     e78:	11 96       	adiw	r26, 0x01	; 1
     e7a:	7d 01       	movw	r14, r26
     e7c:	40 17       	cp	r20, r16
     e7e:	51 07       	cpc	r21, r17
     e80:	24 f0       	brlt	.+8      	; 0xe8a <dtoa_prf+0x278>
     e82:	d6 01       	movw	r26, r12
     e84:	8c 93       	st	X, r24
     e86:	67 01       	movw	r12, r14
     e88:	e2 cf       	rjmp	.-60     	; 0xe4e <dtoa_prf+0x23c>
     e8a:	64 17       	cp	r22, r20
     e8c:	75 07       	cpc	r23, r21
     e8e:	39 f4       	brne	.+14     	; 0xe9e <dtoa_prf+0x28c>
     e90:	96 33       	cpi	r25, 0x36	; 54
     e92:	20 f4       	brcc	.+8      	; 0xe9c <dtoa_prf+0x28a>
     e94:	95 33       	cpi	r25, 0x35	; 53
     e96:	19 f4       	brne	.+6      	; 0xe9e <dtoa_prf+0x28c>
     e98:	31 11       	cpse	r19, r1
     e9a:	01 c0       	rjmp	.+2      	; 0xe9e <dtoa_prf+0x28c>
     e9c:	81 e3       	ldi	r24, 0x31	; 49
     e9e:	f6 01       	movw	r30, r12
     ea0:	80 83       	st	Z, r24
     ea2:	f7 01       	movw	r30, r14
     ea4:	82 2f       	mov	r24, r18
     ea6:	90 e2       	ldi	r25, 0x20	; 32
     ea8:	88 23       	and	r24, r24
     eaa:	19 f0       	breq	.+6      	; 0xeb2 <dtoa_prf+0x2a0>
     eac:	91 93       	st	Z+, r25
     eae:	81 50       	subi	r24, 0x01	; 1
     eb0:	fb cf       	rjmp	.-10     	; 0xea8 <dtoa_prf+0x296>
     eb2:	f7 01       	movw	r30, r14
     eb4:	e2 0f       	add	r30, r18
     eb6:	f1 1d       	adc	r31, r1
     eb8:	10 82       	st	Z, r1
     eba:	80 e0       	ldi	r24, 0x00	; 0
     ebc:	90 e0       	ldi	r25, 0x00	; 0
     ebe:	29 96       	adiw	r28, 0x09	; 9
     ec0:	ec e0       	ldi	r30, 0x0C	; 12
     ec2:	0c 94 0d 09 	jmp	0x121a	; 0x121a <__epilogue_restores__+0xc>

00000ec6 <__ftoa_engine>:
     ec6:	28 30       	cpi	r18, 0x08	; 8
     ec8:	08 f0       	brcs	.+2      	; 0xecc <__ftoa_engine+0x6>
     eca:	27 e0       	ldi	r18, 0x07	; 7
     ecc:	33 27       	eor	r19, r19
     ece:	da 01       	movw	r26, r20
     ed0:	99 0f       	add	r25, r25
     ed2:	31 1d       	adc	r19, r1
     ed4:	87 fd       	sbrc	r24, 7
     ed6:	91 60       	ori	r25, 0x01	; 1
     ed8:	00 96       	adiw	r24, 0x00	; 0
     eda:	61 05       	cpc	r22, r1
     edc:	71 05       	cpc	r23, r1
     ede:	39 f4       	brne	.+14     	; 0xeee <__ftoa_engine+0x28>
     ee0:	32 60       	ori	r19, 0x02	; 2
     ee2:	2e 5f       	subi	r18, 0xFE	; 254
     ee4:	3d 93       	st	X+, r19
     ee6:	30 e3       	ldi	r19, 0x30	; 48
     ee8:	2a 95       	dec	r18
     eea:	e1 f7       	brne	.-8      	; 0xee4 <__ftoa_engine+0x1e>
     eec:	08 95       	ret
     eee:	9f 3f       	cpi	r25, 0xFF	; 255
     ef0:	30 f0       	brcs	.+12     	; 0xefe <__ftoa_engine+0x38>
     ef2:	80 38       	cpi	r24, 0x80	; 128
     ef4:	71 05       	cpc	r23, r1
     ef6:	61 05       	cpc	r22, r1
     ef8:	09 f0       	breq	.+2      	; 0xefc <__ftoa_engine+0x36>
     efa:	3c 5f       	subi	r19, 0xFC	; 252
     efc:	3c 5f       	subi	r19, 0xFC	; 252
     efe:	3d 93       	st	X+, r19
     f00:	91 30       	cpi	r25, 0x01	; 1
     f02:	08 f0       	brcs	.+2      	; 0xf06 <__ftoa_engine+0x40>
     f04:	80 68       	ori	r24, 0x80	; 128
     f06:	91 1d       	adc	r25, r1
     f08:	df 93       	push	r29
     f0a:	cf 93       	push	r28
     f0c:	1f 93       	push	r17
     f0e:	0f 93       	push	r16
     f10:	ff 92       	push	r15
     f12:	ef 92       	push	r14
     f14:	19 2f       	mov	r17, r25
     f16:	98 7f       	andi	r25, 0xF8	; 248
     f18:	96 95       	lsr	r25
     f1a:	e9 2f       	mov	r30, r25
     f1c:	96 95       	lsr	r25
     f1e:	96 95       	lsr	r25
     f20:	e9 0f       	add	r30, r25
     f22:	ff 27       	eor	r31, r31
     f24:	e2 55       	subi	r30, 0x52	; 82
     f26:	ff 4f       	sbci	r31, 0xFF	; 255
     f28:	99 27       	eor	r25, r25
     f2a:	33 27       	eor	r19, r19
     f2c:	ee 24       	eor	r14, r14
     f2e:	ff 24       	eor	r15, r15
     f30:	a7 01       	movw	r20, r14
     f32:	e7 01       	movw	r28, r14
     f34:	05 90       	lpm	r0, Z+
     f36:	08 94       	sec
     f38:	07 94       	ror	r0
     f3a:	28 f4       	brcc	.+10     	; 0xf46 <__ftoa_engine+0x80>
     f3c:	36 0f       	add	r19, r22
     f3e:	e7 1e       	adc	r14, r23
     f40:	f8 1e       	adc	r15, r24
     f42:	49 1f       	adc	r20, r25
     f44:	51 1d       	adc	r21, r1
     f46:	66 0f       	add	r22, r22
     f48:	77 1f       	adc	r23, r23
     f4a:	88 1f       	adc	r24, r24
     f4c:	99 1f       	adc	r25, r25
     f4e:	06 94       	lsr	r0
     f50:	a1 f7       	brne	.-24     	; 0xf3a <__ftoa_engine+0x74>
     f52:	05 90       	lpm	r0, Z+
     f54:	07 94       	ror	r0
     f56:	28 f4       	brcc	.+10     	; 0xf62 <__ftoa_engine+0x9c>
     f58:	e7 0e       	add	r14, r23
     f5a:	f8 1e       	adc	r15, r24
     f5c:	49 1f       	adc	r20, r25
     f5e:	56 1f       	adc	r21, r22
     f60:	c1 1d       	adc	r28, r1
     f62:	77 0f       	add	r23, r23
     f64:	88 1f       	adc	r24, r24
     f66:	99 1f       	adc	r25, r25
     f68:	66 1f       	adc	r22, r22
     f6a:	06 94       	lsr	r0
     f6c:	a1 f7       	brne	.-24     	; 0xf56 <__ftoa_engine+0x90>
     f6e:	05 90       	lpm	r0, Z+
     f70:	07 94       	ror	r0
     f72:	28 f4       	brcc	.+10     	; 0xf7e <__ftoa_engine+0xb8>
     f74:	f8 0e       	add	r15, r24
     f76:	49 1f       	adc	r20, r25
     f78:	56 1f       	adc	r21, r22
     f7a:	c7 1f       	adc	r28, r23
     f7c:	d1 1d       	adc	r29, r1
     f7e:	88 0f       	add	r24, r24
     f80:	99 1f       	adc	r25, r25
     f82:	66 1f       	adc	r22, r22
     f84:	77 1f       	adc	r23, r23
     f86:	06 94       	lsr	r0
     f88:	a1 f7       	brne	.-24     	; 0xf72 <__ftoa_engine+0xac>
     f8a:	05 90       	lpm	r0, Z+
     f8c:	07 94       	ror	r0
     f8e:	20 f4       	brcc	.+8      	; 0xf98 <__ftoa_engine+0xd2>
     f90:	49 0f       	add	r20, r25
     f92:	56 1f       	adc	r21, r22
     f94:	c7 1f       	adc	r28, r23
     f96:	d8 1f       	adc	r29, r24
     f98:	99 0f       	add	r25, r25
     f9a:	66 1f       	adc	r22, r22
     f9c:	77 1f       	adc	r23, r23
     f9e:	88 1f       	adc	r24, r24
     fa0:	06 94       	lsr	r0
     fa2:	a9 f7       	brne	.-22     	; 0xf8e <__ftoa_engine+0xc8>
     fa4:	84 91       	lpm	r24, Z
     fa6:	10 95       	com	r17
     fa8:	17 70       	andi	r17, 0x07	; 7
     faa:	41 f0       	breq	.+16     	; 0xfbc <__ftoa_engine+0xf6>
     fac:	d6 95       	lsr	r29
     fae:	c7 95       	ror	r28
     fb0:	57 95       	ror	r21
     fb2:	47 95       	ror	r20
     fb4:	f7 94       	ror	r15
     fb6:	e7 94       	ror	r14
     fb8:	1a 95       	dec	r17
     fba:	c1 f7       	brne	.-16     	; 0xfac <__ftoa_engine+0xe6>
     fbc:	e4 e5       	ldi	r30, 0x54	; 84
     fbe:	f0 e0       	ldi	r31, 0x00	; 0
     fc0:	68 94       	set
     fc2:	15 90       	lpm	r1, Z+
     fc4:	15 91       	lpm	r17, Z+
     fc6:	35 91       	lpm	r19, Z+
     fc8:	65 91       	lpm	r22, Z+
     fca:	95 91       	lpm	r25, Z+
     fcc:	05 90       	lpm	r0, Z+
     fce:	7f e2       	ldi	r23, 0x2F	; 47
     fd0:	73 95       	inc	r23
     fd2:	e1 18       	sub	r14, r1
     fd4:	f1 0a       	sbc	r15, r17
     fd6:	43 0b       	sbc	r20, r19
     fd8:	56 0b       	sbc	r21, r22
     fda:	c9 0b       	sbc	r28, r25
     fdc:	d0 09       	sbc	r29, r0
     fde:	c0 f7       	brcc	.-16     	; 0xfd0 <__ftoa_engine+0x10a>
     fe0:	e1 0c       	add	r14, r1
     fe2:	f1 1e       	adc	r15, r17
     fe4:	43 1f       	adc	r20, r19
     fe6:	56 1f       	adc	r21, r22
     fe8:	c9 1f       	adc	r28, r25
     fea:	d0 1d       	adc	r29, r0
     fec:	7e f4       	brtc	.+30     	; 0x100c <__ftoa_engine+0x146>
     fee:	70 33       	cpi	r23, 0x30	; 48
     ff0:	11 f4       	brne	.+4      	; 0xff6 <__ftoa_engine+0x130>
     ff2:	8a 95       	dec	r24
     ff4:	e6 cf       	rjmp	.-52     	; 0xfc2 <__ftoa_engine+0xfc>
     ff6:	e8 94       	clt
     ff8:	01 50       	subi	r16, 0x01	; 1
     ffa:	30 f0       	brcs	.+12     	; 0x1008 <__ftoa_engine+0x142>
     ffc:	08 0f       	add	r16, r24
     ffe:	0a f4       	brpl	.+2      	; 0x1002 <__ftoa_engine+0x13c>
    1000:	00 27       	eor	r16, r16
    1002:	02 17       	cp	r16, r18
    1004:	08 f4       	brcc	.+2      	; 0x1008 <__ftoa_engine+0x142>
    1006:	20 2f       	mov	r18, r16
    1008:	23 95       	inc	r18
    100a:	02 2f       	mov	r16, r18
    100c:	7a 33       	cpi	r23, 0x3A	; 58
    100e:	28 f0       	brcs	.+10     	; 0x101a <__ftoa_engine+0x154>
    1010:	79 e3       	ldi	r23, 0x39	; 57
    1012:	7d 93       	st	X+, r23
    1014:	2a 95       	dec	r18
    1016:	e9 f7       	brne	.-6      	; 0x1012 <__ftoa_engine+0x14c>
    1018:	10 c0       	rjmp	.+32     	; 0x103a <__ftoa_engine+0x174>
    101a:	7d 93       	st	X+, r23
    101c:	2a 95       	dec	r18
    101e:	89 f6       	brne	.-94     	; 0xfc2 <__ftoa_engine+0xfc>
    1020:	06 94       	lsr	r0
    1022:	97 95       	ror	r25
    1024:	67 95       	ror	r22
    1026:	37 95       	ror	r19
    1028:	17 95       	ror	r17
    102a:	17 94       	ror	r1
    102c:	e1 18       	sub	r14, r1
    102e:	f1 0a       	sbc	r15, r17
    1030:	43 0b       	sbc	r20, r19
    1032:	56 0b       	sbc	r21, r22
    1034:	c9 0b       	sbc	r28, r25
    1036:	d0 09       	sbc	r29, r0
    1038:	98 f0       	brcs	.+38     	; 0x1060 <__ftoa_engine+0x19a>
    103a:	23 95       	inc	r18
    103c:	7e 91       	ld	r23, -X
    103e:	73 95       	inc	r23
    1040:	7a 33       	cpi	r23, 0x3A	; 58
    1042:	08 f0       	brcs	.+2      	; 0x1046 <__ftoa_engine+0x180>
    1044:	70 e3       	ldi	r23, 0x30	; 48
    1046:	7c 93       	st	X, r23
    1048:	20 13       	cpse	r18, r16
    104a:	b8 f7       	brcc	.-18     	; 0x103a <__ftoa_engine+0x174>
    104c:	7e 91       	ld	r23, -X
    104e:	70 61       	ori	r23, 0x10	; 16
    1050:	7d 93       	st	X+, r23
    1052:	30 f0       	brcs	.+12     	; 0x1060 <__ftoa_engine+0x19a>
    1054:	83 95       	inc	r24
    1056:	71 e3       	ldi	r23, 0x31	; 49
    1058:	7d 93       	st	X+, r23
    105a:	70 e3       	ldi	r23, 0x30	; 48
    105c:	2a 95       	dec	r18
    105e:	e1 f7       	brne	.-8      	; 0x1058 <__ftoa_engine+0x192>
    1060:	11 24       	eor	r1, r1
    1062:	ef 90       	pop	r14
    1064:	ff 90       	pop	r15
    1066:	0f 91       	pop	r16
    1068:	1f 91       	pop	r17
    106a:	cf 91       	pop	r28
    106c:	df 91       	pop	r29
    106e:	99 27       	eor	r25, r25
    1070:	87 fd       	sbrc	r24, 7
    1072:	90 95       	com	r25
    1074:	08 95       	ret

00001076 <strnlen_P>:
    1076:	fc 01       	movw	r30, r24
    1078:	05 90       	lpm	r0, Z+
    107a:	61 50       	subi	r22, 0x01	; 1
    107c:	70 40       	sbci	r23, 0x00	; 0
    107e:	01 10       	cpse	r0, r1
    1080:	d8 f7       	brcc	.-10     	; 0x1078 <strnlen_P+0x2>
    1082:	80 95       	com	r24
    1084:	90 95       	com	r25
    1086:	8e 0f       	add	r24, r30
    1088:	9f 1f       	adc	r25, r31
    108a:	08 95       	ret

0000108c <strnlen>:
    108c:	fc 01       	movw	r30, r24
    108e:	61 50       	subi	r22, 0x01	; 1
    1090:	70 40       	sbci	r23, 0x00	; 0
    1092:	01 90       	ld	r0, Z+
    1094:	01 10       	cpse	r0, r1
    1096:	d8 f7       	brcc	.-10     	; 0x108e <strnlen+0x2>
    1098:	80 95       	com	r24
    109a:	90 95       	com	r25
    109c:	8e 0f       	add	r24, r30
    109e:	9f 1f       	adc	r25, r31
    10a0:	08 95       	ret

000010a2 <fputc>:
    10a2:	0f 93       	push	r16
    10a4:	1f 93       	push	r17
    10a6:	cf 93       	push	r28
    10a8:	df 93       	push	r29
    10aa:	fb 01       	movw	r30, r22
    10ac:	23 81       	ldd	r18, Z+3	; 0x03
    10ae:	21 fd       	sbrc	r18, 1
    10b0:	03 c0       	rjmp	.+6      	; 0x10b8 <fputc+0x16>
    10b2:	8f ef       	ldi	r24, 0xFF	; 255
    10b4:	9f ef       	ldi	r25, 0xFF	; 255
    10b6:	2c c0       	rjmp	.+88     	; 0x1110 <fputc+0x6e>
    10b8:	22 ff       	sbrs	r18, 2
    10ba:	16 c0       	rjmp	.+44     	; 0x10e8 <fputc+0x46>
    10bc:	46 81       	ldd	r20, Z+6	; 0x06
    10be:	57 81       	ldd	r21, Z+7	; 0x07
    10c0:	24 81       	ldd	r18, Z+4	; 0x04
    10c2:	35 81       	ldd	r19, Z+5	; 0x05
    10c4:	42 17       	cp	r20, r18
    10c6:	53 07       	cpc	r21, r19
    10c8:	44 f4       	brge	.+16     	; 0x10da <fputc+0x38>
    10ca:	a0 81       	ld	r26, Z
    10cc:	b1 81       	ldd	r27, Z+1	; 0x01
    10ce:	9d 01       	movw	r18, r26
    10d0:	2f 5f       	subi	r18, 0xFF	; 255
    10d2:	3f 4f       	sbci	r19, 0xFF	; 255
    10d4:	31 83       	std	Z+1, r19	; 0x01
    10d6:	20 83       	st	Z, r18
    10d8:	8c 93       	st	X, r24
    10da:	26 81       	ldd	r18, Z+6	; 0x06
    10dc:	37 81       	ldd	r19, Z+7	; 0x07
    10de:	2f 5f       	subi	r18, 0xFF	; 255
    10e0:	3f 4f       	sbci	r19, 0xFF	; 255
    10e2:	37 83       	std	Z+7, r19	; 0x07
    10e4:	26 83       	std	Z+6, r18	; 0x06
    10e6:	14 c0       	rjmp	.+40     	; 0x1110 <fputc+0x6e>
    10e8:	8b 01       	movw	r16, r22
    10ea:	ec 01       	movw	r28, r24
    10ec:	fb 01       	movw	r30, r22
    10ee:	00 84       	ldd	r0, Z+8	; 0x08
    10f0:	f1 85       	ldd	r31, Z+9	; 0x09
    10f2:	e0 2d       	mov	r30, r0
    10f4:	09 95       	icall
    10f6:	89 2b       	or	r24, r25
    10f8:	e1 f6       	brne	.-72     	; 0x10b2 <fputc+0x10>
    10fa:	d8 01       	movw	r26, r16
    10fc:	16 96       	adiw	r26, 0x06	; 6
    10fe:	8d 91       	ld	r24, X+
    1100:	9c 91       	ld	r25, X
    1102:	17 97       	sbiw	r26, 0x07	; 7
    1104:	01 96       	adiw	r24, 0x01	; 1
    1106:	17 96       	adiw	r26, 0x07	; 7
    1108:	9c 93       	st	X, r25
    110a:	8e 93       	st	-X, r24
    110c:	16 97       	sbiw	r26, 0x06	; 6
    110e:	ce 01       	movw	r24, r28
    1110:	df 91       	pop	r29
    1112:	cf 91       	pop	r28
    1114:	1f 91       	pop	r17
    1116:	0f 91       	pop	r16
    1118:	08 95       	ret

0000111a <__ultoa_invert>:
    111a:	fa 01       	movw	r30, r20
    111c:	aa 27       	eor	r26, r26
    111e:	28 30       	cpi	r18, 0x08	; 8
    1120:	51 f1       	breq	.+84     	; 0x1176 <__ultoa_invert+0x5c>
    1122:	20 31       	cpi	r18, 0x10	; 16
    1124:	81 f1       	breq	.+96     	; 0x1186 <__ultoa_invert+0x6c>
    1126:	e8 94       	clt
    1128:	6f 93       	push	r22
    112a:	6e 7f       	andi	r22, 0xFE	; 254
    112c:	6e 5f       	subi	r22, 0xFE	; 254
    112e:	7f 4f       	sbci	r23, 0xFF	; 255
    1130:	8f 4f       	sbci	r24, 0xFF	; 255
    1132:	9f 4f       	sbci	r25, 0xFF	; 255
    1134:	af 4f       	sbci	r26, 0xFF	; 255
    1136:	b1 e0       	ldi	r27, 0x01	; 1
    1138:	3e d0       	rcall	.+124    	; 0x11b6 <__ultoa_invert+0x9c>
    113a:	b4 e0       	ldi	r27, 0x04	; 4
    113c:	3c d0       	rcall	.+120    	; 0x11b6 <__ultoa_invert+0x9c>
    113e:	67 0f       	add	r22, r23
    1140:	78 1f       	adc	r23, r24
    1142:	89 1f       	adc	r24, r25
    1144:	9a 1f       	adc	r25, r26
    1146:	a1 1d       	adc	r26, r1
    1148:	68 0f       	add	r22, r24
    114a:	79 1f       	adc	r23, r25
    114c:	8a 1f       	adc	r24, r26
    114e:	91 1d       	adc	r25, r1
    1150:	a1 1d       	adc	r26, r1
    1152:	6a 0f       	add	r22, r26
    1154:	71 1d       	adc	r23, r1
    1156:	81 1d       	adc	r24, r1
    1158:	91 1d       	adc	r25, r1
    115a:	a1 1d       	adc	r26, r1
    115c:	20 d0       	rcall	.+64     	; 0x119e <__ultoa_invert+0x84>
    115e:	09 f4       	brne	.+2      	; 0x1162 <__ultoa_invert+0x48>
    1160:	68 94       	set
    1162:	3f 91       	pop	r19
    1164:	2a e0       	ldi	r18, 0x0A	; 10
    1166:	26 9f       	mul	r18, r22
    1168:	11 24       	eor	r1, r1
    116a:	30 19       	sub	r19, r0
    116c:	30 5d       	subi	r19, 0xD0	; 208
    116e:	31 93       	st	Z+, r19
    1170:	de f6       	brtc	.-74     	; 0x1128 <__ultoa_invert+0xe>
    1172:	cf 01       	movw	r24, r30
    1174:	08 95       	ret
    1176:	46 2f       	mov	r20, r22
    1178:	47 70       	andi	r20, 0x07	; 7
    117a:	40 5d       	subi	r20, 0xD0	; 208
    117c:	41 93       	st	Z+, r20
    117e:	b3 e0       	ldi	r27, 0x03	; 3
    1180:	0f d0       	rcall	.+30     	; 0x11a0 <__ultoa_invert+0x86>
    1182:	c9 f7       	brne	.-14     	; 0x1176 <__ultoa_invert+0x5c>
    1184:	f6 cf       	rjmp	.-20     	; 0x1172 <__ultoa_invert+0x58>
    1186:	46 2f       	mov	r20, r22
    1188:	4f 70       	andi	r20, 0x0F	; 15
    118a:	40 5d       	subi	r20, 0xD0	; 208
    118c:	4a 33       	cpi	r20, 0x3A	; 58
    118e:	18 f0       	brcs	.+6      	; 0x1196 <__ultoa_invert+0x7c>
    1190:	49 5d       	subi	r20, 0xD9	; 217
    1192:	31 fd       	sbrc	r19, 1
    1194:	40 52       	subi	r20, 0x20	; 32
    1196:	41 93       	st	Z+, r20
    1198:	02 d0       	rcall	.+4      	; 0x119e <__ultoa_invert+0x84>
    119a:	a9 f7       	brne	.-22     	; 0x1186 <__ultoa_invert+0x6c>
    119c:	ea cf       	rjmp	.-44     	; 0x1172 <__ultoa_invert+0x58>
    119e:	b4 e0       	ldi	r27, 0x04	; 4
    11a0:	a6 95       	lsr	r26
    11a2:	97 95       	ror	r25
    11a4:	87 95       	ror	r24
    11a6:	77 95       	ror	r23
    11a8:	67 95       	ror	r22
    11aa:	ba 95       	dec	r27
    11ac:	c9 f7       	brne	.-14     	; 0x11a0 <__ultoa_invert+0x86>
    11ae:	00 97       	sbiw	r24, 0x00	; 0
    11b0:	61 05       	cpc	r22, r1
    11b2:	71 05       	cpc	r23, r1
    11b4:	08 95       	ret
    11b6:	9b 01       	movw	r18, r22
    11b8:	ac 01       	movw	r20, r24
    11ba:	0a 2e       	mov	r0, r26
    11bc:	06 94       	lsr	r0
    11be:	57 95       	ror	r21
    11c0:	47 95       	ror	r20
    11c2:	37 95       	ror	r19
    11c4:	27 95       	ror	r18
    11c6:	ba 95       	dec	r27
    11c8:	c9 f7       	brne	.-14     	; 0x11bc <__ultoa_invert+0xa2>
    11ca:	62 0f       	add	r22, r18
    11cc:	73 1f       	adc	r23, r19
    11ce:	84 1f       	adc	r24, r20
    11d0:	95 1f       	adc	r25, r21
    11d2:	a0 1d       	adc	r26, r0
    11d4:	08 95       	ret

000011d6 <__prologue_saves__>:
    11d6:	2f 92       	push	r2
    11d8:	3f 92       	push	r3
    11da:	4f 92       	push	r4
    11dc:	5f 92       	push	r5
    11de:	6f 92       	push	r6
    11e0:	7f 92       	push	r7
    11e2:	8f 92       	push	r8
    11e4:	9f 92       	push	r9
    11e6:	af 92       	push	r10
    11e8:	bf 92       	push	r11
    11ea:	cf 92       	push	r12
    11ec:	df 92       	push	r13
    11ee:	ef 92       	push	r14
    11f0:	ff 92       	push	r15
    11f2:	0f 93       	push	r16
    11f4:	1f 93       	push	r17
    11f6:	cf 93       	push	r28
    11f8:	df 93       	push	r29
    11fa:	cd b7       	in	r28, 0x3d	; 61
    11fc:	de b7       	in	r29, 0x3e	; 62
    11fe:	ca 1b       	sub	r28, r26
    1200:	db 0b       	sbc	r29, r27
    1202:	0f b6       	in	r0, 0x3f	; 63
    1204:	f8 94       	cli
    1206:	de bf       	out	0x3e, r29	; 62
    1208:	0f be       	out	0x3f, r0	; 63
    120a:	cd bf       	out	0x3d, r28	; 61
    120c:	09 94       	ijmp

0000120e <__epilogue_restores__>:
    120e:	2a 88       	ldd	r2, Y+18	; 0x12
    1210:	39 88       	ldd	r3, Y+17	; 0x11
    1212:	48 88       	ldd	r4, Y+16	; 0x10
    1214:	5f 84       	ldd	r5, Y+15	; 0x0f
    1216:	6e 84       	ldd	r6, Y+14	; 0x0e
    1218:	7d 84       	ldd	r7, Y+13	; 0x0d
    121a:	8c 84       	ldd	r8, Y+12	; 0x0c
    121c:	9b 84       	ldd	r9, Y+11	; 0x0b
    121e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1220:	b9 84       	ldd	r11, Y+9	; 0x09
    1222:	c8 84       	ldd	r12, Y+8	; 0x08
    1224:	df 80       	ldd	r13, Y+7	; 0x07
    1226:	ee 80       	ldd	r14, Y+6	; 0x06
    1228:	fd 80       	ldd	r15, Y+5	; 0x05
    122a:	0c 81       	ldd	r16, Y+4	; 0x04
    122c:	1b 81       	ldd	r17, Y+3	; 0x03
    122e:	aa 81       	ldd	r26, Y+2	; 0x02
    1230:	b9 81       	ldd	r27, Y+1	; 0x01
    1232:	ce 0f       	add	r28, r30
    1234:	d1 1d       	adc	r29, r1
    1236:	0f b6       	in	r0, 0x3f	; 63
    1238:	f8 94       	cli
    123a:	de bf       	out	0x3e, r29	; 62
    123c:	0f be       	out	0x3f, r0	; 63
    123e:	cd bf       	out	0x3d, r28	; 61
    1240:	ed 01       	movw	r28, r26
    1242:	08 95       	ret

00001244 <_exit>:
    1244:	f8 94       	cli

00001246 <__stop_program>:
    1246:	ff cf       	rjmp	.-2      	; 0x1246 <__stop_program>
