
STM32f103c6_SPWM3PHASE_DRIVER.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00005104  08000130  08000130  00010130  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000600  08005238  08005238  00015238  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08005838  08005838  00020094  2**0
                  CONTENTS
  4 .ARM          00000000  08005838  08005838  00020094  2**0
                  CONTENTS
  5 .preinit_array 00000000  08005838  08005838  00020094  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08005838  08005838  00015838  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800583c  0800583c  0001583c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000094  20000000  08005840  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000008c  20000094  080058d4  00020094  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000120  080058d4  00020120  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000439b  00000000  00000000  000200bd  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000c09  00000000  00000000  00024458  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000218  00000000  00000000  00025068  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000001b0  00000000  00000000  00025280  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00003013  00000000  00000000  00025430  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00002d6f  00000000  00000000  00028443  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    0000a56d  00000000  00000000  0002b1b2  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0003571f  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000010fc  00000000  00000000  0003579c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000094 	.word	0x20000094
 800014c:	00000000 	.word	0x00000000
 8000150:	0800521c 	.word	0x0800521c

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000098 	.word	0x20000098
 800016c:	0800521c 	.word	0x0800521c

08000170 <__aeabi_drsub>:
 8000170:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000174:	e002      	b.n	800017c <__adddf3>
 8000176:	bf00      	nop

08000178 <__aeabi_dsub>:
 8000178:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800017c <__adddf3>:
 800017c:	b530      	push	{r4, r5, lr}
 800017e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000182:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000186:	ea94 0f05 	teq	r4, r5
 800018a:	bf08      	it	eq
 800018c:	ea90 0f02 	teqeq	r0, r2
 8000190:	bf1f      	itttt	ne
 8000192:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000196:	ea55 0c02 	orrsne.w	ip, r5, r2
 800019a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800019e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80001a2:	f000 80e2 	beq.w	800036a <__adddf3+0x1ee>
 80001a6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80001aa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80001ae:	bfb8      	it	lt
 80001b0:	426d      	neglt	r5, r5
 80001b2:	dd0c      	ble.n	80001ce <__adddf3+0x52>
 80001b4:	442c      	add	r4, r5
 80001b6:	ea80 0202 	eor.w	r2, r0, r2
 80001ba:	ea81 0303 	eor.w	r3, r1, r3
 80001be:	ea82 0000 	eor.w	r0, r2, r0
 80001c2:	ea83 0101 	eor.w	r1, r3, r1
 80001c6:	ea80 0202 	eor.w	r2, r0, r2
 80001ca:	ea81 0303 	eor.w	r3, r1, r3
 80001ce:	2d36      	cmp	r5, #54	; 0x36
 80001d0:	bf88      	it	hi
 80001d2:	bd30      	pophi	{r4, r5, pc}
 80001d4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80001d8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001dc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80001e0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001e4:	d002      	beq.n	80001ec <__adddf3+0x70>
 80001e6:	4240      	negs	r0, r0
 80001e8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001ec:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80001f0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80001f4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80001f8:	d002      	beq.n	8000200 <__adddf3+0x84>
 80001fa:	4252      	negs	r2, r2
 80001fc:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000200:	ea94 0f05 	teq	r4, r5
 8000204:	f000 80a7 	beq.w	8000356 <__adddf3+0x1da>
 8000208:	f1a4 0401 	sub.w	r4, r4, #1
 800020c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000210:	db0d      	blt.n	800022e <__adddf3+0xb2>
 8000212:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000216:	fa22 f205 	lsr.w	r2, r2, r5
 800021a:	1880      	adds	r0, r0, r2
 800021c:	f141 0100 	adc.w	r1, r1, #0
 8000220:	fa03 f20e 	lsl.w	r2, r3, lr
 8000224:	1880      	adds	r0, r0, r2
 8000226:	fa43 f305 	asr.w	r3, r3, r5
 800022a:	4159      	adcs	r1, r3
 800022c:	e00e      	b.n	800024c <__adddf3+0xd0>
 800022e:	f1a5 0520 	sub.w	r5, r5, #32
 8000232:	f10e 0e20 	add.w	lr, lr, #32
 8000236:	2a01      	cmp	r2, #1
 8000238:	fa03 fc0e 	lsl.w	ip, r3, lr
 800023c:	bf28      	it	cs
 800023e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000242:	fa43 f305 	asr.w	r3, r3, r5
 8000246:	18c0      	adds	r0, r0, r3
 8000248:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800024c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000250:	d507      	bpl.n	8000262 <__adddf3+0xe6>
 8000252:	f04f 0e00 	mov.w	lr, #0
 8000256:	f1dc 0c00 	rsbs	ip, ip, #0
 800025a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800025e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000262:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000266:	d31b      	bcc.n	80002a0 <__adddf3+0x124>
 8000268:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800026c:	d30c      	bcc.n	8000288 <__adddf3+0x10c>
 800026e:	0849      	lsrs	r1, r1, #1
 8000270:	ea5f 0030 	movs.w	r0, r0, rrx
 8000274:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000278:	f104 0401 	add.w	r4, r4, #1
 800027c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000280:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000284:	f080 809a 	bcs.w	80003bc <__adddf3+0x240>
 8000288:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800028c:	bf08      	it	eq
 800028e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000292:	f150 0000 	adcs.w	r0, r0, #0
 8000296:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800029a:	ea41 0105 	orr.w	r1, r1, r5
 800029e:	bd30      	pop	{r4, r5, pc}
 80002a0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80002a4:	4140      	adcs	r0, r0
 80002a6:	eb41 0101 	adc.w	r1, r1, r1
 80002aa:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80002ae:	f1a4 0401 	sub.w	r4, r4, #1
 80002b2:	d1e9      	bne.n	8000288 <__adddf3+0x10c>
 80002b4:	f091 0f00 	teq	r1, #0
 80002b8:	bf04      	itt	eq
 80002ba:	4601      	moveq	r1, r0
 80002bc:	2000      	moveq	r0, #0
 80002be:	fab1 f381 	clz	r3, r1
 80002c2:	bf08      	it	eq
 80002c4:	3320      	addeq	r3, #32
 80002c6:	f1a3 030b 	sub.w	r3, r3, #11
 80002ca:	f1b3 0220 	subs.w	r2, r3, #32
 80002ce:	da0c      	bge.n	80002ea <__adddf3+0x16e>
 80002d0:	320c      	adds	r2, #12
 80002d2:	dd08      	ble.n	80002e6 <__adddf3+0x16a>
 80002d4:	f102 0c14 	add.w	ip, r2, #20
 80002d8:	f1c2 020c 	rsb	r2, r2, #12
 80002dc:	fa01 f00c 	lsl.w	r0, r1, ip
 80002e0:	fa21 f102 	lsr.w	r1, r1, r2
 80002e4:	e00c      	b.n	8000300 <__adddf3+0x184>
 80002e6:	f102 0214 	add.w	r2, r2, #20
 80002ea:	bfd8      	it	le
 80002ec:	f1c2 0c20 	rsble	ip, r2, #32
 80002f0:	fa01 f102 	lsl.w	r1, r1, r2
 80002f4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002f8:	bfdc      	itt	le
 80002fa:	ea41 010c 	orrle.w	r1, r1, ip
 80002fe:	4090      	lslle	r0, r2
 8000300:	1ae4      	subs	r4, r4, r3
 8000302:	bfa2      	ittt	ge
 8000304:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000308:	4329      	orrge	r1, r5
 800030a:	bd30      	popge	{r4, r5, pc}
 800030c:	ea6f 0404 	mvn.w	r4, r4
 8000310:	3c1f      	subs	r4, #31
 8000312:	da1c      	bge.n	800034e <__adddf3+0x1d2>
 8000314:	340c      	adds	r4, #12
 8000316:	dc0e      	bgt.n	8000336 <__adddf3+0x1ba>
 8000318:	f104 0414 	add.w	r4, r4, #20
 800031c:	f1c4 0220 	rsb	r2, r4, #32
 8000320:	fa20 f004 	lsr.w	r0, r0, r4
 8000324:	fa01 f302 	lsl.w	r3, r1, r2
 8000328:	ea40 0003 	orr.w	r0, r0, r3
 800032c:	fa21 f304 	lsr.w	r3, r1, r4
 8000330:	ea45 0103 	orr.w	r1, r5, r3
 8000334:	bd30      	pop	{r4, r5, pc}
 8000336:	f1c4 040c 	rsb	r4, r4, #12
 800033a:	f1c4 0220 	rsb	r2, r4, #32
 800033e:	fa20 f002 	lsr.w	r0, r0, r2
 8000342:	fa01 f304 	lsl.w	r3, r1, r4
 8000346:	ea40 0003 	orr.w	r0, r0, r3
 800034a:	4629      	mov	r1, r5
 800034c:	bd30      	pop	{r4, r5, pc}
 800034e:	fa21 f004 	lsr.w	r0, r1, r4
 8000352:	4629      	mov	r1, r5
 8000354:	bd30      	pop	{r4, r5, pc}
 8000356:	f094 0f00 	teq	r4, #0
 800035a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800035e:	bf06      	itte	eq
 8000360:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000364:	3401      	addeq	r4, #1
 8000366:	3d01      	subne	r5, #1
 8000368:	e74e      	b.n	8000208 <__adddf3+0x8c>
 800036a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800036e:	bf18      	it	ne
 8000370:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000374:	d029      	beq.n	80003ca <__adddf3+0x24e>
 8000376:	ea94 0f05 	teq	r4, r5
 800037a:	bf08      	it	eq
 800037c:	ea90 0f02 	teqeq	r0, r2
 8000380:	d005      	beq.n	800038e <__adddf3+0x212>
 8000382:	ea54 0c00 	orrs.w	ip, r4, r0
 8000386:	bf04      	itt	eq
 8000388:	4619      	moveq	r1, r3
 800038a:	4610      	moveq	r0, r2
 800038c:	bd30      	pop	{r4, r5, pc}
 800038e:	ea91 0f03 	teq	r1, r3
 8000392:	bf1e      	ittt	ne
 8000394:	2100      	movne	r1, #0
 8000396:	2000      	movne	r0, #0
 8000398:	bd30      	popne	{r4, r5, pc}
 800039a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800039e:	d105      	bne.n	80003ac <__adddf3+0x230>
 80003a0:	0040      	lsls	r0, r0, #1
 80003a2:	4149      	adcs	r1, r1
 80003a4:	bf28      	it	cs
 80003a6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80003aa:	bd30      	pop	{r4, r5, pc}
 80003ac:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80003b0:	bf3c      	itt	cc
 80003b2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80003b6:	bd30      	popcc	{r4, r5, pc}
 80003b8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003bc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80003c0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80003c4:	f04f 0000 	mov.w	r0, #0
 80003c8:	bd30      	pop	{r4, r5, pc}
 80003ca:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003ce:	bf1a      	itte	ne
 80003d0:	4619      	movne	r1, r3
 80003d2:	4610      	movne	r0, r2
 80003d4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003d8:	bf1c      	itt	ne
 80003da:	460b      	movne	r3, r1
 80003dc:	4602      	movne	r2, r0
 80003de:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003e2:	bf06      	itte	eq
 80003e4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003e8:	ea91 0f03 	teqeq	r1, r3
 80003ec:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80003f0:	bd30      	pop	{r4, r5, pc}
 80003f2:	bf00      	nop

080003f4 <__aeabi_ui2d>:
 80003f4:	f090 0f00 	teq	r0, #0
 80003f8:	bf04      	itt	eq
 80003fa:	2100      	moveq	r1, #0
 80003fc:	4770      	bxeq	lr
 80003fe:	b530      	push	{r4, r5, lr}
 8000400:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000404:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000408:	f04f 0500 	mov.w	r5, #0
 800040c:	f04f 0100 	mov.w	r1, #0
 8000410:	e750      	b.n	80002b4 <__adddf3+0x138>
 8000412:	bf00      	nop

08000414 <__aeabi_i2d>:
 8000414:	f090 0f00 	teq	r0, #0
 8000418:	bf04      	itt	eq
 800041a:	2100      	moveq	r1, #0
 800041c:	4770      	bxeq	lr
 800041e:	b530      	push	{r4, r5, lr}
 8000420:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000424:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000428:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800042c:	bf48      	it	mi
 800042e:	4240      	negmi	r0, r0
 8000430:	f04f 0100 	mov.w	r1, #0
 8000434:	e73e      	b.n	80002b4 <__adddf3+0x138>
 8000436:	bf00      	nop

08000438 <__aeabi_f2d>:
 8000438:	0042      	lsls	r2, r0, #1
 800043a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800043e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000442:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000446:	bf1f      	itttt	ne
 8000448:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800044c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000450:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000454:	4770      	bxne	lr
 8000456:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800045a:	bf08      	it	eq
 800045c:	4770      	bxeq	lr
 800045e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000462:	bf04      	itt	eq
 8000464:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000468:	4770      	bxeq	lr
 800046a:	b530      	push	{r4, r5, lr}
 800046c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000470:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000474:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000478:	e71c      	b.n	80002b4 <__adddf3+0x138>
 800047a:	bf00      	nop

0800047c <__aeabi_ul2d>:
 800047c:	ea50 0201 	orrs.w	r2, r0, r1
 8000480:	bf08      	it	eq
 8000482:	4770      	bxeq	lr
 8000484:	b530      	push	{r4, r5, lr}
 8000486:	f04f 0500 	mov.w	r5, #0
 800048a:	e00a      	b.n	80004a2 <__aeabi_l2d+0x16>

0800048c <__aeabi_l2d>:
 800048c:	ea50 0201 	orrs.w	r2, r0, r1
 8000490:	bf08      	it	eq
 8000492:	4770      	bxeq	lr
 8000494:	b530      	push	{r4, r5, lr}
 8000496:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800049a:	d502      	bpl.n	80004a2 <__aeabi_l2d+0x16>
 800049c:	4240      	negs	r0, r0
 800049e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80004a2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004a6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004aa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80004ae:	f43f aed8 	beq.w	8000262 <__adddf3+0xe6>
 80004b2:	f04f 0203 	mov.w	r2, #3
 80004b6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004ba:	bf18      	it	ne
 80004bc:	3203      	addne	r2, #3
 80004be:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004c2:	bf18      	it	ne
 80004c4:	3203      	addne	r2, #3
 80004c6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004ca:	f1c2 0320 	rsb	r3, r2, #32
 80004ce:	fa00 fc03 	lsl.w	ip, r0, r3
 80004d2:	fa20 f002 	lsr.w	r0, r0, r2
 80004d6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004da:	ea40 000e 	orr.w	r0, r0, lr
 80004de:	fa21 f102 	lsr.w	r1, r1, r2
 80004e2:	4414      	add	r4, r2
 80004e4:	e6bd      	b.n	8000262 <__adddf3+0xe6>
 80004e6:	bf00      	nop

080004e8 <__aeabi_dmul>:
 80004e8:	b570      	push	{r4, r5, r6, lr}
 80004ea:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80004ee:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80004f2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80004f6:	bf1d      	ittte	ne
 80004f8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80004fc:	ea94 0f0c 	teqne	r4, ip
 8000500:	ea95 0f0c 	teqne	r5, ip
 8000504:	f000 f8de 	bleq	80006c4 <__aeabi_dmul+0x1dc>
 8000508:	442c      	add	r4, r5
 800050a:	ea81 0603 	eor.w	r6, r1, r3
 800050e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000512:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000516:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800051a:	bf18      	it	ne
 800051c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000520:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000524:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000528:	d038      	beq.n	800059c <__aeabi_dmul+0xb4>
 800052a:	fba0 ce02 	umull	ip, lr, r0, r2
 800052e:	f04f 0500 	mov.w	r5, #0
 8000532:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000536:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800053a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800053e:	f04f 0600 	mov.w	r6, #0
 8000542:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000546:	f09c 0f00 	teq	ip, #0
 800054a:	bf18      	it	ne
 800054c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000550:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000554:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000558:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800055c:	d204      	bcs.n	8000568 <__aeabi_dmul+0x80>
 800055e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000562:	416d      	adcs	r5, r5
 8000564:	eb46 0606 	adc.w	r6, r6, r6
 8000568:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800056c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000570:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000574:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000578:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800057c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000580:	bf88      	it	hi
 8000582:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000586:	d81e      	bhi.n	80005c6 <__aeabi_dmul+0xde>
 8000588:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800058c:	bf08      	it	eq
 800058e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000592:	f150 0000 	adcs.w	r0, r0, #0
 8000596:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800059a:	bd70      	pop	{r4, r5, r6, pc}
 800059c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80005a0:	ea46 0101 	orr.w	r1, r6, r1
 80005a4:	ea40 0002 	orr.w	r0, r0, r2
 80005a8:	ea81 0103 	eor.w	r1, r1, r3
 80005ac:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005b0:	bfc2      	ittt	gt
 80005b2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005b6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005ba:	bd70      	popgt	{r4, r5, r6, pc}
 80005bc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005c0:	f04f 0e00 	mov.w	lr, #0
 80005c4:	3c01      	subs	r4, #1
 80005c6:	f300 80ab 	bgt.w	8000720 <__aeabi_dmul+0x238>
 80005ca:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80005ce:	bfde      	ittt	le
 80005d0:	2000      	movle	r0, #0
 80005d2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80005d6:	bd70      	pople	{r4, r5, r6, pc}
 80005d8:	f1c4 0400 	rsb	r4, r4, #0
 80005dc:	3c20      	subs	r4, #32
 80005de:	da35      	bge.n	800064c <__aeabi_dmul+0x164>
 80005e0:	340c      	adds	r4, #12
 80005e2:	dc1b      	bgt.n	800061c <__aeabi_dmul+0x134>
 80005e4:	f104 0414 	add.w	r4, r4, #20
 80005e8:	f1c4 0520 	rsb	r5, r4, #32
 80005ec:	fa00 f305 	lsl.w	r3, r0, r5
 80005f0:	fa20 f004 	lsr.w	r0, r0, r4
 80005f4:	fa01 f205 	lsl.w	r2, r1, r5
 80005f8:	ea40 0002 	orr.w	r0, r0, r2
 80005fc:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000600:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000604:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000608:	fa21 f604 	lsr.w	r6, r1, r4
 800060c:	eb42 0106 	adc.w	r1, r2, r6
 8000610:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000614:	bf08      	it	eq
 8000616:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800061a:	bd70      	pop	{r4, r5, r6, pc}
 800061c:	f1c4 040c 	rsb	r4, r4, #12
 8000620:	f1c4 0520 	rsb	r5, r4, #32
 8000624:	fa00 f304 	lsl.w	r3, r0, r4
 8000628:	fa20 f005 	lsr.w	r0, r0, r5
 800062c:	fa01 f204 	lsl.w	r2, r1, r4
 8000630:	ea40 0002 	orr.w	r0, r0, r2
 8000634:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000638:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800063c:	f141 0100 	adc.w	r1, r1, #0
 8000640:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000644:	bf08      	it	eq
 8000646:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800064a:	bd70      	pop	{r4, r5, r6, pc}
 800064c:	f1c4 0520 	rsb	r5, r4, #32
 8000650:	fa00 f205 	lsl.w	r2, r0, r5
 8000654:	ea4e 0e02 	orr.w	lr, lr, r2
 8000658:	fa20 f304 	lsr.w	r3, r0, r4
 800065c:	fa01 f205 	lsl.w	r2, r1, r5
 8000660:	ea43 0302 	orr.w	r3, r3, r2
 8000664:	fa21 f004 	lsr.w	r0, r1, r4
 8000668:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800066c:	fa21 f204 	lsr.w	r2, r1, r4
 8000670:	ea20 0002 	bic.w	r0, r0, r2
 8000674:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000678:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800067c:	bf08      	it	eq
 800067e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000682:	bd70      	pop	{r4, r5, r6, pc}
 8000684:	f094 0f00 	teq	r4, #0
 8000688:	d10f      	bne.n	80006aa <__aeabi_dmul+0x1c2>
 800068a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800068e:	0040      	lsls	r0, r0, #1
 8000690:	eb41 0101 	adc.w	r1, r1, r1
 8000694:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000698:	bf08      	it	eq
 800069a:	3c01      	subeq	r4, #1
 800069c:	d0f7      	beq.n	800068e <__aeabi_dmul+0x1a6>
 800069e:	ea41 0106 	orr.w	r1, r1, r6
 80006a2:	f095 0f00 	teq	r5, #0
 80006a6:	bf18      	it	ne
 80006a8:	4770      	bxne	lr
 80006aa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80006ae:	0052      	lsls	r2, r2, #1
 80006b0:	eb43 0303 	adc.w	r3, r3, r3
 80006b4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80006b8:	bf08      	it	eq
 80006ba:	3d01      	subeq	r5, #1
 80006bc:	d0f7      	beq.n	80006ae <__aeabi_dmul+0x1c6>
 80006be:	ea43 0306 	orr.w	r3, r3, r6
 80006c2:	4770      	bx	lr
 80006c4:	ea94 0f0c 	teq	r4, ip
 80006c8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006cc:	bf18      	it	ne
 80006ce:	ea95 0f0c 	teqne	r5, ip
 80006d2:	d00c      	beq.n	80006ee <__aeabi_dmul+0x206>
 80006d4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006d8:	bf18      	it	ne
 80006da:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006de:	d1d1      	bne.n	8000684 <__aeabi_dmul+0x19c>
 80006e0:	ea81 0103 	eor.w	r1, r1, r3
 80006e4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006e8:	f04f 0000 	mov.w	r0, #0
 80006ec:	bd70      	pop	{r4, r5, r6, pc}
 80006ee:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006f2:	bf06      	itte	eq
 80006f4:	4610      	moveq	r0, r2
 80006f6:	4619      	moveq	r1, r3
 80006f8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006fc:	d019      	beq.n	8000732 <__aeabi_dmul+0x24a>
 80006fe:	ea94 0f0c 	teq	r4, ip
 8000702:	d102      	bne.n	800070a <__aeabi_dmul+0x222>
 8000704:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000708:	d113      	bne.n	8000732 <__aeabi_dmul+0x24a>
 800070a:	ea95 0f0c 	teq	r5, ip
 800070e:	d105      	bne.n	800071c <__aeabi_dmul+0x234>
 8000710:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000714:	bf1c      	itt	ne
 8000716:	4610      	movne	r0, r2
 8000718:	4619      	movne	r1, r3
 800071a:	d10a      	bne.n	8000732 <__aeabi_dmul+0x24a>
 800071c:	ea81 0103 	eor.w	r1, r1, r3
 8000720:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000724:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000728:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800072c:	f04f 0000 	mov.w	r0, #0
 8000730:	bd70      	pop	{r4, r5, r6, pc}
 8000732:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000736:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800073a:	bd70      	pop	{r4, r5, r6, pc}

0800073c <__aeabi_ddiv>:
 800073c:	b570      	push	{r4, r5, r6, lr}
 800073e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000742:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000746:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800074a:	bf1d      	ittte	ne
 800074c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000750:	ea94 0f0c 	teqne	r4, ip
 8000754:	ea95 0f0c 	teqne	r5, ip
 8000758:	f000 f8a7 	bleq	80008aa <__aeabi_ddiv+0x16e>
 800075c:	eba4 0405 	sub.w	r4, r4, r5
 8000760:	ea81 0e03 	eor.w	lr, r1, r3
 8000764:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000768:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800076c:	f000 8088 	beq.w	8000880 <__aeabi_ddiv+0x144>
 8000770:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000774:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000778:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800077c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000780:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000784:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000788:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800078c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000790:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000794:	429d      	cmp	r5, r3
 8000796:	bf08      	it	eq
 8000798:	4296      	cmpeq	r6, r2
 800079a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 800079e:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80007a2:	d202      	bcs.n	80007aa <__aeabi_ddiv+0x6e>
 80007a4:	085b      	lsrs	r3, r3, #1
 80007a6:	ea4f 0232 	mov.w	r2, r2, rrx
 80007aa:	1ab6      	subs	r6, r6, r2
 80007ac:	eb65 0503 	sbc.w	r5, r5, r3
 80007b0:	085b      	lsrs	r3, r3, #1
 80007b2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007b6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80007ba:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80007be:	ebb6 0e02 	subs.w	lr, r6, r2
 80007c2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007c6:	bf22      	ittt	cs
 80007c8:	1ab6      	subcs	r6, r6, r2
 80007ca:	4675      	movcs	r5, lr
 80007cc:	ea40 000c 	orrcs.w	r0, r0, ip
 80007d0:	085b      	lsrs	r3, r3, #1
 80007d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007d6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007da:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007de:	bf22      	ittt	cs
 80007e0:	1ab6      	subcs	r6, r6, r2
 80007e2:	4675      	movcs	r5, lr
 80007e4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007e8:	085b      	lsrs	r3, r3, #1
 80007ea:	ea4f 0232 	mov.w	r2, r2, rrx
 80007ee:	ebb6 0e02 	subs.w	lr, r6, r2
 80007f2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007f6:	bf22      	ittt	cs
 80007f8:	1ab6      	subcs	r6, r6, r2
 80007fa:	4675      	movcs	r5, lr
 80007fc:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000800:	085b      	lsrs	r3, r3, #1
 8000802:	ea4f 0232 	mov.w	r2, r2, rrx
 8000806:	ebb6 0e02 	subs.w	lr, r6, r2
 800080a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800080e:	bf22      	ittt	cs
 8000810:	1ab6      	subcs	r6, r6, r2
 8000812:	4675      	movcs	r5, lr
 8000814:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000818:	ea55 0e06 	orrs.w	lr, r5, r6
 800081c:	d018      	beq.n	8000850 <__aeabi_ddiv+0x114>
 800081e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000822:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000826:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800082a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800082e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000832:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000836:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800083a:	d1c0      	bne.n	80007be <__aeabi_ddiv+0x82>
 800083c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000840:	d10b      	bne.n	800085a <__aeabi_ddiv+0x11e>
 8000842:	ea41 0100 	orr.w	r1, r1, r0
 8000846:	f04f 0000 	mov.w	r0, #0
 800084a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800084e:	e7b6      	b.n	80007be <__aeabi_ddiv+0x82>
 8000850:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000854:	bf04      	itt	eq
 8000856:	4301      	orreq	r1, r0
 8000858:	2000      	moveq	r0, #0
 800085a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800085e:	bf88      	it	hi
 8000860:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000864:	f63f aeaf 	bhi.w	80005c6 <__aeabi_dmul+0xde>
 8000868:	ebb5 0c03 	subs.w	ip, r5, r3
 800086c:	bf04      	itt	eq
 800086e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000872:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000876:	f150 0000 	adcs.w	r0, r0, #0
 800087a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800087e:	bd70      	pop	{r4, r5, r6, pc}
 8000880:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000884:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000888:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800088c:	bfc2      	ittt	gt
 800088e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000892:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000896:	bd70      	popgt	{r4, r5, r6, pc}
 8000898:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800089c:	f04f 0e00 	mov.w	lr, #0
 80008a0:	3c01      	subs	r4, #1
 80008a2:	e690      	b.n	80005c6 <__aeabi_dmul+0xde>
 80008a4:	ea45 0e06 	orr.w	lr, r5, r6
 80008a8:	e68d      	b.n	80005c6 <__aeabi_dmul+0xde>
 80008aa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80008ae:	ea94 0f0c 	teq	r4, ip
 80008b2:	bf08      	it	eq
 80008b4:	ea95 0f0c 	teqeq	r5, ip
 80008b8:	f43f af3b 	beq.w	8000732 <__aeabi_dmul+0x24a>
 80008bc:	ea94 0f0c 	teq	r4, ip
 80008c0:	d10a      	bne.n	80008d8 <__aeabi_ddiv+0x19c>
 80008c2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008c6:	f47f af34 	bne.w	8000732 <__aeabi_dmul+0x24a>
 80008ca:	ea95 0f0c 	teq	r5, ip
 80008ce:	f47f af25 	bne.w	800071c <__aeabi_dmul+0x234>
 80008d2:	4610      	mov	r0, r2
 80008d4:	4619      	mov	r1, r3
 80008d6:	e72c      	b.n	8000732 <__aeabi_dmul+0x24a>
 80008d8:	ea95 0f0c 	teq	r5, ip
 80008dc:	d106      	bne.n	80008ec <__aeabi_ddiv+0x1b0>
 80008de:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008e2:	f43f aefd 	beq.w	80006e0 <__aeabi_dmul+0x1f8>
 80008e6:	4610      	mov	r0, r2
 80008e8:	4619      	mov	r1, r3
 80008ea:	e722      	b.n	8000732 <__aeabi_dmul+0x24a>
 80008ec:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008f0:	bf18      	it	ne
 80008f2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008f6:	f47f aec5 	bne.w	8000684 <__aeabi_dmul+0x19c>
 80008fa:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80008fe:	f47f af0d 	bne.w	800071c <__aeabi_dmul+0x234>
 8000902:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000906:	f47f aeeb 	bne.w	80006e0 <__aeabi_dmul+0x1f8>
 800090a:	e712      	b.n	8000732 <__aeabi_dmul+0x24a>

0800090c <__gedf2>:
 800090c:	f04f 3cff 	mov.w	ip, #4294967295
 8000910:	e006      	b.n	8000920 <__cmpdf2+0x4>
 8000912:	bf00      	nop

08000914 <__ledf2>:
 8000914:	f04f 0c01 	mov.w	ip, #1
 8000918:	e002      	b.n	8000920 <__cmpdf2+0x4>
 800091a:	bf00      	nop

0800091c <__cmpdf2>:
 800091c:	f04f 0c01 	mov.w	ip, #1
 8000920:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000924:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000928:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800092c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000930:	bf18      	it	ne
 8000932:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000936:	d01b      	beq.n	8000970 <__cmpdf2+0x54>
 8000938:	b001      	add	sp, #4
 800093a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800093e:	bf0c      	ite	eq
 8000940:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000944:	ea91 0f03 	teqne	r1, r3
 8000948:	bf02      	ittt	eq
 800094a:	ea90 0f02 	teqeq	r0, r2
 800094e:	2000      	moveq	r0, #0
 8000950:	4770      	bxeq	lr
 8000952:	f110 0f00 	cmn.w	r0, #0
 8000956:	ea91 0f03 	teq	r1, r3
 800095a:	bf58      	it	pl
 800095c:	4299      	cmppl	r1, r3
 800095e:	bf08      	it	eq
 8000960:	4290      	cmpeq	r0, r2
 8000962:	bf2c      	ite	cs
 8000964:	17d8      	asrcs	r0, r3, #31
 8000966:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800096a:	f040 0001 	orr.w	r0, r0, #1
 800096e:	4770      	bx	lr
 8000970:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000974:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000978:	d102      	bne.n	8000980 <__cmpdf2+0x64>
 800097a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800097e:	d107      	bne.n	8000990 <__cmpdf2+0x74>
 8000980:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000984:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000988:	d1d6      	bne.n	8000938 <__cmpdf2+0x1c>
 800098a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800098e:	d0d3      	beq.n	8000938 <__cmpdf2+0x1c>
 8000990:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000994:	4770      	bx	lr
 8000996:	bf00      	nop

08000998 <__aeabi_cdrcmple>:
 8000998:	4684      	mov	ip, r0
 800099a:	4610      	mov	r0, r2
 800099c:	4662      	mov	r2, ip
 800099e:	468c      	mov	ip, r1
 80009a0:	4619      	mov	r1, r3
 80009a2:	4663      	mov	r3, ip
 80009a4:	e000      	b.n	80009a8 <__aeabi_cdcmpeq>
 80009a6:	bf00      	nop

080009a8 <__aeabi_cdcmpeq>:
 80009a8:	b501      	push	{r0, lr}
 80009aa:	f7ff ffb7 	bl	800091c <__cmpdf2>
 80009ae:	2800      	cmp	r0, #0
 80009b0:	bf48      	it	mi
 80009b2:	f110 0f00 	cmnmi.w	r0, #0
 80009b6:	bd01      	pop	{r0, pc}

080009b8 <__aeabi_dcmpeq>:
 80009b8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009bc:	f7ff fff4 	bl	80009a8 <__aeabi_cdcmpeq>
 80009c0:	bf0c      	ite	eq
 80009c2:	2001      	moveq	r0, #1
 80009c4:	2000      	movne	r0, #0
 80009c6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ca:	bf00      	nop

080009cc <__aeabi_dcmplt>:
 80009cc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009d0:	f7ff ffea 	bl	80009a8 <__aeabi_cdcmpeq>
 80009d4:	bf34      	ite	cc
 80009d6:	2001      	movcc	r0, #1
 80009d8:	2000      	movcs	r0, #0
 80009da:	f85d fb08 	ldr.w	pc, [sp], #8
 80009de:	bf00      	nop

080009e0 <__aeabi_dcmple>:
 80009e0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e4:	f7ff ffe0 	bl	80009a8 <__aeabi_cdcmpeq>
 80009e8:	bf94      	ite	ls
 80009ea:	2001      	movls	r0, #1
 80009ec:	2000      	movhi	r0, #0
 80009ee:	f85d fb08 	ldr.w	pc, [sp], #8
 80009f2:	bf00      	nop

080009f4 <__aeabi_dcmpge>:
 80009f4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009f8:	f7ff ffce 	bl	8000998 <__aeabi_cdrcmple>
 80009fc:	bf94      	ite	ls
 80009fe:	2001      	movls	r0, #1
 8000a00:	2000      	movhi	r0, #0
 8000a02:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a06:	bf00      	nop

08000a08 <__aeabi_dcmpgt>:
 8000a08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a0c:	f7ff ffc4 	bl	8000998 <__aeabi_cdrcmple>
 8000a10:	bf34      	ite	cc
 8000a12:	2001      	movcc	r0, #1
 8000a14:	2000      	movcs	r0, #0
 8000a16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a1a:	bf00      	nop

08000a1c <__aeabi_d2iz>:
 8000a1c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a20:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a24:	d215      	bcs.n	8000a52 <__aeabi_d2iz+0x36>
 8000a26:	d511      	bpl.n	8000a4c <__aeabi_d2iz+0x30>
 8000a28:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a2c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a30:	d912      	bls.n	8000a58 <__aeabi_d2iz+0x3c>
 8000a32:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a36:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a3a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a3e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000a42:	fa23 f002 	lsr.w	r0, r3, r2
 8000a46:	bf18      	it	ne
 8000a48:	4240      	negne	r0, r0
 8000a4a:	4770      	bx	lr
 8000a4c:	f04f 0000 	mov.w	r0, #0
 8000a50:	4770      	bx	lr
 8000a52:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a56:	d105      	bne.n	8000a64 <__aeabi_d2iz+0x48>
 8000a58:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000a5c:	bf08      	it	eq
 8000a5e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000a62:	4770      	bx	lr
 8000a64:	f04f 0000 	mov.w	r0, #0
 8000a68:	4770      	bx	lr
 8000a6a:	bf00      	nop

08000a6c <__aeabi_frsub>:
 8000a6c:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8000a70:	e002      	b.n	8000a78 <__addsf3>
 8000a72:	bf00      	nop

08000a74 <__aeabi_fsub>:
 8000a74:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000a78 <__addsf3>:
 8000a78:	0042      	lsls	r2, r0, #1
 8000a7a:	bf1f      	itttt	ne
 8000a7c:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000a80:	ea92 0f03 	teqne	r2, r3
 8000a84:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000a88:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000a8c:	d06a      	beq.n	8000b64 <__addsf3+0xec>
 8000a8e:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000a92:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000a96:	bfc1      	itttt	gt
 8000a98:	18d2      	addgt	r2, r2, r3
 8000a9a:	4041      	eorgt	r1, r0
 8000a9c:	4048      	eorgt	r0, r1
 8000a9e:	4041      	eorgt	r1, r0
 8000aa0:	bfb8      	it	lt
 8000aa2:	425b      	neglt	r3, r3
 8000aa4:	2b19      	cmp	r3, #25
 8000aa6:	bf88      	it	hi
 8000aa8:	4770      	bxhi	lr
 8000aaa:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000aae:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000ab2:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8000ab6:	bf18      	it	ne
 8000ab8:	4240      	negne	r0, r0
 8000aba:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000abe:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8000ac2:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8000ac6:	bf18      	it	ne
 8000ac8:	4249      	negne	r1, r1
 8000aca:	ea92 0f03 	teq	r2, r3
 8000ace:	d03f      	beq.n	8000b50 <__addsf3+0xd8>
 8000ad0:	f1a2 0201 	sub.w	r2, r2, #1
 8000ad4:	fa41 fc03 	asr.w	ip, r1, r3
 8000ad8:	eb10 000c 	adds.w	r0, r0, ip
 8000adc:	f1c3 0320 	rsb	r3, r3, #32
 8000ae0:	fa01 f103 	lsl.w	r1, r1, r3
 8000ae4:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000ae8:	d502      	bpl.n	8000af0 <__addsf3+0x78>
 8000aea:	4249      	negs	r1, r1
 8000aec:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000af0:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8000af4:	d313      	bcc.n	8000b1e <__addsf3+0xa6>
 8000af6:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8000afa:	d306      	bcc.n	8000b0a <__addsf3+0x92>
 8000afc:	0840      	lsrs	r0, r0, #1
 8000afe:	ea4f 0131 	mov.w	r1, r1, rrx
 8000b02:	f102 0201 	add.w	r2, r2, #1
 8000b06:	2afe      	cmp	r2, #254	; 0xfe
 8000b08:	d251      	bcs.n	8000bae <__addsf3+0x136>
 8000b0a:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8000b0e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000b12:	bf08      	it	eq
 8000b14:	f020 0001 	biceq.w	r0, r0, #1
 8000b18:	ea40 0003 	orr.w	r0, r0, r3
 8000b1c:	4770      	bx	lr
 8000b1e:	0049      	lsls	r1, r1, #1
 8000b20:	eb40 0000 	adc.w	r0, r0, r0
 8000b24:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
 8000b28:	f1a2 0201 	sub.w	r2, r2, #1
 8000b2c:	d1ed      	bne.n	8000b0a <__addsf3+0x92>
 8000b2e:	fab0 fc80 	clz	ip, r0
 8000b32:	f1ac 0c08 	sub.w	ip, ip, #8
 8000b36:	ebb2 020c 	subs.w	r2, r2, ip
 8000b3a:	fa00 f00c 	lsl.w	r0, r0, ip
 8000b3e:	bfaa      	itet	ge
 8000b40:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000b44:	4252      	neglt	r2, r2
 8000b46:	4318      	orrge	r0, r3
 8000b48:	bfbc      	itt	lt
 8000b4a:	40d0      	lsrlt	r0, r2
 8000b4c:	4318      	orrlt	r0, r3
 8000b4e:	4770      	bx	lr
 8000b50:	f092 0f00 	teq	r2, #0
 8000b54:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000b58:	bf06      	itte	eq
 8000b5a:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8000b5e:	3201      	addeq	r2, #1
 8000b60:	3b01      	subne	r3, #1
 8000b62:	e7b5      	b.n	8000ad0 <__addsf3+0x58>
 8000b64:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000b68:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000b6c:	bf18      	it	ne
 8000b6e:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000b72:	d021      	beq.n	8000bb8 <__addsf3+0x140>
 8000b74:	ea92 0f03 	teq	r2, r3
 8000b78:	d004      	beq.n	8000b84 <__addsf3+0x10c>
 8000b7a:	f092 0f00 	teq	r2, #0
 8000b7e:	bf08      	it	eq
 8000b80:	4608      	moveq	r0, r1
 8000b82:	4770      	bx	lr
 8000b84:	ea90 0f01 	teq	r0, r1
 8000b88:	bf1c      	itt	ne
 8000b8a:	2000      	movne	r0, #0
 8000b8c:	4770      	bxne	lr
 8000b8e:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8000b92:	d104      	bne.n	8000b9e <__addsf3+0x126>
 8000b94:	0040      	lsls	r0, r0, #1
 8000b96:	bf28      	it	cs
 8000b98:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000b9c:	4770      	bx	lr
 8000b9e:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8000ba2:	bf3c      	itt	cc
 8000ba4:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000ba8:	4770      	bxcc	lr
 8000baa:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000bae:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8000bb2:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000bb6:	4770      	bx	lr
 8000bb8:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000bbc:	bf16      	itet	ne
 8000bbe:	4608      	movne	r0, r1
 8000bc0:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000bc4:	4601      	movne	r1, r0
 8000bc6:	0242      	lsls	r2, r0, #9
 8000bc8:	bf06      	itte	eq
 8000bca:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000bce:	ea90 0f01 	teqeq	r0, r1
 8000bd2:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8000bd6:	4770      	bx	lr

08000bd8 <__aeabi_ui2f>:
 8000bd8:	f04f 0300 	mov.w	r3, #0
 8000bdc:	e004      	b.n	8000be8 <__aeabi_i2f+0x8>
 8000bde:	bf00      	nop

08000be0 <__aeabi_i2f>:
 8000be0:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8000be4:	bf48      	it	mi
 8000be6:	4240      	negmi	r0, r0
 8000be8:	ea5f 0c00 	movs.w	ip, r0
 8000bec:	bf08      	it	eq
 8000bee:	4770      	bxeq	lr
 8000bf0:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8000bf4:	4601      	mov	r1, r0
 8000bf6:	f04f 0000 	mov.w	r0, #0
 8000bfa:	e01c      	b.n	8000c36 <__aeabi_l2f+0x2a>

08000bfc <__aeabi_ul2f>:
 8000bfc:	ea50 0201 	orrs.w	r2, r0, r1
 8000c00:	bf08      	it	eq
 8000c02:	4770      	bxeq	lr
 8000c04:	f04f 0300 	mov.w	r3, #0
 8000c08:	e00a      	b.n	8000c20 <__aeabi_l2f+0x14>
 8000c0a:	bf00      	nop

08000c0c <__aeabi_l2f>:
 8000c0c:	ea50 0201 	orrs.w	r2, r0, r1
 8000c10:	bf08      	it	eq
 8000c12:	4770      	bxeq	lr
 8000c14:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000c18:	d502      	bpl.n	8000c20 <__aeabi_l2f+0x14>
 8000c1a:	4240      	negs	r0, r0
 8000c1c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000c20:	ea5f 0c01 	movs.w	ip, r1
 8000c24:	bf02      	ittt	eq
 8000c26:	4684      	moveq	ip, r0
 8000c28:	4601      	moveq	r1, r0
 8000c2a:	2000      	moveq	r0, #0
 8000c2c:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8000c30:	bf08      	it	eq
 8000c32:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000c36:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8000c3a:	fabc f28c 	clz	r2, ip
 8000c3e:	3a08      	subs	r2, #8
 8000c40:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000c44:	db10      	blt.n	8000c68 <__aeabi_l2f+0x5c>
 8000c46:	fa01 fc02 	lsl.w	ip, r1, r2
 8000c4a:	4463      	add	r3, ip
 8000c4c:	fa00 fc02 	lsl.w	ip, r0, r2
 8000c50:	f1c2 0220 	rsb	r2, r2, #32
 8000c54:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000c58:	fa20 f202 	lsr.w	r2, r0, r2
 8000c5c:	eb43 0002 	adc.w	r0, r3, r2
 8000c60:	bf08      	it	eq
 8000c62:	f020 0001 	biceq.w	r0, r0, #1
 8000c66:	4770      	bx	lr
 8000c68:	f102 0220 	add.w	r2, r2, #32
 8000c6c:	fa01 fc02 	lsl.w	ip, r1, r2
 8000c70:	f1c2 0220 	rsb	r2, r2, #32
 8000c74:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000c78:	fa21 f202 	lsr.w	r2, r1, r2
 8000c7c:	eb43 0002 	adc.w	r0, r3, r2
 8000c80:	bf08      	it	eq
 8000c82:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000c86:	4770      	bx	lr

08000c88 <__aeabi_fmul>:
 8000c88:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000c8c:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000c90:	bf1e      	ittt	ne
 8000c92:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000c96:	ea92 0f0c 	teqne	r2, ip
 8000c9a:	ea93 0f0c 	teqne	r3, ip
 8000c9e:	d06f      	beq.n	8000d80 <__aeabi_fmul+0xf8>
 8000ca0:	441a      	add	r2, r3
 8000ca2:	ea80 0c01 	eor.w	ip, r0, r1
 8000ca6:	0240      	lsls	r0, r0, #9
 8000ca8:	bf18      	it	ne
 8000caa:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000cae:	d01e      	beq.n	8000cee <__aeabi_fmul+0x66>
 8000cb0:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8000cb4:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000cb8:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000cbc:	fba0 3101 	umull	r3, r1, r0, r1
 8000cc0:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000cc4:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8000cc8:	bf3e      	ittt	cc
 8000cca:	0049      	lslcc	r1, r1, #1
 8000ccc:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000cd0:	005b      	lslcc	r3, r3, #1
 8000cd2:	ea40 0001 	orr.w	r0, r0, r1
 8000cd6:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 8000cda:	2afd      	cmp	r2, #253	; 0xfd
 8000cdc:	d81d      	bhi.n	8000d1a <__aeabi_fmul+0x92>
 8000cde:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8000ce2:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000ce6:	bf08      	it	eq
 8000ce8:	f020 0001 	biceq.w	r0, r0, #1
 8000cec:	4770      	bx	lr
 8000cee:	f090 0f00 	teq	r0, #0
 8000cf2:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000cf6:	bf08      	it	eq
 8000cf8:	0249      	lsleq	r1, r1, #9
 8000cfa:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000cfe:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000d02:	3a7f      	subs	r2, #127	; 0x7f
 8000d04:	bfc2      	ittt	gt
 8000d06:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000d0a:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000d0e:	4770      	bxgt	lr
 8000d10:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000d14:	f04f 0300 	mov.w	r3, #0
 8000d18:	3a01      	subs	r2, #1
 8000d1a:	dc5d      	bgt.n	8000dd8 <__aeabi_fmul+0x150>
 8000d1c:	f112 0f19 	cmn.w	r2, #25
 8000d20:	bfdc      	itt	le
 8000d22:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8000d26:	4770      	bxle	lr
 8000d28:	f1c2 0200 	rsb	r2, r2, #0
 8000d2c:	0041      	lsls	r1, r0, #1
 8000d2e:	fa21 f102 	lsr.w	r1, r1, r2
 8000d32:	f1c2 0220 	rsb	r2, r2, #32
 8000d36:	fa00 fc02 	lsl.w	ip, r0, r2
 8000d3a:	ea5f 0031 	movs.w	r0, r1, rrx
 8000d3e:	f140 0000 	adc.w	r0, r0, #0
 8000d42:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000d46:	bf08      	it	eq
 8000d48:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000d4c:	4770      	bx	lr
 8000d4e:	f092 0f00 	teq	r2, #0
 8000d52:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000d56:	bf02      	ittt	eq
 8000d58:	0040      	lsleq	r0, r0, #1
 8000d5a:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000d5e:	3a01      	subeq	r2, #1
 8000d60:	d0f9      	beq.n	8000d56 <__aeabi_fmul+0xce>
 8000d62:	ea40 000c 	orr.w	r0, r0, ip
 8000d66:	f093 0f00 	teq	r3, #0
 8000d6a:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000d6e:	bf02      	ittt	eq
 8000d70:	0049      	lsleq	r1, r1, #1
 8000d72:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000d76:	3b01      	subeq	r3, #1
 8000d78:	d0f9      	beq.n	8000d6e <__aeabi_fmul+0xe6>
 8000d7a:	ea41 010c 	orr.w	r1, r1, ip
 8000d7e:	e78f      	b.n	8000ca0 <__aeabi_fmul+0x18>
 8000d80:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000d84:	ea92 0f0c 	teq	r2, ip
 8000d88:	bf18      	it	ne
 8000d8a:	ea93 0f0c 	teqne	r3, ip
 8000d8e:	d00a      	beq.n	8000da6 <__aeabi_fmul+0x11e>
 8000d90:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000d94:	bf18      	it	ne
 8000d96:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000d9a:	d1d8      	bne.n	8000d4e <__aeabi_fmul+0xc6>
 8000d9c:	ea80 0001 	eor.w	r0, r0, r1
 8000da0:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000da4:	4770      	bx	lr
 8000da6:	f090 0f00 	teq	r0, #0
 8000daa:	bf17      	itett	ne
 8000dac:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8000db0:	4608      	moveq	r0, r1
 8000db2:	f091 0f00 	teqne	r1, #0
 8000db6:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8000dba:	d014      	beq.n	8000de6 <__aeabi_fmul+0x15e>
 8000dbc:	ea92 0f0c 	teq	r2, ip
 8000dc0:	d101      	bne.n	8000dc6 <__aeabi_fmul+0x13e>
 8000dc2:	0242      	lsls	r2, r0, #9
 8000dc4:	d10f      	bne.n	8000de6 <__aeabi_fmul+0x15e>
 8000dc6:	ea93 0f0c 	teq	r3, ip
 8000dca:	d103      	bne.n	8000dd4 <__aeabi_fmul+0x14c>
 8000dcc:	024b      	lsls	r3, r1, #9
 8000dce:	bf18      	it	ne
 8000dd0:	4608      	movne	r0, r1
 8000dd2:	d108      	bne.n	8000de6 <__aeabi_fmul+0x15e>
 8000dd4:	ea80 0001 	eor.w	r0, r0, r1
 8000dd8:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000ddc:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000de0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000de4:	4770      	bx	lr
 8000de6:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000dea:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8000dee:	4770      	bx	lr

08000df0 <__aeabi_fdiv>:
 8000df0:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000df4:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000df8:	bf1e      	ittt	ne
 8000dfa:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000dfe:	ea92 0f0c 	teqne	r2, ip
 8000e02:	ea93 0f0c 	teqne	r3, ip
 8000e06:	d069      	beq.n	8000edc <__aeabi_fdiv+0xec>
 8000e08:	eba2 0203 	sub.w	r2, r2, r3
 8000e0c:	ea80 0c01 	eor.w	ip, r0, r1
 8000e10:	0249      	lsls	r1, r1, #9
 8000e12:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000e16:	d037      	beq.n	8000e88 <__aeabi_fdiv+0x98>
 8000e18:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8000e1c:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000e20:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000e24:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000e28:	428b      	cmp	r3, r1
 8000e2a:	bf38      	it	cc
 8000e2c:	005b      	lslcc	r3, r3, #1
 8000e2e:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8000e32:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 8000e36:	428b      	cmp	r3, r1
 8000e38:	bf24      	itt	cs
 8000e3a:	1a5b      	subcs	r3, r3, r1
 8000e3c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000e40:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000e44:	bf24      	itt	cs
 8000e46:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000e4a:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000e4e:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000e52:	bf24      	itt	cs
 8000e54:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000e58:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000e5c:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000e60:	bf24      	itt	cs
 8000e62:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000e66:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000e6a:	011b      	lsls	r3, r3, #4
 8000e6c:	bf18      	it	ne
 8000e6e:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000e72:	d1e0      	bne.n	8000e36 <__aeabi_fdiv+0x46>
 8000e74:	2afd      	cmp	r2, #253	; 0xfd
 8000e76:	f63f af50 	bhi.w	8000d1a <__aeabi_fmul+0x92>
 8000e7a:	428b      	cmp	r3, r1
 8000e7c:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000e80:	bf08      	it	eq
 8000e82:	f020 0001 	biceq.w	r0, r0, #1
 8000e86:	4770      	bx	lr
 8000e88:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000e8c:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000e90:	327f      	adds	r2, #127	; 0x7f
 8000e92:	bfc2      	ittt	gt
 8000e94:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000e98:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000e9c:	4770      	bxgt	lr
 8000e9e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000ea2:	f04f 0300 	mov.w	r3, #0
 8000ea6:	3a01      	subs	r2, #1
 8000ea8:	e737      	b.n	8000d1a <__aeabi_fmul+0x92>
 8000eaa:	f092 0f00 	teq	r2, #0
 8000eae:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000eb2:	bf02      	ittt	eq
 8000eb4:	0040      	lsleq	r0, r0, #1
 8000eb6:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000eba:	3a01      	subeq	r2, #1
 8000ebc:	d0f9      	beq.n	8000eb2 <__aeabi_fdiv+0xc2>
 8000ebe:	ea40 000c 	orr.w	r0, r0, ip
 8000ec2:	f093 0f00 	teq	r3, #0
 8000ec6:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000eca:	bf02      	ittt	eq
 8000ecc:	0049      	lsleq	r1, r1, #1
 8000ece:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000ed2:	3b01      	subeq	r3, #1
 8000ed4:	d0f9      	beq.n	8000eca <__aeabi_fdiv+0xda>
 8000ed6:	ea41 010c 	orr.w	r1, r1, ip
 8000eda:	e795      	b.n	8000e08 <__aeabi_fdiv+0x18>
 8000edc:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000ee0:	ea92 0f0c 	teq	r2, ip
 8000ee4:	d108      	bne.n	8000ef8 <__aeabi_fdiv+0x108>
 8000ee6:	0242      	lsls	r2, r0, #9
 8000ee8:	f47f af7d 	bne.w	8000de6 <__aeabi_fmul+0x15e>
 8000eec:	ea93 0f0c 	teq	r3, ip
 8000ef0:	f47f af70 	bne.w	8000dd4 <__aeabi_fmul+0x14c>
 8000ef4:	4608      	mov	r0, r1
 8000ef6:	e776      	b.n	8000de6 <__aeabi_fmul+0x15e>
 8000ef8:	ea93 0f0c 	teq	r3, ip
 8000efc:	d104      	bne.n	8000f08 <__aeabi_fdiv+0x118>
 8000efe:	024b      	lsls	r3, r1, #9
 8000f00:	f43f af4c 	beq.w	8000d9c <__aeabi_fmul+0x114>
 8000f04:	4608      	mov	r0, r1
 8000f06:	e76e      	b.n	8000de6 <__aeabi_fmul+0x15e>
 8000f08:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000f0c:	bf18      	it	ne
 8000f0e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000f12:	d1ca      	bne.n	8000eaa <__aeabi_fdiv+0xba>
 8000f14:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8000f18:	f47f af5c 	bne.w	8000dd4 <__aeabi_fmul+0x14c>
 8000f1c:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 8000f20:	f47f af3c 	bne.w	8000d9c <__aeabi_fmul+0x114>
 8000f24:	e75f      	b.n	8000de6 <__aeabi_fmul+0x15e>
 8000f26:	bf00      	nop

08000f28 <__gesf2>:
 8000f28:	f04f 3cff 	mov.w	ip, #4294967295
 8000f2c:	e006      	b.n	8000f3c <__cmpsf2+0x4>
 8000f2e:	bf00      	nop

08000f30 <__lesf2>:
 8000f30:	f04f 0c01 	mov.w	ip, #1
 8000f34:	e002      	b.n	8000f3c <__cmpsf2+0x4>
 8000f36:	bf00      	nop

08000f38 <__cmpsf2>:
 8000f38:	f04f 0c01 	mov.w	ip, #1
 8000f3c:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000f40:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8000f44:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000f48:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000f4c:	bf18      	it	ne
 8000f4e:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000f52:	d011      	beq.n	8000f78 <__cmpsf2+0x40>
 8000f54:	b001      	add	sp, #4
 8000f56:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8000f5a:	bf18      	it	ne
 8000f5c:	ea90 0f01 	teqne	r0, r1
 8000f60:	bf58      	it	pl
 8000f62:	ebb2 0003 	subspl.w	r0, r2, r3
 8000f66:	bf88      	it	hi
 8000f68:	17c8      	asrhi	r0, r1, #31
 8000f6a:	bf38      	it	cc
 8000f6c:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8000f70:	bf18      	it	ne
 8000f72:	f040 0001 	orrne.w	r0, r0, #1
 8000f76:	4770      	bx	lr
 8000f78:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000f7c:	d102      	bne.n	8000f84 <__cmpsf2+0x4c>
 8000f7e:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8000f82:	d105      	bne.n	8000f90 <__cmpsf2+0x58>
 8000f84:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8000f88:	d1e4      	bne.n	8000f54 <__cmpsf2+0x1c>
 8000f8a:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8000f8e:	d0e1      	beq.n	8000f54 <__cmpsf2+0x1c>
 8000f90:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000f94:	4770      	bx	lr
 8000f96:	bf00      	nop

08000f98 <__aeabi_cfrcmple>:
 8000f98:	4684      	mov	ip, r0
 8000f9a:	4608      	mov	r0, r1
 8000f9c:	4661      	mov	r1, ip
 8000f9e:	e7ff      	b.n	8000fa0 <__aeabi_cfcmpeq>

08000fa0 <__aeabi_cfcmpeq>:
 8000fa0:	b50f      	push	{r0, r1, r2, r3, lr}
 8000fa2:	f7ff ffc9 	bl	8000f38 <__cmpsf2>
 8000fa6:	2800      	cmp	r0, #0
 8000fa8:	bf48      	it	mi
 8000faa:	f110 0f00 	cmnmi.w	r0, #0
 8000fae:	bd0f      	pop	{r0, r1, r2, r3, pc}

08000fb0 <__aeabi_fcmpeq>:
 8000fb0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000fb4:	f7ff fff4 	bl	8000fa0 <__aeabi_cfcmpeq>
 8000fb8:	bf0c      	ite	eq
 8000fba:	2001      	moveq	r0, #1
 8000fbc:	2000      	movne	r0, #0
 8000fbe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000fc2:	bf00      	nop

08000fc4 <__aeabi_fcmplt>:
 8000fc4:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000fc8:	f7ff ffea 	bl	8000fa0 <__aeabi_cfcmpeq>
 8000fcc:	bf34      	ite	cc
 8000fce:	2001      	movcc	r0, #1
 8000fd0:	2000      	movcs	r0, #0
 8000fd2:	f85d fb08 	ldr.w	pc, [sp], #8
 8000fd6:	bf00      	nop

08000fd8 <__aeabi_fcmple>:
 8000fd8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000fdc:	f7ff ffe0 	bl	8000fa0 <__aeabi_cfcmpeq>
 8000fe0:	bf94      	ite	ls
 8000fe2:	2001      	movls	r0, #1
 8000fe4:	2000      	movhi	r0, #0
 8000fe6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000fea:	bf00      	nop

08000fec <__aeabi_fcmpge>:
 8000fec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ff0:	f7ff ffd2 	bl	8000f98 <__aeabi_cfrcmple>
 8000ff4:	bf94      	ite	ls
 8000ff6:	2001      	movls	r0, #1
 8000ff8:	2000      	movhi	r0, #0
 8000ffa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ffe:	bf00      	nop

08001000 <__aeabi_fcmpgt>:
 8001000:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001004:	f7ff ffc8 	bl	8000f98 <__aeabi_cfrcmple>
 8001008:	bf34      	ite	cc
 800100a:	2001      	movcc	r0, #1
 800100c:	2000      	movcs	r0, #0
 800100e:	f85d fb08 	ldr.w	pc, [sp], #8
 8001012:	bf00      	nop

08001014 <__aeabi_f2iz>:
 8001014:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8001018:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 800101c:	d30f      	bcc.n	800103e <__aeabi_f2iz+0x2a>
 800101e:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8001022:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8001026:	d90d      	bls.n	8001044 <__aeabi_f2iz+0x30>
 8001028:	ea4f 2300 	mov.w	r3, r0, lsl #8
 800102c:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8001030:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8001034:	fa23 f002 	lsr.w	r0, r3, r2
 8001038:	bf18      	it	ne
 800103a:	4240      	negne	r0, r0
 800103c:	4770      	bx	lr
 800103e:	f04f 0000 	mov.w	r0, #0
 8001042:	4770      	bx	lr
 8001044:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8001048:	d101      	bne.n	800104e <__aeabi_f2iz+0x3a>
 800104a:	0242      	lsls	r2, r0, #9
 800104c:	d105      	bne.n	800105a <__aeabi_f2iz+0x46>
 800104e:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
 8001052:	bf08      	it	eq
 8001054:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8001058:	4770      	bx	lr
 800105a:	f04f 0000 	mov.w	r0, #0
 800105e:	4770      	bx	lr

08001060 <getposition>:
#include "STM32f103c6.h"
#include "GPIO_DRIVER.h"
uint8_t getposition(uint16_t pin_num){
 8001060:	b480      	push	{r7}
 8001062:	b085      	sub	sp, #20
 8001064:	af00      	add	r7, sp, #0
 8001066:	4603      	mov	r3, r0
 8001068:	80fb      	strh	r3, [r7, #6]
	uint8_t rval;
	if(pin_num == pin0){
 800106a:	88fb      	ldrh	r3, [r7, #6]
 800106c:	2b00      	cmp	r3, #0
 800106e:	d101      	bne.n	8001074 <getposition+0x14>
		rval =0;
 8001070:	2300      	movs	r3, #0
 8001072:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == pin1){
 8001074:	88fb      	ldrh	r3, [r7, #6]
 8001076:	2b01      	cmp	r3, #1
 8001078:	d101      	bne.n	800107e <getposition+0x1e>
		rval =4;
 800107a:	2304      	movs	r3, #4
 800107c:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == pin2){
 800107e:	88fb      	ldrh	r3, [r7, #6]
 8001080:	2b02      	cmp	r3, #2
 8001082:	d101      	bne.n	8001088 <getposition+0x28>
		rval =8;
 8001084:	2308      	movs	r3, #8
 8001086:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == pin3){
 8001088:	88fb      	ldrh	r3, [r7, #6]
 800108a:	2b03      	cmp	r3, #3
 800108c:	d101      	bne.n	8001092 <getposition+0x32>
		rval =12;
 800108e:	230c      	movs	r3, #12
 8001090:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == pin4){
 8001092:	88fb      	ldrh	r3, [r7, #6]
 8001094:	2b04      	cmp	r3, #4
 8001096:	d101      	bne.n	800109c <getposition+0x3c>
		rval =16;
 8001098:	2310      	movs	r3, #16
 800109a:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == pin5){
 800109c:	88fb      	ldrh	r3, [r7, #6]
 800109e:	2b05      	cmp	r3, #5
 80010a0:	d101      	bne.n	80010a6 <getposition+0x46>
		rval =20;
 80010a2:	2314      	movs	r3, #20
 80010a4:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == pin6){
 80010a6:	88fb      	ldrh	r3, [r7, #6]
 80010a8:	2b06      	cmp	r3, #6
 80010aa:	d101      	bne.n	80010b0 <getposition+0x50>
		rval =24;
 80010ac:	2318      	movs	r3, #24
 80010ae:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == pin7){
 80010b0:	88fb      	ldrh	r3, [r7, #6]
 80010b2:	2b07      	cmp	r3, #7
 80010b4:	d101      	bne.n	80010ba <getposition+0x5a>
		rval =28;
 80010b6:	231c      	movs	r3, #28
 80010b8:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == pin8){
 80010ba:	88fb      	ldrh	r3, [r7, #6]
 80010bc:	2b08      	cmp	r3, #8
 80010be:	d101      	bne.n	80010c4 <getposition+0x64>
		rval =0;
 80010c0:	2300      	movs	r3, #0
 80010c2:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == pin9){
 80010c4:	88fb      	ldrh	r3, [r7, #6]
 80010c6:	2b09      	cmp	r3, #9
 80010c8:	d101      	bne.n	80010ce <getposition+0x6e>
		rval =4;
 80010ca:	2304      	movs	r3, #4
 80010cc:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == pin10){
 80010ce:	88fb      	ldrh	r3, [r7, #6]
 80010d0:	2b0a      	cmp	r3, #10
 80010d2:	d101      	bne.n	80010d8 <getposition+0x78>
		rval =8;
 80010d4:	2308      	movs	r3, #8
 80010d6:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == pin11){
 80010d8:	88fb      	ldrh	r3, [r7, #6]
 80010da:	2b0b      	cmp	r3, #11
 80010dc:	d101      	bne.n	80010e2 <getposition+0x82>
		rval =12;
 80010de:	230c      	movs	r3, #12
 80010e0:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == pin12){
 80010e2:	88fb      	ldrh	r3, [r7, #6]
 80010e4:	2b0c      	cmp	r3, #12
 80010e6:	d101      	bne.n	80010ec <getposition+0x8c>
		rval =16;
 80010e8:	2310      	movs	r3, #16
 80010ea:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == pin13){
 80010ec:	88fb      	ldrh	r3, [r7, #6]
 80010ee:	2b0d      	cmp	r3, #13
 80010f0:	d101      	bne.n	80010f6 <getposition+0x96>
		rval =20;
 80010f2:	2314      	movs	r3, #20
 80010f4:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == pin14){
 80010f6:	88fb      	ldrh	r3, [r7, #6]
 80010f8:	2b0e      	cmp	r3, #14
 80010fa:	d101      	bne.n	8001100 <getposition+0xa0>
		rval =24;
 80010fc:	2318      	movs	r3, #24
 80010fe:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == pin15){
 8001100:	88fb      	ldrh	r3, [r7, #6]
 8001102:	2b0f      	cmp	r3, #15
 8001104:	d101      	bne.n	800110a <getposition+0xaa>
		rval =28;
 8001106:	231c      	movs	r3, #28
 8001108:	73fb      	strb	r3, [r7, #15]
	}
	return rval;
 800110a:	7bfb      	ldrb	r3, [r7, #15]


}
 800110c:	4618      	mov	r0, r3
 800110e:	3714      	adds	r7, #20
 8001110:	46bd      	mov	sp, r7
 8001112:	bc80      	pop	{r7}
 8001114:	4770      	bx	lr

08001116 <pinmode>:
// * @param [in] - GPIOx: where x can be (A...E Depending on device used) to select the GPIO Peripheral
// * @param [in] - pin: pin name
// * @param [in] - pinmode:mode of the pin
// * @retval -none
// * Note-
void pinmode(GPIO_typeDef* GPIOx,uint16_t pin,uint32_t pinmode){
 8001116:	b580      	push	{r7, lr}
 8001118:	b084      	sub	sp, #16
 800111a:	af00      	add	r7, sp, #0
 800111c:	60f8      	str	r0, [r7, #12]
 800111e:	460b      	mov	r3, r1
 8001120:	607a      	str	r2, [r7, #4]
 8001122:	817b      	strh	r3, [r7, #10]

	if(pin<8){
 8001124:	897b      	ldrh	r3, [r7, #10]
 8001126:	2b07      	cmp	r3, #7
 8001128:	d856      	bhi.n	80011d8 <pinmode+0xc2>
		GPIOx->GPIOx_CRL &=~(0xf<<(getposition(pin)));
 800112a:	897b      	ldrh	r3, [r7, #10]
 800112c:	4618      	mov	r0, r3
 800112e:	f7ff ff97 	bl	8001060 <getposition>
 8001132:	4603      	mov	r3, r0
 8001134:	461a      	mov	r2, r3
 8001136:	230f      	movs	r3, #15
 8001138:	4093      	lsls	r3, r2
 800113a:	43da      	mvns	r2, r3
 800113c:	68fb      	ldr	r3, [r7, #12]
 800113e:	681b      	ldr	r3, [r3, #0]
 8001140:	401a      	ands	r2, r3
 8001142:	68fb      	ldr	r3, [r7, #12]
 8001144:	601a      	str	r2, [r3, #0]

		if((pinmode==GPIO_MODE_INPUT_PD)||(pinmode==GPIO_MODE_INPUT_PU)){
 8001146:	687b      	ldr	r3, [r7, #4]
 8001148:	2b08      	cmp	r3, #8
 800114a:	d002      	beq.n	8001152 <pinmode+0x3c>
 800114c:	687b      	ldr	r3, [r7, #4]
 800114e:	2b18      	cmp	r3, #24
 8001150:	d133      	bne.n	80011ba <pinmode+0xa4>
			if(pinmode == GPIO_MODE_INPUT_PU){
 8001152:	687b      	ldr	r3, [r7, #4]
 8001154:	2b18      	cmp	r3, #24
 8001156:	d117      	bne.n	8001188 <pinmode+0x72>
				GPIOx->GPIOx_CRL |=(0b1000<<(getposition(pin)));
 8001158:	897b      	ldrh	r3, [r7, #10]
 800115a:	4618      	mov	r0, r3
 800115c:	f7ff ff80 	bl	8001060 <getposition>
 8001160:	4603      	mov	r3, r0
 8001162:	461a      	mov	r2, r3
 8001164:	2308      	movs	r3, #8
 8001166:	fa03 f202 	lsl.w	r2, r3, r2
 800116a:	68fb      	ldr	r3, [r7, #12]
 800116c:	681b      	ldr	r3, [r3, #0]
 800116e:	431a      	orrs	r2, r3
 8001170:	68fb      	ldr	r3, [r7, #12]
 8001172:	601a      	str	r2, [r3, #0]
				GPIOx->GPIOx_ODR |= (1<<pin);
 8001174:	68fb      	ldr	r3, [r7, #12]
 8001176:	68db      	ldr	r3, [r3, #12]
 8001178:	897a      	ldrh	r2, [r7, #10]
 800117a:	2101      	movs	r1, #1
 800117c:	fa01 f202 	lsl.w	r2, r1, r2
 8001180:	431a      	orrs	r2, r3
 8001182:	68fb      	ldr	r3, [r7, #12]
 8001184:	60da      	str	r2, [r3, #12]
			if(pinmode == GPIO_MODE_INPUT_PU){
 8001186:	e081      	b.n	800128c <pinmode+0x176>
			}
			else{
				GPIOx->GPIOx_CRL |=(0b1000<<(getposition(pin)));
 8001188:	897b      	ldrh	r3, [r7, #10]
 800118a:	4618      	mov	r0, r3
 800118c:	f7ff ff68 	bl	8001060 <getposition>
 8001190:	4603      	mov	r3, r0
 8001192:	461a      	mov	r2, r3
 8001194:	2308      	movs	r3, #8
 8001196:	fa03 f202 	lsl.w	r2, r3, r2
 800119a:	68fb      	ldr	r3, [r7, #12]
 800119c:	681b      	ldr	r3, [r3, #0]
 800119e:	431a      	orrs	r2, r3
 80011a0:	68fb      	ldr	r3, [r7, #12]
 80011a2:	601a      	str	r2, [r3, #0]
				GPIOx->GPIOx_ODR &=~(1<<pin);
 80011a4:	68fb      	ldr	r3, [r7, #12]
 80011a6:	68db      	ldr	r3, [r3, #12]
 80011a8:	897a      	ldrh	r2, [r7, #10]
 80011aa:	2101      	movs	r1, #1
 80011ac:	fa01 f202 	lsl.w	r2, r1, r2
 80011b0:	43d2      	mvns	r2, r2
 80011b2:	401a      	ands	r2, r3
 80011b4:	68fb      	ldr	r3, [r7, #12]
 80011b6:	60da      	str	r2, [r3, #12]
			if(pinmode == GPIO_MODE_INPUT_PU){
 80011b8:	e068      	b.n	800128c <pinmode+0x176>
			}

		}
		else GPIOx->GPIOx_CRL |=(pinmode<<(getposition(pin)));
 80011ba:	897b      	ldrh	r3, [r7, #10]
 80011bc:	4618      	mov	r0, r3
 80011be:	f7ff ff4f 	bl	8001060 <getposition>
 80011c2:	4603      	mov	r3, r0
 80011c4:	461a      	mov	r2, r3
 80011c6:	687b      	ldr	r3, [r7, #4]
 80011c8:	fa03 f202 	lsl.w	r2, r3, r2
 80011cc:	68fb      	ldr	r3, [r7, #12]
 80011ce:	681b      	ldr	r3, [r3, #0]
 80011d0:	431a      	orrs	r2, r3
 80011d2:	68fb      	ldr	r3, [r7, #12]
 80011d4:	601a      	str	r2, [r3, #0]

	}



}
 80011d6:	e059      	b.n	800128c <pinmode+0x176>
	else if(pin>7){
 80011d8:	897b      	ldrh	r3, [r7, #10]
 80011da:	2b07      	cmp	r3, #7
 80011dc:	d956      	bls.n	800128c <pinmode+0x176>
		GPIOx->GPIOx_CRH &=~(0xf<<(getposition(pin)));
 80011de:	897b      	ldrh	r3, [r7, #10]
 80011e0:	4618      	mov	r0, r3
 80011e2:	f7ff ff3d 	bl	8001060 <getposition>
 80011e6:	4603      	mov	r3, r0
 80011e8:	461a      	mov	r2, r3
 80011ea:	230f      	movs	r3, #15
 80011ec:	4093      	lsls	r3, r2
 80011ee:	43da      	mvns	r2, r3
 80011f0:	68fb      	ldr	r3, [r7, #12]
 80011f2:	685b      	ldr	r3, [r3, #4]
 80011f4:	401a      	ands	r2, r3
 80011f6:	68fb      	ldr	r3, [r7, #12]
 80011f8:	605a      	str	r2, [r3, #4]
		if((pinmode==GPIO_MODE_INPUT_PD)||(pinmode==GPIO_MODE_INPUT_PU)){
 80011fa:	687b      	ldr	r3, [r7, #4]
 80011fc:	2b08      	cmp	r3, #8
 80011fe:	d002      	beq.n	8001206 <pinmode+0xf0>
 8001200:	687b      	ldr	r3, [r7, #4]
 8001202:	2b18      	cmp	r3, #24
 8001204:	d133      	bne.n	800126e <pinmode+0x158>
			if(pinmode == GPIO_MODE_INPUT_PU){
 8001206:	687b      	ldr	r3, [r7, #4]
 8001208:	2b18      	cmp	r3, #24
 800120a:	d117      	bne.n	800123c <pinmode+0x126>
				GPIOx->GPIOx_CRH |=(0b1000<<(getposition(pin)));
 800120c:	897b      	ldrh	r3, [r7, #10]
 800120e:	4618      	mov	r0, r3
 8001210:	f7ff ff26 	bl	8001060 <getposition>
 8001214:	4603      	mov	r3, r0
 8001216:	461a      	mov	r2, r3
 8001218:	2308      	movs	r3, #8
 800121a:	fa03 f202 	lsl.w	r2, r3, r2
 800121e:	68fb      	ldr	r3, [r7, #12]
 8001220:	685b      	ldr	r3, [r3, #4]
 8001222:	431a      	orrs	r2, r3
 8001224:	68fb      	ldr	r3, [r7, #12]
 8001226:	605a      	str	r2, [r3, #4]
				GPIOx->GPIOx_ODR |= (1<<pin);
 8001228:	68fb      	ldr	r3, [r7, #12]
 800122a:	68db      	ldr	r3, [r3, #12]
 800122c:	897a      	ldrh	r2, [r7, #10]
 800122e:	2101      	movs	r1, #1
 8001230:	fa01 f202 	lsl.w	r2, r1, r2
 8001234:	431a      	orrs	r2, r3
 8001236:	68fb      	ldr	r3, [r7, #12]
 8001238:	60da      	str	r2, [r3, #12]
			if(pinmode == GPIO_MODE_INPUT_PU){
 800123a:	e027      	b.n	800128c <pinmode+0x176>
				GPIOx->GPIOx_CRH |=(0b1000<<(getposition(pin)));
 800123c:	897b      	ldrh	r3, [r7, #10]
 800123e:	4618      	mov	r0, r3
 8001240:	f7ff ff0e 	bl	8001060 <getposition>
 8001244:	4603      	mov	r3, r0
 8001246:	461a      	mov	r2, r3
 8001248:	2308      	movs	r3, #8
 800124a:	fa03 f202 	lsl.w	r2, r3, r2
 800124e:	68fb      	ldr	r3, [r7, #12]
 8001250:	685b      	ldr	r3, [r3, #4]
 8001252:	431a      	orrs	r2, r3
 8001254:	68fb      	ldr	r3, [r7, #12]
 8001256:	605a      	str	r2, [r3, #4]
				GPIOx->GPIOx_ODR &=~(1<<pin);
 8001258:	68fb      	ldr	r3, [r7, #12]
 800125a:	68db      	ldr	r3, [r3, #12]
 800125c:	897a      	ldrh	r2, [r7, #10]
 800125e:	2101      	movs	r1, #1
 8001260:	fa01 f202 	lsl.w	r2, r1, r2
 8001264:	43d2      	mvns	r2, r2
 8001266:	401a      	ands	r2, r3
 8001268:	68fb      	ldr	r3, [r7, #12]
 800126a:	60da      	str	r2, [r3, #12]
			if(pinmode == GPIO_MODE_INPUT_PU){
 800126c:	e00e      	b.n	800128c <pinmode+0x176>
		else GPIOx->GPIOx_CRH |=(pinmode<<(getposition(pin)));
 800126e:	897b      	ldrh	r3, [r7, #10]
 8001270:	4618      	mov	r0, r3
 8001272:	f7ff fef5 	bl	8001060 <getposition>
 8001276:	4603      	mov	r3, r0
 8001278:	461a      	mov	r2, r3
 800127a:	687b      	ldr	r3, [r7, #4]
 800127c:	fa03 f202 	lsl.w	r2, r3, r2
 8001280:	68fb      	ldr	r3, [r7, #12]
 8001282:	685b      	ldr	r3, [r3, #4]
 8001284:	431a      	orrs	r2, r3
 8001286:	68fb      	ldr	r3, [r7, #12]
 8001288:	605a      	str	r2, [r3, #4]
}
 800128a:	e7ff      	b.n	800128c <pinmode+0x176>
 800128c:	bf00      	nop
 800128e:	3710      	adds	r7, #16
 8001290:	46bd      	mov	sp, r7
 8001292:	bd80      	pop	{r7, pc}

08001294 <pinwrite>:
 * @param [in] - pin: GPIOx PIN Number
 * @param [in] - status: The desired value to write
 * @retval - None
 * Note-
 */
void pinwrite(GPIO_typeDef* GPIOx,uint16_t pin,uint8_t status){
 8001294:	b480      	push	{r7}
 8001296:	b083      	sub	sp, #12
 8001298:	af00      	add	r7, sp, #0
 800129a:	6078      	str	r0, [r7, #4]
 800129c:	460b      	mov	r3, r1
 800129e:	807b      	strh	r3, [r7, #2]
 80012a0:	4613      	mov	r3, r2
 80012a2:	707b      	strb	r3, [r7, #1]
	if(status!=0){
 80012a4:	787b      	ldrb	r3, [r7, #1]
 80012a6:	2b00      	cmp	r3, #0
 80012a8:	d009      	beq.n	80012be <pinwrite+0x2a>
		GPIOx->GPIOx_ODR |=(1<<pin);
 80012aa:	687b      	ldr	r3, [r7, #4]
 80012ac:	68db      	ldr	r3, [r3, #12]
 80012ae:	887a      	ldrh	r2, [r7, #2]
 80012b0:	2101      	movs	r1, #1
 80012b2:	fa01 f202 	lsl.w	r2, r1, r2
 80012b6:	431a      	orrs	r2, r3
 80012b8:	687b      	ldr	r3, [r7, #4]
 80012ba:	60da      	str	r2, [r3, #12]
	}
	else GPIOx->GPIOx_ODR &=~(1<<pin);

}
 80012bc:	e009      	b.n	80012d2 <pinwrite+0x3e>
	else GPIOx->GPIOx_ODR &=~(1<<pin);
 80012be:	687b      	ldr	r3, [r7, #4]
 80012c0:	68db      	ldr	r3, [r3, #12]
 80012c2:	887a      	ldrh	r2, [r7, #2]
 80012c4:	2101      	movs	r1, #1
 80012c6:	fa01 f202 	lsl.w	r2, r1, r2
 80012ca:	43d2      	mvns	r2, r2
 80012cc:	401a      	ands	r2, r3
 80012ce:	687b      	ldr	r3, [r7, #4]
 80012d0:	60da      	str	r2, [r3, #12]
}
 80012d2:	bf00      	nop
 80012d4:	370c      	adds	r7, #12
 80012d6:	46bd      	mov	sp, r7
 80012d8:	bc80      	pop	{r7}
 80012da:	4770      	bx	lr

080012dc <set_Value_PORT>:
 * @param [in] - position:position of seting Values
 * @retval -
 * Note-
 */

void set_Value_PORT(GPIO_typeDef* GPIOx,uint16_t status,uint16_t position){
 80012dc:	b480      	push	{r7}
 80012de:	b083      	sub	sp, #12
 80012e0:	af00      	add	r7, sp, #0
 80012e2:	6078      	str	r0, [r7, #4]
 80012e4:	460b      	mov	r3, r1
 80012e6:	807b      	strh	r3, [r7, #2]
 80012e8:	4613      	mov	r3, r2
 80012ea:	803b      	strh	r3, [r7, #0]

	GPIOx->GPIOx_ODR |=(status<<position);
 80012ec:	687b      	ldr	r3, [r7, #4]
 80012ee:	68db      	ldr	r3, [r3, #12]
 80012f0:	8879      	ldrh	r1, [r7, #2]
 80012f2:	883a      	ldrh	r2, [r7, #0]
 80012f4:	fa01 f202 	lsl.w	r2, r1, r2
 80012f8:	431a      	orrs	r2, r3
 80012fa:	687b      	ldr	r3, [r7, #4]
 80012fc:	60da      	str	r2, [r3, #12]
}
 80012fe:	bf00      	nop
 8001300:	370c      	adds	r7, #12
 8001302:	46bd      	mov	sp, r7
 8001304:	bc80      	pop	{r7}
 8001306:	4770      	bx	lr

08001308 <res_Value_PORT>:
 * @param [in] - position:position of seting Values
 * @retval -
 * Note-
 */

void res_Value_PORT(GPIO_typeDef* GPIOx,uint16_t status,uint16_t position){
 8001308:	b480      	push	{r7}
 800130a:	b083      	sub	sp, #12
 800130c:	af00      	add	r7, sp, #0
 800130e:	6078      	str	r0, [r7, #4]
 8001310:	460b      	mov	r3, r1
 8001312:	807b      	strh	r3, [r7, #2]
 8001314:	4613      	mov	r3, r2
 8001316:	803b      	strh	r3, [r7, #0]

	GPIOx->GPIOx_ODR &=~(status<<position);
 8001318:	687b      	ldr	r3, [r7, #4]
 800131a:	68db      	ldr	r3, [r3, #12]
 800131c:	8879      	ldrh	r1, [r7, #2]
 800131e:	883a      	ldrh	r2, [r7, #0]
 8001320:	fa01 f202 	lsl.w	r2, r1, r2
 8001324:	43d2      	mvns	r2, r2
 8001326:	401a      	ands	r2, r3
 8001328:	687b      	ldr	r3, [r7, #4]
 800132a:	60da      	str	r2, [r3, #12]
}
 800132c:	bf00      	nop
 800132e:	370c      	adds	r7, #12
 8001330:	46bd      	mov	sp, r7
 8001332:	bc80      	pop	{r7}
 8001334:	4770      	bx	lr

08001336 <_delay_ms>:
 *  Author: 20102
 */ 
static unsigned flag_init=0;
#include "LCD.h"

void _delay_ms(long x){
 8001336:	b480      	push	{r7}
 8001338:	b085      	sub	sp, #20
 800133a:	af00      	add	r7, sp, #0
 800133c:	6078      	str	r0, [r7, #4]
	for(long i=0;i<(x*50);i++);
 800133e:	2300      	movs	r3, #0
 8001340:	60fb      	str	r3, [r7, #12]
 8001342:	e002      	b.n	800134a <_delay_ms+0x14>
 8001344:	68fb      	ldr	r3, [r7, #12]
 8001346:	3301      	adds	r3, #1
 8001348:	60fb      	str	r3, [r7, #12]
 800134a:	687b      	ldr	r3, [r7, #4]
 800134c:	2232      	movs	r2, #50	; 0x32
 800134e:	fb02 f303 	mul.w	r3, r2, r3
 8001352:	68fa      	ldr	r2, [r7, #12]
 8001354:	429a      	cmp	r2, r3
 8001356:	dbf5      	blt.n	8001344 <_delay_ms+0xe>
}
 8001358:	bf00      	nop
 800135a:	3714      	adds	r7, #20
 800135c:	46bd      	mov	sp, r7
 800135e:	bc80      	pop	{r7}
 8001360:	4770      	bx	lr
	...

08001364 <LCD_SEND_EN>:
void LCD_SEND_EN(){
 8001364:	b580      	push	{r7, lr}
 8001366:	af00      	add	r7, sp, #0
	//setpit(lCD_PORT,E);
	pinwrite(lCD_PORT, E, HIGH);
 8001368:	2201      	movs	r2, #1
 800136a:	2108      	movs	r1, #8
 800136c:	4806      	ldr	r0, [pc, #24]	; (8001388 <LCD_SEND_EN+0x24>)
 800136e:	f7ff ff91 	bl	8001294 <pinwrite>
	_delay_ms(1);
 8001372:	2001      	movs	r0, #1
 8001374:	f7ff ffdf 	bl	8001336 <_delay_ms>
	pinwrite(lCD_PORT, E, LOW);
 8001378:	2200      	movs	r2, #0
 800137a:	2108      	movs	r1, #8
 800137c:	4802      	ldr	r0, [pc, #8]	; (8001388 <LCD_SEND_EN+0x24>)
 800137e:	f7ff ff89 	bl	8001294 <pinwrite>
}
 8001382:	bf00      	nop
 8001384:	bd80      	pop	{r7, pc}
 8001386:	bf00      	nop
 8001388:	40010c00 	.word	0x40010c00

0800138c <LCD_write_CMD>:
void LCD_write_CMD(char CMD){
 800138c:	b580      	push	{r7, lr}
 800138e:	b082      	sub	sp, #8
 8001390:	af00      	add	r7, sp, #0
 8001392:	4603      	mov	r3, r0
 8001394:	71fb      	strb	r3, [r7, #7]
	//clearpit(lCD_PORT,RS);
	//clearpit(lCD_PORT,RW);
	pinwrite(lCD_PORT, RW, LOW);
 8001396:	2200      	movs	r2, #0
 8001398:	2109      	movs	r1, #9
 800139a:	4818      	ldr	r0, [pc, #96]	; (80013fc <LCD_write_CMD+0x70>)
 800139c:	f7ff ff7a 	bl	8001294 <pinwrite>
	pinwrite(lCD_PORT, RS, LOW);
 80013a0:	2200      	movs	r2, #0
 80013a2:	210a      	movs	r1, #10
 80013a4:	4815      	ldr	r0, [pc, #84]	; (80013fc <LCD_write_CMD+0x70>)
 80013a6:	f7ff ff75 	bl	8001294 <pinwrite>
	//for left 4 pit HSP 
	//lCD_PORT &=~(0b1111<<4);
	//lCD_PORT |=((CMD>>4)<<4);
	res_Value_PORT(lCD_PORT,0b1111,12);
 80013aa:	220c      	movs	r2, #12
 80013ac:	210f      	movs	r1, #15
 80013ae:	4813      	ldr	r0, [pc, #76]	; (80013fc <LCD_write_CMD+0x70>)
 80013b0:	f7ff ffaa 	bl	8001308 <res_Value_PORT>
	set_Value_PORT(lCD_PORT,(CMD>>4),12);
 80013b4:	79fb      	ldrb	r3, [r7, #7]
 80013b6:	091b      	lsrs	r3, r3, #4
 80013b8:	b2db      	uxtb	r3, r3
 80013ba:	b29b      	uxth	r3, r3
 80013bc:	220c      	movs	r2, #12
 80013be:	4619      	mov	r1, r3
 80013c0:	480e      	ldr	r0, [pc, #56]	; (80013fc <LCD_write_CMD+0x70>)
 80013c2:	f7ff ff8b 	bl	80012dc <set_Value_PORT>
	LCD_SEND_EN();
 80013c6:	f7ff ffcd 	bl	8001364 <LCD_SEND_EN>

	if(flag_init)
 80013ca:	4b0d      	ldr	r3, [pc, #52]	; (8001400 <LCD_write_CMD+0x74>)
 80013cc:	681b      	ldr	r3, [r3, #0]
 80013ce:	2b00      	cmp	r3, #0
 80013d0:	d00d      	beq.n	80013ee <LCD_write_CMD+0x62>
	{
		//for right 4 pit LSP 
		//	lCD_PORT &=~(0b1111<<4);
		//	lCD_PORT |=(CMD<<4);
		res_Value_PORT(lCD_PORT,0b1111,12);
 80013d2:	220c      	movs	r2, #12
 80013d4:	210f      	movs	r1, #15
 80013d6:	4809      	ldr	r0, [pc, #36]	; (80013fc <LCD_write_CMD+0x70>)
 80013d8:	f7ff ff96 	bl	8001308 <res_Value_PORT>
		set_Value_PORT(lCD_PORT,(CMD),12);
 80013dc:	79fb      	ldrb	r3, [r7, #7]
 80013de:	b29b      	uxth	r3, r3
 80013e0:	220c      	movs	r2, #12
 80013e2:	4619      	mov	r1, r3
 80013e4:	4805      	ldr	r0, [pc, #20]	; (80013fc <LCD_write_CMD+0x70>)
 80013e6:	f7ff ff79 	bl	80012dc <set_Value_PORT>
		LCD_SEND_EN();
 80013ea:	f7ff ffbb 	bl	8001364 <LCD_SEND_EN>

	}
	_delay_ms(2);
 80013ee:	2002      	movs	r0, #2
 80013f0:	f7ff ffa1 	bl	8001336 <_delay_ms>
}
 80013f4:	bf00      	nop
 80013f6:	3708      	adds	r7, #8
 80013f8:	46bd      	mov	sp, r7
 80013fa:	bd80      	pop	{r7, pc}
 80013fc:	40010c00 	.word	0x40010c00
 8001400:	200000b0 	.word	0x200000b0

08001404 <LCD_Init>:
void LCD_Init(){
 8001404:	b580      	push	{r7, lr}
 8001406:	af00      	add	r7, sp, #0
	flag_init=0;
 8001408:	4b25      	ldr	r3, [pc, #148]	; (80014a0 <LCD_Init+0x9c>)
 800140a:	2200      	movs	r2, #0
 800140c:	601a      	str	r2, [r3, #0]
	//setport(lCD_DDR);
	pinmode(lCD_PORT,  E,GPIO_MODE_OUTPUT_push_pull_Speed10);
 800140e:	2201      	movs	r2, #1
 8001410:	2108      	movs	r1, #8
 8001412:	4824      	ldr	r0, [pc, #144]	; (80014a4 <LCD_Init+0xa0>)
 8001414:	f7ff fe7f 	bl	8001116 <pinmode>
	pinmode(lCD_PORT, RS,GPIO_MODE_OUTPUT_push_pull_Speed10);
 8001418:	2201      	movs	r2, #1
 800141a:	210a      	movs	r1, #10
 800141c:	4821      	ldr	r0, [pc, #132]	; (80014a4 <LCD_Init+0xa0>)
 800141e:	f7ff fe7a 	bl	8001116 <pinmode>
	pinmode(lCD_PORT, RW,GPIO_MODE_OUTPUT_push_pull_Speed10);
 8001422:	2201      	movs	r2, #1
 8001424:	2109      	movs	r1, #9
 8001426:	481f      	ldr	r0, [pc, #124]	; (80014a4 <LCD_Init+0xa0>)
 8001428:	f7ff fe75 	bl	8001116 <pinmode>

	pinmode(lCD_PORT, D4,GPIO_MODE_OUTPUT_push_pull_Speed10);
 800142c:	2201      	movs	r2, #1
 800142e:	210c      	movs	r1, #12
 8001430:	481c      	ldr	r0, [pc, #112]	; (80014a4 <LCD_Init+0xa0>)
 8001432:	f7ff fe70 	bl	8001116 <pinmode>
	pinmode(lCD_PORT, D5,GPIO_MODE_OUTPUT_push_pull_Speed10);
 8001436:	2201      	movs	r2, #1
 8001438:	210d      	movs	r1, #13
 800143a:	481a      	ldr	r0, [pc, #104]	; (80014a4 <LCD_Init+0xa0>)
 800143c:	f7ff fe6b 	bl	8001116 <pinmode>
	pinmode(lCD_PORT, D6,GPIO_MODE_OUTPUT_push_pull_Speed10);
 8001440:	2201      	movs	r2, #1
 8001442:	210e      	movs	r1, #14
 8001444:	4817      	ldr	r0, [pc, #92]	; (80014a4 <LCD_Init+0xa0>)
 8001446:	f7ff fe66 	bl	8001116 <pinmode>
	pinmode(lCD_PORT, D7,GPIO_MODE_OUTPUT_push_pull_Speed10);
 800144a:	2201      	movs	r2, #1
 800144c:	210f      	movs	r1, #15
 800144e:	4815      	ldr	r0, [pc, #84]	; (80014a4 <LCD_Init+0xa0>)
 8001450:	f7ff fe61 	bl	8001116 <pinmode>

	_delay_ms(20);
 8001454:	2014      	movs	r0, #20
 8001456:	f7ff ff6e 	bl	8001336 <_delay_ms>
	LCD_write_CMD(0x20);
 800145a:	2020      	movs	r0, #32
 800145c:	f7ff ff96 	bl	800138c <LCD_write_CMD>
	LCD_write_CMD(0x20);
 8001460:	2020      	movs	r0, #32
 8001462:	f7ff ff93 	bl	800138c <LCD_write_CMD>
	LCD_write_CMD(0x80);// 2 line and 5x7 pixel N=1 f=0
 8001466:	2080      	movs	r0, #128	; 0x80
 8001468:	f7ff ff90 	bl	800138c <LCD_write_CMD>
	_delay_ms(1);
 800146c:	2001      	movs	r0, #1
 800146e:	f7ff ff62 	bl	8001336 <_delay_ms>
	LCD_write_CMD(0x00);
 8001472:	2000      	movs	r0, #0
 8001474:	f7ff ff8a 	bl	800138c <LCD_write_CMD>
	LCD_write_CMD(0xC0);//cerser
 8001478:	20c0      	movs	r0, #192	; 0xc0
 800147a:	f7ff ff87 	bl	800138c <LCD_write_CMD>
	_delay_ms(1);
 800147e:	2001      	movs	r0, #1
 8001480:	f7ff ff59 	bl	8001336 <_delay_ms>
	LCD_write_CMD(0x00);
 8001484:	2000      	movs	r0, #0
 8001486:	f7ff ff81 	bl	800138c <LCD_write_CMD>
	LCD_write_CMD(0x10);
 800148a:	2010      	movs	r0, #16
 800148c:	f7ff ff7e 	bl	800138c <LCD_write_CMD>
	_delay_ms(2);
 8001490:	2002      	movs	r0, #2
 8001492:	f7ff ff50 	bl	8001336 <_delay_ms>

	flag_init=1;
 8001496:	4b02      	ldr	r3, [pc, #8]	; (80014a0 <LCD_Init+0x9c>)
 8001498:	2201      	movs	r2, #1
 800149a:	601a      	str	r2, [r3, #0]
}
 800149c:	bf00      	nop
 800149e:	bd80      	pop	{r7, pc}
 80014a0:	200000b0 	.word	0x200000b0
 80014a4:	40010c00 	.word	0x40010c00

080014a8 <LCD_write_data>:
void LCD_write_data(char data){
 80014a8:	b580      	push	{r7, lr}
 80014aa:	b082      	sub	sp, #8
 80014ac:	af00      	add	r7, sp, #0
 80014ae:	4603      	mov	r3, r0
 80014b0:	71fb      	strb	r3, [r7, #7]
	//	setpit(lCD_PORT,RS);
	//	clearpit(lCD_PORT,RW);
	pinwrite(lCD_PORT, RW, LOW);
 80014b2:	2200      	movs	r2, #0
 80014b4:	2109      	movs	r1, #9
 80014b6:	4816      	ldr	r0, [pc, #88]	; (8001510 <LCD_write_data+0x68>)
 80014b8:	f7ff feec 	bl	8001294 <pinwrite>
	pinwrite(lCD_PORT, RS, HIGH);
 80014bc:	2201      	movs	r2, #1
 80014be:	210a      	movs	r1, #10
 80014c0:	4813      	ldr	r0, [pc, #76]	; (8001510 <LCD_write_data+0x68>)
 80014c2:	f7ff fee7 	bl	8001294 <pinwrite>
	//for left 4 pit HSP
	//	lCD_PORT &=~(0b1111<<4);
	//	lCD_PORT |=((data>>4)<<4);
	res_Value_PORT(lCD_PORT,0b1111,12);
 80014c6:	220c      	movs	r2, #12
 80014c8:	210f      	movs	r1, #15
 80014ca:	4811      	ldr	r0, [pc, #68]	; (8001510 <LCD_write_data+0x68>)
 80014cc:	f7ff ff1c 	bl	8001308 <res_Value_PORT>
	set_Value_PORT(lCD_PORT,(data>>4),12);
 80014d0:	79fb      	ldrb	r3, [r7, #7]
 80014d2:	091b      	lsrs	r3, r3, #4
 80014d4:	b2db      	uxtb	r3, r3
 80014d6:	b29b      	uxth	r3, r3
 80014d8:	220c      	movs	r2, #12
 80014da:	4619      	mov	r1, r3
 80014dc:	480c      	ldr	r0, [pc, #48]	; (8001510 <LCD_write_data+0x68>)
 80014de:	f7ff fefd 	bl	80012dc <set_Value_PORT>
	LCD_SEND_EN();
 80014e2:	f7ff ff3f 	bl	8001364 <LCD_SEND_EN>

	//for right 4 pit LSP
	//	lCD_PORT &=~(0b1111<<4);
	//	lCD_PORT |=(data<<4);
	res_Value_PORT(lCD_PORT,0b1111,12);
 80014e6:	220c      	movs	r2, #12
 80014e8:	210f      	movs	r1, #15
 80014ea:	4809      	ldr	r0, [pc, #36]	; (8001510 <LCD_write_data+0x68>)
 80014ec:	f7ff ff0c 	bl	8001308 <res_Value_PORT>
	set_Value_PORT(lCD_PORT,(data),12);
 80014f0:	79fb      	ldrb	r3, [r7, #7]
 80014f2:	b29b      	uxth	r3, r3
 80014f4:	220c      	movs	r2, #12
 80014f6:	4619      	mov	r1, r3
 80014f8:	4805      	ldr	r0, [pc, #20]	; (8001510 <LCD_write_data+0x68>)
 80014fa:	f7ff feef 	bl	80012dc <set_Value_PORT>
	LCD_SEND_EN();
 80014fe:	f7ff ff31 	bl	8001364 <LCD_SEND_EN>


	_delay_ms(1);
 8001502:	2001      	movs	r0, #1
 8001504:	f7ff ff17 	bl	8001336 <_delay_ms>
}
 8001508:	bf00      	nop
 800150a:	3708      	adds	r7, #8
 800150c:	46bd      	mov	sp, r7
 800150e:	bd80      	pop	{r7, pc}
 8001510:	40010c00 	.word	0x40010c00

08001514 <LCD_write_string>:
void LCD_write_string(char* data){
 8001514:	b580      	push	{r7, lr}
 8001516:	b082      	sub	sp, #8
 8001518:	af00      	add	r7, sp, #0
 800151a:	6078      	str	r0, [r7, #4]
//	setpit(lCD_PORT,RS);
//	clearpit(lCD_PORT,RW);
	pinwrite(lCD_PORT, RW, LOW);
 800151c:	2200      	movs	r2, #0
 800151e:	2109      	movs	r1, #9
 8001520:	480c      	ldr	r0, [pc, #48]	; (8001554 <LCD_write_string+0x40>)
 8001522:	f7ff feb7 	bl	8001294 <pinwrite>
	pinwrite(lCD_PORT, RS, HIGH);
 8001526:	2201      	movs	r2, #1
 8001528:	210a      	movs	r1, #10
 800152a:	480a      	ldr	r0, [pc, #40]	; (8001554 <LCD_write_string+0x40>)
 800152c:	f7ff feb2 	bl	8001294 <pinwrite>
	while((*data)!=0){
 8001530:	e007      	b.n	8001542 <LCD_write_string+0x2e>

		LCD_write_data(*data);
 8001532:	687b      	ldr	r3, [r7, #4]
 8001534:	781b      	ldrb	r3, [r3, #0]
 8001536:	4618      	mov	r0, r3
 8001538:	f7ff ffb6 	bl	80014a8 <LCD_write_data>
		data++;
 800153c:	687b      	ldr	r3, [r7, #4]
 800153e:	3301      	adds	r3, #1
 8001540:	607b      	str	r3, [r7, #4]
	while((*data)!=0){
 8001542:	687b      	ldr	r3, [r7, #4]
 8001544:	781b      	ldrb	r3, [r3, #0]
 8001546:	2b00      	cmp	r3, #0
 8001548:	d1f3      	bne.n	8001532 <LCD_write_string+0x1e>
	}

}
 800154a:	bf00      	nop
 800154c:	3708      	adds	r7, #8
 800154e:	46bd      	mov	sp, r7
 8001550:	bd80      	pop	{r7, pc}
 8001552:	bf00      	nop
 8001554:	40010c00 	.word	0x40010c00

08001558 <LCD_setcerser>:
void LCD_setcerser(char ROW , char COL){
 8001558:	b580      	push	{r7, lr}
 800155a:	b084      	sub	sp, #16
 800155c:	af00      	add	r7, sp, #0
 800155e:	4603      	mov	r3, r0
 8001560:	460a      	mov	r2, r1
 8001562:	71fb      	strb	r3, [r7, #7]
 8001564:	4613      	mov	r3, r2
 8001566:	71bb      	strb	r3, [r7, #6]
	volatile unsigned char addres ;
	if(ROW<2 && COL<16){
 8001568:	79fb      	ldrb	r3, [r7, #7]
 800156a:	2b01      	cmp	r3, #1
 800156c:	d80f      	bhi.n	800158e <LCD_setcerser+0x36>
 800156e:	79bb      	ldrb	r3, [r7, #6]
 8001570:	2b0f      	cmp	r3, #15
 8001572:	d80c      	bhi.n	800158e <LCD_setcerser+0x36>
		addres =(0x40 * ROW) + COL ;
 8001574:	79fb      	ldrb	r3, [r7, #7]
 8001576:	019b      	lsls	r3, r3, #6
 8001578:	b2da      	uxtb	r2, r3
 800157a:	79bb      	ldrb	r3, [r7, #6]
 800157c:	4413      	add	r3, r2
 800157e:	b2db      	uxtb	r3, r3
 8001580:	73fb      	strb	r3, [r7, #15]
		addres |=(1<<7);
 8001582:	7bfb      	ldrb	r3, [r7, #15]
 8001584:	b2db      	uxtb	r3, r3
 8001586:	f063 037f 	orn	r3, r3, #127	; 0x7f
 800158a:	b2db      	uxtb	r3, r3
 800158c:	73fb      	strb	r3, [r7, #15]
	}

	LCD_write_CMD(addres);
 800158e:	7bfb      	ldrb	r3, [r7, #15]
 8001590:	b2db      	uxtb	r3, r3
 8001592:	4618      	mov	r0, r3
 8001594:	f7ff fefa 	bl	800138c <LCD_write_CMD>
}
 8001598:	bf00      	nop
 800159a:	3710      	adds	r7, #16
 800159c:	46bd      	mov	sp, r7
 800159e:	bd80      	pop	{r7, pc}

080015a0 <LCD_clear>:
void LCD_clear(){
 80015a0:	b580      	push	{r7, lr}
 80015a2:	af00      	add	r7, sp, #0
	LCD_write_CMD(LCD_CLEAR_SCREEN);
 80015a4:	2001      	movs	r0, #1
 80015a6:	f7ff fef1 	bl	800138c <LCD_write_CMD>
}
 80015aa:	bf00      	nop
 80015ac:	bd80      	pop	{r7, pc}
	...

080015b0 <LCD_write_INTnumber>:
void LCD_write_FLOATnumber(float num,unsigned char digit){
	char text[20];
	gcvt(num,digit,text);
	LCD_write_string(text);
}
void LCD_write_INTnumber(int num){
 80015b0:	b580      	push	{r7, lr}
 80015b2:	b088      	sub	sp, #32
 80015b4:	af00      	add	r7, sp, #0
 80015b6:	6078      	str	r0, [r7, #4]
	char text[20];
	sprintf(text,"%d",num);
 80015b8:	f107 030c 	add.w	r3, r7, #12
 80015bc:	687a      	ldr	r2, [r7, #4]
 80015be:	4906      	ldr	r1, [pc, #24]	; (80015d8 <LCD_write_INTnumber+0x28>)
 80015c0:	4618      	mov	r0, r3
 80015c2:	f001 fc77 	bl	8002eb4 <siprintf>
	LCD_write_string(text);
 80015c6:	f107 030c 	add.w	r3, r7, #12
 80015ca:	4618      	mov	r0, r3
 80015cc:	f7ff ffa2 	bl	8001514 <LCD_write_string>
}
 80015d0:	bf00      	nop
 80015d2:	3720      	adds	r7, #32
 80015d4:	46bd      	mov	sp, r7
 80015d6:	bd80      	pop	{r7, pc}
 80015d8:	08005238 	.word	0x08005238

080015dc <MCAL_speed_init>:
 *      Author: mo
 */

#include "stm32_speed_DRIVER.h"

void MCAL_speed_init(uint8_t CLK_SORC,uint8_t mood){
 80015dc:	b480      	push	{r7}
 80015de:	b083      	sub	sp, #12
 80015e0:	af00      	add	r7, sp, #0
 80015e2:	4603      	mov	r3, r0
 80015e4:	460a      	mov	r2, r1
 80015e6:	71fb      	strb	r3, [r7, #7]
 80015e8:	4613      	mov	r3, r2
 80015ea:	71bb      	strb	r3, [r7, #6]
	if(CLK_SORC==CLK_SORC_IN_CLK8MHz){
 80015ec:	79fb      	ldrb	r3, [r7, #7]
 80015ee:	2b00      	cmp	r3, #0
 80015f0:	d138      	bne.n	8001664 <MCAL_speed_init+0x88>
		if(mood==mood_FAST_MOOD_72MHzCORE){
 80015f2:	79bb      	ldrb	r3, [r7, #6]
 80015f4:	2b00      	cmp	r3, #0
 80015f6:	d135      	bne.n	8001664 <MCAL_speed_init+0x88>
//			0: HSI oscillator clock / 2 selected as PLL input clock
//			1: Clock from PREDIV1 selected as PLL input clock
//			Note: When changing the main PLL’s entry clock source, the original clock source must be switched
//			off only after the selection of the new clock source.

			RCC->RCC_CFGR &=~(1<<16);//0: HSI oscillator clock / 2 selected as PLL input clock
 80015f8:	4b1d      	ldr	r3, [pc, #116]	; (8001670 <MCAL_speed_init+0x94>)
 80015fa:	685b      	ldr	r3, [r3, #4]
 80015fc:	4a1c      	ldr	r2, [pc, #112]	; (8001670 <MCAL_speed_init+0x94>)
 80015fe:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001602:	6053      	str	r3, [r2, #4]
//			10xx: Reserved
//			1100: Reserved
//			1101: PLL input clock x 6.5
//			111x: Reserved

			RCC->RCC_CFGR &=~(0b1111<<18);
 8001604:	4b1a      	ldr	r3, [pc, #104]	; (8001670 <MCAL_speed_init+0x94>)
 8001606:	685b      	ldr	r3, [r3, #4]
 8001608:	4a19      	ldr	r2, [pc, #100]	; (8001670 <MCAL_speed_init+0x94>)
 800160a:	f423 1370 	bic.w	r3, r3, #3932160	; 0x3c0000
 800160e:	6053      	str	r3, [r2, #4]
			RCC->RCC_CFGR |=(0b0111<<18);//0111: PLL input clock x 9
 8001610:	4b17      	ldr	r3, [pc, #92]	; (8001670 <MCAL_speed_init+0x94>)
 8001612:	685b      	ldr	r3, [r3, #4]
 8001614:	4a16      	ldr	r2, [pc, #88]	; (8001670 <MCAL_speed_init+0x94>)
 8001616:	f443 13e0 	orr.w	r3, r3, #1835008	; 0x1c0000
 800161a:	6053      	str	r3, [r2, #4]
			RCC->RCC_CR |=(1<<24);//pll on
 800161c:	4b14      	ldr	r3, [pc, #80]	; (8001670 <MCAL_speed_init+0x94>)
 800161e:	681b      	ldr	r3, [r3, #0]
 8001620:	4a13      	ldr	r2, [pc, #76]	; (8001670 <MCAL_speed_init+0x94>)
 8001622:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8001626:	6013      	str	r3, [r2, #0]
			//00: HSI selected as system clock
			//01: HSE selected as system clock
			//10: PLL selected as system clock
			//11: Not allowed

			RCC->RCC_CFGR &=~(0b11<<0);
 8001628:	4b11      	ldr	r3, [pc, #68]	; (8001670 <MCAL_speed_init+0x94>)
 800162a:	685b      	ldr	r3, [r3, #4]
 800162c:	4a10      	ldr	r2, [pc, #64]	; (8001670 <MCAL_speed_init+0x94>)
 800162e:	f023 0303 	bic.w	r3, r3, #3
 8001632:	6053      	str	r3, [r2, #4]
			RCC->RCC_CFGR |=(0b10<<0);//10: PLL selected as system clock
 8001634:	4b0e      	ldr	r3, [pc, #56]	; (8001670 <MCAL_speed_init+0x94>)
 8001636:	685b      	ldr	r3, [r3, #4]
 8001638:	4a0d      	ldr	r2, [pc, #52]	; (8001670 <MCAL_speed_init+0x94>)
 800163a:	f043 0302 	orr.w	r3, r3, #2
 800163e:	6053      	str	r3, [r2, #4]
			//			1011: SYSCLK divided by 16
			//			1100: SYSCLK divided by 64
			//			1101: SYSCLK divided by 128
			//			1110: SYSCLK divided by 256
			//			1111: SYSCLK divided by 512
			RCC->RCC_CFGR &=~(0b1111<<4);//0xxx: SYSCLK not divided
 8001640:	4b0b      	ldr	r3, [pc, #44]	; (8001670 <MCAL_speed_init+0x94>)
 8001642:	685b      	ldr	r3, [r3, #4]
 8001644:	4a0a      	ldr	r2, [pc, #40]	; (8001670 <MCAL_speed_init+0x94>)
 8001646:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800164a:	6053      	str	r3, [r2, #4]
			//			0xx: HCLK not divided
			//			100: HCLK divided by 2
			//			101: HCLK divided by 4
			//			110: HCLK divided by 8
			//			111: HCLK divided by 16
			RCC->RCC_CFGR &=~(0b111<<11);//0xx: HCLK not divided
 800164c:	4b08      	ldr	r3, [pc, #32]	; (8001670 <MCAL_speed_init+0x94>)
 800164e:	685b      	ldr	r3, [r3, #4]
 8001650:	4a07      	ldr	r2, [pc, #28]	; (8001670 <MCAL_speed_init+0x94>)
 8001652:	f423 5360 	bic.w	r3, r3, #14336	; 0x3800
 8001656:	6053      	str	r3, [r2, #4]
			//			0xx: HCLK not divided
			//			100: HCLK divided by 2
			//			101: HCLK divided by 4
			//			110: HCLK divided by 8
			//			111: HCLK divided by 16
			RCC->RCC_CFGR &=~(0b111<<8);//0xx: HCLK not divided
 8001658:	4b05      	ldr	r3, [pc, #20]	; (8001670 <MCAL_speed_init+0x94>)
 800165a:	685b      	ldr	r3, [r3, #4]
 800165c:	4a04      	ldr	r2, [pc, #16]	; (8001670 <MCAL_speed_init+0x94>)
 800165e:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8001662:	6053      	str	r3, [r2, #4]

		}
	}


}
 8001664:	bf00      	nop
 8001666:	370c      	adds	r7, #12
 8001668:	46bd      	mov	sp, r7
 800166a:	bc80      	pop	{r7}
 800166c:	4770      	bx	lr
 800166e:	bf00      	nop
 8001670:	40021000 	.word	0x40021000

08001674 <Enable_NVIC>:
 * ------------------------------------------------
 * 				  Generic Functions
 *-------------------------------------------------
 */

void Enable_NVIC(uint16_t IRQ){
 8001674:	b480      	push	{r7}
 8001676:	b083      	sub	sp, #12
 8001678:	af00      	add	r7, sp, #0
 800167a:	4603      	mov	r3, r0
 800167c:	80fb      	strh	r3, [r7, #6]
	switch(IRQ){
 800167e:	88fb      	ldrh	r3, [r7, #6]
 8001680:	2b0f      	cmp	r3, #15
 8001682:	d854      	bhi.n	800172e <Enable_NVIC+0xba>
 8001684:	a201      	add	r2, pc, #4	; (adr r2, 800168c <Enable_NVIC+0x18>)
 8001686:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800168a:	bf00      	nop
 800168c:	080016cd 	.word	0x080016cd
 8001690:	080016db 	.word	0x080016db
 8001694:	080016e9 	.word	0x080016e9
 8001698:	080016f7 	.word	0x080016f7
 800169c:	08001705 	.word	0x08001705
 80016a0:	08001713 	.word	0x08001713
 80016a4:	08001713 	.word	0x08001713
 80016a8:	08001713 	.word	0x08001713
 80016ac:	08001713 	.word	0x08001713
 80016b0:	08001713 	.word	0x08001713
 80016b4:	08001721 	.word	0x08001721
 80016b8:	08001721 	.word	0x08001721
 80016bc:	08001721 	.word	0x08001721
 80016c0:	08001721 	.word	0x08001721
 80016c4:	08001721 	.word	0x08001721
 80016c8:	08001721 	.word	0x08001721
	case 0:
		NVIC_IRQ6_EXTI0_Enable;
 80016cc:	4b1a      	ldr	r3, [pc, #104]	; (8001738 <Enable_NVIC+0xc4>)
 80016ce:	681b      	ldr	r3, [r3, #0]
 80016d0:	4a19      	ldr	r2, [pc, #100]	; (8001738 <Enable_NVIC+0xc4>)
 80016d2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80016d6:	6013      	str	r3, [r2, #0]
		break;
 80016d8:	e029      	b.n	800172e <Enable_NVIC+0xba>
	case 1:
		NVIC_IRQ7_EXTI1_Enable;
 80016da:	4b17      	ldr	r3, [pc, #92]	; (8001738 <Enable_NVIC+0xc4>)
 80016dc:	681b      	ldr	r3, [r3, #0]
 80016de:	4a16      	ldr	r2, [pc, #88]	; (8001738 <Enable_NVIC+0xc4>)
 80016e0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80016e4:	6013      	str	r3, [r2, #0]
		break;
 80016e6:	e022      	b.n	800172e <Enable_NVIC+0xba>
	case 2:
		NVIC_IRQ8_EXTI2_Enable;
 80016e8:	4b13      	ldr	r3, [pc, #76]	; (8001738 <Enable_NVIC+0xc4>)
 80016ea:	681b      	ldr	r3, [r3, #0]
 80016ec:	4a12      	ldr	r2, [pc, #72]	; (8001738 <Enable_NVIC+0xc4>)
 80016ee:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80016f2:	6013      	str	r3, [r2, #0]
		break;
 80016f4:	e01b      	b.n	800172e <Enable_NVIC+0xba>
	case 3:
		NVIC_IRQ9_EXTI3_Enable;
 80016f6:	4b10      	ldr	r3, [pc, #64]	; (8001738 <Enable_NVIC+0xc4>)
 80016f8:	681b      	ldr	r3, [r3, #0]
 80016fa:	4a0f      	ldr	r2, [pc, #60]	; (8001738 <Enable_NVIC+0xc4>)
 80016fc:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001700:	6013      	str	r3, [r2, #0]
		break;
 8001702:	e014      	b.n	800172e <Enable_NVIC+0xba>
	case 4:
		NVIC_IRQ10_EXTI4_Enable;
 8001704:	4b0c      	ldr	r3, [pc, #48]	; (8001738 <Enable_NVIC+0xc4>)
 8001706:	681b      	ldr	r3, [r3, #0]
 8001708:	4a0b      	ldr	r2, [pc, #44]	; (8001738 <Enable_NVIC+0xc4>)
 800170a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800170e:	6013      	str	r3, [r2, #0]
		break;
 8001710:	e00d      	b.n	800172e <Enable_NVIC+0xba>
	case 5:
	case 6:
	case 7:
	case 8:
	case 9:
		NVIC_IRQ23_EXTI5_9_Enable;
 8001712:	4b09      	ldr	r3, [pc, #36]	; (8001738 <Enable_NVIC+0xc4>)
 8001714:	681b      	ldr	r3, [r3, #0]
 8001716:	4a08      	ldr	r2, [pc, #32]	; (8001738 <Enable_NVIC+0xc4>)
 8001718:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800171c:	6013      	str	r3, [r2, #0]
		break;
 800171e:	e006      	b.n	800172e <Enable_NVIC+0xba>
	case 11:
	case 12:
	case 13:
	case 14:
	case 15:
		NVIC_IRQ40_EXTI10_15_Enable;
 8001720:	4b06      	ldr	r3, [pc, #24]	; (800173c <Enable_NVIC+0xc8>)
 8001722:	681b      	ldr	r3, [r3, #0]
 8001724:	4a05      	ldr	r2, [pc, #20]	; (800173c <Enable_NVIC+0xc8>)
 8001726:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800172a:	6013      	str	r3, [r2, #0]
		break;
 800172c:	bf00      	nop
	}


}
 800172e:	bf00      	nop
 8001730:	370c      	adds	r7, #12
 8001732:	46bd      	mov	sp, r7
 8001734:	bc80      	pop	{r7}
 8001736:	4770      	bx	lr
 8001738:	e000e100 	.word	0xe000e100
 800173c:	e000e104 	.word	0xe000e104

08001740 <EXTI>:
 * @param [in]      -function_addres : app ISR function
 * @retval          - none
 * Note             -
 *================================================================ */

void EXTI(GPIO_typeDef* PORTx ,uint16_t pin,uint16_t triggercase,void *function_addres(void)){
 8001740:	b580      	push	{r7, lr}
 8001742:	b084      	sub	sp, #16
 8001744:	af00      	add	r7, sp, #0
 8001746:	60f8      	str	r0, [r7, #12]
 8001748:	607b      	str	r3, [r7, #4]
 800174a:	460b      	mov	r3, r1
 800174c:	817b      	strh	r3, [r7, #10]
 800174e:	4613      	mov	r3, r2
 8001750:	813b      	strh	r3, [r7, #8]

	pinmode(PORTx,pin,GPIO_MODE_INTPUT_AF);//set pin to _INTPUT_AF
 8001752:	897b      	ldrh	r3, [r7, #10]
 8001754:	2204      	movs	r2, #4
 8001756:	4619      	mov	r1, r3
 8001758:	68f8      	ldr	r0, [r7, #12]
 800175a:	f7ff fcdc 	bl	8001116 <pinmode>
		//	0000: PA[x] pin
		//	0001: PB[x] pin
		//	0010: PC[x] pin
		//	0011: PD[x] pin

		switch(pin){
 800175e:	897b      	ldrh	r3, [r7, #10]
 8001760:	2b0f      	cmp	r3, #15
 8001762:	f200 8385 	bhi.w	8001e70 <EXTI+0x730>
 8001766:	a201      	add	r2, pc, #4	; (adr r2, 800176c <EXTI+0x2c>)
 8001768:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800176c:	080017ad 	.word	0x080017ad
 8001770:	08001813 	.word	0x08001813
 8001774:	08001879 	.word	0x08001879
 8001778:	080018df 	.word	0x080018df
 800177c:	08001945 	.word	0x08001945
 8001780:	080019ab 	.word	0x080019ab
 8001784:	08001a25 	.word	0x08001a25
 8001788:	08001a8b 	.word	0x08001a8b
 800178c:	08001af1 	.word	0x08001af1
 8001790:	08001b57 	.word	0x08001b57
 8001794:	08001bbd 	.word	0x08001bbd
 8001798:	08001c23 	.word	0x08001c23
 800179c:	08001c9f 	.word	0x08001c9f
 80017a0:	08001d05 	.word	0x08001d05
 80017a4:	08001d6b 	.word	0x08001d6b
 80017a8:	08001dcf 	.word	0x08001dcf
		case pin0:
			AFIO->AFIO_EXTICR1 &=~(0b1111<<0);
 80017ac:	4b92      	ldr	r3, [pc, #584]	; (80019f8 <EXTI+0x2b8>)
 80017ae:	689b      	ldr	r3, [r3, #8]
 80017b0:	4a91      	ldr	r2, [pc, #580]	; (80019f8 <EXTI+0x2b8>)
 80017b2:	f023 030f 	bic.w	r3, r3, #15
 80017b6:	6093      	str	r3, [r2, #8]
			if(PORTx==GPIOA)     {AFIO->AFIO_EXTICR1 &=~(0b1111<<0);}
 80017b8:	68fb      	ldr	r3, [r7, #12]
 80017ba:	4a90      	ldr	r2, [pc, #576]	; (80019fc <EXTI+0x2bc>)
 80017bc:	4293      	cmp	r3, r2
 80017be:	d106      	bne.n	80017ce <EXTI+0x8e>
 80017c0:	4b8d      	ldr	r3, [pc, #564]	; (80019f8 <EXTI+0x2b8>)
 80017c2:	689b      	ldr	r3, [r3, #8]
 80017c4:	4a8c      	ldr	r2, [pc, #560]	; (80019f8 <EXTI+0x2b8>)
 80017c6:	f023 030f 	bic.w	r3, r3, #15
 80017ca:	6093      	str	r3, [r2, #8]
			else if(PORTx==GPIOB){AFIO->AFIO_EXTICR1 |= (0b0001<<0);}
			else if(PORTx==GPIOC){AFIO->AFIO_EXTICR1 |= (0b0010<<0);}
			else if(PORTx==GPIOD){AFIO->AFIO_EXTICR1 |= (0b0011<<0);}

			break;
 80017cc:	e331      	b.n	8001e32 <EXTI+0x6f2>
			else if(PORTx==GPIOB){AFIO->AFIO_EXTICR1 |= (0b0001<<0);}
 80017ce:	68fb      	ldr	r3, [r7, #12]
 80017d0:	4a8b      	ldr	r2, [pc, #556]	; (8001a00 <EXTI+0x2c0>)
 80017d2:	4293      	cmp	r3, r2
 80017d4:	d106      	bne.n	80017e4 <EXTI+0xa4>
 80017d6:	4b88      	ldr	r3, [pc, #544]	; (80019f8 <EXTI+0x2b8>)
 80017d8:	689b      	ldr	r3, [r3, #8]
 80017da:	4a87      	ldr	r2, [pc, #540]	; (80019f8 <EXTI+0x2b8>)
 80017dc:	f043 0301 	orr.w	r3, r3, #1
 80017e0:	6093      	str	r3, [r2, #8]
			break;
 80017e2:	e326      	b.n	8001e32 <EXTI+0x6f2>
			else if(PORTx==GPIOC){AFIO->AFIO_EXTICR1 |= (0b0010<<0);}
 80017e4:	68fb      	ldr	r3, [r7, #12]
 80017e6:	4a87      	ldr	r2, [pc, #540]	; (8001a04 <EXTI+0x2c4>)
 80017e8:	4293      	cmp	r3, r2
 80017ea:	d106      	bne.n	80017fa <EXTI+0xba>
 80017ec:	4b82      	ldr	r3, [pc, #520]	; (80019f8 <EXTI+0x2b8>)
 80017ee:	689b      	ldr	r3, [r3, #8]
 80017f0:	4a81      	ldr	r2, [pc, #516]	; (80019f8 <EXTI+0x2b8>)
 80017f2:	f043 0302 	orr.w	r3, r3, #2
 80017f6:	6093      	str	r3, [r2, #8]
			break;
 80017f8:	e31b      	b.n	8001e32 <EXTI+0x6f2>
			else if(PORTx==GPIOD){AFIO->AFIO_EXTICR1 |= (0b0011<<0);}
 80017fa:	68fb      	ldr	r3, [r7, #12]
 80017fc:	4a82      	ldr	r2, [pc, #520]	; (8001a08 <EXTI+0x2c8>)
 80017fe:	4293      	cmp	r3, r2
 8001800:	f040 8317 	bne.w	8001e32 <EXTI+0x6f2>
 8001804:	4b7c      	ldr	r3, [pc, #496]	; (80019f8 <EXTI+0x2b8>)
 8001806:	689b      	ldr	r3, [r3, #8]
 8001808:	4a7b      	ldr	r2, [pc, #492]	; (80019f8 <EXTI+0x2b8>)
 800180a:	f043 0303 	orr.w	r3, r3, #3
 800180e:	6093      	str	r3, [r2, #8]
			break;
 8001810:	e30f      	b.n	8001e32 <EXTI+0x6f2>
		case pin1:
			AFIO->AFIO_EXTICR1 &=~(0b1111<<4);
 8001812:	4b79      	ldr	r3, [pc, #484]	; (80019f8 <EXTI+0x2b8>)
 8001814:	689b      	ldr	r3, [r3, #8]
 8001816:	4a78      	ldr	r2, [pc, #480]	; (80019f8 <EXTI+0x2b8>)
 8001818:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800181c:	6093      	str	r3, [r2, #8]
			if(PORTx==GPIOA)     {AFIO->AFIO_EXTICR1 &=~(0b1111<<4);}
 800181e:	68fb      	ldr	r3, [r7, #12]
 8001820:	4a76      	ldr	r2, [pc, #472]	; (80019fc <EXTI+0x2bc>)
 8001822:	4293      	cmp	r3, r2
 8001824:	d106      	bne.n	8001834 <EXTI+0xf4>
 8001826:	4b74      	ldr	r3, [pc, #464]	; (80019f8 <EXTI+0x2b8>)
 8001828:	689b      	ldr	r3, [r3, #8]
 800182a:	4a73      	ldr	r2, [pc, #460]	; (80019f8 <EXTI+0x2b8>)
 800182c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8001830:	6093      	str	r3, [r2, #8]
			else if(PORTx==GPIOB){AFIO->AFIO_EXTICR1 |= (0b0001<<4);}
			else if(PORTx==GPIOC){AFIO->AFIO_EXTICR1 |= (0b0010<<4);}
			else if(PORTx==GPIOD){AFIO->AFIO_EXTICR1 |= (0b0011<<4);}

			break;
 8001832:	e300      	b.n	8001e36 <EXTI+0x6f6>
			else if(PORTx==GPIOB){AFIO->AFIO_EXTICR1 |= (0b0001<<4);}
 8001834:	68fb      	ldr	r3, [r7, #12]
 8001836:	4a72      	ldr	r2, [pc, #456]	; (8001a00 <EXTI+0x2c0>)
 8001838:	4293      	cmp	r3, r2
 800183a:	d106      	bne.n	800184a <EXTI+0x10a>
 800183c:	4b6e      	ldr	r3, [pc, #440]	; (80019f8 <EXTI+0x2b8>)
 800183e:	689b      	ldr	r3, [r3, #8]
 8001840:	4a6d      	ldr	r2, [pc, #436]	; (80019f8 <EXTI+0x2b8>)
 8001842:	f043 0310 	orr.w	r3, r3, #16
 8001846:	6093      	str	r3, [r2, #8]
			break;
 8001848:	e2f5      	b.n	8001e36 <EXTI+0x6f6>
			else if(PORTx==GPIOC){AFIO->AFIO_EXTICR1 |= (0b0010<<4);}
 800184a:	68fb      	ldr	r3, [r7, #12]
 800184c:	4a6d      	ldr	r2, [pc, #436]	; (8001a04 <EXTI+0x2c4>)
 800184e:	4293      	cmp	r3, r2
 8001850:	d106      	bne.n	8001860 <EXTI+0x120>
 8001852:	4b69      	ldr	r3, [pc, #420]	; (80019f8 <EXTI+0x2b8>)
 8001854:	689b      	ldr	r3, [r3, #8]
 8001856:	4a68      	ldr	r2, [pc, #416]	; (80019f8 <EXTI+0x2b8>)
 8001858:	f043 0320 	orr.w	r3, r3, #32
 800185c:	6093      	str	r3, [r2, #8]
			break;
 800185e:	e2ea      	b.n	8001e36 <EXTI+0x6f6>
			else if(PORTx==GPIOD){AFIO->AFIO_EXTICR1 |= (0b0011<<4);}
 8001860:	68fb      	ldr	r3, [r7, #12]
 8001862:	4a69      	ldr	r2, [pc, #420]	; (8001a08 <EXTI+0x2c8>)
 8001864:	4293      	cmp	r3, r2
 8001866:	f040 82e6 	bne.w	8001e36 <EXTI+0x6f6>
 800186a:	4b63      	ldr	r3, [pc, #396]	; (80019f8 <EXTI+0x2b8>)
 800186c:	689b      	ldr	r3, [r3, #8]
 800186e:	4a62      	ldr	r2, [pc, #392]	; (80019f8 <EXTI+0x2b8>)
 8001870:	f043 0330 	orr.w	r3, r3, #48	; 0x30
 8001874:	6093      	str	r3, [r2, #8]
			break;
 8001876:	e2de      	b.n	8001e36 <EXTI+0x6f6>
		case pin2:
			AFIO->AFIO_EXTICR1 &=~(0b1111<<8);
 8001878:	4b5f      	ldr	r3, [pc, #380]	; (80019f8 <EXTI+0x2b8>)
 800187a:	689b      	ldr	r3, [r3, #8]
 800187c:	4a5e      	ldr	r2, [pc, #376]	; (80019f8 <EXTI+0x2b8>)
 800187e:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8001882:	6093      	str	r3, [r2, #8]
			if(PORTx==GPIOA)     {AFIO->AFIO_EXTICR1 &=~(0b1111<<8);}
 8001884:	68fb      	ldr	r3, [r7, #12]
 8001886:	4a5d      	ldr	r2, [pc, #372]	; (80019fc <EXTI+0x2bc>)
 8001888:	4293      	cmp	r3, r2
 800188a:	d106      	bne.n	800189a <EXTI+0x15a>
 800188c:	4b5a      	ldr	r3, [pc, #360]	; (80019f8 <EXTI+0x2b8>)
 800188e:	689b      	ldr	r3, [r3, #8]
 8001890:	4a59      	ldr	r2, [pc, #356]	; (80019f8 <EXTI+0x2b8>)
 8001892:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8001896:	6093      	str	r3, [r2, #8]
			else if(PORTx==GPIOB){AFIO->AFIO_EXTICR1 |= (0b0001<<8);}
			else if(PORTx==GPIOC){AFIO->AFIO_EXTICR1 |= (0b0010<<8);}
			else if(PORTx==GPIOD){AFIO->AFIO_EXTICR1 |= (0b0011<<8);}

			break;
 8001898:	e2cf      	b.n	8001e3a <EXTI+0x6fa>
			else if(PORTx==GPIOB){AFIO->AFIO_EXTICR1 |= (0b0001<<8);}
 800189a:	68fb      	ldr	r3, [r7, #12]
 800189c:	4a58      	ldr	r2, [pc, #352]	; (8001a00 <EXTI+0x2c0>)
 800189e:	4293      	cmp	r3, r2
 80018a0:	d106      	bne.n	80018b0 <EXTI+0x170>
 80018a2:	4b55      	ldr	r3, [pc, #340]	; (80019f8 <EXTI+0x2b8>)
 80018a4:	689b      	ldr	r3, [r3, #8]
 80018a6:	4a54      	ldr	r2, [pc, #336]	; (80019f8 <EXTI+0x2b8>)
 80018a8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80018ac:	6093      	str	r3, [r2, #8]
			break;
 80018ae:	e2c4      	b.n	8001e3a <EXTI+0x6fa>
			else if(PORTx==GPIOC){AFIO->AFIO_EXTICR1 |= (0b0010<<8);}
 80018b0:	68fb      	ldr	r3, [r7, #12]
 80018b2:	4a54      	ldr	r2, [pc, #336]	; (8001a04 <EXTI+0x2c4>)
 80018b4:	4293      	cmp	r3, r2
 80018b6:	d106      	bne.n	80018c6 <EXTI+0x186>
 80018b8:	4b4f      	ldr	r3, [pc, #316]	; (80019f8 <EXTI+0x2b8>)
 80018ba:	689b      	ldr	r3, [r3, #8]
 80018bc:	4a4e      	ldr	r2, [pc, #312]	; (80019f8 <EXTI+0x2b8>)
 80018be:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80018c2:	6093      	str	r3, [r2, #8]
			break;
 80018c4:	e2b9      	b.n	8001e3a <EXTI+0x6fa>
			else if(PORTx==GPIOD){AFIO->AFIO_EXTICR1 |= (0b0011<<8);}
 80018c6:	68fb      	ldr	r3, [r7, #12]
 80018c8:	4a4f      	ldr	r2, [pc, #316]	; (8001a08 <EXTI+0x2c8>)
 80018ca:	4293      	cmp	r3, r2
 80018cc:	f040 82b5 	bne.w	8001e3a <EXTI+0x6fa>
 80018d0:	4b49      	ldr	r3, [pc, #292]	; (80019f8 <EXTI+0x2b8>)
 80018d2:	689b      	ldr	r3, [r3, #8]
 80018d4:	4a48      	ldr	r2, [pc, #288]	; (80019f8 <EXTI+0x2b8>)
 80018d6:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 80018da:	6093      	str	r3, [r2, #8]
			break;
 80018dc:	e2ad      	b.n	8001e3a <EXTI+0x6fa>
		case pin3:
			AFIO->AFIO_EXTICR1 &=~(0b1111<<12);
 80018de:	4b46      	ldr	r3, [pc, #280]	; (80019f8 <EXTI+0x2b8>)
 80018e0:	689b      	ldr	r3, [r3, #8]
 80018e2:	4a45      	ldr	r2, [pc, #276]	; (80019f8 <EXTI+0x2b8>)
 80018e4:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 80018e8:	6093      	str	r3, [r2, #8]
			if(PORTx==GPIOA)     {AFIO->AFIO_EXTICR1 &=~(0b1111<<12);}
 80018ea:	68fb      	ldr	r3, [r7, #12]
 80018ec:	4a43      	ldr	r2, [pc, #268]	; (80019fc <EXTI+0x2bc>)
 80018ee:	4293      	cmp	r3, r2
 80018f0:	d106      	bne.n	8001900 <EXTI+0x1c0>
 80018f2:	4b41      	ldr	r3, [pc, #260]	; (80019f8 <EXTI+0x2b8>)
 80018f4:	689b      	ldr	r3, [r3, #8]
 80018f6:	4a40      	ldr	r2, [pc, #256]	; (80019f8 <EXTI+0x2b8>)
 80018f8:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 80018fc:	6093      	str	r3, [r2, #8]
			else if(PORTx==GPIOB){AFIO->AFIO_EXTICR1 |= (0b0001<<12);}
			else if(PORTx==GPIOC){AFIO->AFIO_EXTICR1 |= (0b0010<<12);}
			else if(PORTx==GPIOD){AFIO->AFIO_EXTICR1 |= (0b0011<<12);}

			break;
 80018fe:	e29e      	b.n	8001e3e <EXTI+0x6fe>
			else if(PORTx==GPIOB){AFIO->AFIO_EXTICR1 |= (0b0001<<12);}
 8001900:	68fb      	ldr	r3, [r7, #12]
 8001902:	4a3f      	ldr	r2, [pc, #252]	; (8001a00 <EXTI+0x2c0>)
 8001904:	4293      	cmp	r3, r2
 8001906:	d106      	bne.n	8001916 <EXTI+0x1d6>
 8001908:	4b3b      	ldr	r3, [pc, #236]	; (80019f8 <EXTI+0x2b8>)
 800190a:	689b      	ldr	r3, [r3, #8]
 800190c:	4a3a      	ldr	r2, [pc, #232]	; (80019f8 <EXTI+0x2b8>)
 800190e:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8001912:	6093      	str	r3, [r2, #8]
			break;
 8001914:	e293      	b.n	8001e3e <EXTI+0x6fe>
			else if(PORTx==GPIOC){AFIO->AFIO_EXTICR1 |= (0b0010<<12);}
 8001916:	68fb      	ldr	r3, [r7, #12]
 8001918:	4a3a      	ldr	r2, [pc, #232]	; (8001a04 <EXTI+0x2c4>)
 800191a:	4293      	cmp	r3, r2
 800191c:	d106      	bne.n	800192c <EXTI+0x1ec>
 800191e:	4b36      	ldr	r3, [pc, #216]	; (80019f8 <EXTI+0x2b8>)
 8001920:	689b      	ldr	r3, [r3, #8]
 8001922:	4a35      	ldr	r2, [pc, #212]	; (80019f8 <EXTI+0x2b8>)
 8001924:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001928:	6093      	str	r3, [r2, #8]
			break;
 800192a:	e288      	b.n	8001e3e <EXTI+0x6fe>
			else if(PORTx==GPIOD){AFIO->AFIO_EXTICR1 |= (0b0011<<12);}
 800192c:	68fb      	ldr	r3, [r7, #12]
 800192e:	4a36      	ldr	r2, [pc, #216]	; (8001a08 <EXTI+0x2c8>)
 8001930:	4293      	cmp	r3, r2
 8001932:	f040 8284 	bne.w	8001e3e <EXTI+0x6fe>
 8001936:	4b30      	ldr	r3, [pc, #192]	; (80019f8 <EXTI+0x2b8>)
 8001938:	689b      	ldr	r3, [r3, #8]
 800193a:	4a2f      	ldr	r2, [pc, #188]	; (80019f8 <EXTI+0x2b8>)
 800193c:	f443 5340 	orr.w	r3, r3, #12288	; 0x3000
 8001940:	6093      	str	r3, [r2, #8]
			break;
 8001942:	e27c      	b.n	8001e3e <EXTI+0x6fe>
			//			0000: PA[x] pin
			//			0001: PB[x] pin
			//			0010: PC[x] pin
			//			0011: PD[x] pin
		case pin4:
			AFIO->AFIO_EXTICR2 &=~(0b1111<<0);
 8001944:	4b2c      	ldr	r3, [pc, #176]	; (80019f8 <EXTI+0x2b8>)
 8001946:	68db      	ldr	r3, [r3, #12]
 8001948:	4a2b      	ldr	r2, [pc, #172]	; (80019f8 <EXTI+0x2b8>)
 800194a:	f023 030f 	bic.w	r3, r3, #15
 800194e:	60d3      	str	r3, [r2, #12]
			if(PORTx==GPIOA)     {AFIO->AFIO_EXTICR2 &=~(0b1111<<0);}
 8001950:	68fb      	ldr	r3, [r7, #12]
 8001952:	4a2a      	ldr	r2, [pc, #168]	; (80019fc <EXTI+0x2bc>)
 8001954:	4293      	cmp	r3, r2
 8001956:	d106      	bne.n	8001966 <EXTI+0x226>
 8001958:	4b27      	ldr	r3, [pc, #156]	; (80019f8 <EXTI+0x2b8>)
 800195a:	68db      	ldr	r3, [r3, #12]
 800195c:	4a26      	ldr	r2, [pc, #152]	; (80019f8 <EXTI+0x2b8>)
 800195e:	f023 030f 	bic.w	r3, r3, #15
 8001962:	60d3      	str	r3, [r2, #12]
			else if(PORTx==GPIOB){AFIO->AFIO_EXTICR2 |= (0b0001<<0);}
			else if(PORTx==GPIOC){AFIO->AFIO_EXTICR2 |= (0b0010<<0);}
			else if(PORTx==GPIOD){AFIO->AFIO_EXTICR2 |= (0b0011<<0);}

			break;
 8001964:	e26d      	b.n	8001e42 <EXTI+0x702>
			else if(PORTx==GPIOB){AFIO->AFIO_EXTICR2 |= (0b0001<<0);}
 8001966:	68fb      	ldr	r3, [r7, #12]
 8001968:	4a25      	ldr	r2, [pc, #148]	; (8001a00 <EXTI+0x2c0>)
 800196a:	4293      	cmp	r3, r2
 800196c:	d106      	bne.n	800197c <EXTI+0x23c>
 800196e:	4b22      	ldr	r3, [pc, #136]	; (80019f8 <EXTI+0x2b8>)
 8001970:	68db      	ldr	r3, [r3, #12]
 8001972:	4a21      	ldr	r2, [pc, #132]	; (80019f8 <EXTI+0x2b8>)
 8001974:	f043 0301 	orr.w	r3, r3, #1
 8001978:	60d3      	str	r3, [r2, #12]
			break;
 800197a:	e262      	b.n	8001e42 <EXTI+0x702>
			else if(PORTx==GPIOC){AFIO->AFIO_EXTICR2 |= (0b0010<<0);}
 800197c:	68fb      	ldr	r3, [r7, #12]
 800197e:	4a21      	ldr	r2, [pc, #132]	; (8001a04 <EXTI+0x2c4>)
 8001980:	4293      	cmp	r3, r2
 8001982:	d106      	bne.n	8001992 <EXTI+0x252>
 8001984:	4b1c      	ldr	r3, [pc, #112]	; (80019f8 <EXTI+0x2b8>)
 8001986:	68db      	ldr	r3, [r3, #12]
 8001988:	4a1b      	ldr	r2, [pc, #108]	; (80019f8 <EXTI+0x2b8>)
 800198a:	f043 0302 	orr.w	r3, r3, #2
 800198e:	60d3      	str	r3, [r2, #12]
			break;
 8001990:	e257      	b.n	8001e42 <EXTI+0x702>
			else if(PORTx==GPIOD){AFIO->AFIO_EXTICR2 |= (0b0011<<0);}
 8001992:	68fb      	ldr	r3, [r7, #12]
 8001994:	4a1c      	ldr	r2, [pc, #112]	; (8001a08 <EXTI+0x2c8>)
 8001996:	4293      	cmp	r3, r2
 8001998:	f040 8253 	bne.w	8001e42 <EXTI+0x702>
 800199c:	4b16      	ldr	r3, [pc, #88]	; (80019f8 <EXTI+0x2b8>)
 800199e:	68db      	ldr	r3, [r3, #12]
 80019a0:	4a15      	ldr	r2, [pc, #84]	; (80019f8 <EXTI+0x2b8>)
 80019a2:	f043 0303 	orr.w	r3, r3, #3
 80019a6:	60d3      	str	r3, [r2, #12]
			break;
 80019a8:	e24b      	b.n	8001e42 <EXTI+0x702>
		case pin5:
			AFIO->AFIO_EXTICR2 &=~(0b1111<<4);
 80019aa:	4b13      	ldr	r3, [pc, #76]	; (80019f8 <EXTI+0x2b8>)
 80019ac:	68db      	ldr	r3, [r3, #12]
 80019ae:	4a12      	ldr	r2, [pc, #72]	; (80019f8 <EXTI+0x2b8>)
 80019b0:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80019b4:	60d3      	str	r3, [r2, #12]
			if(PORTx==GPIOA)     {AFIO->AFIO_EXTICR2 &=~(0b1111<<4);}
 80019b6:	68fb      	ldr	r3, [r7, #12]
 80019b8:	4a10      	ldr	r2, [pc, #64]	; (80019fc <EXTI+0x2bc>)
 80019ba:	4293      	cmp	r3, r2
 80019bc:	d106      	bne.n	80019cc <EXTI+0x28c>
 80019be:	4b0e      	ldr	r3, [pc, #56]	; (80019f8 <EXTI+0x2b8>)
 80019c0:	68db      	ldr	r3, [r3, #12]
 80019c2:	4a0d      	ldr	r2, [pc, #52]	; (80019f8 <EXTI+0x2b8>)
 80019c4:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80019c8:	60d3      	str	r3, [r2, #12]
			else if(PORTx==GPIOB){AFIO->AFIO_EXTICR2 |= (0b0001<<4);}
			else if(PORTx==GPIOC){AFIO->AFIO_EXTICR2 |= (0b0010<<4);}
			else if(PORTx==GPIOD){AFIO->AFIO_EXTICR2 |= (0b0011<<4);}

			break;
 80019ca:	e23c      	b.n	8001e46 <EXTI+0x706>
			else if(PORTx==GPIOB){AFIO->AFIO_EXTICR2 |= (0b0001<<4);}
 80019cc:	68fb      	ldr	r3, [r7, #12]
 80019ce:	4a0c      	ldr	r2, [pc, #48]	; (8001a00 <EXTI+0x2c0>)
 80019d0:	4293      	cmp	r3, r2
 80019d2:	d106      	bne.n	80019e2 <EXTI+0x2a2>
 80019d4:	4b08      	ldr	r3, [pc, #32]	; (80019f8 <EXTI+0x2b8>)
 80019d6:	68db      	ldr	r3, [r3, #12]
 80019d8:	4a07      	ldr	r2, [pc, #28]	; (80019f8 <EXTI+0x2b8>)
 80019da:	f043 0310 	orr.w	r3, r3, #16
 80019de:	60d3      	str	r3, [r2, #12]
			break;
 80019e0:	e231      	b.n	8001e46 <EXTI+0x706>
			else if(PORTx==GPIOC){AFIO->AFIO_EXTICR2 |= (0b0010<<4);}
 80019e2:	68fb      	ldr	r3, [r7, #12]
 80019e4:	4a07      	ldr	r2, [pc, #28]	; (8001a04 <EXTI+0x2c4>)
 80019e6:	4293      	cmp	r3, r2
 80019e8:	d110      	bne.n	8001a0c <EXTI+0x2cc>
 80019ea:	4b03      	ldr	r3, [pc, #12]	; (80019f8 <EXTI+0x2b8>)
 80019ec:	68db      	ldr	r3, [r3, #12]
 80019ee:	4a02      	ldr	r2, [pc, #8]	; (80019f8 <EXTI+0x2b8>)
 80019f0:	f043 0320 	orr.w	r3, r3, #32
 80019f4:	60d3      	str	r3, [r2, #12]
			break;
 80019f6:	e226      	b.n	8001e46 <EXTI+0x706>
 80019f8:	40010000 	.word	0x40010000
 80019fc:	40010800 	.word	0x40010800
 8001a00:	40010c00 	.word	0x40010c00
 8001a04:	40011000 	.word	0x40011000
 8001a08:	40011400 	.word	0x40011400
			else if(PORTx==GPIOD){AFIO->AFIO_EXTICR2 |= (0b0011<<4);}
 8001a0c:	68fb      	ldr	r3, [r7, #12]
 8001a0e:	4a93      	ldr	r2, [pc, #588]	; (8001c5c <EXTI+0x51c>)
 8001a10:	4293      	cmp	r3, r2
 8001a12:	f040 8218 	bne.w	8001e46 <EXTI+0x706>
 8001a16:	4b92      	ldr	r3, [pc, #584]	; (8001c60 <EXTI+0x520>)
 8001a18:	68db      	ldr	r3, [r3, #12]
 8001a1a:	4a91      	ldr	r2, [pc, #580]	; (8001c60 <EXTI+0x520>)
 8001a1c:	f043 0330 	orr.w	r3, r3, #48	; 0x30
 8001a20:	60d3      	str	r3, [r2, #12]
			break;
 8001a22:	e210      	b.n	8001e46 <EXTI+0x706>
		case pin6:
			AFIO->AFIO_EXTICR2 &=~(0b1111<<8);
 8001a24:	4b8e      	ldr	r3, [pc, #568]	; (8001c60 <EXTI+0x520>)
 8001a26:	68db      	ldr	r3, [r3, #12]
 8001a28:	4a8d      	ldr	r2, [pc, #564]	; (8001c60 <EXTI+0x520>)
 8001a2a:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8001a2e:	60d3      	str	r3, [r2, #12]
			if(PORTx==GPIOA)     {AFIO->AFIO_EXTICR2 &=~(0b1111<<8);}
 8001a30:	68fb      	ldr	r3, [r7, #12]
 8001a32:	4a8c      	ldr	r2, [pc, #560]	; (8001c64 <EXTI+0x524>)
 8001a34:	4293      	cmp	r3, r2
 8001a36:	d106      	bne.n	8001a46 <EXTI+0x306>
 8001a38:	4b89      	ldr	r3, [pc, #548]	; (8001c60 <EXTI+0x520>)
 8001a3a:	68db      	ldr	r3, [r3, #12]
 8001a3c:	4a88      	ldr	r2, [pc, #544]	; (8001c60 <EXTI+0x520>)
 8001a3e:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8001a42:	60d3      	str	r3, [r2, #12]
			else if(PORTx==GPIOB){AFIO->AFIO_EXTICR2 |= (0b0001<<8);}
			else if(PORTx==GPIOC){AFIO->AFIO_EXTICR2 |= (0b0010<<8);}
			else if(PORTx==GPIOD){AFIO->AFIO_EXTICR2 |= (0b0011<<8);}

			break;
 8001a44:	e201      	b.n	8001e4a <EXTI+0x70a>
			else if(PORTx==GPIOB){AFIO->AFIO_EXTICR2 |= (0b0001<<8);}
 8001a46:	68fb      	ldr	r3, [r7, #12]
 8001a48:	4a87      	ldr	r2, [pc, #540]	; (8001c68 <EXTI+0x528>)
 8001a4a:	4293      	cmp	r3, r2
 8001a4c:	d106      	bne.n	8001a5c <EXTI+0x31c>
 8001a4e:	4b84      	ldr	r3, [pc, #528]	; (8001c60 <EXTI+0x520>)
 8001a50:	68db      	ldr	r3, [r3, #12]
 8001a52:	4a83      	ldr	r2, [pc, #524]	; (8001c60 <EXTI+0x520>)
 8001a54:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001a58:	60d3      	str	r3, [r2, #12]
			break;
 8001a5a:	e1f6      	b.n	8001e4a <EXTI+0x70a>
			else if(PORTx==GPIOC){AFIO->AFIO_EXTICR2 |= (0b0010<<8);}
 8001a5c:	68fb      	ldr	r3, [r7, #12]
 8001a5e:	4a83      	ldr	r2, [pc, #524]	; (8001c6c <EXTI+0x52c>)
 8001a60:	4293      	cmp	r3, r2
 8001a62:	d106      	bne.n	8001a72 <EXTI+0x332>
 8001a64:	4b7e      	ldr	r3, [pc, #504]	; (8001c60 <EXTI+0x520>)
 8001a66:	68db      	ldr	r3, [r3, #12]
 8001a68:	4a7d      	ldr	r2, [pc, #500]	; (8001c60 <EXTI+0x520>)
 8001a6a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001a6e:	60d3      	str	r3, [r2, #12]
			break;
 8001a70:	e1eb      	b.n	8001e4a <EXTI+0x70a>
			else if(PORTx==GPIOD){AFIO->AFIO_EXTICR2 |= (0b0011<<8);}
 8001a72:	68fb      	ldr	r3, [r7, #12]
 8001a74:	4a79      	ldr	r2, [pc, #484]	; (8001c5c <EXTI+0x51c>)
 8001a76:	4293      	cmp	r3, r2
 8001a78:	f040 81e7 	bne.w	8001e4a <EXTI+0x70a>
 8001a7c:	4b78      	ldr	r3, [pc, #480]	; (8001c60 <EXTI+0x520>)
 8001a7e:	68db      	ldr	r3, [r3, #12]
 8001a80:	4a77      	ldr	r2, [pc, #476]	; (8001c60 <EXTI+0x520>)
 8001a82:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 8001a86:	60d3      	str	r3, [r2, #12]
			break;
 8001a88:	e1df      	b.n	8001e4a <EXTI+0x70a>
		case pin7:
			AFIO->AFIO_EXTICR2 &=~(0b1111<<12);
 8001a8a:	4b75      	ldr	r3, [pc, #468]	; (8001c60 <EXTI+0x520>)
 8001a8c:	68db      	ldr	r3, [r3, #12]
 8001a8e:	4a74      	ldr	r2, [pc, #464]	; (8001c60 <EXTI+0x520>)
 8001a90:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8001a94:	60d3      	str	r3, [r2, #12]
			if(PORTx==GPIOA)     {AFIO->AFIO_EXTICR2 &=~(0b1111<<12);}
 8001a96:	68fb      	ldr	r3, [r7, #12]
 8001a98:	4a72      	ldr	r2, [pc, #456]	; (8001c64 <EXTI+0x524>)
 8001a9a:	4293      	cmp	r3, r2
 8001a9c:	d106      	bne.n	8001aac <EXTI+0x36c>
 8001a9e:	4b70      	ldr	r3, [pc, #448]	; (8001c60 <EXTI+0x520>)
 8001aa0:	68db      	ldr	r3, [r3, #12]
 8001aa2:	4a6f      	ldr	r2, [pc, #444]	; (8001c60 <EXTI+0x520>)
 8001aa4:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8001aa8:	60d3      	str	r3, [r2, #12]
			else if(PORTx==GPIOB){AFIO->AFIO_EXTICR2 |= (0b0001<<12);}
			else if(PORTx==GPIOC){AFIO->AFIO_EXTICR2 |= (0b0010<<12);}
			else if(PORTx==GPIOD){AFIO->AFIO_EXTICR2 |= (0b0011<<12);}

			break;
 8001aaa:	e1d0      	b.n	8001e4e <EXTI+0x70e>
			else if(PORTx==GPIOB){AFIO->AFIO_EXTICR2 |= (0b0001<<12);}
 8001aac:	68fb      	ldr	r3, [r7, #12]
 8001aae:	4a6e      	ldr	r2, [pc, #440]	; (8001c68 <EXTI+0x528>)
 8001ab0:	4293      	cmp	r3, r2
 8001ab2:	d106      	bne.n	8001ac2 <EXTI+0x382>
 8001ab4:	4b6a      	ldr	r3, [pc, #424]	; (8001c60 <EXTI+0x520>)
 8001ab6:	68db      	ldr	r3, [r3, #12]
 8001ab8:	4a69      	ldr	r2, [pc, #420]	; (8001c60 <EXTI+0x520>)
 8001aba:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8001abe:	60d3      	str	r3, [r2, #12]
			break;
 8001ac0:	e1c5      	b.n	8001e4e <EXTI+0x70e>
			else if(PORTx==GPIOC){AFIO->AFIO_EXTICR2 |= (0b0010<<12);}
 8001ac2:	68fb      	ldr	r3, [r7, #12]
 8001ac4:	4a69      	ldr	r2, [pc, #420]	; (8001c6c <EXTI+0x52c>)
 8001ac6:	4293      	cmp	r3, r2
 8001ac8:	d106      	bne.n	8001ad8 <EXTI+0x398>
 8001aca:	4b65      	ldr	r3, [pc, #404]	; (8001c60 <EXTI+0x520>)
 8001acc:	68db      	ldr	r3, [r3, #12]
 8001ace:	4a64      	ldr	r2, [pc, #400]	; (8001c60 <EXTI+0x520>)
 8001ad0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001ad4:	60d3      	str	r3, [r2, #12]
			break;
 8001ad6:	e1ba      	b.n	8001e4e <EXTI+0x70e>
			else if(PORTx==GPIOD){AFIO->AFIO_EXTICR2 |= (0b0011<<12);}
 8001ad8:	68fb      	ldr	r3, [r7, #12]
 8001ada:	4a60      	ldr	r2, [pc, #384]	; (8001c5c <EXTI+0x51c>)
 8001adc:	4293      	cmp	r3, r2
 8001ade:	f040 81b6 	bne.w	8001e4e <EXTI+0x70e>
 8001ae2:	4b5f      	ldr	r3, [pc, #380]	; (8001c60 <EXTI+0x520>)
 8001ae4:	68db      	ldr	r3, [r3, #12]
 8001ae6:	4a5e      	ldr	r2, [pc, #376]	; (8001c60 <EXTI+0x520>)
 8001ae8:	f443 5340 	orr.w	r3, r3, #12288	; 0x3000
 8001aec:	60d3      	str	r3, [r2, #12]
			break;
 8001aee:	e1ae      	b.n	8001e4e <EXTI+0x70e>
			//			0000: PA[x] pin
			//			0001: PB[x] pin
			//			0010: PC[x] pin
			//			0011: PD[x] pin
		case pin8:
			AFIO->AFIO_EXTICR3 &=~(0b1111<<0);
 8001af0:	4b5b      	ldr	r3, [pc, #364]	; (8001c60 <EXTI+0x520>)
 8001af2:	691b      	ldr	r3, [r3, #16]
 8001af4:	4a5a      	ldr	r2, [pc, #360]	; (8001c60 <EXTI+0x520>)
 8001af6:	f023 030f 	bic.w	r3, r3, #15
 8001afa:	6113      	str	r3, [r2, #16]
			if(PORTx==GPIOA)     {AFIO->AFIO_EXTICR3 &=~(0b1111<<0);}
 8001afc:	68fb      	ldr	r3, [r7, #12]
 8001afe:	4a59      	ldr	r2, [pc, #356]	; (8001c64 <EXTI+0x524>)
 8001b00:	4293      	cmp	r3, r2
 8001b02:	d106      	bne.n	8001b12 <EXTI+0x3d2>
 8001b04:	4b56      	ldr	r3, [pc, #344]	; (8001c60 <EXTI+0x520>)
 8001b06:	691b      	ldr	r3, [r3, #16]
 8001b08:	4a55      	ldr	r2, [pc, #340]	; (8001c60 <EXTI+0x520>)
 8001b0a:	f023 030f 	bic.w	r3, r3, #15
 8001b0e:	6113      	str	r3, [r2, #16]
			else if(PORTx==GPIOB){AFIO->AFIO_EXTICR3 |= (0b0001<<0);}
			else if(PORTx==GPIOC){AFIO->AFIO_EXTICR3 |= (0b0010<<0);}
			else if(PORTx==GPIOD){AFIO->AFIO_EXTICR3 |= (0b0011<<0);}

			break;
 8001b10:	e19f      	b.n	8001e52 <EXTI+0x712>
			else if(PORTx==GPIOB){AFIO->AFIO_EXTICR3 |= (0b0001<<0);}
 8001b12:	68fb      	ldr	r3, [r7, #12]
 8001b14:	4a54      	ldr	r2, [pc, #336]	; (8001c68 <EXTI+0x528>)
 8001b16:	4293      	cmp	r3, r2
 8001b18:	d106      	bne.n	8001b28 <EXTI+0x3e8>
 8001b1a:	4b51      	ldr	r3, [pc, #324]	; (8001c60 <EXTI+0x520>)
 8001b1c:	691b      	ldr	r3, [r3, #16]
 8001b1e:	4a50      	ldr	r2, [pc, #320]	; (8001c60 <EXTI+0x520>)
 8001b20:	f043 0301 	orr.w	r3, r3, #1
 8001b24:	6113      	str	r3, [r2, #16]
			break;
 8001b26:	e194      	b.n	8001e52 <EXTI+0x712>
			else if(PORTx==GPIOC){AFIO->AFIO_EXTICR3 |= (0b0010<<0);}
 8001b28:	68fb      	ldr	r3, [r7, #12]
 8001b2a:	4a50      	ldr	r2, [pc, #320]	; (8001c6c <EXTI+0x52c>)
 8001b2c:	4293      	cmp	r3, r2
 8001b2e:	d106      	bne.n	8001b3e <EXTI+0x3fe>
 8001b30:	4b4b      	ldr	r3, [pc, #300]	; (8001c60 <EXTI+0x520>)
 8001b32:	691b      	ldr	r3, [r3, #16]
 8001b34:	4a4a      	ldr	r2, [pc, #296]	; (8001c60 <EXTI+0x520>)
 8001b36:	f043 0302 	orr.w	r3, r3, #2
 8001b3a:	6113      	str	r3, [r2, #16]
			break;
 8001b3c:	e189      	b.n	8001e52 <EXTI+0x712>
			else if(PORTx==GPIOD){AFIO->AFIO_EXTICR3 |= (0b0011<<0);}
 8001b3e:	68fb      	ldr	r3, [r7, #12]
 8001b40:	4a46      	ldr	r2, [pc, #280]	; (8001c5c <EXTI+0x51c>)
 8001b42:	4293      	cmp	r3, r2
 8001b44:	f040 8185 	bne.w	8001e52 <EXTI+0x712>
 8001b48:	4b45      	ldr	r3, [pc, #276]	; (8001c60 <EXTI+0x520>)
 8001b4a:	691b      	ldr	r3, [r3, #16]
 8001b4c:	4a44      	ldr	r2, [pc, #272]	; (8001c60 <EXTI+0x520>)
 8001b4e:	f043 0303 	orr.w	r3, r3, #3
 8001b52:	6113      	str	r3, [r2, #16]
			break;
 8001b54:	e17d      	b.n	8001e52 <EXTI+0x712>
		case pin9:
			AFIO->AFIO_EXTICR3 &=~(0b1111<<4);
 8001b56:	4b42      	ldr	r3, [pc, #264]	; (8001c60 <EXTI+0x520>)
 8001b58:	691b      	ldr	r3, [r3, #16]
 8001b5a:	4a41      	ldr	r2, [pc, #260]	; (8001c60 <EXTI+0x520>)
 8001b5c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8001b60:	6113      	str	r3, [r2, #16]
			if(PORTx==GPIOA)     {AFIO->AFIO_EXTICR3 &=~(0b1111<<4);}
 8001b62:	68fb      	ldr	r3, [r7, #12]
 8001b64:	4a3f      	ldr	r2, [pc, #252]	; (8001c64 <EXTI+0x524>)
 8001b66:	4293      	cmp	r3, r2
 8001b68:	d106      	bne.n	8001b78 <EXTI+0x438>
 8001b6a:	4b3d      	ldr	r3, [pc, #244]	; (8001c60 <EXTI+0x520>)
 8001b6c:	691b      	ldr	r3, [r3, #16]
 8001b6e:	4a3c      	ldr	r2, [pc, #240]	; (8001c60 <EXTI+0x520>)
 8001b70:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8001b74:	6113      	str	r3, [r2, #16]
			else if(PORTx==GPIOB){AFIO->AFIO_EXTICR3 |= (0b0001<<4);}
			else if(PORTx==GPIOC){AFIO->AFIO_EXTICR3 |= (0b0010<<4);}
			else if(PORTx==GPIOD){AFIO->AFIO_EXTICR3 |= (0b0011<<4);}

			break;
 8001b76:	e16e      	b.n	8001e56 <EXTI+0x716>
			else if(PORTx==GPIOB){AFIO->AFIO_EXTICR3 |= (0b0001<<4);}
 8001b78:	68fb      	ldr	r3, [r7, #12]
 8001b7a:	4a3b      	ldr	r2, [pc, #236]	; (8001c68 <EXTI+0x528>)
 8001b7c:	4293      	cmp	r3, r2
 8001b7e:	d106      	bne.n	8001b8e <EXTI+0x44e>
 8001b80:	4b37      	ldr	r3, [pc, #220]	; (8001c60 <EXTI+0x520>)
 8001b82:	691b      	ldr	r3, [r3, #16]
 8001b84:	4a36      	ldr	r2, [pc, #216]	; (8001c60 <EXTI+0x520>)
 8001b86:	f043 0310 	orr.w	r3, r3, #16
 8001b8a:	6113      	str	r3, [r2, #16]
			break;
 8001b8c:	e163      	b.n	8001e56 <EXTI+0x716>
			else if(PORTx==GPIOC){AFIO->AFIO_EXTICR3 |= (0b0010<<4);}
 8001b8e:	68fb      	ldr	r3, [r7, #12]
 8001b90:	4a36      	ldr	r2, [pc, #216]	; (8001c6c <EXTI+0x52c>)
 8001b92:	4293      	cmp	r3, r2
 8001b94:	d106      	bne.n	8001ba4 <EXTI+0x464>
 8001b96:	4b32      	ldr	r3, [pc, #200]	; (8001c60 <EXTI+0x520>)
 8001b98:	691b      	ldr	r3, [r3, #16]
 8001b9a:	4a31      	ldr	r2, [pc, #196]	; (8001c60 <EXTI+0x520>)
 8001b9c:	f043 0320 	orr.w	r3, r3, #32
 8001ba0:	6113      	str	r3, [r2, #16]
			break;
 8001ba2:	e158      	b.n	8001e56 <EXTI+0x716>
			else if(PORTx==GPIOD){AFIO->AFIO_EXTICR3 |= (0b0011<<4);}
 8001ba4:	68fb      	ldr	r3, [r7, #12]
 8001ba6:	4a2d      	ldr	r2, [pc, #180]	; (8001c5c <EXTI+0x51c>)
 8001ba8:	4293      	cmp	r3, r2
 8001baa:	f040 8154 	bne.w	8001e56 <EXTI+0x716>
 8001bae:	4b2c      	ldr	r3, [pc, #176]	; (8001c60 <EXTI+0x520>)
 8001bb0:	691b      	ldr	r3, [r3, #16]
 8001bb2:	4a2b      	ldr	r2, [pc, #172]	; (8001c60 <EXTI+0x520>)
 8001bb4:	f043 0330 	orr.w	r3, r3, #48	; 0x30
 8001bb8:	6113      	str	r3, [r2, #16]
			break;
 8001bba:	e14c      	b.n	8001e56 <EXTI+0x716>
		case pin10:
			AFIO->AFIO_EXTICR3 &=~(0b1111<<8);
 8001bbc:	4b28      	ldr	r3, [pc, #160]	; (8001c60 <EXTI+0x520>)
 8001bbe:	691b      	ldr	r3, [r3, #16]
 8001bc0:	4a27      	ldr	r2, [pc, #156]	; (8001c60 <EXTI+0x520>)
 8001bc2:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8001bc6:	6113      	str	r3, [r2, #16]
			if(PORTx==GPIOA)     {AFIO->AFIO_EXTICR3 &=~(0b1111<<8);}
 8001bc8:	68fb      	ldr	r3, [r7, #12]
 8001bca:	4a26      	ldr	r2, [pc, #152]	; (8001c64 <EXTI+0x524>)
 8001bcc:	4293      	cmp	r3, r2
 8001bce:	d106      	bne.n	8001bde <EXTI+0x49e>
 8001bd0:	4b23      	ldr	r3, [pc, #140]	; (8001c60 <EXTI+0x520>)
 8001bd2:	691b      	ldr	r3, [r3, #16]
 8001bd4:	4a22      	ldr	r2, [pc, #136]	; (8001c60 <EXTI+0x520>)
 8001bd6:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8001bda:	6113      	str	r3, [r2, #16]
			else if(PORTx==GPIOB){AFIO->AFIO_EXTICR3 |= (0b0001<<8);}
			else if(PORTx==GPIOC){AFIO->AFIO_EXTICR3 |= (0b0010<<8);}
			else if(PORTx==GPIOD){AFIO->AFIO_EXTICR3 |= (0b0011<<8);}

			break;
 8001bdc:	e13d      	b.n	8001e5a <EXTI+0x71a>
			else if(PORTx==GPIOB){AFIO->AFIO_EXTICR3 |= (0b0001<<8);}
 8001bde:	68fb      	ldr	r3, [r7, #12]
 8001be0:	4a21      	ldr	r2, [pc, #132]	; (8001c68 <EXTI+0x528>)
 8001be2:	4293      	cmp	r3, r2
 8001be4:	d106      	bne.n	8001bf4 <EXTI+0x4b4>
 8001be6:	4b1e      	ldr	r3, [pc, #120]	; (8001c60 <EXTI+0x520>)
 8001be8:	691b      	ldr	r3, [r3, #16]
 8001bea:	4a1d      	ldr	r2, [pc, #116]	; (8001c60 <EXTI+0x520>)
 8001bec:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001bf0:	6113      	str	r3, [r2, #16]
			break;
 8001bf2:	e132      	b.n	8001e5a <EXTI+0x71a>
			else if(PORTx==GPIOC){AFIO->AFIO_EXTICR3 |= (0b0010<<8);}
 8001bf4:	68fb      	ldr	r3, [r7, #12]
 8001bf6:	4a1d      	ldr	r2, [pc, #116]	; (8001c6c <EXTI+0x52c>)
 8001bf8:	4293      	cmp	r3, r2
 8001bfa:	d106      	bne.n	8001c0a <EXTI+0x4ca>
 8001bfc:	4b18      	ldr	r3, [pc, #96]	; (8001c60 <EXTI+0x520>)
 8001bfe:	691b      	ldr	r3, [r3, #16]
 8001c00:	4a17      	ldr	r2, [pc, #92]	; (8001c60 <EXTI+0x520>)
 8001c02:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001c06:	6113      	str	r3, [r2, #16]
			break;
 8001c08:	e127      	b.n	8001e5a <EXTI+0x71a>
			else if(PORTx==GPIOD){AFIO->AFIO_EXTICR3 |= (0b0011<<8);}
 8001c0a:	68fb      	ldr	r3, [r7, #12]
 8001c0c:	4a13      	ldr	r2, [pc, #76]	; (8001c5c <EXTI+0x51c>)
 8001c0e:	4293      	cmp	r3, r2
 8001c10:	f040 8123 	bne.w	8001e5a <EXTI+0x71a>
 8001c14:	4b12      	ldr	r3, [pc, #72]	; (8001c60 <EXTI+0x520>)
 8001c16:	691b      	ldr	r3, [r3, #16]
 8001c18:	4a11      	ldr	r2, [pc, #68]	; (8001c60 <EXTI+0x520>)
 8001c1a:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 8001c1e:	6113      	str	r3, [r2, #16]
			break;
 8001c20:	e11b      	b.n	8001e5a <EXTI+0x71a>
		case pin11:
			AFIO->AFIO_EXTICR3 &=~(0b1111<<12);
 8001c22:	4b0f      	ldr	r3, [pc, #60]	; (8001c60 <EXTI+0x520>)
 8001c24:	691b      	ldr	r3, [r3, #16]
 8001c26:	4a0e      	ldr	r2, [pc, #56]	; (8001c60 <EXTI+0x520>)
 8001c28:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8001c2c:	6113      	str	r3, [r2, #16]
			if(PORTx==GPIOA)     {AFIO->AFIO_EXTICR3 &=~(0b1111<<12);}
 8001c2e:	68fb      	ldr	r3, [r7, #12]
 8001c30:	4a0c      	ldr	r2, [pc, #48]	; (8001c64 <EXTI+0x524>)
 8001c32:	4293      	cmp	r3, r2
 8001c34:	d106      	bne.n	8001c44 <EXTI+0x504>
 8001c36:	4b0a      	ldr	r3, [pc, #40]	; (8001c60 <EXTI+0x520>)
 8001c38:	691b      	ldr	r3, [r3, #16]
 8001c3a:	4a09      	ldr	r2, [pc, #36]	; (8001c60 <EXTI+0x520>)
 8001c3c:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8001c40:	6113      	str	r3, [r2, #16]
			else if(PORTx==GPIOB){AFIO->AFIO_EXTICR3 |= (0b0001<<12);}
			else if(PORTx==GPIOC){AFIO->AFIO_EXTICR3 |= (0b0010<<12);}
			else if(PORTx==GPIOD){AFIO->AFIO_EXTICR3 |= (0b0011<<12);}

			break;
 8001c42:	e10c      	b.n	8001e5e <EXTI+0x71e>
			else if(PORTx==GPIOB){AFIO->AFIO_EXTICR3 |= (0b0001<<12);}
 8001c44:	68fb      	ldr	r3, [r7, #12]
 8001c46:	4a08      	ldr	r2, [pc, #32]	; (8001c68 <EXTI+0x528>)
 8001c48:	4293      	cmp	r3, r2
 8001c4a:	d111      	bne.n	8001c70 <EXTI+0x530>
 8001c4c:	4b04      	ldr	r3, [pc, #16]	; (8001c60 <EXTI+0x520>)
 8001c4e:	691b      	ldr	r3, [r3, #16]
 8001c50:	4a03      	ldr	r2, [pc, #12]	; (8001c60 <EXTI+0x520>)
 8001c52:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8001c56:	6113      	str	r3, [r2, #16]
			break;
 8001c58:	e101      	b.n	8001e5e <EXTI+0x71e>
 8001c5a:	bf00      	nop
 8001c5c:	40011400 	.word	0x40011400
 8001c60:	40010000 	.word	0x40010000
 8001c64:	40010800 	.word	0x40010800
 8001c68:	40010c00 	.word	0x40010c00
 8001c6c:	40011000 	.word	0x40011000
			else if(PORTx==GPIOC){AFIO->AFIO_EXTICR3 |= (0b0010<<12);}
 8001c70:	68fb      	ldr	r3, [r7, #12]
 8001c72:	4a98      	ldr	r2, [pc, #608]	; (8001ed4 <EXTI+0x794>)
 8001c74:	4293      	cmp	r3, r2
 8001c76:	d106      	bne.n	8001c86 <EXTI+0x546>
 8001c78:	4b97      	ldr	r3, [pc, #604]	; (8001ed8 <EXTI+0x798>)
 8001c7a:	691b      	ldr	r3, [r3, #16]
 8001c7c:	4a96      	ldr	r2, [pc, #600]	; (8001ed8 <EXTI+0x798>)
 8001c7e:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001c82:	6113      	str	r3, [r2, #16]
			break;
 8001c84:	e0eb      	b.n	8001e5e <EXTI+0x71e>
			else if(PORTx==GPIOD){AFIO->AFIO_EXTICR3 |= (0b0011<<12);}
 8001c86:	68fb      	ldr	r3, [r7, #12]
 8001c88:	4a94      	ldr	r2, [pc, #592]	; (8001edc <EXTI+0x79c>)
 8001c8a:	4293      	cmp	r3, r2
 8001c8c:	f040 80e7 	bne.w	8001e5e <EXTI+0x71e>
 8001c90:	4b91      	ldr	r3, [pc, #580]	; (8001ed8 <EXTI+0x798>)
 8001c92:	691b      	ldr	r3, [r3, #16]
 8001c94:	4a90      	ldr	r2, [pc, #576]	; (8001ed8 <EXTI+0x798>)
 8001c96:	f443 5340 	orr.w	r3, r3, #12288	; 0x3000
 8001c9a:	6113      	str	r3, [r2, #16]
			break;
 8001c9c:	e0df      	b.n	8001e5e <EXTI+0x71e>
			//			0000: PA[x] pin
			//			0001: PB[x] pin
			//			0010: PC[x] pin
			//			0011: PD[x] pin
		case pin12:
			AFIO->AFIO_EXTICR4 &=~(0b1111<<0);
 8001c9e:	4b8e      	ldr	r3, [pc, #568]	; (8001ed8 <EXTI+0x798>)
 8001ca0:	695b      	ldr	r3, [r3, #20]
 8001ca2:	4a8d      	ldr	r2, [pc, #564]	; (8001ed8 <EXTI+0x798>)
 8001ca4:	f023 030f 	bic.w	r3, r3, #15
 8001ca8:	6153      	str	r3, [r2, #20]
			if(PORTx==GPIOA)     {AFIO->AFIO_EXTICR4 &=~(0b1111<<0);}
 8001caa:	68fb      	ldr	r3, [r7, #12]
 8001cac:	4a8c      	ldr	r2, [pc, #560]	; (8001ee0 <EXTI+0x7a0>)
 8001cae:	4293      	cmp	r3, r2
 8001cb0:	d106      	bne.n	8001cc0 <EXTI+0x580>
 8001cb2:	4b89      	ldr	r3, [pc, #548]	; (8001ed8 <EXTI+0x798>)
 8001cb4:	695b      	ldr	r3, [r3, #20]
 8001cb6:	4a88      	ldr	r2, [pc, #544]	; (8001ed8 <EXTI+0x798>)
 8001cb8:	f023 030f 	bic.w	r3, r3, #15
 8001cbc:	6153      	str	r3, [r2, #20]
			else if(PORTx==GPIOB){AFIO->AFIO_EXTICR4 |= (0b0001<<0);}
			else if(PORTx==GPIOC){AFIO->AFIO_EXTICR4 |= (0b0010<<0);}
			else if(PORTx==GPIOD){AFIO->AFIO_EXTICR4 |= (0b0011<<0);}

			break;
 8001cbe:	e0d0      	b.n	8001e62 <EXTI+0x722>
			else if(PORTx==GPIOB){AFIO->AFIO_EXTICR4 |= (0b0001<<0);}
 8001cc0:	68fb      	ldr	r3, [r7, #12]
 8001cc2:	4a88      	ldr	r2, [pc, #544]	; (8001ee4 <EXTI+0x7a4>)
 8001cc4:	4293      	cmp	r3, r2
 8001cc6:	d106      	bne.n	8001cd6 <EXTI+0x596>
 8001cc8:	4b83      	ldr	r3, [pc, #524]	; (8001ed8 <EXTI+0x798>)
 8001cca:	695b      	ldr	r3, [r3, #20]
 8001ccc:	4a82      	ldr	r2, [pc, #520]	; (8001ed8 <EXTI+0x798>)
 8001cce:	f043 0301 	orr.w	r3, r3, #1
 8001cd2:	6153      	str	r3, [r2, #20]
			break;
 8001cd4:	e0c5      	b.n	8001e62 <EXTI+0x722>
			else if(PORTx==GPIOC){AFIO->AFIO_EXTICR4 |= (0b0010<<0);}
 8001cd6:	68fb      	ldr	r3, [r7, #12]
 8001cd8:	4a7e      	ldr	r2, [pc, #504]	; (8001ed4 <EXTI+0x794>)
 8001cda:	4293      	cmp	r3, r2
 8001cdc:	d106      	bne.n	8001cec <EXTI+0x5ac>
 8001cde:	4b7e      	ldr	r3, [pc, #504]	; (8001ed8 <EXTI+0x798>)
 8001ce0:	695b      	ldr	r3, [r3, #20]
 8001ce2:	4a7d      	ldr	r2, [pc, #500]	; (8001ed8 <EXTI+0x798>)
 8001ce4:	f043 0302 	orr.w	r3, r3, #2
 8001ce8:	6153      	str	r3, [r2, #20]
			break;
 8001cea:	e0ba      	b.n	8001e62 <EXTI+0x722>
			else if(PORTx==GPIOD){AFIO->AFIO_EXTICR4 |= (0b0011<<0);}
 8001cec:	68fb      	ldr	r3, [r7, #12]
 8001cee:	4a7b      	ldr	r2, [pc, #492]	; (8001edc <EXTI+0x79c>)
 8001cf0:	4293      	cmp	r3, r2
 8001cf2:	f040 80b6 	bne.w	8001e62 <EXTI+0x722>
 8001cf6:	4b78      	ldr	r3, [pc, #480]	; (8001ed8 <EXTI+0x798>)
 8001cf8:	695b      	ldr	r3, [r3, #20]
 8001cfa:	4a77      	ldr	r2, [pc, #476]	; (8001ed8 <EXTI+0x798>)
 8001cfc:	f043 0303 	orr.w	r3, r3, #3
 8001d00:	6153      	str	r3, [r2, #20]
			break;
 8001d02:	e0ae      	b.n	8001e62 <EXTI+0x722>
		case pin13:
			AFIO->AFIO_EXTICR4 &=~(0b1111<<4);
 8001d04:	4b74      	ldr	r3, [pc, #464]	; (8001ed8 <EXTI+0x798>)
 8001d06:	695b      	ldr	r3, [r3, #20]
 8001d08:	4a73      	ldr	r2, [pc, #460]	; (8001ed8 <EXTI+0x798>)
 8001d0a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8001d0e:	6153      	str	r3, [r2, #20]
			if(PORTx==GPIOA)     {AFIO->AFIO_EXTICR4 &=~(0b1111<<4);}
 8001d10:	68fb      	ldr	r3, [r7, #12]
 8001d12:	4a73      	ldr	r2, [pc, #460]	; (8001ee0 <EXTI+0x7a0>)
 8001d14:	4293      	cmp	r3, r2
 8001d16:	d106      	bne.n	8001d26 <EXTI+0x5e6>
 8001d18:	4b6f      	ldr	r3, [pc, #444]	; (8001ed8 <EXTI+0x798>)
 8001d1a:	695b      	ldr	r3, [r3, #20]
 8001d1c:	4a6e      	ldr	r2, [pc, #440]	; (8001ed8 <EXTI+0x798>)
 8001d1e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8001d22:	6153      	str	r3, [r2, #20]
			else if(PORTx==GPIOB){AFIO->AFIO_EXTICR4 |= (0b0001<<4);}
			else if(PORTx==GPIOC){AFIO->AFIO_EXTICR4 |= (0b0010<<4);}
			else if(PORTx==GPIOD){AFIO->AFIO_EXTICR4 |= (0b0011<<4);}

			break;
 8001d24:	e09f      	b.n	8001e66 <EXTI+0x726>
			else if(PORTx==GPIOB){AFIO->AFIO_EXTICR4 |= (0b0001<<4);}
 8001d26:	68fb      	ldr	r3, [r7, #12]
 8001d28:	4a6e      	ldr	r2, [pc, #440]	; (8001ee4 <EXTI+0x7a4>)
 8001d2a:	4293      	cmp	r3, r2
 8001d2c:	d106      	bne.n	8001d3c <EXTI+0x5fc>
 8001d2e:	4b6a      	ldr	r3, [pc, #424]	; (8001ed8 <EXTI+0x798>)
 8001d30:	695b      	ldr	r3, [r3, #20]
 8001d32:	4a69      	ldr	r2, [pc, #420]	; (8001ed8 <EXTI+0x798>)
 8001d34:	f043 0310 	orr.w	r3, r3, #16
 8001d38:	6153      	str	r3, [r2, #20]
			break;
 8001d3a:	e094      	b.n	8001e66 <EXTI+0x726>
			else if(PORTx==GPIOC){AFIO->AFIO_EXTICR4 |= (0b0010<<4);}
 8001d3c:	68fb      	ldr	r3, [r7, #12]
 8001d3e:	4a65      	ldr	r2, [pc, #404]	; (8001ed4 <EXTI+0x794>)
 8001d40:	4293      	cmp	r3, r2
 8001d42:	d106      	bne.n	8001d52 <EXTI+0x612>
 8001d44:	4b64      	ldr	r3, [pc, #400]	; (8001ed8 <EXTI+0x798>)
 8001d46:	695b      	ldr	r3, [r3, #20]
 8001d48:	4a63      	ldr	r2, [pc, #396]	; (8001ed8 <EXTI+0x798>)
 8001d4a:	f043 0320 	orr.w	r3, r3, #32
 8001d4e:	6153      	str	r3, [r2, #20]
			break;
 8001d50:	e089      	b.n	8001e66 <EXTI+0x726>
			else if(PORTx==GPIOD){AFIO->AFIO_EXTICR4 |= (0b0011<<4);}
 8001d52:	68fb      	ldr	r3, [r7, #12]
 8001d54:	4a61      	ldr	r2, [pc, #388]	; (8001edc <EXTI+0x79c>)
 8001d56:	4293      	cmp	r3, r2
 8001d58:	f040 8085 	bne.w	8001e66 <EXTI+0x726>
 8001d5c:	4b5e      	ldr	r3, [pc, #376]	; (8001ed8 <EXTI+0x798>)
 8001d5e:	695b      	ldr	r3, [r3, #20]
 8001d60:	4a5d      	ldr	r2, [pc, #372]	; (8001ed8 <EXTI+0x798>)
 8001d62:	f043 0330 	orr.w	r3, r3, #48	; 0x30
 8001d66:	6153      	str	r3, [r2, #20]
			break;
 8001d68:	e07d      	b.n	8001e66 <EXTI+0x726>
		case pin14:
			AFIO->AFIO_EXTICR4 &=~(0b1111<<8);
 8001d6a:	4b5b      	ldr	r3, [pc, #364]	; (8001ed8 <EXTI+0x798>)
 8001d6c:	695b      	ldr	r3, [r3, #20]
 8001d6e:	4a5a      	ldr	r2, [pc, #360]	; (8001ed8 <EXTI+0x798>)
 8001d70:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8001d74:	6153      	str	r3, [r2, #20]
			if(PORTx==GPIOA)     {AFIO->AFIO_EXTICR4 &=~(0b1111<<8);}
 8001d76:	68fb      	ldr	r3, [r7, #12]
 8001d78:	4a59      	ldr	r2, [pc, #356]	; (8001ee0 <EXTI+0x7a0>)
 8001d7a:	4293      	cmp	r3, r2
 8001d7c:	d106      	bne.n	8001d8c <EXTI+0x64c>
 8001d7e:	4b56      	ldr	r3, [pc, #344]	; (8001ed8 <EXTI+0x798>)
 8001d80:	695b      	ldr	r3, [r3, #20]
 8001d82:	4a55      	ldr	r2, [pc, #340]	; (8001ed8 <EXTI+0x798>)
 8001d84:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8001d88:	6153      	str	r3, [r2, #20]
			else if(PORTx==GPIOB){AFIO->AFIO_EXTICR4 |= (0b0001<<8);}
			else if(PORTx==GPIOC){AFIO->AFIO_EXTICR4 |= (0b0010<<8);}
			else if(PORTx==GPIOD){AFIO->AFIO_EXTICR4 |= (0b0011<<8);}

			break;
 8001d8a:	e06e      	b.n	8001e6a <EXTI+0x72a>
			else if(PORTx==GPIOB){AFIO->AFIO_EXTICR4 |= (0b0001<<8);}
 8001d8c:	68fb      	ldr	r3, [r7, #12]
 8001d8e:	4a55      	ldr	r2, [pc, #340]	; (8001ee4 <EXTI+0x7a4>)
 8001d90:	4293      	cmp	r3, r2
 8001d92:	d106      	bne.n	8001da2 <EXTI+0x662>
 8001d94:	4b50      	ldr	r3, [pc, #320]	; (8001ed8 <EXTI+0x798>)
 8001d96:	695b      	ldr	r3, [r3, #20]
 8001d98:	4a4f      	ldr	r2, [pc, #316]	; (8001ed8 <EXTI+0x798>)
 8001d9a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001d9e:	6153      	str	r3, [r2, #20]
			break;
 8001da0:	e063      	b.n	8001e6a <EXTI+0x72a>
			else if(PORTx==GPIOC){AFIO->AFIO_EXTICR4 |= (0b0010<<8);}
 8001da2:	68fb      	ldr	r3, [r7, #12]
 8001da4:	4a4b      	ldr	r2, [pc, #300]	; (8001ed4 <EXTI+0x794>)
 8001da6:	4293      	cmp	r3, r2
 8001da8:	d106      	bne.n	8001db8 <EXTI+0x678>
 8001daa:	4b4b      	ldr	r3, [pc, #300]	; (8001ed8 <EXTI+0x798>)
 8001dac:	695b      	ldr	r3, [r3, #20]
 8001dae:	4a4a      	ldr	r2, [pc, #296]	; (8001ed8 <EXTI+0x798>)
 8001db0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001db4:	6153      	str	r3, [r2, #20]
			break;
 8001db6:	e058      	b.n	8001e6a <EXTI+0x72a>
			else if(PORTx==GPIOD){AFIO->AFIO_EXTICR4 |= (0b0011<<8);}
 8001db8:	68fb      	ldr	r3, [r7, #12]
 8001dba:	4a48      	ldr	r2, [pc, #288]	; (8001edc <EXTI+0x79c>)
 8001dbc:	4293      	cmp	r3, r2
 8001dbe:	d154      	bne.n	8001e6a <EXTI+0x72a>
 8001dc0:	4b45      	ldr	r3, [pc, #276]	; (8001ed8 <EXTI+0x798>)
 8001dc2:	695b      	ldr	r3, [r3, #20]
 8001dc4:	4a44      	ldr	r2, [pc, #272]	; (8001ed8 <EXTI+0x798>)
 8001dc6:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 8001dca:	6153      	str	r3, [r2, #20]
			break;
 8001dcc:	e04d      	b.n	8001e6a <EXTI+0x72a>
		case pin15:
			AFIO->AFIO_EXTICR4 &=~(0b1111<<12);
 8001dce:	4b42      	ldr	r3, [pc, #264]	; (8001ed8 <EXTI+0x798>)
 8001dd0:	695b      	ldr	r3, [r3, #20]
 8001dd2:	4a41      	ldr	r2, [pc, #260]	; (8001ed8 <EXTI+0x798>)
 8001dd4:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8001dd8:	6153      	str	r3, [r2, #20]
			if(PORTx==GPIOA)     {AFIO->AFIO_EXTICR4 &=~(0b1111<<12);}
 8001dda:	68fb      	ldr	r3, [r7, #12]
 8001ddc:	4a40      	ldr	r2, [pc, #256]	; (8001ee0 <EXTI+0x7a0>)
 8001dde:	4293      	cmp	r3, r2
 8001de0:	d106      	bne.n	8001df0 <EXTI+0x6b0>
 8001de2:	4b3d      	ldr	r3, [pc, #244]	; (8001ed8 <EXTI+0x798>)
 8001de4:	695b      	ldr	r3, [r3, #20]
 8001de6:	4a3c      	ldr	r2, [pc, #240]	; (8001ed8 <EXTI+0x798>)
 8001de8:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8001dec:	6153      	str	r3, [r2, #20]
			else if(PORTx==GPIOB){AFIO->AFIO_EXTICR4 |= (0b0001<<12);}
			else if(PORTx==GPIOC){AFIO->AFIO_EXTICR4 |= (0b0010<<12);}
			else if(PORTx==GPIOD){AFIO->AFIO_EXTICR4 |= (0b0011<<12);}

			break;
 8001dee:	e03e      	b.n	8001e6e <EXTI+0x72e>
			else if(PORTx==GPIOB){AFIO->AFIO_EXTICR4 |= (0b0001<<12);}
 8001df0:	68fb      	ldr	r3, [r7, #12]
 8001df2:	4a3c      	ldr	r2, [pc, #240]	; (8001ee4 <EXTI+0x7a4>)
 8001df4:	4293      	cmp	r3, r2
 8001df6:	d106      	bne.n	8001e06 <EXTI+0x6c6>
 8001df8:	4b37      	ldr	r3, [pc, #220]	; (8001ed8 <EXTI+0x798>)
 8001dfa:	695b      	ldr	r3, [r3, #20]
 8001dfc:	4a36      	ldr	r2, [pc, #216]	; (8001ed8 <EXTI+0x798>)
 8001dfe:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8001e02:	6153      	str	r3, [r2, #20]
			break;
 8001e04:	e033      	b.n	8001e6e <EXTI+0x72e>
			else if(PORTx==GPIOC){AFIO->AFIO_EXTICR4 |= (0b0010<<12);}
 8001e06:	68fb      	ldr	r3, [r7, #12]
 8001e08:	4a32      	ldr	r2, [pc, #200]	; (8001ed4 <EXTI+0x794>)
 8001e0a:	4293      	cmp	r3, r2
 8001e0c:	d106      	bne.n	8001e1c <EXTI+0x6dc>
 8001e0e:	4b32      	ldr	r3, [pc, #200]	; (8001ed8 <EXTI+0x798>)
 8001e10:	695b      	ldr	r3, [r3, #20]
 8001e12:	4a31      	ldr	r2, [pc, #196]	; (8001ed8 <EXTI+0x798>)
 8001e14:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001e18:	6153      	str	r3, [r2, #20]
			break;
 8001e1a:	e028      	b.n	8001e6e <EXTI+0x72e>
			else if(PORTx==GPIOD){AFIO->AFIO_EXTICR4 |= (0b0011<<12);}
 8001e1c:	68fb      	ldr	r3, [r7, #12]
 8001e1e:	4a2f      	ldr	r2, [pc, #188]	; (8001edc <EXTI+0x79c>)
 8001e20:	4293      	cmp	r3, r2
 8001e22:	d124      	bne.n	8001e6e <EXTI+0x72e>
 8001e24:	4b2c      	ldr	r3, [pc, #176]	; (8001ed8 <EXTI+0x798>)
 8001e26:	695b      	ldr	r3, [r3, #20]
 8001e28:	4a2b      	ldr	r2, [pc, #172]	; (8001ed8 <EXTI+0x798>)
 8001e2a:	f443 5340 	orr.w	r3, r3, #12288	; 0x3000
 8001e2e:	6153      	str	r3, [r2, #20]
			break;
 8001e30:	e01d      	b.n	8001e6e <EXTI+0x72e>
			break;
 8001e32:	bf00      	nop
 8001e34:	e01c      	b.n	8001e70 <EXTI+0x730>
			break;
 8001e36:	bf00      	nop
 8001e38:	e01a      	b.n	8001e70 <EXTI+0x730>
			break;
 8001e3a:	bf00      	nop
 8001e3c:	e018      	b.n	8001e70 <EXTI+0x730>
			break;
 8001e3e:	bf00      	nop
 8001e40:	e016      	b.n	8001e70 <EXTI+0x730>
			break;
 8001e42:	bf00      	nop
 8001e44:	e014      	b.n	8001e70 <EXTI+0x730>
			break;
 8001e46:	bf00      	nop
 8001e48:	e012      	b.n	8001e70 <EXTI+0x730>
			break;
 8001e4a:	bf00      	nop
 8001e4c:	e010      	b.n	8001e70 <EXTI+0x730>
			break;
 8001e4e:	bf00      	nop
 8001e50:	e00e      	b.n	8001e70 <EXTI+0x730>
			break;
 8001e52:	bf00      	nop
 8001e54:	e00c      	b.n	8001e70 <EXTI+0x730>
			break;
 8001e56:	bf00      	nop
 8001e58:	e00a      	b.n	8001e70 <EXTI+0x730>
			break;
 8001e5a:	bf00      	nop
 8001e5c:	e008      	b.n	8001e70 <EXTI+0x730>
			break;
 8001e5e:	bf00      	nop
 8001e60:	e006      	b.n	8001e70 <EXTI+0x730>
			break;
 8001e62:	bf00      	nop
 8001e64:	e004      	b.n	8001e70 <EXTI+0x730>
			break;
 8001e66:	bf00      	nop
 8001e68:	e002      	b.n	8001e70 <EXTI+0x730>
			break;
 8001e6a:	bf00      	nop
 8001e6c:	e000      	b.n	8001e70 <EXTI+0x730>
			break;
 8001e6e:	bf00      	nop
		}
	//================================================
	//3- Update Rising or Falling Register
	EXIT->EXTI_RTSR &=~(1<<pin);
 8001e70:	4b1d      	ldr	r3, [pc, #116]	; (8001ee8 <EXTI+0x7a8>)
 8001e72:	689b      	ldr	r3, [r3, #8]
 8001e74:	897a      	ldrh	r2, [r7, #10]
 8001e76:	2101      	movs	r1, #1
 8001e78:	fa01 f202 	lsl.w	r2, r1, r2
 8001e7c:	43d2      	mvns	r2, r2
 8001e7e:	4611      	mov	r1, r2
 8001e80:	4a19      	ldr	r2, [pc, #100]	; (8001ee8 <EXTI+0x7a8>)
 8001e82:	400b      	ands	r3, r1
 8001e84:	6093      	str	r3, [r2, #8]
	EXIT->EXTI_FTSR &=~(1<<pin);
 8001e86:	4b18      	ldr	r3, [pc, #96]	; (8001ee8 <EXTI+0x7a8>)
 8001e88:	68db      	ldr	r3, [r3, #12]
 8001e8a:	897a      	ldrh	r2, [r7, #10]
 8001e8c:	2101      	movs	r1, #1
 8001e8e:	fa01 f202 	lsl.w	r2, r1, r2
 8001e92:	43d2      	mvns	r2, r2
 8001e94:	4611      	mov	r1, r2
 8001e96:	4a14      	ldr	r2, [pc, #80]	; (8001ee8 <EXTI+0x7a8>)
 8001e98:	400b      	ands	r3, r1
 8001e9a:	60d3      	str	r3, [r2, #12]
	if(triggercase == EXTI_Trigger_Rising){
 8001e9c:	893b      	ldrh	r3, [r7, #8]
 8001e9e:	2b00      	cmp	r3, #0
 8001ea0:	d10a      	bne.n	8001eb8 <EXTI+0x778>
		EXIT->EXTI_RTSR |= (1<<pin);
 8001ea2:	4b11      	ldr	r3, [pc, #68]	; (8001ee8 <EXTI+0x7a8>)
 8001ea4:	689b      	ldr	r3, [r3, #8]
 8001ea6:	897a      	ldrh	r2, [r7, #10]
 8001ea8:	2101      	movs	r1, #1
 8001eaa:	fa01 f202 	lsl.w	r2, r1, r2
 8001eae:	4611      	mov	r1, r2
 8001eb0:	4a0d      	ldr	r2, [pc, #52]	; (8001ee8 <EXTI+0x7a8>)
 8001eb2:	430b      	orrs	r3, r1
 8001eb4:	6093      	str	r3, [r2, #8]
 8001eb6:	e02d      	b.n	8001f14 <EXTI+0x7d4>
	}
	else if(triggercase == EXTI_Trigger_Falling){
 8001eb8:	893b      	ldrh	r3, [r7, #8]
 8001eba:	2b01      	cmp	r3, #1
 8001ebc:	d116      	bne.n	8001eec <EXTI+0x7ac>
		EXIT->EXTI_FTSR |= (1<<pin);
 8001ebe:	4b0a      	ldr	r3, [pc, #40]	; (8001ee8 <EXTI+0x7a8>)
 8001ec0:	68db      	ldr	r3, [r3, #12]
 8001ec2:	897a      	ldrh	r2, [r7, #10]
 8001ec4:	2101      	movs	r1, #1
 8001ec6:	fa01 f202 	lsl.w	r2, r1, r2
 8001eca:	4611      	mov	r1, r2
 8001ecc:	4a06      	ldr	r2, [pc, #24]	; (8001ee8 <EXTI+0x7a8>)
 8001ece:	430b      	orrs	r3, r1
 8001ed0:	60d3      	str	r3, [r2, #12]
 8001ed2:	e01f      	b.n	8001f14 <EXTI+0x7d4>
 8001ed4:	40011000 	.word	0x40011000
 8001ed8:	40010000 	.word	0x40010000
 8001edc:	40011400 	.word	0x40011400
 8001ee0:	40010800 	.word	0x40010800
 8001ee4:	40010c00 	.word	0x40010c00
 8001ee8:	40010400 	.word	0x40010400
	}
	else{
		EXIT->EXTI_RTSR |= (1<<pin);
 8001eec:	4b15      	ldr	r3, [pc, #84]	; (8001f44 <EXTI+0x804>)
 8001eee:	689b      	ldr	r3, [r3, #8]
 8001ef0:	897a      	ldrh	r2, [r7, #10]
 8001ef2:	2101      	movs	r1, #1
 8001ef4:	fa01 f202 	lsl.w	r2, r1, r2
 8001ef8:	4611      	mov	r1, r2
 8001efa:	4a12      	ldr	r2, [pc, #72]	; (8001f44 <EXTI+0x804>)
 8001efc:	430b      	orrs	r3, r1
 8001efe:	6093      	str	r3, [r2, #8]
		EXIT->EXTI_FTSR |= (1<<pin);
 8001f00:	4b10      	ldr	r3, [pc, #64]	; (8001f44 <EXTI+0x804>)
 8001f02:	68db      	ldr	r3, [r3, #12]
 8001f04:	897a      	ldrh	r2, [r7, #10]
 8001f06:	2101      	movs	r1, #1
 8001f08:	fa01 f202 	lsl.w	r2, r1, r2
 8001f0c:	4611      	mov	r1, r2
 8001f0e:	4a0d      	ldr	r2, [pc, #52]	; (8001f44 <EXTI+0x804>)
 8001f10:	430b      	orrs	r3, r1
 8001f12:	60d3      	str	r3, [r2, #12]
	}
	//4- Update IRQ Handling callback
	GP_IRQ_Callback[pin] =function_addres;
 8001f14:	897b      	ldrh	r3, [r7, #10]
 8001f16:	490c      	ldr	r1, [pc, #48]	; (8001f48 <EXTI+0x808>)
 8001f18:	687a      	ldr	r2, [r7, #4]
 8001f1a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]


	EXIT->EXTI_IMR |=(1<<pin);
 8001f1e:	4b09      	ldr	r3, [pc, #36]	; (8001f44 <EXTI+0x804>)
 8001f20:	681b      	ldr	r3, [r3, #0]
 8001f22:	897a      	ldrh	r2, [r7, #10]
 8001f24:	2101      	movs	r1, #1
 8001f26:	fa01 f202 	lsl.w	r2, r1, r2
 8001f2a:	4611      	mov	r1, r2
 8001f2c:	4a05      	ldr	r2, [pc, #20]	; (8001f44 <EXTI+0x804>)
 8001f2e:	430b      	orrs	r3, r1
 8001f30:	6013      	str	r3, [r2, #0]

	Enable_NVIC(pin);
 8001f32:	897b      	ldrh	r3, [r7, #10]
 8001f34:	4618      	mov	r0, r3
 8001f36:	f7ff fb9d 	bl	8001674 <Enable_NVIC>
}
 8001f3a:	bf00      	nop
 8001f3c:	3710      	adds	r7, #16
 8001f3e:	46bd      	mov	sp, r7
 8001f40:	bd80      	pop	{r7, pc}
 8001f42:	bf00      	nop
 8001f44:	40010400 	.word	0x40010400
 8001f48:	200000e0 	.word	0x200000e0

08001f4c <EXTI0_IRQHandler>:



void EXTI0_IRQHandler(void){
 8001f4c:	b580      	push	{r7, lr}
 8001f4e:	af00      	add	r7, sp, #0
	// clear bit in pending register (EXTI_PR)
	EXIT->EXTI_PR |= (1<<0);
 8001f50:	4b05      	ldr	r3, [pc, #20]	; (8001f68 <EXTI0_IRQHandler+0x1c>)
 8001f52:	695b      	ldr	r3, [r3, #20]
 8001f54:	4a04      	ldr	r2, [pc, #16]	; (8001f68 <EXTI0_IRQHandler+0x1c>)
 8001f56:	f043 0301 	orr.w	r3, r3, #1
 8001f5a:	6153      	str	r3, [r2, #20]
	GP_IRQ_Callback[0]();
 8001f5c:	4b03      	ldr	r3, [pc, #12]	; (8001f6c <EXTI0_IRQHandler+0x20>)
 8001f5e:	681b      	ldr	r3, [r3, #0]
 8001f60:	4798      	blx	r3
}
 8001f62:	bf00      	nop
 8001f64:	bd80      	pop	{r7, pc}
 8001f66:	bf00      	nop
 8001f68:	40010400 	.word	0x40010400
 8001f6c:	200000e0 	.word	0x200000e0

08001f70 <EXTI1_IRQHandler>:

void EXTI1_IRQHandler(void){
 8001f70:	b580      	push	{r7, lr}
 8001f72:	af00      	add	r7, sp, #0
	EXIT->EXTI_PR |= (1<<1);
 8001f74:	4b05      	ldr	r3, [pc, #20]	; (8001f8c <EXTI1_IRQHandler+0x1c>)
 8001f76:	695b      	ldr	r3, [r3, #20]
 8001f78:	4a04      	ldr	r2, [pc, #16]	; (8001f8c <EXTI1_IRQHandler+0x1c>)
 8001f7a:	f043 0302 	orr.w	r3, r3, #2
 8001f7e:	6153      	str	r3, [r2, #20]
	GP_IRQ_Callback[1]();
 8001f80:	4b03      	ldr	r3, [pc, #12]	; (8001f90 <EXTI1_IRQHandler+0x20>)
 8001f82:	685b      	ldr	r3, [r3, #4]
 8001f84:	4798      	blx	r3

}
 8001f86:	bf00      	nop
 8001f88:	bd80      	pop	{r7, pc}
 8001f8a:	bf00      	nop
 8001f8c:	40010400 	.word	0x40010400
 8001f90:	200000e0 	.word	0x200000e0

08001f94 <EXTI2_IRQHandler>:

void EXTI2_IRQHandler(void){
 8001f94:	b580      	push	{r7, lr}
 8001f96:	af00      	add	r7, sp, #0
	EXIT->EXTI_PR |= (1<<2);
 8001f98:	4b05      	ldr	r3, [pc, #20]	; (8001fb0 <EXTI2_IRQHandler+0x1c>)
 8001f9a:	695b      	ldr	r3, [r3, #20]
 8001f9c:	4a04      	ldr	r2, [pc, #16]	; (8001fb0 <EXTI2_IRQHandler+0x1c>)
 8001f9e:	f043 0304 	orr.w	r3, r3, #4
 8001fa2:	6153      	str	r3, [r2, #20]
	GP_IRQ_Callback[2]();
 8001fa4:	4b03      	ldr	r3, [pc, #12]	; (8001fb4 <EXTI2_IRQHandler+0x20>)
 8001fa6:	689b      	ldr	r3, [r3, #8]
 8001fa8:	4798      	blx	r3
}
 8001faa:	bf00      	nop
 8001fac:	bd80      	pop	{r7, pc}
 8001fae:	bf00      	nop
 8001fb0:	40010400 	.word	0x40010400
 8001fb4:	200000e0 	.word	0x200000e0

08001fb8 <EXTI3_IRQHandler>:

void EXTI3_IRQHandler(void){
 8001fb8:	b580      	push	{r7, lr}
 8001fba:	af00      	add	r7, sp, #0
	EXIT->EXTI_PR |= (1<<3);
 8001fbc:	4b05      	ldr	r3, [pc, #20]	; (8001fd4 <EXTI3_IRQHandler+0x1c>)
 8001fbe:	695b      	ldr	r3, [r3, #20]
 8001fc0:	4a04      	ldr	r2, [pc, #16]	; (8001fd4 <EXTI3_IRQHandler+0x1c>)
 8001fc2:	f043 0308 	orr.w	r3, r3, #8
 8001fc6:	6153      	str	r3, [r2, #20]
	GP_IRQ_Callback[3]();
 8001fc8:	4b03      	ldr	r3, [pc, #12]	; (8001fd8 <EXTI3_IRQHandler+0x20>)
 8001fca:	68db      	ldr	r3, [r3, #12]
 8001fcc:	4798      	blx	r3
}
 8001fce:	bf00      	nop
 8001fd0:	bd80      	pop	{r7, pc}
 8001fd2:	bf00      	nop
 8001fd4:	40010400 	.word	0x40010400
 8001fd8:	200000e0 	.word	0x200000e0

08001fdc <EXTI4_IRQHandler>:

void EXTI4_IRQHandler(void){
 8001fdc:	b580      	push	{r7, lr}
 8001fde:	af00      	add	r7, sp, #0
	EXIT->EXTI_PR |= (1<<4);
 8001fe0:	4b05      	ldr	r3, [pc, #20]	; (8001ff8 <EXTI4_IRQHandler+0x1c>)
 8001fe2:	695b      	ldr	r3, [r3, #20]
 8001fe4:	4a04      	ldr	r2, [pc, #16]	; (8001ff8 <EXTI4_IRQHandler+0x1c>)
 8001fe6:	f043 0310 	orr.w	r3, r3, #16
 8001fea:	6153      	str	r3, [r2, #20]
	GP_IRQ_Callback[4]();
 8001fec:	4b03      	ldr	r3, [pc, #12]	; (8001ffc <EXTI4_IRQHandler+0x20>)
 8001fee:	691b      	ldr	r3, [r3, #16]
 8001ff0:	4798      	blx	r3
}
 8001ff2:	bf00      	nop
 8001ff4:	bd80      	pop	{r7, pc}
 8001ff6:	bf00      	nop
 8001ff8:	40010400 	.word	0x40010400
 8001ffc:	200000e0 	.word	0x200000e0

08002000 <EXTI9_5_IRQHandler>:

void EXTI9_5_IRQHandler(void){
 8002000:	b580      	push	{r7, lr}
 8002002:	af00      	add	r7, sp, #0
	if(EXIT->EXTI_PR & (1<<5)) {EXIT->EXTI_PR |= (1<<5); GP_IRQ_Callback[5]();  }
 8002004:	4b26      	ldr	r3, [pc, #152]	; (80020a0 <EXTI9_5_IRQHandler+0xa0>)
 8002006:	695b      	ldr	r3, [r3, #20]
 8002008:	f003 0320 	and.w	r3, r3, #32
 800200c:	2b00      	cmp	r3, #0
 800200e:	d008      	beq.n	8002022 <EXTI9_5_IRQHandler+0x22>
 8002010:	4b23      	ldr	r3, [pc, #140]	; (80020a0 <EXTI9_5_IRQHandler+0xa0>)
 8002012:	695b      	ldr	r3, [r3, #20]
 8002014:	4a22      	ldr	r2, [pc, #136]	; (80020a0 <EXTI9_5_IRQHandler+0xa0>)
 8002016:	f043 0320 	orr.w	r3, r3, #32
 800201a:	6153      	str	r3, [r2, #20]
 800201c:	4b21      	ldr	r3, [pc, #132]	; (80020a4 <EXTI9_5_IRQHandler+0xa4>)
 800201e:	695b      	ldr	r3, [r3, #20]
 8002020:	4798      	blx	r3
	if(EXIT->EXTI_PR & (1<<6)) {EXIT->EXTI_PR |= (1<<6); GP_IRQ_Callback[6]();  }
 8002022:	4b1f      	ldr	r3, [pc, #124]	; (80020a0 <EXTI9_5_IRQHandler+0xa0>)
 8002024:	695b      	ldr	r3, [r3, #20]
 8002026:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800202a:	2b00      	cmp	r3, #0
 800202c:	d008      	beq.n	8002040 <EXTI9_5_IRQHandler+0x40>
 800202e:	4b1c      	ldr	r3, [pc, #112]	; (80020a0 <EXTI9_5_IRQHandler+0xa0>)
 8002030:	695b      	ldr	r3, [r3, #20]
 8002032:	4a1b      	ldr	r2, [pc, #108]	; (80020a0 <EXTI9_5_IRQHandler+0xa0>)
 8002034:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002038:	6153      	str	r3, [r2, #20]
 800203a:	4b1a      	ldr	r3, [pc, #104]	; (80020a4 <EXTI9_5_IRQHandler+0xa4>)
 800203c:	699b      	ldr	r3, [r3, #24]
 800203e:	4798      	blx	r3
	if(EXIT->EXTI_PR & (1<<7)) {EXIT->EXTI_PR |= (1<<7); GP_IRQ_Callback[7]();  }
 8002040:	4b17      	ldr	r3, [pc, #92]	; (80020a0 <EXTI9_5_IRQHandler+0xa0>)
 8002042:	695b      	ldr	r3, [r3, #20]
 8002044:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002048:	2b00      	cmp	r3, #0
 800204a:	d008      	beq.n	800205e <EXTI9_5_IRQHandler+0x5e>
 800204c:	4b14      	ldr	r3, [pc, #80]	; (80020a0 <EXTI9_5_IRQHandler+0xa0>)
 800204e:	695b      	ldr	r3, [r3, #20]
 8002050:	4a13      	ldr	r2, [pc, #76]	; (80020a0 <EXTI9_5_IRQHandler+0xa0>)
 8002052:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002056:	6153      	str	r3, [r2, #20]
 8002058:	4b12      	ldr	r3, [pc, #72]	; (80020a4 <EXTI9_5_IRQHandler+0xa4>)
 800205a:	69db      	ldr	r3, [r3, #28]
 800205c:	4798      	blx	r3
	if(EXIT->EXTI_PR & (1<<8)) {EXIT->EXTI_PR |= (1<<8); GP_IRQ_Callback[8]();  }
 800205e:	4b10      	ldr	r3, [pc, #64]	; (80020a0 <EXTI9_5_IRQHandler+0xa0>)
 8002060:	695b      	ldr	r3, [r3, #20]
 8002062:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002066:	2b00      	cmp	r3, #0
 8002068:	d008      	beq.n	800207c <EXTI9_5_IRQHandler+0x7c>
 800206a:	4b0d      	ldr	r3, [pc, #52]	; (80020a0 <EXTI9_5_IRQHandler+0xa0>)
 800206c:	695b      	ldr	r3, [r3, #20]
 800206e:	4a0c      	ldr	r2, [pc, #48]	; (80020a0 <EXTI9_5_IRQHandler+0xa0>)
 8002070:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002074:	6153      	str	r3, [r2, #20]
 8002076:	4b0b      	ldr	r3, [pc, #44]	; (80020a4 <EXTI9_5_IRQHandler+0xa4>)
 8002078:	6a1b      	ldr	r3, [r3, #32]
 800207a:	4798      	blx	r3
	if(EXIT->EXTI_PR & (1<<9)) {EXIT->EXTI_PR |= (1<<9); GP_IRQ_Callback[9]();  }
 800207c:	4b08      	ldr	r3, [pc, #32]	; (80020a0 <EXTI9_5_IRQHandler+0xa0>)
 800207e:	695b      	ldr	r3, [r3, #20]
 8002080:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8002084:	2b00      	cmp	r3, #0
 8002086:	d008      	beq.n	800209a <EXTI9_5_IRQHandler+0x9a>
 8002088:	4b05      	ldr	r3, [pc, #20]	; (80020a0 <EXTI9_5_IRQHandler+0xa0>)
 800208a:	695b      	ldr	r3, [r3, #20]
 800208c:	4a04      	ldr	r2, [pc, #16]	; (80020a0 <EXTI9_5_IRQHandler+0xa0>)
 800208e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002092:	6153      	str	r3, [r2, #20]
 8002094:	4b03      	ldr	r3, [pc, #12]	; (80020a4 <EXTI9_5_IRQHandler+0xa4>)
 8002096:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002098:	4798      	blx	r3
}
 800209a:	bf00      	nop
 800209c:	bd80      	pop	{r7, pc}
 800209e:	bf00      	nop
 80020a0:	40010400 	.word	0x40010400
 80020a4:	200000e0 	.word	0x200000e0

080020a8 <EXTI15_10_IRQHandler>:

void EXTI15_10_IRQHandler(void){
 80020a8:	b580      	push	{r7, lr}
 80020aa:	af00      	add	r7, sp, #0
	if(EXIT->EXTI_PR & (1<<10)) {EXIT->EXTI_PR |= (1<<10); GP_IRQ_Callback[10]();  }
 80020ac:	4b2d      	ldr	r3, [pc, #180]	; (8002164 <EXTI15_10_IRQHandler+0xbc>)
 80020ae:	695b      	ldr	r3, [r3, #20]
 80020b0:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80020b4:	2b00      	cmp	r3, #0
 80020b6:	d008      	beq.n	80020ca <EXTI15_10_IRQHandler+0x22>
 80020b8:	4b2a      	ldr	r3, [pc, #168]	; (8002164 <EXTI15_10_IRQHandler+0xbc>)
 80020ba:	695b      	ldr	r3, [r3, #20]
 80020bc:	4a29      	ldr	r2, [pc, #164]	; (8002164 <EXTI15_10_IRQHandler+0xbc>)
 80020be:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80020c2:	6153      	str	r3, [r2, #20]
 80020c4:	4b28      	ldr	r3, [pc, #160]	; (8002168 <EXTI15_10_IRQHandler+0xc0>)
 80020c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80020c8:	4798      	blx	r3
	if(EXIT->EXTI_PR & (1<<11)) {EXIT->EXTI_PR |= (1<<11); GP_IRQ_Callback[11]();  }
 80020ca:	4b26      	ldr	r3, [pc, #152]	; (8002164 <EXTI15_10_IRQHandler+0xbc>)
 80020cc:	695b      	ldr	r3, [r3, #20]
 80020ce:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80020d2:	2b00      	cmp	r3, #0
 80020d4:	d008      	beq.n	80020e8 <EXTI15_10_IRQHandler+0x40>
 80020d6:	4b23      	ldr	r3, [pc, #140]	; (8002164 <EXTI15_10_IRQHandler+0xbc>)
 80020d8:	695b      	ldr	r3, [r3, #20]
 80020da:	4a22      	ldr	r2, [pc, #136]	; (8002164 <EXTI15_10_IRQHandler+0xbc>)
 80020dc:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80020e0:	6153      	str	r3, [r2, #20]
 80020e2:	4b21      	ldr	r3, [pc, #132]	; (8002168 <EXTI15_10_IRQHandler+0xc0>)
 80020e4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80020e6:	4798      	blx	r3
	if(EXIT->EXTI_PR & (1<<12)) {EXIT->EXTI_PR |= (1<<12); GP_IRQ_Callback[12]();  }
 80020e8:	4b1e      	ldr	r3, [pc, #120]	; (8002164 <EXTI15_10_IRQHandler+0xbc>)
 80020ea:	695b      	ldr	r3, [r3, #20]
 80020ec:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80020f0:	2b00      	cmp	r3, #0
 80020f2:	d008      	beq.n	8002106 <EXTI15_10_IRQHandler+0x5e>
 80020f4:	4b1b      	ldr	r3, [pc, #108]	; (8002164 <EXTI15_10_IRQHandler+0xbc>)
 80020f6:	695b      	ldr	r3, [r3, #20]
 80020f8:	4a1a      	ldr	r2, [pc, #104]	; (8002164 <EXTI15_10_IRQHandler+0xbc>)
 80020fa:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80020fe:	6153      	str	r3, [r2, #20]
 8002100:	4b19      	ldr	r3, [pc, #100]	; (8002168 <EXTI15_10_IRQHandler+0xc0>)
 8002102:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002104:	4798      	blx	r3
	if(EXIT->EXTI_PR & (1<<13)) {EXIT->EXTI_PR |= (1<<13); GP_IRQ_Callback[13]();  }
 8002106:	4b17      	ldr	r3, [pc, #92]	; (8002164 <EXTI15_10_IRQHandler+0xbc>)
 8002108:	695b      	ldr	r3, [r3, #20]
 800210a:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 800210e:	2b00      	cmp	r3, #0
 8002110:	d008      	beq.n	8002124 <EXTI15_10_IRQHandler+0x7c>
 8002112:	4b14      	ldr	r3, [pc, #80]	; (8002164 <EXTI15_10_IRQHandler+0xbc>)
 8002114:	695b      	ldr	r3, [r3, #20]
 8002116:	4a13      	ldr	r2, [pc, #76]	; (8002164 <EXTI15_10_IRQHandler+0xbc>)
 8002118:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800211c:	6153      	str	r3, [r2, #20]
 800211e:	4b12      	ldr	r3, [pc, #72]	; (8002168 <EXTI15_10_IRQHandler+0xc0>)
 8002120:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002122:	4798      	blx	r3
	if(EXIT->EXTI_PR & (1<<14)) {EXIT->EXTI_PR |= (1<<14); GP_IRQ_Callback[14]();  }
 8002124:	4b0f      	ldr	r3, [pc, #60]	; (8002164 <EXTI15_10_IRQHandler+0xbc>)
 8002126:	695b      	ldr	r3, [r3, #20]
 8002128:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800212c:	2b00      	cmp	r3, #0
 800212e:	d008      	beq.n	8002142 <EXTI15_10_IRQHandler+0x9a>
 8002130:	4b0c      	ldr	r3, [pc, #48]	; (8002164 <EXTI15_10_IRQHandler+0xbc>)
 8002132:	695b      	ldr	r3, [r3, #20]
 8002134:	4a0b      	ldr	r2, [pc, #44]	; (8002164 <EXTI15_10_IRQHandler+0xbc>)
 8002136:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800213a:	6153      	str	r3, [r2, #20]
 800213c:	4b0a      	ldr	r3, [pc, #40]	; (8002168 <EXTI15_10_IRQHandler+0xc0>)
 800213e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002140:	4798      	blx	r3
	if(EXIT->EXTI_PR & (1<<15)) {EXIT->EXTI_PR |= (1<<15); GP_IRQ_Callback[15]();  }
 8002142:	4b08      	ldr	r3, [pc, #32]	; (8002164 <EXTI15_10_IRQHandler+0xbc>)
 8002144:	695b      	ldr	r3, [r3, #20]
 8002146:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800214a:	2b00      	cmp	r3, #0
 800214c:	d008      	beq.n	8002160 <EXTI15_10_IRQHandler+0xb8>
 800214e:	4b05      	ldr	r3, [pc, #20]	; (8002164 <EXTI15_10_IRQHandler+0xbc>)
 8002150:	695b      	ldr	r3, [r3, #20]
 8002152:	4a04      	ldr	r2, [pc, #16]	; (8002164 <EXTI15_10_IRQHandler+0xbc>)
 8002154:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8002158:	6153      	str	r3, [r2, #20]
 800215a:	4b03      	ldr	r3, [pc, #12]	; (8002168 <EXTI15_10_IRQHandler+0xc0>)
 800215c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800215e:	4798      	blx	r3

}
 8002160:	bf00      	nop
 8002162:	bd80      	pop	{r7, pc}
 8002164:	40010400 	.word	0x40010400
 8002168:	200000e0 	.word	0x200000e0

0800216c <timer_INIT_CH2>:
int user_freq_control=1;
int user_pre=1;
long user_top=1;
//===========================================================================
//###########################################################################
void timer_INIT_CH2(uint32_t pre ,uint32_t duty_cycle,uint32_t peak ){
 800216c:	b480      	push	{r7}
 800216e:	b085      	sub	sp, #20
 8002170:	af00      	add	r7, sp, #0
 8002172:	60f8      	str	r0, [r7, #12]
 8002174:	60b9      	str	r1, [r7, #8]
 8002176:	607a      	str	r2, [r7, #4]
	//	(LOCK bits in TIMx_BDTR register) and CC1S=’00’ (the channel is configured in
	//	output).
	//	2: The PWM mode can be used without validating the preload register only in one
	//	pulse mode (OPM bit set in TIMx_CR1 register). Else the behavior is not guaranteed.

	pwm->TIMx_CCMR1 |=(1<<11);
 8002178:	4b24      	ldr	r3, [pc, #144]	; (800220c <timer_INIT_CH2+0xa0>)
 800217a:	681b      	ldr	r3, [r3, #0]
 800217c:	699a      	ldr	r2, [r3, #24]
 800217e:	4b23      	ldr	r3, [pc, #140]	; (800220c <timer_INIT_CH2+0xa0>)
 8002180:	681b      	ldr	r3, [r3, #0]
 8002182:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8002186:	619a      	str	r2, [r3, #24]

	pwm->TIMx_CCER |=(1<<4);
 8002188:	4b20      	ldr	r3, [pc, #128]	; (800220c <timer_INIT_CH2+0xa0>)
 800218a:	681b      	ldr	r3, [r3, #0]
 800218c:	6a1a      	ldr	r2, [r3, #32]
 800218e:	4b1f      	ldr	r3, [pc, #124]	; (800220c <timer_INIT_CH2+0xa0>)
 8002190:	681b      	ldr	r3, [r3, #0]
 8002192:	f042 0210 	orr.w	r2, r2, #16
 8002196:	621a      	str	r2, [r3, #32]
	//	ARPE: Auto-reload preload enable
	//	0: TIMx_ARR register is not buffered
	//	1: TIMx_ARR register is buffered

	pwm->TIMx_CR1 |=(1<<7);
 8002198:	4b1c      	ldr	r3, [pc, #112]	; (800220c <timer_INIT_CH2+0xa0>)
 800219a:	681b      	ldr	r3, [r3, #0]
 800219c:	681a      	ldr	r2, [r3, #0]
 800219e:	4b1b      	ldr	r3, [pc, #108]	; (800220c <timer_INIT_CH2+0xa0>)
 80021a0:	681b      	ldr	r3, [r3, #0]
 80021a2:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80021a6:	601a      	str	r2, [r3, #0]


	//	110: PWM mode 1 - In upcounting, channel 1 is active as long as TIMx_CNT<TIMx_CCR1
	pwm->TIMx_CCMR1 |=(0b110<<12);
 80021a8:	4b18      	ldr	r3, [pc, #96]	; (800220c <timer_INIT_CH2+0xa0>)
 80021aa:	681b      	ldr	r3, [r3, #0]
 80021ac:	699a      	ldr	r2, [r3, #24]
 80021ae:	4b17      	ldr	r3, [pc, #92]	; (800220c <timer_INIT_CH2+0xa0>)
 80021b0:	681b      	ldr	r3, [r3, #0]
 80021b2:	f442 42c0 	orr.w	r2, r2, #24576	; 0x6000
 80021b6:	619a      	str	r2, [r3, #24]

	pwm->TIMx_ARR=peak;//frec peak value
 80021b8:	4b14      	ldr	r3, [pc, #80]	; (800220c <timer_INIT_CH2+0xa0>)
 80021ba:	681b      	ldr	r3, [r3, #0]
 80021bc:	687a      	ldr	r2, [r7, #4]
 80021be:	62da      	str	r2, [r3, #44]	; 0x2c
	pwm->TIMx_CCR2=(duty_cycle);//duty cycle
 80021c0:	4b12      	ldr	r3, [pc, #72]	; (800220c <timer_INIT_CH2+0xa0>)
 80021c2:	681b      	ldr	r3, [r3, #0]
 80021c4:	68ba      	ldr	r2, [r7, #8]
 80021c6:	639a      	str	r2, [r3, #56]	; 0x38
	pwm->TIMx_PSC=pre;//prescaller
 80021c8:	4b10      	ldr	r3, [pc, #64]	; (800220c <timer_INIT_CH2+0xa0>)
 80021ca:	681b      	ldr	r3, [r3, #0]
 80021cc:	68fa      	ldr	r2, [r7, #12]
 80021ce:	629a      	str	r2, [r3, #40]	; 0x28
	//	which are configured in output.
	//	0: OC and OCN outputs are disabled or forced to idle state.
	//	1: OC and OCN outputs are enabled if their respective enable bits are set (CCxE, CCxNE in
	//	TIMx_CCER register).
	//	See OC/OCN enable description for more details
	pwm->TIMx_BDTR |=(1<<15);
 80021d0:	4b0e      	ldr	r3, [pc, #56]	; (800220c <timer_INIT_CH2+0xa0>)
 80021d2:	681b      	ldr	r3, [r3, #0]
 80021d4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80021d6:	4b0d      	ldr	r3, [pc, #52]	; (800220c <timer_INIT_CH2+0xa0>)
 80021d8:	681b      	ldr	r3, [r3, #0]
 80021da:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80021de:	645a      	str	r2, [r3, #68]	; 0x44
	//	0: CC1 interrupt disabled
	//	1: CC1 interrupt enabled
	//	Bit 0 UIE: Update interrupt enable
	//	0: Update interrupt disabled
	//	1: Update interrupt enabled
	pwm->TIMx_DIER |=(0b101<<0);
 80021e0:	4b0a      	ldr	r3, [pc, #40]	; (800220c <timer_INIT_CH2+0xa0>)
 80021e2:	681b      	ldr	r3, [r3, #0]
 80021e4:	68da      	ldr	r2, [r3, #12]
 80021e6:	4b09      	ldr	r3, [pc, #36]	; (800220c <timer_INIT_CH2+0xa0>)
 80021e8:	681b      	ldr	r3, [r3, #0]
 80021ea:	f042 0205 	orr.w	r2, r2, #5
 80021ee:	60da      	str	r2, [r3, #12]
	//	0: No action
	//	1: Reinitialize the counter and generates an update of the registers. Note that the prescaler
	//	counter is cleared too (anyway the prescaler ratio is not affected). The counter is cleared if
	//	the center-aligned mode is selected or if DIR=0 (upcounting), else it takes the auto-reload
	//	value (TIMx_ARR) if DIR=1 (downcounting).
	pwm->TIMx_EGR |=(1<<0);
 80021f0:	4b06      	ldr	r3, [pc, #24]	; (800220c <timer_INIT_CH2+0xa0>)
 80021f2:	681b      	ldr	r3, [r3, #0]
 80021f4:	695a      	ldr	r2, [r3, #20]
 80021f6:	4b05      	ldr	r3, [pc, #20]	; (800220c <timer_INIT_CH2+0xa0>)
 80021f8:	681b      	ldr	r3, [r3, #0]
 80021fa:	f042 0201 	orr.w	r2, r2, #1
 80021fe:	615a      	str	r2, [r3, #20]

	//pwm->TIMx_CR1 |=(1<<0);//enable the timer


}
 8002200:	bf00      	nop
 8002202:	3714      	adds	r7, #20
 8002204:	46bd      	mov	sp, r7
 8002206:	bc80      	pop	{r7}
 8002208:	4770      	bx	lr
 800220a:	bf00      	nop
 800220c:	20000000 	.word	0x20000000

08002210 <timer_INIT_CH1>:
//===========================================================================
//###########################################################################
void timer_INIT_CH1(uint32_t pre ,uint32_t duty_cycle,uint32_t peak ){
 8002210:	b480      	push	{r7}
 8002212:	b085      	sub	sp, #20
 8002214:	af00      	add	r7, sp, #0
 8002216:	60f8      	str	r0, [r7, #12]
 8002218:	60b9      	str	r1, [r7, #8]
 800221a:	607a      	str	r2, [r7, #4]
	//	Note: 1: These bits can not be modified as long as LOCK level 3 has been programmed
	//	(LOCK bits in TIMx_BDTR register) and CC1S=’00’ (the channel is configured in
	//	output).
	//	2: The PWM mode can be used without validating the preload register only in one
	//	pulse mode (OPM bit set in TIMx_CR1 register). Else the behavior is not guaranteed.
	pwm->TIMx_CCMR1 |=(1<<3);
 800221c:	4b24      	ldr	r3, [pc, #144]	; (80022b0 <timer_INIT_CH1+0xa0>)
 800221e:	681b      	ldr	r3, [r3, #0]
 8002220:	699a      	ldr	r2, [r3, #24]
 8002222:	4b23      	ldr	r3, [pc, #140]	; (80022b0 <timer_INIT_CH1+0xa0>)
 8002224:	681b      	ldr	r3, [r3, #0]
 8002226:	f042 0208 	orr.w	r2, r2, #8
 800222a:	619a      	str	r2, [r3, #24]
	//	CC1 channel configured as input:
	//	This bit determines if a capture of the counter value can actually be done into the input
	//	capture/compare register 1 (TIMx_CCR1) or not.
	//	0: Capture disabled.
	//	1: Capture enabled.
	pwm->TIMx_CCER |=(1<<0);
 800222c:	4b20      	ldr	r3, [pc, #128]	; (80022b0 <timer_INIT_CH1+0xa0>)
 800222e:	681b      	ldr	r3, [r3, #0]
 8002230:	6a1a      	ldr	r2, [r3, #32]
 8002232:	4b1f      	ldr	r3, [pc, #124]	; (80022b0 <timer_INIT_CH1+0xa0>)
 8002234:	681b      	ldr	r3, [r3, #0]
 8002236:	f042 0201 	orr.w	r2, r2, #1
 800223a:	621a      	str	r2, [r3, #32]


	//	ARPE: Auto-reload preload enable
	//	0: TIMx_ARR register is not buffered
	//	1: TIMx_ARR register is buffered
	pwm->TIMx_CR1 |=(1<<7);
 800223c:	4b1c      	ldr	r3, [pc, #112]	; (80022b0 <timer_INIT_CH1+0xa0>)
 800223e:	681b      	ldr	r3, [r3, #0]
 8002240:	681a      	ldr	r2, [r3, #0]
 8002242:	4b1b      	ldr	r3, [pc, #108]	; (80022b0 <timer_INIT_CH1+0xa0>)
 8002244:	681b      	ldr	r3, [r3, #0]
 8002246:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800224a:	601a      	str	r2, [r3, #0]


	//	110: PWM mode 1 - In upcounting, channel 1 is active as long as TIMx_CNT<TIMx_CCR1
	pwm->TIMx_CCMR1 |=(0b110<<4);
 800224c:	4b18      	ldr	r3, [pc, #96]	; (80022b0 <timer_INIT_CH1+0xa0>)
 800224e:	681b      	ldr	r3, [r3, #0]
 8002250:	699a      	ldr	r2, [r3, #24]
 8002252:	4b17      	ldr	r3, [pc, #92]	; (80022b0 <timer_INIT_CH1+0xa0>)
 8002254:	681b      	ldr	r3, [r3, #0]
 8002256:	f042 0260 	orr.w	r2, r2, #96	; 0x60
 800225a:	619a      	str	r2, [r3, #24]

	pwm->TIMx_ARR=peak;//frec peak value
 800225c:	4b14      	ldr	r3, [pc, #80]	; (80022b0 <timer_INIT_CH1+0xa0>)
 800225e:	681b      	ldr	r3, [r3, #0]
 8002260:	687a      	ldr	r2, [r7, #4]
 8002262:	62da      	str	r2, [r3, #44]	; 0x2c
	pwm->TIMx_CCR1=(duty_cycle);//duty cycle
 8002264:	4b12      	ldr	r3, [pc, #72]	; (80022b0 <timer_INIT_CH1+0xa0>)
 8002266:	681b      	ldr	r3, [r3, #0]
 8002268:	68ba      	ldr	r2, [r7, #8]
 800226a:	635a      	str	r2, [r3, #52]	; 0x34
	pwm->TIMx_PSC=pre;//prescaller
 800226c:	4b10      	ldr	r3, [pc, #64]	; (80022b0 <timer_INIT_CH1+0xa0>)
 800226e:	681b      	ldr	r3, [r3, #0]
 8002270:	68fa      	ldr	r2, [r7, #12]
 8002272:	629a      	str	r2, [r3, #40]	; 0x28
	//	which are configured in output.
	//	0: OC and OCN outputs are disabled or forced to idle state.
	//	1: OC and OCN outputs are enabled if their respective enable bits are set (CCxE, CCxNE in
	//	TIMx_CCER register).
	//	See OC/OCN enable description for more details
	pwm->TIMx_BDTR |=(1<<15);
 8002274:	4b0e      	ldr	r3, [pc, #56]	; (80022b0 <timer_INIT_CH1+0xa0>)
 8002276:	681b      	ldr	r3, [r3, #0]
 8002278:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800227a:	4b0d      	ldr	r3, [pc, #52]	; (80022b0 <timer_INIT_CH1+0xa0>)
 800227c:	681b      	ldr	r3, [r3, #0]
 800227e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8002282:	645a      	str	r2, [r3, #68]	; 0x44
	//	0: CC1 interrupt disabled
	//	1: CC1 interrupt enabled
	//	Bit 0 UIE: Update interrupt enable
	//	0: Update interrupt disabled
	//	1: Update interrupt enabled
	pwm->TIMx_DIER |=(0b111<<0);
 8002284:	4b0a      	ldr	r3, [pc, #40]	; (80022b0 <timer_INIT_CH1+0xa0>)
 8002286:	681b      	ldr	r3, [r3, #0]
 8002288:	68da      	ldr	r2, [r3, #12]
 800228a:	4b09      	ldr	r3, [pc, #36]	; (80022b0 <timer_INIT_CH1+0xa0>)
 800228c:	681b      	ldr	r3, [r3, #0]
 800228e:	f042 0207 	orr.w	r2, r2, #7
 8002292:	60da      	str	r2, [r3, #12]
	//	0: No action
	//	1: Reinitialize the counter and generates an update of the registers. Note that the prescaler
	//	counter is cleared too (anyway the prescaler ratio is not affected). The counter is cleared if
	//	the center-aligned mode is selected or if DIR=0 (upcounting), else it takes the auto-reload
	//	value (TIMx_ARR) if DIR=1 (downcounting).
	pwm->TIMx_EGR |=(1<<0);
 8002294:	4b06      	ldr	r3, [pc, #24]	; (80022b0 <timer_INIT_CH1+0xa0>)
 8002296:	681b      	ldr	r3, [r3, #0]
 8002298:	695a      	ldr	r2, [r3, #20]
 800229a:	4b05      	ldr	r3, [pc, #20]	; (80022b0 <timer_INIT_CH1+0xa0>)
 800229c:	681b      	ldr	r3, [r3, #0]
 800229e:	f042 0201 	orr.w	r2, r2, #1
 80022a2:	615a      	str	r2, [r3, #20]

	//pwm->TIMx_CR1 |=(1<<0);//enable the timer


}
 80022a4:	bf00      	nop
 80022a6:	3714      	adds	r7, #20
 80022a8:	46bd      	mov	sp, r7
 80022aa:	bc80      	pop	{r7}
 80022ac:	4770      	bx	lr
 80022ae:	bf00      	nop
 80022b0:	20000000 	.word	0x20000000

080022b4 <timer_INIT_CH3>:

//===========================================================================
//###########################################################################
void timer_INIT_CH3(uint32_t pre ,uint32_t duty_cycle,uint32_t peak ){
 80022b4:	b480      	push	{r7}
 80022b6:	b085      	sub	sp, #20
 80022b8:	af00      	add	r7, sp, #0
 80022ba:	60f8      	str	r0, [r7, #12]
 80022bc:	60b9      	str	r1, [r7, #8]
 80022be:	607a      	str	r2, [r7, #4]
	//	Note: 1: These bits can not be modified as long as LOCK level 3 has been programmed
	//	(LOCK bits in TIMx_BDTR register) and CC1S=’00’ (the channel is configured in
	//	output).
	//	2: The PWM mode can be used without validating the preload register only in one
	//	pulse mode (OPM bit set in TIMx_CR1 register). Else the behavior is not guaranteed.
	pwm->TIMx_CCMR2 |=(1<<3);
 80022c0:	4b28      	ldr	r3, [pc, #160]	; (8002364 <timer_INIT_CH3+0xb0>)
 80022c2:	681b      	ldr	r3, [r3, #0]
 80022c4:	69da      	ldr	r2, [r3, #28]
 80022c6:	4b27      	ldr	r3, [pc, #156]	; (8002364 <timer_INIT_CH3+0xb0>)
 80022c8:	681b      	ldr	r3, [r3, #0]
 80022ca:	f042 0208 	orr.w	r2, r2, #8
 80022ce:	61da      	str	r2, [r3, #28]
	//	CC1 channel configured as input:
	//	This bit determines if a capture of the counter value can actually be done into the input
	//	capture/compare register 1 (TIMx_CCR1) or not.
	//	0: Capture disabled.
	//	1: Capture enabled.
	pwm->TIMx_CCER |=(1<<8);
 80022d0:	4b24      	ldr	r3, [pc, #144]	; (8002364 <timer_INIT_CH3+0xb0>)
 80022d2:	681b      	ldr	r3, [r3, #0]
 80022d4:	6a1a      	ldr	r2, [r3, #32]
 80022d6:	4b23      	ldr	r3, [pc, #140]	; (8002364 <timer_INIT_CH3+0xb0>)
 80022d8:	681b      	ldr	r3, [r3, #0]
 80022da:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80022de:	621a      	str	r2, [r3, #32]


	//	ARPE: Auto-reload preload enable
	//	0: TIMx_ARR register is not buffered
	//	1: TIMx_ARR register is buffered
	pwm->TIMx_CR1 |=(1<<7);
 80022e0:	4b20      	ldr	r3, [pc, #128]	; (8002364 <timer_INIT_CH3+0xb0>)
 80022e2:	681b      	ldr	r3, [r3, #0]
 80022e4:	681a      	ldr	r2, [r3, #0]
 80022e6:	4b1f      	ldr	r3, [pc, #124]	; (8002364 <timer_INIT_CH3+0xb0>)
 80022e8:	681b      	ldr	r3, [r3, #0]
 80022ea:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80022ee:	601a      	str	r2, [r3, #0]


	//	110: PWM mode 1 - In upcounting, channel 1 is active as long as TIMx_CNT<TIMx_CCR1
	pwm->TIMx_CCMR2 |=(0b110<<4);
 80022f0:	4b1c      	ldr	r3, [pc, #112]	; (8002364 <timer_INIT_CH3+0xb0>)
 80022f2:	681b      	ldr	r3, [r3, #0]
 80022f4:	69da      	ldr	r2, [r3, #28]
 80022f6:	4b1b      	ldr	r3, [pc, #108]	; (8002364 <timer_INIT_CH3+0xb0>)
 80022f8:	681b      	ldr	r3, [r3, #0]
 80022fa:	f042 0260 	orr.w	r2, r2, #96	; 0x60
 80022fe:	61da      	str	r2, [r3, #28]

	pwm->TIMx_ARR=peak;//frec peak value
 8002300:	4b18      	ldr	r3, [pc, #96]	; (8002364 <timer_INIT_CH3+0xb0>)
 8002302:	681b      	ldr	r3, [r3, #0]
 8002304:	687a      	ldr	r2, [r7, #4]
 8002306:	62da      	str	r2, [r3, #44]	; 0x2c
	pwm->TIMx_CCR3=(duty_cycle);//duty cycle
 8002308:	4b16      	ldr	r3, [pc, #88]	; (8002364 <timer_INIT_CH3+0xb0>)
 800230a:	681b      	ldr	r3, [r3, #0]
 800230c:	68ba      	ldr	r2, [r7, #8]
 800230e:	63da      	str	r2, [r3, #60]	; 0x3c
	pwm->TIMx_PSC=pre;//prescaller
 8002310:	4b14      	ldr	r3, [pc, #80]	; (8002364 <timer_INIT_CH3+0xb0>)
 8002312:	681b      	ldr	r3, [r3, #0]
 8002314:	68fa      	ldr	r2, [r7, #12]
 8002316:	629a      	str	r2, [r3, #40]	; 0x28
	//	which are configured in output.
	//	0: OC and OCN outputs are disabled or forced to idle state.
	//	1: OC and OCN outputs are enabled if their respective enable bits are set (CCxE, CCxNE in
	//	TIMx_CCER register).
	//	See OC/OCN enable description for more details
	pwm->TIMx_BDTR |=(1<<15);
 8002318:	4b12      	ldr	r3, [pc, #72]	; (8002364 <timer_INIT_CH3+0xb0>)
 800231a:	681b      	ldr	r3, [r3, #0]
 800231c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800231e:	4b11      	ldr	r3, [pc, #68]	; (8002364 <timer_INIT_CH3+0xb0>)
 8002320:	681b      	ldr	r3, [r3, #0]
 8002322:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8002326:	645a      	str	r2, [r3, #68]	; 0x44
	//	0: CC1 interrupt disabled
	//	1: CC1 interrupt enabled
	//	Bit 0 UIE: Update interrupt enable
	//	0: Update interrupt disabled
	//	1: Update interrupt enabled
	pwm->TIMx_DIER |=(0b1111<<0);
 8002328:	4b0e      	ldr	r3, [pc, #56]	; (8002364 <timer_INIT_CH3+0xb0>)
 800232a:	681b      	ldr	r3, [r3, #0]
 800232c:	68da      	ldr	r2, [r3, #12]
 800232e:	4b0d      	ldr	r3, [pc, #52]	; (8002364 <timer_INIT_CH3+0xb0>)
 8002330:	681b      	ldr	r3, [r3, #0]
 8002332:	f042 020f 	orr.w	r2, r2, #15
 8002336:	60da      	str	r2, [r3, #12]
	//	0: No action
	//	1: Reinitialize the counter and generates an update of the registers. Note that the prescaler
	//	counter is cleared too (anyway the prescaler ratio is not affected). The counter is cleared if
	//	the center-aligned mode is selected or if DIR=0 (upcounting), else it takes the auto-reload
	//	value (TIMx_ARR) if DIR=1 (downcounting).
	pwm->TIMx_EGR |=(1<<0);
 8002338:	4b0a      	ldr	r3, [pc, #40]	; (8002364 <timer_INIT_CH3+0xb0>)
 800233a:	681b      	ldr	r3, [r3, #0]
 800233c:	695a      	ldr	r2, [r3, #20]
 800233e:	4b09      	ldr	r3, [pc, #36]	; (8002364 <timer_INIT_CH3+0xb0>)
 8002340:	681b      	ldr	r3, [r3, #0]
 8002342:	f042 0201 	orr.w	r2, r2, #1
 8002346:	615a      	str	r2, [r3, #20]

	pwm->TIMx_CR1 |=(1<<0);//enable the timer
 8002348:	4b06      	ldr	r3, [pc, #24]	; (8002364 <timer_INIT_CH3+0xb0>)
 800234a:	681b      	ldr	r3, [r3, #0]
 800234c:	681a      	ldr	r2, [r3, #0]
 800234e:	4b05      	ldr	r3, [pc, #20]	; (8002364 <timer_INIT_CH3+0xb0>)
 8002350:	681b      	ldr	r3, [r3, #0]
 8002352:	f042 0201 	orr.w	r2, r2, #1
 8002356:	601a      	str	r2, [r3, #0]


}
 8002358:	bf00      	nop
 800235a:	3714      	adds	r7, #20
 800235c:	46bd      	mov	sp, r7
 800235e:	bc80      	pop	{r7}
 8002360:	4770      	bx	lr
 8002362:	bf00      	nop
 8002364:	20000000 	.word	0x20000000

08002368 <timer2_INIT_CH1>:

//===========================================================================
//###########################################################################

void timer2_INIT_CH1(uint32_t pre , uint32_t peak ){
 8002368:	b480      	push	{r7}
 800236a:	b083      	sub	sp, #12
 800236c:	af00      	add	r7, sp, #0
 800236e:	6078      	str	r0, [r7, #4]
 8002370:	6039      	str	r1, [r7, #0]

	SPWM3PHASE->TIMx_CR1 &=~(1<<0);
 8002372:	4b1e      	ldr	r3, [pc, #120]	; (80023ec <timer2_INIT_CH1+0x84>)
 8002374:	681b      	ldr	r3, [r3, #0]
 8002376:	681a      	ldr	r2, [r3, #0]
 8002378:	4b1c      	ldr	r3, [pc, #112]	; (80023ec <timer2_INIT_CH1+0x84>)
 800237a:	681b      	ldr	r3, [r3, #0]
 800237c:	f022 0201 	bic.w	r2, r2, #1
 8002380:	601a      	str	r2, [r3, #0]
	SPWM3PHASE->TIMx_EGR &=~(1<<0);
 8002382:	4b1a      	ldr	r3, [pc, #104]	; (80023ec <timer2_INIT_CH1+0x84>)
 8002384:	681b      	ldr	r3, [r3, #0]
 8002386:	695a      	ldr	r2, [r3, #20]
 8002388:	4b18      	ldr	r3, [pc, #96]	; (80023ec <timer2_INIT_CH1+0x84>)
 800238a:	681b      	ldr	r3, [r3, #0]
 800238c:	f022 0201 	bic.w	r2, r2, #1
 8002390:	615a      	str	r2, [r3, #20]


	SPWM3PHASE->TIMx_CR1  |=(1<<2);
 8002392:	4b16      	ldr	r3, [pc, #88]	; (80023ec <timer2_INIT_CH1+0x84>)
 8002394:	681b      	ldr	r3, [r3, #0]
 8002396:	681a      	ldr	r2, [r3, #0]
 8002398:	4b14      	ldr	r3, [pc, #80]	; (80023ec <timer2_INIT_CH1+0x84>)
 800239a:	681b      	ldr	r3, [r3, #0]
 800239c:	f042 0204 	orr.w	r2, r2, #4
 80023a0:	601a      	str	r2, [r3, #0]
	SPWM3PHASE->TIMx_DIER |=(1<<0);
 80023a2:	4b12      	ldr	r3, [pc, #72]	; (80023ec <timer2_INIT_CH1+0x84>)
 80023a4:	681b      	ldr	r3, [r3, #0]
 80023a6:	68da      	ldr	r2, [r3, #12]
 80023a8:	4b10      	ldr	r3, [pc, #64]	; (80023ec <timer2_INIT_CH1+0x84>)
 80023aa:	681b      	ldr	r3, [r3, #0]
 80023ac:	f042 0201 	orr.w	r2, r2, #1
 80023b0:	60da      	str	r2, [r3, #12]



	SPWM3PHASE->TIMx_ARR=peak;//frec peak value
 80023b2:	4b0e      	ldr	r3, [pc, #56]	; (80023ec <timer2_INIT_CH1+0x84>)
 80023b4:	681b      	ldr	r3, [r3, #0]
 80023b6:	683a      	ldr	r2, [r7, #0]
 80023b8:	62da      	str	r2, [r3, #44]	; 0x2c

	SPWM3PHASE->TIMx_PSC=pre;//prescaller
 80023ba:	4b0c      	ldr	r3, [pc, #48]	; (80023ec <timer2_INIT_CH1+0x84>)
 80023bc:	681b      	ldr	r3, [r3, #0]
 80023be:	687a      	ldr	r2, [r7, #4]
 80023c0:	629a      	str	r2, [r3, #40]	; 0x28

	SPWM3PHASE->TIMx_EGR |=(1<<0);
 80023c2:	4b0a      	ldr	r3, [pc, #40]	; (80023ec <timer2_INIT_CH1+0x84>)
 80023c4:	681b      	ldr	r3, [r3, #0]
 80023c6:	695a      	ldr	r2, [r3, #20]
 80023c8:	4b08      	ldr	r3, [pc, #32]	; (80023ec <timer2_INIT_CH1+0x84>)
 80023ca:	681b      	ldr	r3, [r3, #0]
 80023cc:	f042 0201 	orr.w	r2, r2, #1
 80023d0:	615a      	str	r2, [r3, #20]
	SPWM3PHASE->TIMx_CR1 |=(1<<0);//enable the timer
 80023d2:	4b06      	ldr	r3, [pc, #24]	; (80023ec <timer2_INIT_CH1+0x84>)
 80023d4:	681b      	ldr	r3, [r3, #0]
 80023d6:	681a      	ldr	r2, [r3, #0]
 80023d8:	4b04      	ldr	r3, [pc, #16]	; (80023ec <timer2_INIT_CH1+0x84>)
 80023da:	681b      	ldr	r3, [r3, #0]
 80023dc:	f042 0201 	orr.w	r2, r2, #1
 80023e0:	601a      	str	r2, [r3, #0]




}
 80023e2:	bf00      	nop
 80023e4:	370c      	adds	r7, #12
 80023e6:	46bd      	mov	sp, r7
 80023e8:	bc80      	pop	{r7}
 80023ea:	4770      	bx	lr
 80023ec:	20000004 	.word	0x20000004

080023f0 <timer3_INIT_CH2>:
//===========================================================================
//###########################################################################
//===========================================================================
//###########################################################################
void timer3_INIT_CH2(uint32_t pre ,uint32_t duty_cycle,uint32_t peak ){
 80023f0:	b480      	push	{r7}
 80023f2:	b085      	sub	sp, #20
 80023f4:	af00      	add	r7, sp, #0
 80023f6:	60f8      	str	r0, [r7, #12]
 80023f8:	60b9      	str	r1, [r7, #8]
 80023fa:	607a      	str	r2, [r7, #4]
	//	(LOCK bits in TIMx_BDTR register) and CC1S=’00’ (the channel is configured in
	//	output).
	//	2: The PWM mode can be used without validating the preload register only in one
	//	pulse mode (OPM bit set in TIMx_CR1 register). Else the behavior is not guaranteed.

	half_wave->TIMx_CCMR1 |=(1<<11);
 80023fc:	4b24      	ldr	r3, [pc, #144]	; (8002490 <timer3_INIT_CH2+0xa0>)
 80023fe:	681b      	ldr	r3, [r3, #0]
 8002400:	699a      	ldr	r2, [r3, #24]
 8002402:	4b23      	ldr	r3, [pc, #140]	; (8002490 <timer3_INIT_CH2+0xa0>)
 8002404:	681b      	ldr	r3, [r3, #0]
 8002406:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800240a:	619a      	str	r2, [r3, #24]

	half_wave->TIMx_CCER |=(1<<4);
 800240c:	4b20      	ldr	r3, [pc, #128]	; (8002490 <timer3_INIT_CH2+0xa0>)
 800240e:	681b      	ldr	r3, [r3, #0]
 8002410:	6a1a      	ldr	r2, [r3, #32]
 8002412:	4b1f      	ldr	r3, [pc, #124]	; (8002490 <timer3_INIT_CH2+0xa0>)
 8002414:	681b      	ldr	r3, [r3, #0]
 8002416:	f042 0210 	orr.w	r2, r2, #16
 800241a:	621a      	str	r2, [r3, #32]
	//	ARPE: Auto-reload preload enable
	//	0: TIMx_ARR register is not buffered
	//	1: TIMx_ARR register is buffered

	half_wave->TIMx_CR1 |=(1<<7);
 800241c:	4b1c      	ldr	r3, [pc, #112]	; (8002490 <timer3_INIT_CH2+0xa0>)
 800241e:	681b      	ldr	r3, [r3, #0]
 8002420:	681a      	ldr	r2, [r3, #0]
 8002422:	4b1b      	ldr	r3, [pc, #108]	; (8002490 <timer3_INIT_CH2+0xa0>)
 8002424:	681b      	ldr	r3, [r3, #0]
 8002426:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800242a:	601a      	str	r2, [r3, #0]


	//	110: PWM mode 1 - In upcounting, channel 1 is active as long as TIMx_CNT<TIMx_CCR1
	half_wave->TIMx_CCMR1 |=(0b110<<12);
 800242c:	4b18      	ldr	r3, [pc, #96]	; (8002490 <timer3_INIT_CH2+0xa0>)
 800242e:	681b      	ldr	r3, [r3, #0]
 8002430:	699a      	ldr	r2, [r3, #24]
 8002432:	4b17      	ldr	r3, [pc, #92]	; (8002490 <timer3_INIT_CH2+0xa0>)
 8002434:	681b      	ldr	r3, [r3, #0]
 8002436:	f442 42c0 	orr.w	r2, r2, #24576	; 0x6000
 800243a:	619a      	str	r2, [r3, #24]

	half_wave->TIMx_ARR=peak;//frec peak value
 800243c:	4b14      	ldr	r3, [pc, #80]	; (8002490 <timer3_INIT_CH2+0xa0>)
 800243e:	681b      	ldr	r3, [r3, #0]
 8002440:	687a      	ldr	r2, [r7, #4]
 8002442:	62da      	str	r2, [r3, #44]	; 0x2c
	half_wave->TIMx_CCR2=(duty_cycle);//duty cycle
 8002444:	4b12      	ldr	r3, [pc, #72]	; (8002490 <timer3_INIT_CH2+0xa0>)
 8002446:	681b      	ldr	r3, [r3, #0]
 8002448:	68ba      	ldr	r2, [r7, #8]
 800244a:	639a      	str	r2, [r3, #56]	; 0x38
	half_wave->TIMx_PSC=pre;//prescaller
 800244c:	4b10      	ldr	r3, [pc, #64]	; (8002490 <timer3_INIT_CH2+0xa0>)
 800244e:	681b      	ldr	r3, [r3, #0]
 8002450:	68fa      	ldr	r2, [r7, #12]
 8002452:	629a      	str	r2, [r3, #40]	; 0x28
	//	which are configured in output.
	//	0: OC and OCN outputs are disabled or forced to idle state.
	//	1: OC and OCN outputs are enabled if their respective enable bits are set (CCxE, CCxNE in
	//	TIMx_CCER register).
	//	See OC/OCN enable description for more details
	half_wave->TIMx_BDTR |=(1<<15);
 8002454:	4b0e      	ldr	r3, [pc, #56]	; (8002490 <timer3_INIT_CH2+0xa0>)
 8002456:	681b      	ldr	r3, [r3, #0]
 8002458:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800245a:	4b0d      	ldr	r3, [pc, #52]	; (8002490 <timer3_INIT_CH2+0xa0>)
 800245c:	681b      	ldr	r3, [r3, #0]
 800245e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8002462:	645a      	str	r2, [r3, #68]	; 0x44
	//	0: CC1 interrupt disabled
	//	1: CC1 interrupt enabled
	//	Bit 0 UIE: Update interrupt enable
	//	0: Update interrupt disabled
	//	1: Update interrupt enabled
	half_wave->TIMx_DIER |=(0b101<<0);
 8002464:	4b0a      	ldr	r3, [pc, #40]	; (8002490 <timer3_INIT_CH2+0xa0>)
 8002466:	681b      	ldr	r3, [r3, #0]
 8002468:	68da      	ldr	r2, [r3, #12]
 800246a:	4b09      	ldr	r3, [pc, #36]	; (8002490 <timer3_INIT_CH2+0xa0>)
 800246c:	681b      	ldr	r3, [r3, #0]
 800246e:	f042 0205 	orr.w	r2, r2, #5
 8002472:	60da      	str	r2, [r3, #12]
	//	0: No action
	//	1: Reinitialize the counter and generates an update of the registers. Note that the prescaler
	//	counter is cleared too (anyway the prescaler ratio is not affected). The counter is cleared if
	//	the center-aligned mode is selected or if DIR=0 (upcounting), else it takes the auto-reload
	//	value (TIMx_ARR) if DIR=1 (downcounting).
	half_wave->TIMx_EGR |=(1<<0);
 8002474:	4b06      	ldr	r3, [pc, #24]	; (8002490 <timer3_INIT_CH2+0xa0>)
 8002476:	681b      	ldr	r3, [r3, #0]
 8002478:	695a      	ldr	r2, [r3, #20]
 800247a:	4b05      	ldr	r3, [pc, #20]	; (8002490 <timer3_INIT_CH2+0xa0>)
 800247c:	681b      	ldr	r3, [r3, #0]
 800247e:	f042 0201 	orr.w	r2, r2, #1
 8002482:	615a      	str	r2, [r3, #20]

	//half_wave->TIMx_CR1 |=(1<<0);//enable the timer


}
 8002484:	bf00      	nop
 8002486:	3714      	adds	r7, #20
 8002488:	46bd      	mov	sp, r7
 800248a:	bc80      	pop	{r7}
 800248c:	4770      	bx	lr
 800248e:	bf00      	nop
 8002490:	20000008 	.word	0x20000008

08002494 <timer3_INIT_CH1>:
//===========================================================================
//###########################################################################
void timer3_INIT_CH1(uint32_t pre ,uint32_t duty_cycle,uint32_t peak ){
 8002494:	b480      	push	{r7}
 8002496:	b085      	sub	sp, #20
 8002498:	af00      	add	r7, sp, #0
 800249a:	60f8      	str	r0, [r7, #12]
 800249c:	60b9      	str	r1, [r7, #8]
 800249e:	607a      	str	r2, [r7, #4]
	//	Note: 1: These bits can not be modified as long as LOCK level 3 has been programmed
	//	(LOCK bits in TIMx_BDTR register) and CC1S=’00’ (the channel is configured in
	//	output).
	//	2: The PWM mode can be used without validating the preload register only in one
	//	pulse mode (OPM bit set in TIMx_CR1 register). Else the behavior is not guaranteed.
	half_wave->TIMx_CCMR1 |=(1<<3);
 80024a0:	4b24      	ldr	r3, [pc, #144]	; (8002534 <timer3_INIT_CH1+0xa0>)
 80024a2:	681b      	ldr	r3, [r3, #0]
 80024a4:	699a      	ldr	r2, [r3, #24]
 80024a6:	4b23      	ldr	r3, [pc, #140]	; (8002534 <timer3_INIT_CH1+0xa0>)
 80024a8:	681b      	ldr	r3, [r3, #0]
 80024aa:	f042 0208 	orr.w	r2, r2, #8
 80024ae:	619a      	str	r2, [r3, #24]
	//	CC1 channel configured as input:
	//	This bit determines if a capture of the counter value can actually be done into the input
	//	capture/compare register 1 (TIMx_CCR1) or not.
	//	0: Capture disabled.
	//	1: Capture enabled.
	half_wave->TIMx_CCER |=(1<<0);
 80024b0:	4b20      	ldr	r3, [pc, #128]	; (8002534 <timer3_INIT_CH1+0xa0>)
 80024b2:	681b      	ldr	r3, [r3, #0]
 80024b4:	6a1a      	ldr	r2, [r3, #32]
 80024b6:	4b1f      	ldr	r3, [pc, #124]	; (8002534 <timer3_INIT_CH1+0xa0>)
 80024b8:	681b      	ldr	r3, [r3, #0]
 80024ba:	f042 0201 	orr.w	r2, r2, #1
 80024be:	621a      	str	r2, [r3, #32]


	//	ARPE: Auto-reload preload enable
	//	0: TIMx_ARR register is not buffered
	//	1: TIMx_ARR register is buffered
	half_wave->TIMx_CR1 |=(1<<7);
 80024c0:	4b1c      	ldr	r3, [pc, #112]	; (8002534 <timer3_INIT_CH1+0xa0>)
 80024c2:	681b      	ldr	r3, [r3, #0]
 80024c4:	681a      	ldr	r2, [r3, #0]
 80024c6:	4b1b      	ldr	r3, [pc, #108]	; (8002534 <timer3_INIT_CH1+0xa0>)
 80024c8:	681b      	ldr	r3, [r3, #0]
 80024ca:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80024ce:	601a      	str	r2, [r3, #0]


	//	110: PWM mode 1 - In upcounting, channel 1 is active as long as TIMx_CNT<TIMx_CCR1
	half_wave->TIMx_CCMR1 |=(0b110<<4);
 80024d0:	4b18      	ldr	r3, [pc, #96]	; (8002534 <timer3_INIT_CH1+0xa0>)
 80024d2:	681b      	ldr	r3, [r3, #0]
 80024d4:	699a      	ldr	r2, [r3, #24]
 80024d6:	4b17      	ldr	r3, [pc, #92]	; (8002534 <timer3_INIT_CH1+0xa0>)
 80024d8:	681b      	ldr	r3, [r3, #0]
 80024da:	f042 0260 	orr.w	r2, r2, #96	; 0x60
 80024de:	619a      	str	r2, [r3, #24]

	half_wave->TIMx_ARR=peak;//frec peak value
 80024e0:	4b14      	ldr	r3, [pc, #80]	; (8002534 <timer3_INIT_CH1+0xa0>)
 80024e2:	681b      	ldr	r3, [r3, #0]
 80024e4:	687a      	ldr	r2, [r7, #4]
 80024e6:	62da      	str	r2, [r3, #44]	; 0x2c
	half_wave->TIMx_CCR1=(duty_cycle);//duty cycle
 80024e8:	4b12      	ldr	r3, [pc, #72]	; (8002534 <timer3_INIT_CH1+0xa0>)
 80024ea:	681b      	ldr	r3, [r3, #0]
 80024ec:	68ba      	ldr	r2, [r7, #8]
 80024ee:	635a      	str	r2, [r3, #52]	; 0x34
	half_wave->TIMx_PSC=pre;//prescaller
 80024f0:	4b10      	ldr	r3, [pc, #64]	; (8002534 <timer3_INIT_CH1+0xa0>)
 80024f2:	681b      	ldr	r3, [r3, #0]
 80024f4:	68fa      	ldr	r2, [r7, #12]
 80024f6:	629a      	str	r2, [r3, #40]	; 0x28
	//	which are configured in output.
	//	0: OC and OCN outputs are disabled or forced to idle state.
	//	1: OC and OCN outputs are enabled if their respective enable bits are set (CCxE, CCxNE in
	//	TIMx_CCER register).
	//	See OC/OCN enable description for more details
	half_wave->TIMx_BDTR |=(1<<15);
 80024f8:	4b0e      	ldr	r3, [pc, #56]	; (8002534 <timer3_INIT_CH1+0xa0>)
 80024fa:	681b      	ldr	r3, [r3, #0]
 80024fc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80024fe:	4b0d      	ldr	r3, [pc, #52]	; (8002534 <timer3_INIT_CH1+0xa0>)
 8002500:	681b      	ldr	r3, [r3, #0]
 8002502:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8002506:	645a      	str	r2, [r3, #68]	; 0x44
	//	0: CC1 interrupt disabled
	//	1: CC1 interrupt enabled
	//	Bit 0 UIE: Update interrupt enable
	//	0: Update interrupt disabled
	//	1: Update interrupt enabled
	half_wave->TIMx_DIER |=(0b111<<0);
 8002508:	4b0a      	ldr	r3, [pc, #40]	; (8002534 <timer3_INIT_CH1+0xa0>)
 800250a:	681b      	ldr	r3, [r3, #0]
 800250c:	68da      	ldr	r2, [r3, #12]
 800250e:	4b09      	ldr	r3, [pc, #36]	; (8002534 <timer3_INIT_CH1+0xa0>)
 8002510:	681b      	ldr	r3, [r3, #0]
 8002512:	f042 0207 	orr.w	r2, r2, #7
 8002516:	60da      	str	r2, [r3, #12]
	//	0: No action
	//	1: Reinitialize the counter and generates an update of the registers. Note that the prescaler
	//	counter is cleared too (anyway the prescaler ratio is not affected). The counter is cleared if
	//	the center-aligned mode is selected or if DIR=0 (upcounting), else it takes the auto-reload
	//	value (TIMx_ARR) if DIR=1 (downcounting).
	half_wave->TIMx_EGR |=(1<<0);
 8002518:	4b06      	ldr	r3, [pc, #24]	; (8002534 <timer3_INIT_CH1+0xa0>)
 800251a:	681b      	ldr	r3, [r3, #0]
 800251c:	695a      	ldr	r2, [r3, #20]
 800251e:	4b05      	ldr	r3, [pc, #20]	; (8002534 <timer3_INIT_CH1+0xa0>)
 8002520:	681b      	ldr	r3, [r3, #0]
 8002522:	f042 0201 	orr.w	r2, r2, #1
 8002526:	615a      	str	r2, [r3, #20]

	//half_wave->TIMx_CR1 |=(1<<0);//enable the timer


}
 8002528:	bf00      	nop
 800252a:	3714      	adds	r7, #20
 800252c:	46bd      	mov	sp, r7
 800252e:	bc80      	pop	{r7}
 8002530:	4770      	bx	lr
 8002532:	bf00      	nop
 8002534:	20000008 	.word	0x20000008

08002538 <timer3_INIT_CH3>:

//===========================================================================
//###########################################################################
void timer3_INIT_CH3(uint32_t pre ,uint32_t duty_cycle,uint32_t peak ){
 8002538:	b480      	push	{r7}
 800253a:	b085      	sub	sp, #20
 800253c:	af00      	add	r7, sp, #0
 800253e:	60f8      	str	r0, [r7, #12]
 8002540:	60b9      	str	r1, [r7, #8]
 8002542:	607a      	str	r2, [r7, #4]
	//	Note: 1: These bits can not be modified as long as LOCK level 3 has been programmed
	//	(LOCK bits in TIMx_BDTR register) and CC1S=’00’ (the channel is configured in
	//	output).
	//	2: The PWM mode can be used without validating the preload register only in one
	//	pulse mode (OPM bit set in TIMx_CR1 register). Else the behavior is not guaranteed.
	half_wave->TIMx_CCMR2 |=(1<<3);
 8002544:	4b28      	ldr	r3, [pc, #160]	; (80025e8 <timer3_INIT_CH3+0xb0>)
 8002546:	681b      	ldr	r3, [r3, #0]
 8002548:	69da      	ldr	r2, [r3, #28]
 800254a:	4b27      	ldr	r3, [pc, #156]	; (80025e8 <timer3_INIT_CH3+0xb0>)
 800254c:	681b      	ldr	r3, [r3, #0]
 800254e:	f042 0208 	orr.w	r2, r2, #8
 8002552:	61da      	str	r2, [r3, #28]
	//	CC1 channel configured as input:
	//	This bit determines if a capture of the counter value can actually be done into the input
	//	capture/compare register 1 (TIMx_CCR1) or not.
	//	0: Capture disabled.
	//	1: Capture enabled.
	half_wave->TIMx_CCER |=(1<<8);
 8002554:	4b24      	ldr	r3, [pc, #144]	; (80025e8 <timer3_INIT_CH3+0xb0>)
 8002556:	681b      	ldr	r3, [r3, #0]
 8002558:	6a1a      	ldr	r2, [r3, #32]
 800255a:	4b23      	ldr	r3, [pc, #140]	; (80025e8 <timer3_INIT_CH3+0xb0>)
 800255c:	681b      	ldr	r3, [r3, #0]
 800255e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8002562:	621a      	str	r2, [r3, #32]


	//	ARPE: Auto-reload preload enable
	//	0: TIMx_ARR register is not buffered
	//	1: TIMx_ARR register is buffered
	half_wave->TIMx_CR1 |=(1<<7);
 8002564:	4b20      	ldr	r3, [pc, #128]	; (80025e8 <timer3_INIT_CH3+0xb0>)
 8002566:	681b      	ldr	r3, [r3, #0]
 8002568:	681a      	ldr	r2, [r3, #0]
 800256a:	4b1f      	ldr	r3, [pc, #124]	; (80025e8 <timer3_INIT_CH3+0xb0>)
 800256c:	681b      	ldr	r3, [r3, #0]
 800256e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8002572:	601a      	str	r2, [r3, #0]


	//	110: PWM mode 1 - In upcounting, channel 1 is active as long as TIMx_CNT<TIMx_CCR1
	half_wave->TIMx_CCMR2 |=(0b110<<4);
 8002574:	4b1c      	ldr	r3, [pc, #112]	; (80025e8 <timer3_INIT_CH3+0xb0>)
 8002576:	681b      	ldr	r3, [r3, #0]
 8002578:	69da      	ldr	r2, [r3, #28]
 800257a:	4b1b      	ldr	r3, [pc, #108]	; (80025e8 <timer3_INIT_CH3+0xb0>)
 800257c:	681b      	ldr	r3, [r3, #0]
 800257e:	f042 0260 	orr.w	r2, r2, #96	; 0x60
 8002582:	61da      	str	r2, [r3, #28]

	half_wave->TIMx_ARR=peak;//frec peak value
 8002584:	4b18      	ldr	r3, [pc, #96]	; (80025e8 <timer3_INIT_CH3+0xb0>)
 8002586:	681b      	ldr	r3, [r3, #0]
 8002588:	687a      	ldr	r2, [r7, #4]
 800258a:	62da      	str	r2, [r3, #44]	; 0x2c
	half_wave->TIMx_CCR3=(duty_cycle);//duty cycle
 800258c:	4b16      	ldr	r3, [pc, #88]	; (80025e8 <timer3_INIT_CH3+0xb0>)
 800258e:	681b      	ldr	r3, [r3, #0]
 8002590:	68ba      	ldr	r2, [r7, #8]
 8002592:	63da      	str	r2, [r3, #60]	; 0x3c
	half_wave->TIMx_PSC=pre;//prescaller
 8002594:	4b14      	ldr	r3, [pc, #80]	; (80025e8 <timer3_INIT_CH3+0xb0>)
 8002596:	681b      	ldr	r3, [r3, #0]
 8002598:	68fa      	ldr	r2, [r7, #12]
 800259a:	629a      	str	r2, [r3, #40]	; 0x28
	//	which are configured in output.
	//	0: OC and OCN outputs are disabled or forced to idle state.
	//	1: OC and OCN outputs are enabled if their respective enable bits are set (CCxE, CCxNE in
	//	TIMx_CCER register).
	//	See OC/OCN enable description for more details
	half_wave->TIMx_BDTR |=(1<<15);
 800259c:	4b12      	ldr	r3, [pc, #72]	; (80025e8 <timer3_INIT_CH3+0xb0>)
 800259e:	681b      	ldr	r3, [r3, #0]
 80025a0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80025a2:	4b11      	ldr	r3, [pc, #68]	; (80025e8 <timer3_INIT_CH3+0xb0>)
 80025a4:	681b      	ldr	r3, [r3, #0]
 80025a6:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80025aa:	645a      	str	r2, [r3, #68]	; 0x44
	//	0: CC1 interrupt disabled
	//	1: CC1 interrupt enabled
	//	Bit 0 UIE: Update interrupt enable
	//	0: Update interrupt disabled
	//	1: Update interrupt enabled
	half_wave->TIMx_DIER |=(0b1111<<0);
 80025ac:	4b0e      	ldr	r3, [pc, #56]	; (80025e8 <timer3_INIT_CH3+0xb0>)
 80025ae:	681b      	ldr	r3, [r3, #0]
 80025b0:	68da      	ldr	r2, [r3, #12]
 80025b2:	4b0d      	ldr	r3, [pc, #52]	; (80025e8 <timer3_INIT_CH3+0xb0>)
 80025b4:	681b      	ldr	r3, [r3, #0]
 80025b6:	f042 020f 	orr.w	r2, r2, #15
 80025ba:	60da      	str	r2, [r3, #12]
	//	0: No action
	//	1: Reinitialize the counter and generates an update of the registers. Note that the prescaler
	//	counter is cleared too (anyway the prescaler ratio is not affected). The counter is cleared if
	//	the center-aligned mode is selected or if DIR=0 (upcounting), else it takes the auto-reload
	//	value (TIMx_ARR) if DIR=1 (downcounting).
	half_wave->TIMx_EGR |=(1<<0);
 80025bc:	4b0a      	ldr	r3, [pc, #40]	; (80025e8 <timer3_INIT_CH3+0xb0>)
 80025be:	681b      	ldr	r3, [r3, #0]
 80025c0:	695a      	ldr	r2, [r3, #20]
 80025c2:	4b09      	ldr	r3, [pc, #36]	; (80025e8 <timer3_INIT_CH3+0xb0>)
 80025c4:	681b      	ldr	r3, [r3, #0]
 80025c6:	f042 0201 	orr.w	r2, r2, #1
 80025ca:	615a      	str	r2, [r3, #20]

	half_wave->TIMx_CR1 |=(1<<0);//enable the timer
 80025cc:	4b06      	ldr	r3, [pc, #24]	; (80025e8 <timer3_INIT_CH3+0xb0>)
 80025ce:	681b      	ldr	r3, [r3, #0]
 80025d0:	681a      	ldr	r2, [r3, #0]
 80025d2:	4b05      	ldr	r3, [pc, #20]	; (80025e8 <timer3_INIT_CH3+0xb0>)
 80025d4:	681b      	ldr	r3, [r3, #0]
 80025d6:	f042 0201 	orr.w	r2, r2, #1
 80025da:	601a      	str	r2, [r3, #0]


}
 80025dc:	bf00      	nop
 80025de:	3714      	adds	r7, #20
 80025e0:	46bd      	mov	sp, r7
 80025e2:	bc80      	pop	{r7}
 80025e4:	4770      	bx	lr
 80025e6:	bf00      	nop
 80025e8:	20000008 	.word	0x20000008

080025ec <pwm_INIT>:
//===========================================================================
//###########################################################################
//===========================================================================
//###########################################################################

void pwm_INIT(){
 80025ec:	b598      	push	{r3, r4, r7, lr}
 80025ee:	af00      	add	r7, sp, #0
	MCAL_speed_init(CLK_SORC_IN_CLK8MHz, mood_FAST_MOOD_72MHzCORE);//speed of all 36MHz
 80025f0:	2100      	movs	r1, #0
 80025f2:	2000      	movs	r0, #0
 80025f4:	f7fe fff2 	bl	80015dc <MCAL_speed_init>
	GPIOA_Clock_Enable();//enable porta clock
 80025f8:	4b7c      	ldr	r3, [pc, #496]	; (80027ec <pwm_INIT+0x200>)
 80025fa:	699b      	ldr	r3, [r3, #24]
 80025fc:	4a7b      	ldr	r2, [pc, #492]	; (80027ec <pwm_INIT+0x200>)
 80025fe:	f043 0304 	orr.w	r3, r3, #4
 8002602:	6193      	str	r3, [r2, #24]
	GPIOB_Clock_Enable();//enable portb clock
 8002604:	4b79      	ldr	r3, [pc, #484]	; (80027ec <pwm_INIT+0x200>)
 8002606:	699b      	ldr	r3, [r3, #24]
 8002608:	4a78      	ldr	r2, [pc, #480]	; (80027ec <pwm_INIT+0x200>)
 800260a:	f043 0308 	orr.w	r3, r3, #8
 800260e:	6193      	str	r3, [r2, #24]
	TIMER1_CLOCK_Enable();//enable timer1 clock
 8002610:	4b76      	ldr	r3, [pc, #472]	; (80027ec <pwm_INIT+0x200>)
 8002612:	699b      	ldr	r3, [r3, #24]
 8002614:	4a75      	ldr	r2, [pc, #468]	; (80027ec <pwm_INIT+0x200>)
 8002616:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800261a:	6193      	str	r3, [r2, #24]
	TIMER2_CLOCK_Enable();//enable timer2 clock
 800261c:	4b73      	ldr	r3, [pc, #460]	; (80027ec <pwm_INIT+0x200>)
 800261e:	69db      	ldr	r3, [r3, #28]
 8002620:	4a72      	ldr	r2, [pc, #456]	; (80027ec <pwm_INIT+0x200>)
 8002622:	f043 0301 	orr.w	r3, r3, #1
 8002626:	61d3      	str	r3, [r2, #28]
	TIMER3_CLOCK_Enable();//enable timer3 clock
 8002628:	4b70      	ldr	r3, [pc, #448]	; (80027ec <pwm_INIT+0x200>)
 800262a:	69db      	ldr	r3, [r3, #28]
 800262c:	4a6f      	ldr	r2, [pc, #444]	; (80027ec <pwm_INIT+0x200>)
 800262e:	f043 0302 	orr.w	r3, r3, #2
 8002632:	61d3      	str	r3, [r2, #28]
	AFIO_Clock_Enable();//enable AF io clock
 8002634:	4b6d      	ldr	r3, [pc, #436]	; (80027ec <pwm_INIT+0x200>)
 8002636:	699b      	ldr	r3, [r3, #24]
 8002638:	4a6c      	ldr	r2, [pc, #432]	; (80027ec <pwm_INIT+0x200>)
 800263a:	f043 0301 	orr.w	r3, r3, #1
 800263e:	6193      	str	r3, [r2, #24]
	//NVIC_TIM1_UP_Enable;
	//NVIC_TIM1_CC_Enable;//enable capture compare nvic
	NVIC_TIM2_global_interrupt_Enable;
 8002640:	4b6b      	ldr	r3, [pc, #428]	; (80027f0 <pwm_INIT+0x204>)
 8002642:	681b      	ldr	r3, [r3, #0]
 8002644:	4a6a      	ldr	r2, [pc, #424]	; (80027f0 <pwm_INIT+0x204>)
 8002646:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800264a:	6013      	str	r3, [r2, #0]
	//=====================pins mode============================
	pinmode(GPIOA, pin8, GPIO_MODE_OUTPUT_AF_push_pull_Speed50);
 800264c:	220b      	movs	r2, #11
 800264e:	2108      	movs	r1, #8
 8002650:	4868      	ldr	r0, [pc, #416]	; (80027f4 <pwm_INIT+0x208>)
 8002652:	f7fe fd60 	bl	8001116 <pinmode>
	pinmode(GPIOA, pin9, GPIO_MODE_OUTPUT_AF_push_pull_Speed50);
 8002656:	220b      	movs	r2, #11
 8002658:	2109      	movs	r1, #9
 800265a:	4866      	ldr	r0, [pc, #408]	; (80027f4 <pwm_INIT+0x208>)
 800265c:	f7fe fd5b 	bl	8001116 <pinmode>
	pinmode(GPIOA, pin10,GPIO_MODE_OUTPUT_AF_push_pull_Speed50);
 8002660:	220b      	movs	r2, #11
 8002662:	210a      	movs	r1, #10
 8002664:	4863      	ldr	r0, [pc, #396]	; (80027f4 <pwm_INIT+0x208>)
 8002666:	f7fe fd56 	bl	8001116 <pinmode>

	pinmode(GPIOA, pin6, GPIO_MODE_OUTPUT_AF_push_pull_Speed50);
 800266a:	220b      	movs	r2, #11
 800266c:	2106      	movs	r1, #6
 800266e:	4861      	ldr	r0, [pc, #388]	; (80027f4 <pwm_INIT+0x208>)
 8002670:	f7fe fd51 	bl	8001116 <pinmode>
	pinmode(GPIOA, pin7, GPIO_MODE_OUTPUT_AF_push_pull_Speed50);
 8002674:	220b      	movs	r2, #11
 8002676:	2107      	movs	r1, #7
 8002678:	485e      	ldr	r0, [pc, #376]	; (80027f4 <pwm_INIT+0x208>)
 800267a:	f7fe fd4c 	bl	8001116 <pinmode>
	pinmode(GPIOB, pin0,GPIO_MODE_OUTPUT_AF_push_pull_Speed50);
 800267e:	220b      	movs	r2, #11
 8002680:	2100      	movs	r1, #0
 8002682:	485d      	ldr	r0, [pc, #372]	; (80027f8 <pwm_INIT+0x20c>)
 8002684:	f7fe fd47 	bl	8001116 <pinmode>

	var4 = 126 * sin(A + Phase1);
 8002688:	4b5c      	ldr	r3, [pc, #368]	; (80027fc <pwm_INIT+0x210>)
 800268a:	681a      	ldr	r2, [r3, #0]
 800268c:	4b5c      	ldr	r3, [pc, #368]	; (8002800 <pwm_INIT+0x214>)
 800268e:	681b      	ldr	r3, [r3, #0]
 8002690:	4619      	mov	r1, r3
 8002692:	4610      	mov	r0, r2
 8002694:	f7fe f9f0 	bl	8000a78 <__addsf3>
 8002698:	4603      	mov	r3, r0
 800269a:	4618      	mov	r0, r3
 800269c:	f7fd fecc 	bl	8000438 <__aeabi_f2d>
 80026a0:	4603      	mov	r3, r0
 80026a2:	460c      	mov	r4, r1
 80026a4:	4618      	mov	r0, r3
 80026a6:	4621      	mov	r1, r4
 80026a8:	f001 f816 	bl	80036d8 <sin>
 80026ac:	f04f 0200 	mov.w	r2, #0
 80026b0:	4b54      	ldr	r3, [pc, #336]	; (8002804 <pwm_INIT+0x218>)
 80026b2:	f7fd ff19 	bl	80004e8 <__aeabi_dmul>
 80026b6:	4603      	mov	r3, r0
 80026b8:	460c      	mov	r4, r1
 80026ba:	4618      	mov	r0, r3
 80026bc:	4621      	mov	r1, r4
 80026be:	f7fe f9ad 	bl	8000a1c <__aeabi_d2iz>
 80026c2:	4602      	mov	r2, r0
 80026c4:	4b50      	ldr	r3, [pc, #320]	; (8002808 <pwm_INIT+0x21c>)
 80026c6:	601a      	str	r2, [r3, #0]
	var1 = var4 + 128;
 80026c8:	4b4f      	ldr	r3, [pc, #316]	; (8002808 <pwm_INIT+0x21c>)
 80026ca:	681b      	ldr	r3, [r3, #0]
 80026cc:	3380      	adds	r3, #128	; 0x80
 80026ce:	4a4f      	ldr	r2, [pc, #316]	; (800280c <pwm_INIT+0x220>)
 80026d0:	6013      	str	r3, [r2, #0]
	var5 = 126 * sin(A + Phase2);
 80026d2:	4b4a      	ldr	r3, [pc, #296]	; (80027fc <pwm_INIT+0x210>)
 80026d4:	681a      	ldr	r2, [r3, #0]
 80026d6:	4b4e      	ldr	r3, [pc, #312]	; (8002810 <pwm_INIT+0x224>)
 80026d8:	681b      	ldr	r3, [r3, #0]
 80026da:	4619      	mov	r1, r3
 80026dc:	4610      	mov	r0, r2
 80026de:	f7fe f9cb 	bl	8000a78 <__addsf3>
 80026e2:	4603      	mov	r3, r0
 80026e4:	4618      	mov	r0, r3
 80026e6:	f7fd fea7 	bl	8000438 <__aeabi_f2d>
 80026ea:	4603      	mov	r3, r0
 80026ec:	460c      	mov	r4, r1
 80026ee:	4618      	mov	r0, r3
 80026f0:	4621      	mov	r1, r4
 80026f2:	f000 fff1 	bl	80036d8 <sin>
 80026f6:	f04f 0200 	mov.w	r2, #0
 80026fa:	4b42      	ldr	r3, [pc, #264]	; (8002804 <pwm_INIT+0x218>)
 80026fc:	f7fd fef4 	bl	80004e8 <__aeabi_dmul>
 8002700:	4603      	mov	r3, r0
 8002702:	460c      	mov	r4, r1
 8002704:	4618      	mov	r0, r3
 8002706:	4621      	mov	r1, r4
 8002708:	f7fe f988 	bl	8000a1c <__aeabi_d2iz>
 800270c:	4602      	mov	r2, r0
 800270e:	4b41      	ldr	r3, [pc, #260]	; (8002814 <pwm_INIT+0x228>)
 8002710:	601a      	str	r2, [r3, #0]
	var2 = var5 + 128;
 8002712:	4b40      	ldr	r3, [pc, #256]	; (8002814 <pwm_INIT+0x228>)
 8002714:	681b      	ldr	r3, [r3, #0]
 8002716:	3380      	adds	r3, #128	; 0x80
 8002718:	4a3f      	ldr	r2, [pc, #252]	; (8002818 <pwm_INIT+0x22c>)
 800271a:	6013      	str	r3, [r2, #0]
	var6 = 126 * sin(A + Phase3);
 800271c:	4b37      	ldr	r3, [pc, #220]	; (80027fc <pwm_INIT+0x210>)
 800271e:	681a      	ldr	r2, [r3, #0]
 8002720:	4b3e      	ldr	r3, [pc, #248]	; (800281c <pwm_INIT+0x230>)
 8002722:	681b      	ldr	r3, [r3, #0]
 8002724:	4619      	mov	r1, r3
 8002726:	4610      	mov	r0, r2
 8002728:	f7fe f9a6 	bl	8000a78 <__addsf3>
 800272c:	4603      	mov	r3, r0
 800272e:	4618      	mov	r0, r3
 8002730:	f7fd fe82 	bl	8000438 <__aeabi_f2d>
 8002734:	4603      	mov	r3, r0
 8002736:	460c      	mov	r4, r1
 8002738:	4618      	mov	r0, r3
 800273a:	4621      	mov	r1, r4
 800273c:	f000 ffcc 	bl	80036d8 <sin>
 8002740:	f04f 0200 	mov.w	r2, #0
 8002744:	4b2f      	ldr	r3, [pc, #188]	; (8002804 <pwm_INIT+0x218>)
 8002746:	f7fd fecf 	bl	80004e8 <__aeabi_dmul>
 800274a:	4603      	mov	r3, r0
 800274c:	460c      	mov	r4, r1
 800274e:	4618      	mov	r0, r3
 8002750:	4621      	mov	r1, r4
 8002752:	f7fe f963 	bl	8000a1c <__aeabi_d2iz>
 8002756:	4602      	mov	r2, r0
 8002758:	4b31      	ldr	r3, [pc, #196]	; (8002820 <pwm_INIT+0x234>)
 800275a:	601a      	str	r2, [r3, #0]
	var3 = var6 + 128;
 800275c:	4b30      	ldr	r3, [pc, #192]	; (8002820 <pwm_INIT+0x234>)
 800275e:	681b      	ldr	r3, [r3, #0]
 8002760:	3380      	adds	r3, #128	; 0x80
 8002762:	4a30      	ldr	r2, [pc, #192]	; (8002824 <pwm_INIT+0x238>)
 8002764:	6013      	str	r3, [r2, #0]
	timer_INIT_CH1(presc,var1,top);
 8002766:	4b30      	ldr	r3, [pc, #192]	; (8002828 <pwm_INIT+0x23c>)
 8002768:	681b      	ldr	r3, [r3, #0]
 800276a:	4618      	mov	r0, r3
 800276c:	4b27      	ldr	r3, [pc, #156]	; (800280c <pwm_INIT+0x220>)
 800276e:	681b      	ldr	r3, [r3, #0]
 8002770:	4619      	mov	r1, r3
 8002772:	4b2e      	ldr	r3, [pc, #184]	; (800282c <pwm_INIT+0x240>)
 8002774:	681b      	ldr	r3, [r3, #0]
 8002776:	461a      	mov	r2, r3
 8002778:	f7ff fd4a 	bl	8002210 <timer_INIT_CH1>
	timer_INIT_CH2(presc,var2,top);
 800277c:	4b2a      	ldr	r3, [pc, #168]	; (8002828 <pwm_INIT+0x23c>)
 800277e:	681b      	ldr	r3, [r3, #0]
 8002780:	4618      	mov	r0, r3
 8002782:	4b25      	ldr	r3, [pc, #148]	; (8002818 <pwm_INIT+0x22c>)
 8002784:	681b      	ldr	r3, [r3, #0]
 8002786:	4619      	mov	r1, r3
 8002788:	4b28      	ldr	r3, [pc, #160]	; (800282c <pwm_INIT+0x240>)
 800278a:	681b      	ldr	r3, [r3, #0]
 800278c:	461a      	mov	r2, r3
 800278e:	f7ff fced 	bl	800216c <timer_INIT_CH2>
	timer_INIT_CH3(presc, var3, top);
 8002792:	4b25      	ldr	r3, [pc, #148]	; (8002828 <pwm_INIT+0x23c>)
 8002794:	681b      	ldr	r3, [r3, #0]
 8002796:	4618      	mov	r0, r3
 8002798:	4b22      	ldr	r3, [pc, #136]	; (8002824 <pwm_INIT+0x238>)
 800279a:	681b      	ldr	r3, [r3, #0]
 800279c:	4619      	mov	r1, r3
 800279e:	4b23      	ldr	r3, [pc, #140]	; (800282c <pwm_INIT+0x240>)
 80027a0:	681b      	ldr	r3, [r3, #0]
 80027a2:	461a      	mov	r2, r3
 80027a4:	f7ff fd86 	bl	80022b4 <timer_INIT_CH3>

	timer3_INIT_CH1(presc,0,top);
 80027a8:	4b1f      	ldr	r3, [pc, #124]	; (8002828 <pwm_INIT+0x23c>)
 80027aa:	681b      	ldr	r3, [r3, #0]
 80027ac:	4618      	mov	r0, r3
 80027ae:	4b1f      	ldr	r3, [pc, #124]	; (800282c <pwm_INIT+0x240>)
 80027b0:	681b      	ldr	r3, [r3, #0]
 80027b2:	461a      	mov	r2, r3
 80027b4:	2100      	movs	r1, #0
 80027b6:	f7ff fe6d 	bl	8002494 <timer3_INIT_CH1>
	timer3_INIT_CH2(presc,0,top);
 80027ba:	4b1b      	ldr	r3, [pc, #108]	; (8002828 <pwm_INIT+0x23c>)
 80027bc:	681b      	ldr	r3, [r3, #0]
 80027be:	4618      	mov	r0, r3
 80027c0:	4b1a      	ldr	r3, [pc, #104]	; (800282c <pwm_INIT+0x240>)
 80027c2:	681b      	ldr	r3, [r3, #0]
 80027c4:	461a      	mov	r2, r3
 80027c6:	2100      	movs	r1, #0
 80027c8:	f7ff fe12 	bl	80023f0 <timer3_INIT_CH2>
	timer3_INIT_CH3(presc, 0, top);
 80027cc:	4b16      	ldr	r3, [pc, #88]	; (8002828 <pwm_INIT+0x23c>)
 80027ce:	681b      	ldr	r3, [r3, #0]
 80027d0:	4618      	mov	r0, r3
 80027d2:	4b16      	ldr	r3, [pc, #88]	; (800282c <pwm_INIT+0x240>)
 80027d4:	681b      	ldr	r3, [r3, #0]
 80027d6:	461a      	mov	r2, r3
 80027d8:	2100      	movs	r1, #0
 80027da:	f7ff fead 	bl	8002538 <timer3_INIT_CH3>
	pinmode(GPIOB, pin1,GPIO_MODE_OUTPUT_push_pull_Speed10);
 80027de:	2201      	movs	r2, #1
 80027e0:	2101      	movs	r1, #1
 80027e2:	4805      	ldr	r0, [pc, #20]	; (80027f8 <pwm_INIT+0x20c>)
 80027e4:	f7fe fc97 	bl	8001116 <pinmode>
	//    pinmode(GPIOA, pin4,GPIO_MODE_OUTPUT_push_pull_Speed50);
	//pinmode(GPIOA, pin5,GPIO_MODE_OUTPUT_push_pull_Speed2);
}
 80027e8:	bf00      	nop
 80027ea:	bd98      	pop	{r3, r4, r7, pc}
 80027ec:	40021000 	.word	0x40021000
 80027f0:	e000e100 	.word	0xe000e100
 80027f4:	40010800 	.word	0x40010800
 80027f8:	40010c00 	.word	0x40010c00
 80027fc:	200000d0 	.word	0x200000d0
 8002800:	20000010 	.word	0x20000010
 8002804:	405f8000 	.word	0x405f8000
 8002808:	200000c4 	.word	0x200000c4
 800280c:	200000b8 	.word	0x200000b8
 8002810:	20000014 	.word	0x20000014
 8002814:	200000c8 	.word	0x200000c8
 8002818:	200000bc 	.word	0x200000bc
 800281c:	20000018 	.word	0x20000018
 8002820:	200000cc 	.word	0x200000cc
 8002824:	200000c0 	.word	0x200000c0
 8002828:	200000b4 	.word	0x200000b4
 800282c:	2000000c 	.word	0x2000000c

08002830 <frec_controle>:
//============================================================
//############################################################
//######################## interface #########################
//############################################################
//============================================================
void frec_controle(){
 8002830:	b580      	push	{r7, lr}
 8002832:	b082      	sub	sp, #8
 8002834:	af00      	add	r7, sp, #0
	//pinwrite(GPIOB, pin1 ,HIGH);
	SPWM3PHASE->TIMx_CR1 &=~(1<<0);
 8002836:	4b2c      	ldr	r3, [pc, #176]	; (80028e8 <frec_controle+0xb8>)
 8002838:	681b      	ldr	r3, [r3, #0]
 800283a:	681a      	ldr	r2, [r3, #0]
 800283c:	4b2a      	ldr	r3, [pc, #168]	; (80028e8 <frec_controle+0xb8>)
 800283e:	681b      	ldr	r3, [r3, #0]
 8002840:	f022 0201 	bic.w	r2, r2, #1
 8002844:	601a      	str	r2, [r3, #0]
	_delay_mss(1000);
 8002846:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800284a:	f000 f85d 	bl	8002908 <_delay_mss>
	char user_flage=1;
 800284e:	2301      	movs	r3, #1
 8002850:	71fb      	strb	r3, [r7, #7]
	if(user_freq_control>=299)user_freq_control=1;
 8002852:	4b26      	ldr	r3, [pc, #152]	; (80028ec <frec_controle+0xbc>)
 8002854:	681b      	ldr	r3, [r3, #0]
 8002856:	f5b3 7f95 	cmp.w	r3, #298	; 0x12a
 800285a:	dd03      	ble.n	8002864 <frec_controle+0x34>
 800285c:	4b23      	ldr	r3, [pc, #140]	; (80028ec <frec_controle+0xbc>)
 800285e:	2201      	movs	r2, #1
 8002860:	601a      	str	r2, [r3, #0]
 8002862:	e004      	b.n	800286e <frec_controle+0x3e>
	else{
		user_freq_control++;
 8002864:	4b21      	ldr	r3, [pc, #132]	; (80028ec <frec_controle+0xbc>)
 8002866:	681b      	ldr	r3, [r3, #0]
 8002868:	3301      	adds	r3, #1
 800286a:	4a20      	ldr	r2, [pc, #128]	; (80028ec <frec_controle+0xbc>)
 800286c:	6013      	str	r3, [r2, #0]
	}
	user_freq=user_freq_control;
 800286e:	4b1f      	ldr	r3, [pc, #124]	; (80028ec <frec_controle+0xbc>)
 8002870:	681b      	ldr	r3, [r3, #0]
 8002872:	4a1f      	ldr	r2, [pc, #124]	; (80028f0 <frec_controle+0xc0>)
 8002874:	6013      	str	r3, [r2, #0]

	while(user_flage==1){
 8002876:	e01c      	b.n	80028b2 <frec_controle+0x82>
		user_top = (36000000)/(user_freq *13 * user_pre );
 8002878:	4b1d      	ldr	r3, [pc, #116]	; (80028f0 <frec_controle+0xc0>)
 800287a:	681a      	ldr	r2, [r3, #0]
 800287c:	4613      	mov	r3, r2
 800287e:	005b      	lsls	r3, r3, #1
 8002880:	4413      	add	r3, r2
 8002882:	009b      	lsls	r3, r3, #2
 8002884:	4413      	add	r3, r2
 8002886:	4a1b      	ldr	r2, [pc, #108]	; (80028f4 <frec_controle+0xc4>)
 8002888:	6812      	ldr	r2, [r2, #0]
 800288a:	fb02 f303 	mul.w	r3, r2, r3
 800288e:	4a1a      	ldr	r2, [pc, #104]	; (80028f8 <frec_controle+0xc8>)
 8002890:	fb92 f3f3 	sdiv	r3, r2, r3
 8002894:	4a19      	ldr	r2, [pc, #100]	; (80028fc <frec_controle+0xcc>)
 8002896:	6013      	str	r3, [r2, #0]
		if(user_top>=32000){
 8002898:	4b18      	ldr	r3, [pc, #96]	; (80028fc <frec_controle+0xcc>)
 800289a:	681b      	ldr	r3, [r3, #0]
 800289c:	f5b3 4ffa 	cmp.w	r3, #32000	; 0x7d00
 80028a0:	db05      	blt.n	80028ae <frec_controle+0x7e>
			user_pre+=2;
 80028a2:	4b14      	ldr	r3, [pc, #80]	; (80028f4 <frec_controle+0xc4>)
 80028a4:	681b      	ldr	r3, [r3, #0]
 80028a6:	3302      	adds	r3, #2
 80028a8:	4a12      	ldr	r2, [pc, #72]	; (80028f4 <frec_controle+0xc4>)
 80028aa:	6013      	str	r3, [r2, #0]
 80028ac:	e001      	b.n	80028b2 <frec_controle+0x82>
		}
		else{
			user_flage=0;
 80028ae:	2300      	movs	r3, #0
 80028b0:	71fb      	strb	r3, [r7, #7]
	while(user_flage==1){
 80028b2:	79fb      	ldrb	r3, [r7, #7]
 80028b4:	2b01      	cmp	r3, #1
 80028b6:	d0df      	beq.n	8002878 <frec_controle+0x48>
		}
	}
	top=user_top/5;
 80028b8:	4b10      	ldr	r3, [pc, #64]	; (80028fc <frec_controle+0xcc>)
 80028ba:	681b      	ldr	r3, [r3, #0]
 80028bc:	4a10      	ldr	r2, [pc, #64]	; (8002900 <frec_controle+0xd0>)
 80028be:	fb82 1203 	smull	r1, r2, r2, r3
 80028c2:	1052      	asrs	r2, r2, #1
 80028c4:	17db      	asrs	r3, r3, #31
 80028c6:	1ad3      	subs	r3, r2, r3
 80028c8:	4a0e      	ldr	r2, [pc, #56]	; (8002904 <frec_controle+0xd4>)
 80028ca:	6013      	str	r3, [r2, #0]
	timer2_INIT_CH1(user_pre-1,user_top);
 80028cc:	4b09      	ldr	r3, [pc, #36]	; (80028f4 <frec_controle+0xc4>)
 80028ce:	681b      	ldr	r3, [r3, #0]
 80028d0:	3b01      	subs	r3, #1
 80028d2:	461a      	mov	r2, r3
 80028d4:	4b09      	ldr	r3, [pc, #36]	; (80028fc <frec_controle+0xcc>)
 80028d6:	681b      	ldr	r3, [r3, #0]
 80028d8:	4619      	mov	r1, r3
 80028da:	4610      	mov	r0, r2
 80028dc:	f7ff fd44 	bl	8002368 <timer2_INIT_CH1>
	//pinwrite(GPIOB, pin1 ,LOW);

}
 80028e0:	bf00      	nop
 80028e2:	3708      	adds	r7, #8
 80028e4:	46bd      	mov	sp, r7
 80028e6:	bd80      	pop	{r7, pc}
 80028e8:	20000004 	.word	0x20000004
 80028ec:	20000024 	.word	0x20000024
 80028f0:	20000020 	.word	0x20000020
 80028f4:	20000028 	.word	0x20000028
 80028f8:	02255100 	.word	0x02255100
 80028fc:	2000002c 	.word	0x2000002c
 8002900:	66666667 	.word	0x66666667
 8002904:	2000000c 	.word	0x2000000c

08002908 <_delay_mss>:
//		}
//	}
//
//	timer2_INIT_CH1(user_pre-1,user_top);
//}
void _delay_mss(long x){
 8002908:	b480      	push	{r7}
 800290a:	b085      	sub	sp, #20
 800290c:	af00      	add	r7, sp, #0
 800290e:	6078      	str	r0, [r7, #4]
	for(long i=0;i<(x*50);i++);
 8002910:	2300      	movs	r3, #0
 8002912:	60fb      	str	r3, [r7, #12]
 8002914:	e002      	b.n	800291c <_delay_mss+0x14>
 8002916:	68fb      	ldr	r3, [r7, #12]
 8002918:	3301      	adds	r3, #1
 800291a:	60fb      	str	r3, [r7, #12]
 800291c:	687b      	ldr	r3, [r7, #4]
 800291e:	2232      	movs	r2, #50	; 0x32
 8002920:	fb02 f303 	mul.w	r3, r2, r3
 8002924:	68fa      	ldr	r2, [r7, #12]
 8002926:	429a      	cmp	r2, r3
 8002928:	dbf5      	blt.n	8002916 <_delay_mss+0xe>
}
 800292a:	bf00      	nop
 800292c:	3714      	adds	r7, #20
 800292e:	46bd      	mov	sp, r7
 8002930:	bc80      	pop	{r7}
 8002932:	4770      	bx	lr

08002934 <main>:
//============================================================
//########################### main ##########################
//============================================================
int main(void)
{
 8002934:	b580      	push	{r7, lr}
 8002936:	b082      	sub	sp, #8
 8002938:	af00      	add	r7, sp, #0
	_delay_mss(2000);
 800293a:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 800293e:	f7ff ffe3 	bl	8002908 <_delay_mss>
	//==================$$$$$$$$$$$$$$$$$$==================
	pwm_INIT();
 8002942:	f7ff fe53 	bl	80025ec <pwm_INIT>
	LCD_Init();
 8002946:	f7fe fd5d 	bl	8001404 <LCD_Init>
	//=================$$$$$$$$$$$$$$$$$$===================
	EXTI(GPIOA,pin1,EXTI_Trigger_Falling,frec_controle);
 800294a:	4b3a      	ldr	r3, [pc, #232]	; (8002a34 <main+0x100>)
 800294c:	2201      	movs	r2, #1
 800294e:	2101      	movs	r1, #1
 8002950:	4839      	ldr	r0, [pc, #228]	; (8002a38 <main+0x104>)
 8002952:	f7fe fef5 	bl	8001740 <EXTI>
	//	//inputs frequency and prescaler and the output is top"counterstics"
	//	//top=1/(f*(1\36*10^6) *13 * prescaler )//2pi/.5
	//max frq=300 on accuracy .5  13
	//max frq=150 on accuracy .3  21

	user_freq=300;
 8002956:	4b39      	ldr	r3, [pc, #228]	; (8002a3c <main+0x108>)
 8002958:	f44f 7296 	mov.w	r2, #300	; 0x12c
 800295c:	601a      	str	r2, [r3, #0]
	char user_flage=1;
 800295e:	2301      	movs	r3, #1
 8002960:	71fb      	strb	r3, [r7, #7]
	while(user_flage==1){
 8002962:	e01c      	b.n	800299e <main+0x6a>
		user_top = (36000000)/(user_freq *13 * user_pre );
 8002964:	4b35      	ldr	r3, [pc, #212]	; (8002a3c <main+0x108>)
 8002966:	681a      	ldr	r2, [r3, #0]
 8002968:	4613      	mov	r3, r2
 800296a:	005b      	lsls	r3, r3, #1
 800296c:	4413      	add	r3, r2
 800296e:	009b      	lsls	r3, r3, #2
 8002970:	4413      	add	r3, r2
 8002972:	4a33      	ldr	r2, [pc, #204]	; (8002a40 <main+0x10c>)
 8002974:	6812      	ldr	r2, [r2, #0]
 8002976:	fb02 f303 	mul.w	r3, r2, r3
 800297a:	4a32      	ldr	r2, [pc, #200]	; (8002a44 <main+0x110>)
 800297c:	fb92 f3f3 	sdiv	r3, r2, r3
 8002980:	4a31      	ldr	r2, [pc, #196]	; (8002a48 <main+0x114>)
 8002982:	6013      	str	r3, [r2, #0]
		if(user_top>=32000){
 8002984:	4b30      	ldr	r3, [pc, #192]	; (8002a48 <main+0x114>)
 8002986:	681b      	ldr	r3, [r3, #0]
 8002988:	f5b3 4ffa 	cmp.w	r3, #32000	; 0x7d00
 800298c:	db05      	blt.n	800299a <main+0x66>
			user_pre+=2;
 800298e:	4b2c      	ldr	r3, [pc, #176]	; (8002a40 <main+0x10c>)
 8002990:	681b      	ldr	r3, [r3, #0]
 8002992:	3302      	adds	r3, #2
 8002994:	4a2a      	ldr	r2, [pc, #168]	; (8002a40 <main+0x10c>)
 8002996:	6013      	str	r3, [r2, #0]
 8002998:	e001      	b.n	800299e <main+0x6a>
		}
		else{
			user_flage=0;
 800299a:	2300      	movs	r3, #0
 800299c:	71fb      	strb	r3, [r7, #7]
	while(user_flage==1){
 800299e:	79fb      	ldrb	r3, [r7, #7]
 80029a0:	2b01      	cmp	r3, #1
 80029a2:	d0df      	beq.n	8002964 <main+0x30>
		}
	}
	top=user_top/5;
 80029a4:	4b28      	ldr	r3, [pc, #160]	; (8002a48 <main+0x114>)
 80029a6:	681b      	ldr	r3, [r3, #0]
 80029a8:	4a28      	ldr	r2, [pc, #160]	; (8002a4c <main+0x118>)
 80029aa:	fb82 1203 	smull	r1, r2, r2, r3
 80029ae:	1052      	asrs	r2, r2, #1
 80029b0:	17db      	asrs	r3, r3, #31
 80029b2:	1ad3      	subs	r3, r2, r3
 80029b4:	4a26      	ldr	r2, [pc, #152]	; (8002a50 <main+0x11c>)
 80029b6:	6013      	str	r3, [r2, #0]
	timer2_INIT_CH1(user_pre-1,user_top);
 80029b8:	4b21      	ldr	r3, [pc, #132]	; (8002a40 <main+0x10c>)
 80029ba:	681b      	ldr	r3, [r3, #0]
 80029bc:	3b01      	subs	r3, #1
 80029be:	461a      	mov	r2, r3
 80029c0:	4b21      	ldr	r3, [pc, #132]	; (8002a48 <main+0x114>)
 80029c2:	681b      	ldr	r3, [r3, #0]
 80029c4:	4619      	mov	r1, r3
 80029c6:	4610      	mov	r0, r2
 80029c8:	f7ff fcce 	bl	8002368 <timer2_INIT_CH1>
	while (1)
	{
		_delay_mss(90);
 80029cc:	205a      	movs	r0, #90	; 0x5a
 80029ce:	f7ff ff9b 	bl	8002908 <_delay_mss>
		LCD_setcerser(0,0);
 80029d2:	2100      	movs	r1, #0
 80029d4:	2000      	movs	r0, #0
 80029d6:	f7fe fdbf 	bl	8001558 <LCD_setcerser>
		LCD_write_string("user_freq:");
 80029da:	481e      	ldr	r0, [pc, #120]	; (8002a54 <main+0x120>)
 80029dc:	f7fe fd9a 	bl	8001514 <LCD_write_string>
		_delay_mss(20);
 80029e0:	2014      	movs	r0, #20
 80029e2:	f7ff ff91 	bl	8002908 <_delay_mss>
		LCD_setcerser(0,10);
 80029e6:	210a      	movs	r1, #10
 80029e8:	2000      	movs	r0, #0
 80029ea:	f7fe fdb5 	bl	8001558 <LCD_setcerser>
		_delay_mss(20);
 80029ee:	2014      	movs	r0, #20
 80029f0:	f7ff ff8a 	bl	8002908 <_delay_mss>
		LCD_write_INTnumber(user_freq);
 80029f4:	4b11      	ldr	r3, [pc, #68]	; (8002a3c <main+0x108>)
 80029f6:	681b      	ldr	r3, [r3, #0]
 80029f8:	4618      	mov	r0, r3
 80029fa:	f7fe fdd9 	bl	80015b0 <LCD_write_INTnumber>
		_delay_mss(110);
 80029fe:	206e      	movs	r0, #110	; 0x6e
 8002a00:	f7ff ff82 	bl	8002908 <_delay_mss>
		LCD_write_string("Hz");
 8002a04:	4814      	ldr	r0, [pc, #80]	; (8002a58 <main+0x124>)
 8002a06:	f7fe fd85 	bl	8001514 <LCD_write_string>
		_delay_mss(110);
 8002a0a:	206e      	movs	r0, #110	; 0x6e
 8002a0c:	f7ff ff7c 	bl	8002908 <_delay_mss>
		LCD_setcerser(1,0);
 8002a10:	2100      	movs	r1, #0
 8002a12:	2001      	movs	r0, #1
 8002a14:	f7fe fda0 	bl	8001558 <LCD_setcerser>
		_delay_mss(20);
 8002a18:	2014      	movs	r0, #20
 8002a1a:	f7ff ff75 	bl	8002908 <_delay_mss>
		LCD_write_string(" MO_Alshreif");
 8002a1e:	480f      	ldr	r0, [pc, #60]	; (8002a5c <main+0x128>)
 8002a20:	f7fe fd78 	bl	8001514 <LCD_write_string>
		_delay_mss(3200);
 8002a24:	f44f 6048 	mov.w	r0, #3200	; 0xc80
 8002a28:	f7ff ff6e 	bl	8002908 <_delay_mss>
		LCD_clear();
 8002a2c:	f7fe fdb8 	bl	80015a0 <LCD_clear>
		_delay_mss(90);
 8002a30:	e7cc      	b.n	80029cc <main+0x98>
 8002a32:	bf00      	nop
 8002a34:	08002831 	.word	0x08002831
 8002a38:	40010800 	.word	0x40010800
 8002a3c:	20000020 	.word	0x20000020
 8002a40:	20000028 	.word	0x20000028
 8002a44:	02255100 	.word	0x02255100
 8002a48:	2000002c 	.word	0x2000002c
 8002a4c:	66666667 	.word	0x66666667
 8002a50:	2000000c 	.word	0x2000000c
 8002a54:	0800523c 	.word	0x0800523c
 8002a58:	08005248 	.word	0x08005248
 8002a5c:	0800524c 	.word	0x0800524c

08002a60 <TIM2_IRQHandler>:
	}
}
//============================================================
//####################### interrupt ##########################
//============================================================
void TIM2_IRQHandler(){
 8002a60:	b598      	push	{r3, r4, r7, lr}
 8002a62:	af00      	add	r7, sp, #0

	pinwrite(GPIOB, pin1 ,HIGH);
 8002a64:	2201      	movs	r2, #1
 8002a66:	2101      	movs	r1, #1
 8002a68:	4897      	ldr	r0, [pc, #604]	; (8002cc8 <TIM2_IRQHandler+0x268>)
 8002a6a:	f7fe fc13 	bl	8001294 <pinwrite>
	SPWM3PHASE->TIMx_SR &=~(1<<0);
 8002a6e:	4b97      	ldr	r3, [pc, #604]	; (8002ccc <TIM2_IRQHandler+0x26c>)
 8002a70:	681b      	ldr	r3, [r3, #0]
 8002a72:	691a      	ldr	r2, [r3, #16]
 8002a74:	4b95      	ldr	r3, [pc, #596]	; (8002ccc <TIM2_IRQHandler+0x26c>)
 8002a76:	681b      	ldr	r3, [r3, #0]
 8002a78:	f022 0201 	bic.w	r2, r2, #1
 8002a7c:	611a      	str	r2, [r3, #16]
	//timer2_INIT_CH1(user_pre-1,user_top);
	A += B;
 8002a7e:	4b94      	ldr	r3, [pc, #592]	; (8002cd0 <TIM2_IRQHandler+0x270>)
 8002a80:	681a      	ldr	r2, [r3, #0]
 8002a82:	4b94      	ldr	r3, [pc, #592]	; (8002cd4 <TIM2_IRQHandler+0x274>)
 8002a84:	681b      	ldr	r3, [r3, #0]
 8002a86:	4619      	mov	r1, r3
 8002a88:	4610      	mov	r0, r2
 8002a8a:	f7fd fff5 	bl	8000a78 <__addsf3>
 8002a8e:	4603      	mov	r3, r0
 8002a90:	461a      	mov	r2, r3
 8002a92:	4b8f      	ldr	r3, [pc, #572]	; (8002cd0 <TIM2_IRQHandler+0x270>)
 8002a94:	601a      	str	r2, [r3, #0]
	if (A >=2* M_PI)
 8002a96:	4b8e      	ldr	r3, [pc, #568]	; (8002cd0 <TIM2_IRQHandler+0x270>)
 8002a98:	681b      	ldr	r3, [r3, #0]
 8002a9a:	4618      	mov	r0, r3
 8002a9c:	f7fd fccc 	bl	8000438 <__aeabi_f2d>
 8002aa0:	a387      	add	r3, pc, #540	; (adr r3, 8002cc0 <TIM2_IRQHandler+0x260>)
 8002aa2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002aa6:	f7fd ffa5 	bl	80009f4 <__aeabi_dcmpge>
 8002aaa:	4603      	mov	r3, r0
 8002aac:	2b00      	cmp	r3, #0
 8002aae:	d003      	beq.n	8002ab8 <TIM2_IRQHandler+0x58>
	{
		A = 0;
 8002ab0:	4b87      	ldr	r3, [pc, #540]	; (8002cd0 <TIM2_IRQHandler+0x270>)
 8002ab2:	f04f 0200 	mov.w	r2, #0
 8002ab6:	601a      	str	r2, [r3, #0]
	}

	//==================================================
	var1 = (127 * sinf(A + Phase1) + 128)*top/255;
 8002ab8:	4b85      	ldr	r3, [pc, #532]	; (8002cd0 <TIM2_IRQHandler+0x270>)
 8002aba:	681a      	ldr	r2, [r3, #0]
 8002abc:	4b86      	ldr	r3, [pc, #536]	; (8002cd8 <TIM2_IRQHandler+0x278>)
 8002abe:	681b      	ldr	r3, [r3, #0]
 8002ac0:	4619      	mov	r1, r3
 8002ac2:	4610      	mov	r0, r2
 8002ac4:	f7fd ffd8 	bl	8000a78 <__addsf3>
 8002ac8:	4603      	mov	r3, r0
 8002aca:	4618      	mov	r0, r3
 8002acc:	f000 fe3e 	bl	800374c <sinf>
 8002ad0:	4603      	mov	r3, r0
 8002ad2:	4982      	ldr	r1, [pc, #520]	; (8002cdc <TIM2_IRQHandler+0x27c>)
 8002ad4:	4618      	mov	r0, r3
 8002ad6:	f7fe f8d7 	bl	8000c88 <__aeabi_fmul>
 8002ada:	4603      	mov	r3, r0
 8002adc:	f04f 4186 	mov.w	r1, #1124073472	; 0x43000000
 8002ae0:	4618      	mov	r0, r3
 8002ae2:	f7fd ffc9 	bl	8000a78 <__addsf3>
 8002ae6:	4603      	mov	r3, r0
 8002ae8:	461c      	mov	r4, r3
 8002aea:	4b7d      	ldr	r3, [pc, #500]	; (8002ce0 <TIM2_IRQHandler+0x280>)
 8002aec:	681b      	ldr	r3, [r3, #0]
 8002aee:	4618      	mov	r0, r3
 8002af0:	f7fe f876 	bl	8000be0 <__aeabi_i2f>
 8002af4:	4603      	mov	r3, r0
 8002af6:	4619      	mov	r1, r3
 8002af8:	4620      	mov	r0, r4
 8002afa:	f7fe f8c5 	bl	8000c88 <__aeabi_fmul>
 8002afe:	4603      	mov	r3, r0
 8002b00:	4978      	ldr	r1, [pc, #480]	; (8002ce4 <TIM2_IRQHandler+0x284>)
 8002b02:	4618      	mov	r0, r3
 8002b04:	f7fe f974 	bl	8000df0 <__aeabi_fdiv>
 8002b08:	4603      	mov	r3, r0
 8002b0a:	4618      	mov	r0, r3
 8002b0c:	f7fe fa82 	bl	8001014 <__aeabi_f2iz>
 8002b10:	4602      	mov	r2, r0
 8002b12:	4b75      	ldr	r3, [pc, #468]	; (8002ce8 <TIM2_IRQHandler+0x288>)
 8002b14:	601a      	str	r2, [r3, #0]
	var2 = (127 * sinf(A + Phase2) + 128)*top/255;
 8002b16:	4b6e      	ldr	r3, [pc, #440]	; (8002cd0 <TIM2_IRQHandler+0x270>)
 8002b18:	681a      	ldr	r2, [r3, #0]
 8002b1a:	4b74      	ldr	r3, [pc, #464]	; (8002cec <TIM2_IRQHandler+0x28c>)
 8002b1c:	681b      	ldr	r3, [r3, #0]
 8002b1e:	4619      	mov	r1, r3
 8002b20:	4610      	mov	r0, r2
 8002b22:	f7fd ffa9 	bl	8000a78 <__addsf3>
 8002b26:	4603      	mov	r3, r0
 8002b28:	4618      	mov	r0, r3
 8002b2a:	f000 fe0f 	bl	800374c <sinf>
 8002b2e:	4603      	mov	r3, r0
 8002b30:	496a      	ldr	r1, [pc, #424]	; (8002cdc <TIM2_IRQHandler+0x27c>)
 8002b32:	4618      	mov	r0, r3
 8002b34:	f7fe f8a8 	bl	8000c88 <__aeabi_fmul>
 8002b38:	4603      	mov	r3, r0
 8002b3a:	f04f 4186 	mov.w	r1, #1124073472	; 0x43000000
 8002b3e:	4618      	mov	r0, r3
 8002b40:	f7fd ff9a 	bl	8000a78 <__addsf3>
 8002b44:	4603      	mov	r3, r0
 8002b46:	461c      	mov	r4, r3
 8002b48:	4b65      	ldr	r3, [pc, #404]	; (8002ce0 <TIM2_IRQHandler+0x280>)
 8002b4a:	681b      	ldr	r3, [r3, #0]
 8002b4c:	4618      	mov	r0, r3
 8002b4e:	f7fe f847 	bl	8000be0 <__aeabi_i2f>
 8002b52:	4603      	mov	r3, r0
 8002b54:	4619      	mov	r1, r3
 8002b56:	4620      	mov	r0, r4
 8002b58:	f7fe f896 	bl	8000c88 <__aeabi_fmul>
 8002b5c:	4603      	mov	r3, r0
 8002b5e:	4961      	ldr	r1, [pc, #388]	; (8002ce4 <TIM2_IRQHandler+0x284>)
 8002b60:	4618      	mov	r0, r3
 8002b62:	f7fe f945 	bl	8000df0 <__aeabi_fdiv>
 8002b66:	4603      	mov	r3, r0
 8002b68:	4618      	mov	r0, r3
 8002b6a:	f7fe fa53 	bl	8001014 <__aeabi_f2iz>
 8002b6e:	4602      	mov	r2, r0
 8002b70:	4b5f      	ldr	r3, [pc, #380]	; (8002cf0 <TIM2_IRQHandler+0x290>)
 8002b72:	601a      	str	r2, [r3, #0]
	var3 = (127 * sinf(A + Phase3) + 128)*top/255;
 8002b74:	4b56      	ldr	r3, [pc, #344]	; (8002cd0 <TIM2_IRQHandler+0x270>)
 8002b76:	681a      	ldr	r2, [r3, #0]
 8002b78:	4b5e      	ldr	r3, [pc, #376]	; (8002cf4 <TIM2_IRQHandler+0x294>)
 8002b7a:	681b      	ldr	r3, [r3, #0]
 8002b7c:	4619      	mov	r1, r3
 8002b7e:	4610      	mov	r0, r2
 8002b80:	f7fd ff7a 	bl	8000a78 <__addsf3>
 8002b84:	4603      	mov	r3, r0
 8002b86:	4618      	mov	r0, r3
 8002b88:	f000 fde0 	bl	800374c <sinf>
 8002b8c:	4603      	mov	r3, r0
 8002b8e:	4953      	ldr	r1, [pc, #332]	; (8002cdc <TIM2_IRQHandler+0x27c>)
 8002b90:	4618      	mov	r0, r3
 8002b92:	f7fe f879 	bl	8000c88 <__aeabi_fmul>
 8002b96:	4603      	mov	r3, r0
 8002b98:	f04f 4186 	mov.w	r1, #1124073472	; 0x43000000
 8002b9c:	4618      	mov	r0, r3
 8002b9e:	f7fd ff6b 	bl	8000a78 <__addsf3>
 8002ba2:	4603      	mov	r3, r0
 8002ba4:	461c      	mov	r4, r3
 8002ba6:	4b4e      	ldr	r3, [pc, #312]	; (8002ce0 <TIM2_IRQHandler+0x280>)
 8002ba8:	681b      	ldr	r3, [r3, #0]
 8002baa:	4618      	mov	r0, r3
 8002bac:	f7fe f818 	bl	8000be0 <__aeabi_i2f>
 8002bb0:	4603      	mov	r3, r0
 8002bb2:	4619      	mov	r1, r3
 8002bb4:	4620      	mov	r0, r4
 8002bb6:	f7fe f867 	bl	8000c88 <__aeabi_fmul>
 8002bba:	4603      	mov	r3, r0
 8002bbc:	4949      	ldr	r1, [pc, #292]	; (8002ce4 <TIM2_IRQHandler+0x284>)
 8002bbe:	4618      	mov	r0, r3
 8002bc0:	f7fe f916 	bl	8000df0 <__aeabi_fdiv>
 8002bc4:	4603      	mov	r3, r0
 8002bc6:	4618      	mov	r0, r3
 8002bc8:	f7fe fa24 	bl	8001014 <__aeabi_f2iz>
 8002bcc:	4602      	mov	r2, r0
 8002bce:	4b4a      	ldr	r3, [pc, #296]	; (8002cf8 <TIM2_IRQHandler+0x298>)
 8002bd0:	601a      	str	r2, [r3, #0]
	//==================================================
	pwm->TIMx_ARR=top;//frec peak value
 8002bd2:	4b43      	ldr	r3, [pc, #268]	; (8002ce0 <TIM2_IRQHandler+0x280>)
 8002bd4:	681a      	ldr	r2, [r3, #0]
 8002bd6:	4b49      	ldr	r3, [pc, #292]	; (8002cfc <TIM2_IRQHandler+0x29c>)
 8002bd8:	681b      	ldr	r3, [r3, #0]
 8002bda:	62da      	str	r2, [r3, #44]	; 0x2c
	half_wave->TIMx_ARR=top;//frec peak value
 8002bdc:	4b40      	ldr	r3, [pc, #256]	; (8002ce0 <TIM2_IRQHandler+0x280>)
 8002bde:	681a      	ldr	r2, [r3, #0]
 8002be0:	4b47      	ldr	r3, [pc, #284]	; (8002d00 <TIM2_IRQHandler+0x2a0>)
 8002be2:	681b      	ldr	r3, [r3, #0]
 8002be4:	62da      	str	r2, [r3, #44]	; 0x2c

	if(var1>=(top/2)){
 8002be6:	4b3e      	ldr	r3, [pc, #248]	; (8002ce0 <TIM2_IRQHandler+0x280>)
 8002be8:	681b      	ldr	r3, [r3, #0]
 8002bea:	0fda      	lsrs	r2, r3, #31
 8002bec:	4413      	add	r3, r2
 8002bee:	105b      	asrs	r3, r3, #1
 8002bf0:	461a      	mov	r2, r3
 8002bf2:	4b3d      	ldr	r3, [pc, #244]	; (8002ce8 <TIM2_IRQHandler+0x288>)
 8002bf4:	681b      	ldr	r3, [r3, #0]
 8002bf6:	429a      	cmp	r2, r3
 8002bf8:	dc0f      	bgt.n	8002c1a <TIM2_IRQHandler+0x1ba>
		//pwm->TIMx_CCR1=(0);//duty cycle
		pinmode(GPIOA, pin8, GPIO_MODE_INTPUT_AF);
 8002bfa:	2204      	movs	r2, #4
 8002bfc:	2108      	movs	r1, #8
 8002bfe:	4841      	ldr	r0, [pc, #260]	; (8002d04 <TIM2_IRQHandler+0x2a4>)
 8002c00:	f7fe fa89 	bl	8001116 <pinmode>
		pinmode(GPIOA, pin6, GPIO_MODE_OUTPUT_AF_push_pull_Speed50);
 8002c04:	220b      	movs	r2, #11
 8002c06:	2106      	movs	r1, #6
 8002c08:	483e      	ldr	r0, [pc, #248]	; (8002d04 <TIM2_IRQHandler+0x2a4>)
 8002c0a:	f7fe fa84 	bl	8001116 <pinmode>
		half_wave->TIMx_CCR1=(var1);//duty cycle
 8002c0e:	4b36      	ldr	r3, [pc, #216]	; (8002ce8 <TIM2_IRQHandler+0x288>)
 8002c10:	681a      	ldr	r2, [r3, #0]
 8002c12:	4b3b      	ldr	r3, [pc, #236]	; (8002d00 <TIM2_IRQHandler+0x2a0>)
 8002c14:	681b      	ldr	r3, [r3, #0]
 8002c16:	635a      	str	r2, [r3, #52]	; 0x34
 8002c18:	e00e      	b.n	8002c38 <TIM2_IRQHandler+0x1d8>
	}
	else{
		pinmode(GPIOA, pin6, GPIO_MODE_INTPUT_AF);
 8002c1a:	2204      	movs	r2, #4
 8002c1c:	2106      	movs	r1, #6
 8002c1e:	4839      	ldr	r0, [pc, #228]	; (8002d04 <TIM2_IRQHandler+0x2a4>)
 8002c20:	f7fe fa79 	bl	8001116 <pinmode>
		pinmode(GPIOA, pin8, GPIO_MODE_OUTPUT_AF_push_pull_Speed50);
 8002c24:	220b      	movs	r2, #11
 8002c26:	2108      	movs	r1, #8
 8002c28:	4836      	ldr	r0, [pc, #216]	; (8002d04 <TIM2_IRQHandler+0x2a4>)
 8002c2a:	f7fe fa74 	bl	8001116 <pinmode>
		pwm->TIMx_CCR1=(var1);//duty cycle
 8002c2e:	4b2e      	ldr	r3, [pc, #184]	; (8002ce8 <TIM2_IRQHandler+0x288>)
 8002c30:	681a      	ldr	r2, [r3, #0]
 8002c32:	4b32      	ldr	r3, [pc, #200]	; (8002cfc <TIM2_IRQHandler+0x29c>)
 8002c34:	681b      	ldr	r3, [r3, #0]
 8002c36:	635a      	str	r2, [r3, #52]	; 0x34
	}

	if(var2>=(top/2)){
 8002c38:	4b29      	ldr	r3, [pc, #164]	; (8002ce0 <TIM2_IRQHandler+0x280>)
 8002c3a:	681b      	ldr	r3, [r3, #0]
 8002c3c:	0fda      	lsrs	r2, r3, #31
 8002c3e:	4413      	add	r3, r2
 8002c40:	105b      	asrs	r3, r3, #1
 8002c42:	461a      	mov	r2, r3
 8002c44:	4b2a      	ldr	r3, [pc, #168]	; (8002cf0 <TIM2_IRQHandler+0x290>)
 8002c46:	681b      	ldr	r3, [r3, #0]
 8002c48:	429a      	cmp	r2, r3
 8002c4a:	dc0f      	bgt.n	8002c6c <TIM2_IRQHandler+0x20c>
		//pwm->TIMx_CCR2=(0);//duty cycle
		pinmode(GPIOA, pin9, GPIO_MODE_INTPUT_AF);
 8002c4c:	2204      	movs	r2, #4
 8002c4e:	2109      	movs	r1, #9
 8002c50:	482c      	ldr	r0, [pc, #176]	; (8002d04 <TIM2_IRQHandler+0x2a4>)
 8002c52:	f7fe fa60 	bl	8001116 <pinmode>
		pinmode(GPIOA, pin7, GPIO_MODE_OUTPUT_AF_push_pull_Speed50);
 8002c56:	220b      	movs	r2, #11
 8002c58:	2107      	movs	r1, #7
 8002c5a:	482a      	ldr	r0, [pc, #168]	; (8002d04 <TIM2_IRQHandler+0x2a4>)
 8002c5c:	f7fe fa5b 	bl	8001116 <pinmode>
		half_wave->TIMx_CCR2=(var2);//duty cycle
 8002c60:	4b23      	ldr	r3, [pc, #140]	; (8002cf0 <TIM2_IRQHandler+0x290>)
 8002c62:	681a      	ldr	r2, [r3, #0]
 8002c64:	4b26      	ldr	r3, [pc, #152]	; (8002d00 <TIM2_IRQHandler+0x2a0>)
 8002c66:	681b      	ldr	r3, [r3, #0]
 8002c68:	639a      	str	r2, [r3, #56]	; 0x38
 8002c6a:	e00e      	b.n	8002c8a <TIM2_IRQHandler+0x22a>
	}
	else
	{
		pinmode(GPIOA, pin7, GPIO_MODE_INTPUT_AF);
 8002c6c:	2204      	movs	r2, #4
 8002c6e:	2107      	movs	r1, #7
 8002c70:	4824      	ldr	r0, [pc, #144]	; (8002d04 <TIM2_IRQHandler+0x2a4>)
 8002c72:	f7fe fa50 	bl	8001116 <pinmode>
		pinmode(GPIOA, pin9, GPIO_MODE_OUTPUT_AF_push_pull_Speed50);
 8002c76:	220b      	movs	r2, #11
 8002c78:	2109      	movs	r1, #9
 8002c7a:	4822      	ldr	r0, [pc, #136]	; (8002d04 <TIM2_IRQHandler+0x2a4>)
 8002c7c:	f7fe fa4b 	bl	8001116 <pinmode>
		pwm->TIMx_CCR2=(var2);//duty cycle
 8002c80:	4b1b      	ldr	r3, [pc, #108]	; (8002cf0 <TIM2_IRQHandler+0x290>)
 8002c82:	681a      	ldr	r2, [r3, #0]
 8002c84:	4b1d      	ldr	r3, [pc, #116]	; (8002cfc <TIM2_IRQHandler+0x29c>)
 8002c86:	681b      	ldr	r3, [r3, #0]
 8002c88:	639a      	str	r2, [r3, #56]	; 0x38
	}

	if(var3>=(top/2)){
 8002c8a:	4b15      	ldr	r3, [pc, #84]	; (8002ce0 <TIM2_IRQHandler+0x280>)
 8002c8c:	681b      	ldr	r3, [r3, #0]
 8002c8e:	0fda      	lsrs	r2, r3, #31
 8002c90:	4413      	add	r3, r2
 8002c92:	105b      	asrs	r3, r3, #1
 8002c94:	461a      	mov	r2, r3
 8002c96:	4b18      	ldr	r3, [pc, #96]	; (8002cf8 <TIM2_IRQHandler+0x298>)
 8002c98:	681b      	ldr	r3, [r3, #0]
 8002c9a:	429a      	cmp	r2, r3
 8002c9c:	dc34      	bgt.n	8002d08 <TIM2_IRQHandler+0x2a8>
		//pwm->TIMx_CCR3=(0);//duty cycle
		pinmode(GPIOA, pin10,GPIO_MODE_INTPUT_AF);
 8002c9e:	2204      	movs	r2, #4
 8002ca0:	210a      	movs	r1, #10
 8002ca2:	4818      	ldr	r0, [pc, #96]	; (8002d04 <TIM2_IRQHandler+0x2a4>)
 8002ca4:	f7fe fa37 	bl	8001116 <pinmode>
		pinmode(GPIOB, pin0, GPIO_MODE_OUTPUT_AF_push_pull_Speed50);
 8002ca8:	220b      	movs	r2, #11
 8002caa:	2100      	movs	r1, #0
 8002cac:	4806      	ldr	r0, [pc, #24]	; (8002cc8 <TIM2_IRQHandler+0x268>)
 8002cae:	f7fe fa32 	bl	8001116 <pinmode>
		half_wave->TIMx_CCR3=(var3);//duty cycle
 8002cb2:	4b11      	ldr	r3, [pc, #68]	; (8002cf8 <TIM2_IRQHandler+0x298>)
 8002cb4:	681a      	ldr	r2, [r3, #0]
 8002cb6:	4b12      	ldr	r3, [pc, #72]	; (8002d00 <TIM2_IRQHandler+0x2a0>)
 8002cb8:	681b      	ldr	r3, [r3, #0]
 8002cba:	63da      	str	r2, [r3, #60]	; 0x3c
 8002cbc:	e033      	b.n	8002d26 <TIM2_IRQHandler+0x2c6>
 8002cbe:	bf00      	nop
 8002cc0:	54442d18 	.word	0x54442d18
 8002cc4:	401921fb 	.word	0x401921fb
 8002cc8:	40010c00 	.word	0x40010c00
 8002ccc:	20000004 	.word	0x20000004
 8002cd0:	200000d0 	.word	0x200000d0
 8002cd4:	2000001c 	.word	0x2000001c
 8002cd8:	20000010 	.word	0x20000010
 8002cdc:	42fe0000 	.word	0x42fe0000
 8002ce0:	2000000c 	.word	0x2000000c
 8002ce4:	437f0000 	.word	0x437f0000
 8002ce8:	200000b8 	.word	0x200000b8
 8002cec:	20000014 	.word	0x20000014
 8002cf0:	200000bc 	.word	0x200000bc
 8002cf4:	20000018 	.word	0x20000018
 8002cf8:	200000c0 	.word	0x200000c0
 8002cfc:	20000000 	.word	0x20000000
 8002d00:	20000008 	.word	0x20000008
 8002d04:	40010800 	.word	0x40010800
	}
	else{
		pinmode(GPIOB, pin0, GPIO_MODE_INTPUT_AF);
 8002d08:	2204      	movs	r2, #4
 8002d0a:	2100      	movs	r1, #0
 8002d0c:	481e      	ldr	r0, [pc, #120]	; (8002d88 <TIM2_IRQHandler+0x328>)
 8002d0e:	f7fe fa02 	bl	8001116 <pinmode>
		pinmode(GPIOA, pin10,GPIO_MODE_OUTPUT_AF_push_pull_Speed50);
 8002d12:	220b      	movs	r2, #11
 8002d14:	210a      	movs	r1, #10
 8002d16:	481d      	ldr	r0, [pc, #116]	; (8002d8c <TIM2_IRQHandler+0x32c>)
 8002d18:	f7fe f9fd 	bl	8001116 <pinmode>
		pwm->TIMx_CCR3=(var3);//duty cycle
 8002d1c:	4b1c      	ldr	r3, [pc, #112]	; (8002d90 <TIM2_IRQHandler+0x330>)
 8002d1e:	681a      	ldr	r2, [r3, #0]
 8002d20:	4b1c      	ldr	r3, [pc, #112]	; (8002d94 <TIM2_IRQHandler+0x334>)
 8002d22:	681b      	ldr	r3, [r3, #0]
 8002d24:	63da      	str	r2, [r3, #60]	; 0x3c
	}
	pwm->TIMx_PSC=presc;//prescaller
 8002d26:	4b1c      	ldr	r3, [pc, #112]	; (8002d98 <TIM2_IRQHandler+0x338>)
 8002d28:	681a      	ldr	r2, [r3, #0]
 8002d2a:	4b1a      	ldr	r3, [pc, #104]	; (8002d94 <TIM2_IRQHandler+0x334>)
 8002d2c:	681b      	ldr	r3, [r3, #0]
 8002d2e:	629a      	str	r2, [r3, #40]	; 0x28
	half_wave->TIMx_PSC=presc;//prescaller
 8002d30:	4b19      	ldr	r3, [pc, #100]	; (8002d98 <TIM2_IRQHandler+0x338>)
 8002d32:	681a      	ldr	r2, [r3, #0]
 8002d34:	4b19      	ldr	r3, [pc, #100]	; (8002d9c <TIM2_IRQHandler+0x33c>)
 8002d36:	681b      	ldr	r3, [r3, #0]
 8002d38:	629a      	str	r2, [r3, #40]	; 0x28
	pwm->TIMx_EGR |=(1<<0);
 8002d3a:	4b16      	ldr	r3, [pc, #88]	; (8002d94 <TIM2_IRQHandler+0x334>)
 8002d3c:	681b      	ldr	r3, [r3, #0]
 8002d3e:	695a      	ldr	r2, [r3, #20]
 8002d40:	4b14      	ldr	r3, [pc, #80]	; (8002d94 <TIM2_IRQHandler+0x334>)
 8002d42:	681b      	ldr	r3, [r3, #0]
 8002d44:	f042 0201 	orr.w	r2, r2, #1
 8002d48:	615a      	str	r2, [r3, #20]
	half_wave->TIMx_EGR |=(1<<0);
 8002d4a:	4b14      	ldr	r3, [pc, #80]	; (8002d9c <TIM2_IRQHandler+0x33c>)
 8002d4c:	681b      	ldr	r3, [r3, #0]
 8002d4e:	695a      	ldr	r2, [r3, #20]
 8002d50:	4b12      	ldr	r3, [pc, #72]	; (8002d9c <TIM2_IRQHandler+0x33c>)
 8002d52:	681b      	ldr	r3, [r3, #0]
 8002d54:	f042 0201 	orr.w	r2, r2, #1
 8002d58:	615a      	str	r2, [r3, #20]
	pwm->TIMx_CR1 |=(1<<0);//enable the timer
 8002d5a:	4b0e      	ldr	r3, [pc, #56]	; (8002d94 <TIM2_IRQHandler+0x334>)
 8002d5c:	681b      	ldr	r3, [r3, #0]
 8002d5e:	681a      	ldr	r2, [r3, #0]
 8002d60:	4b0c      	ldr	r3, [pc, #48]	; (8002d94 <TIM2_IRQHandler+0x334>)
 8002d62:	681b      	ldr	r3, [r3, #0]
 8002d64:	f042 0201 	orr.w	r2, r2, #1
 8002d68:	601a      	str	r2, [r3, #0]
	half_wave->TIMx_CR1 |=(1<<0);//enable the timer
 8002d6a:	4b0c      	ldr	r3, [pc, #48]	; (8002d9c <TIM2_IRQHandler+0x33c>)
 8002d6c:	681b      	ldr	r3, [r3, #0]
 8002d6e:	681a      	ldr	r2, [r3, #0]
 8002d70:	4b0a      	ldr	r3, [pc, #40]	; (8002d9c <TIM2_IRQHandler+0x33c>)
 8002d72:	681b      	ldr	r3, [r3, #0]
 8002d74:	f042 0201 	orr.w	r2, r2, #1
 8002d78:	601a      	str	r2, [r3, #0]
	pinwrite(GPIOB, pin1 ,LOW);
 8002d7a:	2200      	movs	r2, #0
 8002d7c:	2101      	movs	r1, #1
 8002d7e:	4802      	ldr	r0, [pc, #8]	; (8002d88 <TIM2_IRQHandler+0x328>)
 8002d80:	f7fe fa88 	bl	8001294 <pinwrite>
}
 8002d84:	bf00      	nop
 8002d86:	bd98      	pop	{r3, r4, r7, pc}
 8002d88:	40010c00 	.word	0x40010c00
 8002d8c:	40010800 	.word	0x40010800
 8002d90:	200000c0 	.word	0x200000c0
 8002d94:	20000000 	.word	0x20000000
 8002d98:	200000b4 	.word	0x200000b4
 8002d9c:	20000008 	.word	0x20000008

08002da0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8002da0:	b580      	push	{r7, lr}
 8002da2:	b086      	sub	sp, #24
 8002da4:	af00      	add	r7, sp, #0
 8002da6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8002da8:	4a14      	ldr	r2, [pc, #80]	; (8002dfc <_sbrk+0x5c>)
 8002daa:	4b15      	ldr	r3, [pc, #84]	; (8002e00 <_sbrk+0x60>)
 8002dac:	1ad3      	subs	r3, r2, r3
 8002dae:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002db0:	697b      	ldr	r3, [r7, #20]
 8002db2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initalize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002db4:	4b13      	ldr	r3, [pc, #76]	; (8002e04 <_sbrk+0x64>)
 8002db6:	681b      	ldr	r3, [r3, #0]
 8002db8:	2b00      	cmp	r3, #0
 8002dba:	d102      	bne.n	8002dc2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8002dbc:	4b11      	ldr	r3, [pc, #68]	; (8002e04 <_sbrk+0x64>)
 8002dbe:	4a12      	ldr	r2, [pc, #72]	; (8002e08 <_sbrk+0x68>)
 8002dc0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002dc2:	4b10      	ldr	r3, [pc, #64]	; (8002e04 <_sbrk+0x64>)
 8002dc4:	681a      	ldr	r2, [r3, #0]
 8002dc6:	687b      	ldr	r3, [r7, #4]
 8002dc8:	4413      	add	r3, r2
 8002dca:	693a      	ldr	r2, [r7, #16]
 8002dcc:	429a      	cmp	r2, r3
 8002dce:	d207      	bcs.n	8002de0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002dd0:	f000 f846 	bl	8002e60 <__errno>
 8002dd4:	4602      	mov	r2, r0
 8002dd6:	230c      	movs	r3, #12
 8002dd8:	6013      	str	r3, [r2, #0]
    return (void *)-1;
 8002dda:	f04f 33ff 	mov.w	r3, #4294967295
 8002dde:	e009      	b.n	8002df4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002de0:	4b08      	ldr	r3, [pc, #32]	; (8002e04 <_sbrk+0x64>)
 8002de2:	681b      	ldr	r3, [r3, #0]
 8002de4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8002de6:	4b07      	ldr	r3, [pc, #28]	; (8002e04 <_sbrk+0x64>)
 8002de8:	681a      	ldr	r2, [r3, #0]
 8002dea:	687b      	ldr	r3, [r7, #4]
 8002dec:	4413      	add	r3, r2
 8002dee:	4a05      	ldr	r2, [pc, #20]	; (8002e04 <_sbrk+0x64>)
 8002df0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8002df2:	68fb      	ldr	r3, [r7, #12]
}
 8002df4:	4618      	mov	r0, r3
 8002df6:	3718      	adds	r7, #24
 8002df8:	46bd      	mov	sp, r7
 8002dfa:	bd80      	pop	{r7, pc}
 8002dfc:	20002800 	.word	0x20002800
 8002e00:	00000400 	.word	0x00000400
 8002e04:	200000d4 	.word	0x200000d4
 8002e08:	20000120 	.word	0x20000120

08002e0c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8002e0c:	480d      	ldr	r0, [pc, #52]	; (8002e44 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8002e0e:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8002e10:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8002e14:	480c      	ldr	r0, [pc, #48]	; (8002e48 <LoopForever+0x6>)
  ldr r1, =_edata
 8002e16:	490d      	ldr	r1, [pc, #52]	; (8002e4c <LoopForever+0xa>)
  ldr r2, =_sidata
 8002e18:	4a0d      	ldr	r2, [pc, #52]	; (8002e50 <LoopForever+0xe>)
  movs r3, #0
 8002e1a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8002e1c:	e002      	b.n	8002e24 <LoopCopyDataInit>

08002e1e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8002e1e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8002e20:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8002e22:	3304      	adds	r3, #4

08002e24 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002e24:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8002e26:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002e28:	d3f9      	bcc.n	8002e1e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8002e2a:	4a0a      	ldr	r2, [pc, #40]	; (8002e54 <LoopForever+0x12>)
  ldr r4, =_ebss
 8002e2c:	4c0a      	ldr	r4, [pc, #40]	; (8002e58 <LoopForever+0x16>)
  movs r3, #0
 8002e2e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8002e30:	e001      	b.n	8002e36 <LoopFillZerobss>

08002e32 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8002e32:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002e34:	3204      	adds	r2, #4

08002e36 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8002e36:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002e38:	d3fb      	bcc.n	8002e32 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8002e3a:	f000 f817 	bl	8002e6c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8002e3e:	f7ff fd79 	bl	8002934 <main>

08002e42 <LoopForever>:

LoopForever:
    b LoopForever
 8002e42:	e7fe      	b.n	8002e42 <LoopForever>
  ldr   r0, =_estack
 8002e44:	20002800 	.word	0x20002800
  ldr r0, =_sdata
 8002e48:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8002e4c:	20000094 	.word	0x20000094
  ldr r2, =_sidata
 8002e50:	08005840 	.word	0x08005840
  ldr r2, =_sbss
 8002e54:	20000094 	.word	0x20000094
  ldr r4, =_ebss
 8002e58:	20000120 	.word	0x20000120

08002e5c <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8002e5c:	e7fe      	b.n	8002e5c <ADC1_2_IRQHandler>
	...

08002e60 <__errno>:
 8002e60:	4b01      	ldr	r3, [pc, #4]	; (8002e68 <__errno+0x8>)
 8002e62:	6818      	ldr	r0, [r3, #0]
 8002e64:	4770      	bx	lr
 8002e66:	bf00      	nop
 8002e68:	20000030 	.word	0x20000030

08002e6c <__libc_init_array>:
 8002e6c:	b570      	push	{r4, r5, r6, lr}
 8002e6e:	2500      	movs	r5, #0
 8002e70:	4e0c      	ldr	r6, [pc, #48]	; (8002ea4 <__libc_init_array+0x38>)
 8002e72:	4c0d      	ldr	r4, [pc, #52]	; (8002ea8 <__libc_init_array+0x3c>)
 8002e74:	1ba4      	subs	r4, r4, r6
 8002e76:	10a4      	asrs	r4, r4, #2
 8002e78:	42a5      	cmp	r5, r4
 8002e7a:	d109      	bne.n	8002e90 <__libc_init_array+0x24>
 8002e7c:	f002 f9ce 	bl	800521c <_init>
 8002e80:	2500      	movs	r5, #0
 8002e82:	4e0a      	ldr	r6, [pc, #40]	; (8002eac <__libc_init_array+0x40>)
 8002e84:	4c0a      	ldr	r4, [pc, #40]	; (8002eb0 <__libc_init_array+0x44>)
 8002e86:	1ba4      	subs	r4, r4, r6
 8002e88:	10a4      	asrs	r4, r4, #2
 8002e8a:	42a5      	cmp	r5, r4
 8002e8c:	d105      	bne.n	8002e9a <__libc_init_array+0x2e>
 8002e8e:	bd70      	pop	{r4, r5, r6, pc}
 8002e90:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8002e94:	4798      	blx	r3
 8002e96:	3501      	adds	r5, #1
 8002e98:	e7ee      	b.n	8002e78 <__libc_init_array+0xc>
 8002e9a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8002e9e:	4798      	blx	r3
 8002ea0:	3501      	adds	r5, #1
 8002ea2:	e7f2      	b.n	8002e8a <__libc_init_array+0x1e>
 8002ea4:	08005838 	.word	0x08005838
 8002ea8:	08005838 	.word	0x08005838
 8002eac:	08005838 	.word	0x08005838
 8002eb0:	0800583c 	.word	0x0800583c

08002eb4 <siprintf>:
 8002eb4:	b40e      	push	{r1, r2, r3}
 8002eb6:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8002eba:	b500      	push	{lr}
 8002ebc:	b09c      	sub	sp, #112	; 0x70
 8002ebe:	ab1d      	add	r3, sp, #116	; 0x74
 8002ec0:	9002      	str	r0, [sp, #8]
 8002ec2:	9006      	str	r0, [sp, #24]
 8002ec4:	9107      	str	r1, [sp, #28]
 8002ec6:	9104      	str	r1, [sp, #16]
 8002ec8:	4808      	ldr	r0, [pc, #32]	; (8002eec <siprintf+0x38>)
 8002eca:	4909      	ldr	r1, [pc, #36]	; (8002ef0 <siprintf+0x3c>)
 8002ecc:	f853 2b04 	ldr.w	r2, [r3], #4
 8002ed0:	9105      	str	r1, [sp, #20]
 8002ed2:	6800      	ldr	r0, [r0, #0]
 8002ed4:	a902      	add	r1, sp, #8
 8002ed6:	9301      	str	r3, [sp, #4]
 8002ed8:	f000 f8e6 	bl	80030a8 <_svfiprintf_r>
 8002edc:	2200      	movs	r2, #0
 8002ede:	9b02      	ldr	r3, [sp, #8]
 8002ee0:	701a      	strb	r2, [r3, #0]
 8002ee2:	b01c      	add	sp, #112	; 0x70
 8002ee4:	f85d eb04 	ldr.w	lr, [sp], #4
 8002ee8:	b003      	add	sp, #12
 8002eea:	4770      	bx	lr
 8002eec:	20000030 	.word	0x20000030
 8002ef0:	ffff0208 	.word	0xffff0208

08002ef4 <_malloc_r>:
 8002ef4:	b570      	push	{r4, r5, r6, lr}
 8002ef6:	1ccd      	adds	r5, r1, #3
 8002ef8:	f025 0503 	bic.w	r5, r5, #3
 8002efc:	3508      	adds	r5, #8
 8002efe:	2d0c      	cmp	r5, #12
 8002f00:	bf38      	it	cc
 8002f02:	250c      	movcc	r5, #12
 8002f04:	2d00      	cmp	r5, #0
 8002f06:	4606      	mov	r6, r0
 8002f08:	db01      	blt.n	8002f0e <_malloc_r+0x1a>
 8002f0a:	42a9      	cmp	r1, r5
 8002f0c:	d903      	bls.n	8002f16 <_malloc_r+0x22>
 8002f0e:	230c      	movs	r3, #12
 8002f10:	6033      	str	r3, [r6, #0]
 8002f12:	2000      	movs	r0, #0
 8002f14:	bd70      	pop	{r4, r5, r6, pc}
 8002f16:	f000 fb89 	bl	800362c <__malloc_lock>
 8002f1a:	4a21      	ldr	r2, [pc, #132]	; (8002fa0 <_malloc_r+0xac>)
 8002f1c:	6814      	ldr	r4, [r2, #0]
 8002f1e:	4621      	mov	r1, r4
 8002f20:	b991      	cbnz	r1, 8002f48 <_malloc_r+0x54>
 8002f22:	4c20      	ldr	r4, [pc, #128]	; (8002fa4 <_malloc_r+0xb0>)
 8002f24:	6823      	ldr	r3, [r4, #0]
 8002f26:	b91b      	cbnz	r3, 8002f30 <_malloc_r+0x3c>
 8002f28:	4630      	mov	r0, r6
 8002f2a:	f000 fb3d 	bl	80035a8 <_sbrk_r>
 8002f2e:	6020      	str	r0, [r4, #0]
 8002f30:	4629      	mov	r1, r5
 8002f32:	4630      	mov	r0, r6
 8002f34:	f000 fb38 	bl	80035a8 <_sbrk_r>
 8002f38:	1c43      	adds	r3, r0, #1
 8002f3a:	d124      	bne.n	8002f86 <_malloc_r+0x92>
 8002f3c:	230c      	movs	r3, #12
 8002f3e:	4630      	mov	r0, r6
 8002f40:	6033      	str	r3, [r6, #0]
 8002f42:	f000 fb74 	bl	800362e <__malloc_unlock>
 8002f46:	e7e4      	b.n	8002f12 <_malloc_r+0x1e>
 8002f48:	680b      	ldr	r3, [r1, #0]
 8002f4a:	1b5b      	subs	r3, r3, r5
 8002f4c:	d418      	bmi.n	8002f80 <_malloc_r+0x8c>
 8002f4e:	2b0b      	cmp	r3, #11
 8002f50:	d90f      	bls.n	8002f72 <_malloc_r+0x7e>
 8002f52:	600b      	str	r3, [r1, #0]
 8002f54:	18cc      	adds	r4, r1, r3
 8002f56:	50cd      	str	r5, [r1, r3]
 8002f58:	4630      	mov	r0, r6
 8002f5a:	f000 fb68 	bl	800362e <__malloc_unlock>
 8002f5e:	f104 000b 	add.w	r0, r4, #11
 8002f62:	1d23      	adds	r3, r4, #4
 8002f64:	f020 0007 	bic.w	r0, r0, #7
 8002f68:	1ac3      	subs	r3, r0, r3
 8002f6a:	d0d3      	beq.n	8002f14 <_malloc_r+0x20>
 8002f6c:	425a      	negs	r2, r3
 8002f6e:	50e2      	str	r2, [r4, r3]
 8002f70:	e7d0      	b.n	8002f14 <_malloc_r+0x20>
 8002f72:	684b      	ldr	r3, [r1, #4]
 8002f74:	428c      	cmp	r4, r1
 8002f76:	bf16      	itet	ne
 8002f78:	6063      	strne	r3, [r4, #4]
 8002f7a:	6013      	streq	r3, [r2, #0]
 8002f7c:	460c      	movne	r4, r1
 8002f7e:	e7eb      	b.n	8002f58 <_malloc_r+0x64>
 8002f80:	460c      	mov	r4, r1
 8002f82:	6849      	ldr	r1, [r1, #4]
 8002f84:	e7cc      	b.n	8002f20 <_malloc_r+0x2c>
 8002f86:	1cc4      	adds	r4, r0, #3
 8002f88:	f024 0403 	bic.w	r4, r4, #3
 8002f8c:	42a0      	cmp	r0, r4
 8002f8e:	d005      	beq.n	8002f9c <_malloc_r+0xa8>
 8002f90:	1a21      	subs	r1, r4, r0
 8002f92:	4630      	mov	r0, r6
 8002f94:	f000 fb08 	bl	80035a8 <_sbrk_r>
 8002f98:	3001      	adds	r0, #1
 8002f9a:	d0cf      	beq.n	8002f3c <_malloc_r+0x48>
 8002f9c:	6025      	str	r5, [r4, #0]
 8002f9e:	e7db      	b.n	8002f58 <_malloc_r+0x64>
 8002fa0:	200000d8 	.word	0x200000d8
 8002fa4:	200000dc 	.word	0x200000dc

08002fa8 <_realloc_r>:
 8002fa8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002faa:	4607      	mov	r7, r0
 8002fac:	4614      	mov	r4, r2
 8002fae:	460e      	mov	r6, r1
 8002fb0:	b921      	cbnz	r1, 8002fbc <_realloc_r+0x14>
 8002fb2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8002fb6:	4611      	mov	r1, r2
 8002fb8:	f7ff bf9c 	b.w	8002ef4 <_malloc_r>
 8002fbc:	b922      	cbnz	r2, 8002fc8 <_realloc_r+0x20>
 8002fbe:	f000 fb37 	bl	8003630 <_free_r>
 8002fc2:	4625      	mov	r5, r4
 8002fc4:	4628      	mov	r0, r5
 8002fc6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002fc8:	f000 fb7e 	bl	80036c8 <_malloc_usable_size_r>
 8002fcc:	42a0      	cmp	r0, r4
 8002fce:	d20f      	bcs.n	8002ff0 <_realloc_r+0x48>
 8002fd0:	4621      	mov	r1, r4
 8002fd2:	4638      	mov	r0, r7
 8002fd4:	f7ff ff8e 	bl	8002ef4 <_malloc_r>
 8002fd8:	4605      	mov	r5, r0
 8002fda:	2800      	cmp	r0, #0
 8002fdc:	d0f2      	beq.n	8002fc4 <_realloc_r+0x1c>
 8002fde:	4631      	mov	r1, r6
 8002fe0:	4622      	mov	r2, r4
 8002fe2:	f000 faff 	bl	80035e4 <memcpy>
 8002fe6:	4631      	mov	r1, r6
 8002fe8:	4638      	mov	r0, r7
 8002fea:	f000 fb21 	bl	8003630 <_free_r>
 8002fee:	e7e9      	b.n	8002fc4 <_realloc_r+0x1c>
 8002ff0:	4635      	mov	r5, r6
 8002ff2:	e7e7      	b.n	8002fc4 <_realloc_r+0x1c>

08002ff4 <__ssputs_r>:
 8002ff4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002ff8:	688e      	ldr	r6, [r1, #8]
 8002ffa:	4682      	mov	sl, r0
 8002ffc:	429e      	cmp	r6, r3
 8002ffe:	460c      	mov	r4, r1
 8003000:	4690      	mov	r8, r2
 8003002:	4699      	mov	r9, r3
 8003004:	d837      	bhi.n	8003076 <__ssputs_r+0x82>
 8003006:	898a      	ldrh	r2, [r1, #12]
 8003008:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800300c:	d031      	beq.n	8003072 <__ssputs_r+0x7e>
 800300e:	2302      	movs	r3, #2
 8003010:	6825      	ldr	r5, [r4, #0]
 8003012:	6909      	ldr	r1, [r1, #16]
 8003014:	1a6f      	subs	r7, r5, r1
 8003016:	6965      	ldr	r5, [r4, #20]
 8003018:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800301c:	fb95 f5f3 	sdiv	r5, r5, r3
 8003020:	f109 0301 	add.w	r3, r9, #1
 8003024:	443b      	add	r3, r7
 8003026:	429d      	cmp	r5, r3
 8003028:	bf38      	it	cc
 800302a:	461d      	movcc	r5, r3
 800302c:	0553      	lsls	r3, r2, #21
 800302e:	d530      	bpl.n	8003092 <__ssputs_r+0x9e>
 8003030:	4629      	mov	r1, r5
 8003032:	f7ff ff5f 	bl	8002ef4 <_malloc_r>
 8003036:	4606      	mov	r6, r0
 8003038:	b950      	cbnz	r0, 8003050 <__ssputs_r+0x5c>
 800303a:	230c      	movs	r3, #12
 800303c:	f04f 30ff 	mov.w	r0, #4294967295
 8003040:	f8ca 3000 	str.w	r3, [sl]
 8003044:	89a3      	ldrh	r3, [r4, #12]
 8003046:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800304a:	81a3      	strh	r3, [r4, #12]
 800304c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003050:	463a      	mov	r2, r7
 8003052:	6921      	ldr	r1, [r4, #16]
 8003054:	f000 fac6 	bl	80035e4 <memcpy>
 8003058:	89a3      	ldrh	r3, [r4, #12]
 800305a:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800305e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003062:	81a3      	strh	r3, [r4, #12]
 8003064:	6126      	str	r6, [r4, #16]
 8003066:	443e      	add	r6, r7
 8003068:	6026      	str	r6, [r4, #0]
 800306a:	464e      	mov	r6, r9
 800306c:	6165      	str	r5, [r4, #20]
 800306e:	1bed      	subs	r5, r5, r7
 8003070:	60a5      	str	r5, [r4, #8]
 8003072:	454e      	cmp	r6, r9
 8003074:	d900      	bls.n	8003078 <__ssputs_r+0x84>
 8003076:	464e      	mov	r6, r9
 8003078:	4632      	mov	r2, r6
 800307a:	4641      	mov	r1, r8
 800307c:	6820      	ldr	r0, [r4, #0]
 800307e:	f000 fabc 	bl	80035fa <memmove>
 8003082:	68a3      	ldr	r3, [r4, #8]
 8003084:	2000      	movs	r0, #0
 8003086:	1b9b      	subs	r3, r3, r6
 8003088:	60a3      	str	r3, [r4, #8]
 800308a:	6823      	ldr	r3, [r4, #0]
 800308c:	441e      	add	r6, r3
 800308e:	6026      	str	r6, [r4, #0]
 8003090:	e7dc      	b.n	800304c <__ssputs_r+0x58>
 8003092:	462a      	mov	r2, r5
 8003094:	f7ff ff88 	bl	8002fa8 <_realloc_r>
 8003098:	4606      	mov	r6, r0
 800309a:	2800      	cmp	r0, #0
 800309c:	d1e2      	bne.n	8003064 <__ssputs_r+0x70>
 800309e:	6921      	ldr	r1, [r4, #16]
 80030a0:	4650      	mov	r0, sl
 80030a2:	f000 fac5 	bl	8003630 <_free_r>
 80030a6:	e7c8      	b.n	800303a <__ssputs_r+0x46>

080030a8 <_svfiprintf_r>:
 80030a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80030ac:	461d      	mov	r5, r3
 80030ae:	898b      	ldrh	r3, [r1, #12]
 80030b0:	b09d      	sub	sp, #116	; 0x74
 80030b2:	061f      	lsls	r7, r3, #24
 80030b4:	4680      	mov	r8, r0
 80030b6:	460c      	mov	r4, r1
 80030b8:	4616      	mov	r6, r2
 80030ba:	d50f      	bpl.n	80030dc <_svfiprintf_r+0x34>
 80030bc:	690b      	ldr	r3, [r1, #16]
 80030be:	b96b      	cbnz	r3, 80030dc <_svfiprintf_r+0x34>
 80030c0:	2140      	movs	r1, #64	; 0x40
 80030c2:	f7ff ff17 	bl	8002ef4 <_malloc_r>
 80030c6:	6020      	str	r0, [r4, #0]
 80030c8:	6120      	str	r0, [r4, #16]
 80030ca:	b928      	cbnz	r0, 80030d8 <_svfiprintf_r+0x30>
 80030cc:	230c      	movs	r3, #12
 80030ce:	f8c8 3000 	str.w	r3, [r8]
 80030d2:	f04f 30ff 	mov.w	r0, #4294967295
 80030d6:	e0c8      	b.n	800326a <_svfiprintf_r+0x1c2>
 80030d8:	2340      	movs	r3, #64	; 0x40
 80030da:	6163      	str	r3, [r4, #20]
 80030dc:	2300      	movs	r3, #0
 80030de:	9309      	str	r3, [sp, #36]	; 0x24
 80030e0:	2320      	movs	r3, #32
 80030e2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80030e6:	2330      	movs	r3, #48	; 0x30
 80030e8:	f04f 0b01 	mov.w	fp, #1
 80030ec:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80030f0:	9503      	str	r5, [sp, #12]
 80030f2:	4637      	mov	r7, r6
 80030f4:	463d      	mov	r5, r7
 80030f6:	f815 3b01 	ldrb.w	r3, [r5], #1
 80030fa:	b10b      	cbz	r3, 8003100 <_svfiprintf_r+0x58>
 80030fc:	2b25      	cmp	r3, #37	; 0x25
 80030fe:	d13e      	bne.n	800317e <_svfiprintf_r+0xd6>
 8003100:	ebb7 0a06 	subs.w	sl, r7, r6
 8003104:	d00b      	beq.n	800311e <_svfiprintf_r+0x76>
 8003106:	4653      	mov	r3, sl
 8003108:	4632      	mov	r2, r6
 800310a:	4621      	mov	r1, r4
 800310c:	4640      	mov	r0, r8
 800310e:	f7ff ff71 	bl	8002ff4 <__ssputs_r>
 8003112:	3001      	adds	r0, #1
 8003114:	f000 80a4 	beq.w	8003260 <_svfiprintf_r+0x1b8>
 8003118:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800311a:	4453      	add	r3, sl
 800311c:	9309      	str	r3, [sp, #36]	; 0x24
 800311e:	783b      	ldrb	r3, [r7, #0]
 8003120:	2b00      	cmp	r3, #0
 8003122:	f000 809d 	beq.w	8003260 <_svfiprintf_r+0x1b8>
 8003126:	2300      	movs	r3, #0
 8003128:	f04f 32ff 	mov.w	r2, #4294967295
 800312c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003130:	9304      	str	r3, [sp, #16]
 8003132:	9307      	str	r3, [sp, #28]
 8003134:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8003138:	931a      	str	r3, [sp, #104]	; 0x68
 800313a:	462f      	mov	r7, r5
 800313c:	2205      	movs	r2, #5
 800313e:	f817 1b01 	ldrb.w	r1, [r7], #1
 8003142:	4850      	ldr	r0, [pc, #320]	; (8003284 <_svfiprintf_r+0x1dc>)
 8003144:	f000 fa40 	bl	80035c8 <memchr>
 8003148:	9b04      	ldr	r3, [sp, #16]
 800314a:	b9d0      	cbnz	r0, 8003182 <_svfiprintf_r+0xda>
 800314c:	06d9      	lsls	r1, r3, #27
 800314e:	bf44      	itt	mi
 8003150:	2220      	movmi	r2, #32
 8003152:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8003156:	071a      	lsls	r2, r3, #28
 8003158:	bf44      	itt	mi
 800315a:	222b      	movmi	r2, #43	; 0x2b
 800315c:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8003160:	782a      	ldrb	r2, [r5, #0]
 8003162:	2a2a      	cmp	r2, #42	; 0x2a
 8003164:	d015      	beq.n	8003192 <_svfiprintf_r+0xea>
 8003166:	462f      	mov	r7, r5
 8003168:	2000      	movs	r0, #0
 800316a:	250a      	movs	r5, #10
 800316c:	9a07      	ldr	r2, [sp, #28]
 800316e:	4639      	mov	r1, r7
 8003170:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003174:	3b30      	subs	r3, #48	; 0x30
 8003176:	2b09      	cmp	r3, #9
 8003178:	d94d      	bls.n	8003216 <_svfiprintf_r+0x16e>
 800317a:	b1b8      	cbz	r0, 80031ac <_svfiprintf_r+0x104>
 800317c:	e00f      	b.n	800319e <_svfiprintf_r+0xf6>
 800317e:	462f      	mov	r7, r5
 8003180:	e7b8      	b.n	80030f4 <_svfiprintf_r+0x4c>
 8003182:	4a40      	ldr	r2, [pc, #256]	; (8003284 <_svfiprintf_r+0x1dc>)
 8003184:	463d      	mov	r5, r7
 8003186:	1a80      	subs	r0, r0, r2
 8003188:	fa0b f000 	lsl.w	r0, fp, r0
 800318c:	4318      	orrs	r0, r3
 800318e:	9004      	str	r0, [sp, #16]
 8003190:	e7d3      	b.n	800313a <_svfiprintf_r+0x92>
 8003192:	9a03      	ldr	r2, [sp, #12]
 8003194:	1d11      	adds	r1, r2, #4
 8003196:	6812      	ldr	r2, [r2, #0]
 8003198:	9103      	str	r1, [sp, #12]
 800319a:	2a00      	cmp	r2, #0
 800319c:	db01      	blt.n	80031a2 <_svfiprintf_r+0xfa>
 800319e:	9207      	str	r2, [sp, #28]
 80031a0:	e004      	b.n	80031ac <_svfiprintf_r+0x104>
 80031a2:	4252      	negs	r2, r2
 80031a4:	f043 0302 	orr.w	r3, r3, #2
 80031a8:	9207      	str	r2, [sp, #28]
 80031aa:	9304      	str	r3, [sp, #16]
 80031ac:	783b      	ldrb	r3, [r7, #0]
 80031ae:	2b2e      	cmp	r3, #46	; 0x2e
 80031b0:	d10c      	bne.n	80031cc <_svfiprintf_r+0x124>
 80031b2:	787b      	ldrb	r3, [r7, #1]
 80031b4:	2b2a      	cmp	r3, #42	; 0x2a
 80031b6:	d133      	bne.n	8003220 <_svfiprintf_r+0x178>
 80031b8:	9b03      	ldr	r3, [sp, #12]
 80031ba:	3702      	adds	r7, #2
 80031bc:	1d1a      	adds	r2, r3, #4
 80031be:	681b      	ldr	r3, [r3, #0]
 80031c0:	9203      	str	r2, [sp, #12]
 80031c2:	2b00      	cmp	r3, #0
 80031c4:	bfb8      	it	lt
 80031c6:	f04f 33ff 	movlt.w	r3, #4294967295
 80031ca:	9305      	str	r3, [sp, #20]
 80031cc:	4d2e      	ldr	r5, [pc, #184]	; (8003288 <_svfiprintf_r+0x1e0>)
 80031ce:	2203      	movs	r2, #3
 80031d0:	7839      	ldrb	r1, [r7, #0]
 80031d2:	4628      	mov	r0, r5
 80031d4:	f000 f9f8 	bl	80035c8 <memchr>
 80031d8:	b138      	cbz	r0, 80031ea <_svfiprintf_r+0x142>
 80031da:	2340      	movs	r3, #64	; 0x40
 80031dc:	1b40      	subs	r0, r0, r5
 80031de:	fa03 f000 	lsl.w	r0, r3, r0
 80031e2:	9b04      	ldr	r3, [sp, #16]
 80031e4:	3701      	adds	r7, #1
 80031e6:	4303      	orrs	r3, r0
 80031e8:	9304      	str	r3, [sp, #16]
 80031ea:	7839      	ldrb	r1, [r7, #0]
 80031ec:	2206      	movs	r2, #6
 80031ee:	4827      	ldr	r0, [pc, #156]	; (800328c <_svfiprintf_r+0x1e4>)
 80031f0:	1c7e      	adds	r6, r7, #1
 80031f2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80031f6:	f000 f9e7 	bl	80035c8 <memchr>
 80031fa:	2800      	cmp	r0, #0
 80031fc:	d038      	beq.n	8003270 <_svfiprintf_r+0x1c8>
 80031fe:	4b24      	ldr	r3, [pc, #144]	; (8003290 <_svfiprintf_r+0x1e8>)
 8003200:	bb13      	cbnz	r3, 8003248 <_svfiprintf_r+0x1a0>
 8003202:	9b03      	ldr	r3, [sp, #12]
 8003204:	3307      	adds	r3, #7
 8003206:	f023 0307 	bic.w	r3, r3, #7
 800320a:	3308      	adds	r3, #8
 800320c:	9303      	str	r3, [sp, #12]
 800320e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003210:	444b      	add	r3, r9
 8003212:	9309      	str	r3, [sp, #36]	; 0x24
 8003214:	e76d      	b.n	80030f2 <_svfiprintf_r+0x4a>
 8003216:	fb05 3202 	mla	r2, r5, r2, r3
 800321a:	2001      	movs	r0, #1
 800321c:	460f      	mov	r7, r1
 800321e:	e7a6      	b.n	800316e <_svfiprintf_r+0xc6>
 8003220:	2300      	movs	r3, #0
 8003222:	250a      	movs	r5, #10
 8003224:	4619      	mov	r1, r3
 8003226:	3701      	adds	r7, #1
 8003228:	9305      	str	r3, [sp, #20]
 800322a:	4638      	mov	r0, r7
 800322c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003230:	3a30      	subs	r2, #48	; 0x30
 8003232:	2a09      	cmp	r2, #9
 8003234:	d903      	bls.n	800323e <_svfiprintf_r+0x196>
 8003236:	2b00      	cmp	r3, #0
 8003238:	d0c8      	beq.n	80031cc <_svfiprintf_r+0x124>
 800323a:	9105      	str	r1, [sp, #20]
 800323c:	e7c6      	b.n	80031cc <_svfiprintf_r+0x124>
 800323e:	fb05 2101 	mla	r1, r5, r1, r2
 8003242:	2301      	movs	r3, #1
 8003244:	4607      	mov	r7, r0
 8003246:	e7f0      	b.n	800322a <_svfiprintf_r+0x182>
 8003248:	ab03      	add	r3, sp, #12
 800324a:	9300      	str	r3, [sp, #0]
 800324c:	4622      	mov	r2, r4
 800324e:	4b11      	ldr	r3, [pc, #68]	; (8003294 <_svfiprintf_r+0x1ec>)
 8003250:	a904      	add	r1, sp, #16
 8003252:	4640      	mov	r0, r8
 8003254:	f3af 8000 	nop.w
 8003258:	f1b0 3fff 	cmp.w	r0, #4294967295
 800325c:	4681      	mov	r9, r0
 800325e:	d1d6      	bne.n	800320e <_svfiprintf_r+0x166>
 8003260:	89a3      	ldrh	r3, [r4, #12]
 8003262:	065b      	lsls	r3, r3, #25
 8003264:	f53f af35 	bmi.w	80030d2 <_svfiprintf_r+0x2a>
 8003268:	9809      	ldr	r0, [sp, #36]	; 0x24
 800326a:	b01d      	add	sp, #116	; 0x74
 800326c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003270:	ab03      	add	r3, sp, #12
 8003272:	9300      	str	r3, [sp, #0]
 8003274:	4622      	mov	r2, r4
 8003276:	4b07      	ldr	r3, [pc, #28]	; (8003294 <_svfiprintf_r+0x1ec>)
 8003278:	a904      	add	r1, sp, #16
 800327a:	4640      	mov	r0, r8
 800327c:	f000 f882 	bl	8003384 <_printf_i>
 8003280:	e7ea      	b.n	8003258 <_svfiprintf_r+0x1b0>
 8003282:	bf00      	nop
 8003284:	08005259 	.word	0x08005259
 8003288:	0800525f 	.word	0x0800525f
 800328c:	08005263 	.word	0x08005263
 8003290:	00000000 	.word	0x00000000
 8003294:	08002ff5 	.word	0x08002ff5

08003298 <_printf_common>:
 8003298:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800329c:	4691      	mov	r9, r2
 800329e:	461f      	mov	r7, r3
 80032a0:	688a      	ldr	r2, [r1, #8]
 80032a2:	690b      	ldr	r3, [r1, #16]
 80032a4:	4606      	mov	r6, r0
 80032a6:	4293      	cmp	r3, r2
 80032a8:	bfb8      	it	lt
 80032aa:	4613      	movlt	r3, r2
 80032ac:	f8c9 3000 	str.w	r3, [r9]
 80032b0:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80032b4:	460c      	mov	r4, r1
 80032b6:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80032ba:	b112      	cbz	r2, 80032c2 <_printf_common+0x2a>
 80032bc:	3301      	adds	r3, #1
 80032be:	f8c9 3000 	str.w	r3, [r9]
 80032c2:	6823      	ldr	r3, [r4, #0]
 80032c4:	0699      	lsls	r1, r3, #26
 80032c6:	bf42      	ittt	mi
 80032c8:	f8d9 3000 	ldrmi.w	r3, [r9]
 80032cc:	3302      	addmi	r3, #2
 80032ce:	f8c9 3000 	strmi.w	r3, [r9]
 80032d2:	6825      	ldr	r5, [r4, #0]
 80032d4:	f015 0506 	ands.w	r5, r5, #6
 80032d8:	d107      	bne.n	80032ea <_printf_common+0x52>
 80032da:	f104 0a19 	add.w	sl, r4, #25
 80032de:	68e3      	ldr	r3, [r4, #12]
 80032e0:	f8d9 2000 	ldr.w	r2, [r9]
 80032e4:	1a9b      	subs	r3, r3, r2
 80032e6:	42ab      	cmp	r3, r5
 80032e8:	dc29      	bgt.n	800333e <_printf_common+0xa6>
 80032ea:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 80032ee:	6822      	ldr	r2, [r4, #0]
 80032f0:	3300      	adds	r3, #0
 80032f2:	bf18      	it	ne
 80032f4:	2301      	movne	r3, #1
 80032f6:	0692      	lsls	r2, r2, #26
 80032f8:	d42e      	bmi.n	8003358 <_printf_common+0xc0>
 80032fa:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80032fe:	4639      	mov	r1, r7
 8003300:	4630      	mov	r0, r6
 8003302:	47c0      	blx	r8
 8003304:	3001      	adds	r0, #1
 8003306:	d021      	beq.n	800334c <_printf_common+0xb4>
 8003308:	6823      	ldr	r3, [r4, #0]
 800330a:	68e5      	ldr	r5, [r4, #12]
 800330c:	f003 0306 	and.w	r3, r3, #6
 8003310:	2b04      	cmp	r3, #4
 8003312:	bf18      	it	ne
 8003314:	2500      	movne	r5, #0
 8003316:	f8d9 2000 	ldr.w	r2, [r9]
 800331a:	f04f 0900 	mov.w	r9, #0
 800331e:	bf08      	it	eq
 8003320:	1aad      	subeq	r5, r5, r2
 8003322:	68a3      	ldr	r3, [r4, #8]
 8003324:	6922      	ldr	r2, [r4, #16]
 8003326:	bf08      	it	eq
 8003328:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800332c:	4293      	cmp	r3, r2
 800332e:	bfc4      	itt	gt
 8003330:	1a9b      	subgt	r3, r3, r2
 8003332:	18ed      	addgt	r5, r5, r3
 8003334:	341a      	adds	r4, #26
 8003336:	454d      	cmp	r5, r9
 8003338:	d11a      	bne.n	8003370 <_printf_common+0xd8>
 800333a:	2000      	movs	r0, #0
 800333c:	e008      	b.n	8003350 <_printf_common+0xb8>
 800333e:	2301      	movs	r3, #1
 8003340:	4652      	mov	r2, sl
 8003342:	4639      	mov	r1, r7
 8003344:	4630      	mov	r0, r6
 8003346:	47c0      	blx	r8
 8003348:	3001      	adds	r0, #1
 800334a:	d103      	bne.n	8003354 <_printf_common+0xbc>
 800334c:	f04f 30ff 	mov.w	r0, #4294967295
 8003350:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003354:	3501      	adds	r5, #1
 8003356:	e7c2      	b.n	80032de <_printf_common+0x46>
 8003358:	2030      	movs	r0, #48	; 0x30
 800335a:	18e1      	adds	r1, r4, r3
 800335c:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8003360:	1c5a      	adds	r2, r3, #1
 8003362:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8003366:	4422      	add	r2, r4
 8003368:	3302      	adds	r3, #2
 800336a:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800336e:	e7c4      	b.n	80032fa <_printf_common+0x62>
 8003370:	2301      	movs	r3, #1
 8003372:	4622      	mov	r2, r4
 8003374:	4639      	mov	r1, r7
 8003376:	4630      	mov	r0, r6
 8003378:	47c0      	blx	r8
 800337a:	3001      	adds	r0, #1
 800337c:	d0e6      	beq.n	800334c <_printf_common+0xb4>
 800337e:	f109 0901 	add.w	r9, r9, #1
 8003382:	e7d8      	b.n	8003336 <_printf_common+0x9e>

08003384 <_printf_i>:
 8003384:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003388:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 800338c:	460c      	mov	r4, r1
 800338e:	7e09      	ldrb	r1, [r1, #24]
 8003390:	b085      	sub	sp, #20
 8003392:	296e      	cmp	r1, #110	; 0x6e
 8003394:	4617      	mov	r7, r2
 8003396:	4606      	mov	r6, r0
 8003398:	4698      	mov	r8, r3
 800339a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800339c:	f000 80b3 	beq.w	8003506 <_printf_i+0x182>
 80033a0:	d822      	bhi.n	80033e8 <_printf_i+0x64>
 80033a2:	2963      	cmp	r1, #99	; 0x63
 80033a4:	d036      	beq.n	8003414 <_printf_i+0x90>
 80033a6:	d80a      	bhi.n	80033be <_printf_i+0x3a>
 80033a8:	2900      	cmp	r1, #0
 80033aa:	f000 80b9 	beq.w	8003520 <_printf_i+0x19c>
 80033ae:	2958      	cmp	r1, #88	; 0x58
 80033b0:	f000 8083 	beq.w	80034ba <_printf_i+0x136>
 80033b4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80033b8:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 80033bc:	e032      	b.n	8003424 <_printf_i+0xa0>
 80033be:	2964      	cmp	r1, #100	; 0x64
 80033c0:	d001      	beq.n	80033c6 <_printf_i+0x42>
 80033c2:	2969      	cmp	r1, #105	; 0x69
 80033c4:	d1f6      	bne.n	80033b4 <_printf_i+0x30>
 80033c6:	6820      	ldr	r0, [r4, #0]
 80033c8:	6813      	ldr	r3, [r2, #0]
 80033ca:	0605      	lsls	r5, r0, #24
 80033cc:	f103 0104 	add.w	r1, r3, #4
 80033d0:	d52a      	bpl.n	8003428 <_printf_i+0xa4>
 80033d2:	681b      	ldr	r3, [r3, #0]
 80033d4:	6011      	str	r1, [r2, #0]
 80033d6:	2b00      	cmp	r3, #0
 80033d8:	da03      	bge.n	80033e2 <_printf_i+0x5e>
 80033da:	222d      	movs	r2, #45	; 0x2d
 80033dc:	425b      	negs	r3, r3
 80033de:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 80033e2:	486f      	ldr	r0, [pc, #444]	; (80035a0 <_printf_i+0x21c>)
 80033e4:	220a      	movs	r2, #10
 80033e6:	e039      	b.n	800345c <_printf_i+0xd8>
 80033e8:	2973      	cmp	r1, #115	; 0x73
 80033ea:	f000 809d 	beq.w	8003528 <_printf_i+0x1a4>
 80033ee:	d808      	bhi.n	8003402 <_printf_i+0x7e>
 80033f0:	296f      	cmp	r1, #111	; 0x6f
 80033f2:	d020      	beq.n	8003436 <_printf_i+0xb2>
 80033f4:	2970      	cmp	r1, #112	; 0x70
 80033f6:	d1dd      	bne.n	80033b4 <_printf_i+0x30>
 80033f8:	6823      	ldr	r3, [r4, #0]
 80033fa:	f043 0320 	orr.w	r3, r3, #32
 80033fe:	6023      	str	r3, [r4, #0]
 8003400:	e003      	b.n	800340a <_printf_i+0x86>
 8003402:	2975      	cmp	r1, #117	; 0x75
 8003404:	d017      	beq.n	8003436 <_printf_i+0xb2>
 8003406:	2978      	cmp	r1, #120	; 0x78
 8003408:	d1d4      	bne.n	80033b4 <_printf_i+0x30>
 800340a:	2378      	movs	r3, #120	; 0x78
 800340c:	4865      	ldr	r0, [pc, #404]	; (80035a4 <_printf_i+0x220>)
 800340e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8003412:	e055      	b.n	80034c0 <_printf_i+0x13c>
 8003414:	6813      	ldr	r3, [r2, #0]
 8003416:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800341a:	1d19      	adds	r1, r3, #4
 800341c:	681b      	ldr	r3, [r3, #0]
 800341e:	6011      	str	r1, [r2, #0]
 8003420:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8003424:	2301      	movs	r3, #1
 8003426:	e08c      	b.n	8003542 <_printf_i+0x1be>
 8003428:	681b      	ldr	r3, [r3, #0]
 800342a:	f010 0f40 	tst.w	r0, #64	; 0x40
 800342e:	6011      	str	r1, [r2, #0]
 8003430:	bf18      	it	ne
 8003432:	b21b      	sxthne	r3, r3
 8003434:	e7cf      	b.n	80033d6 <_printf_i+0x52>
 8003436:	6813      	ldr	r3, [r2, #0]
 8003438:	6825      	ldr	r5, [r4, #0]
 800343a:	1d18      	adds	r0, r3, #4
 800343c:	6010      	str	r0, [r2, #0]
 800343e:	0628      	lsls	r0, r5, #24
 8003440:	d501      	bpl.n	8003446 <_printf_i+0xc2>
 8003442:	681b      	ldr	r3, [r3, #0]
 8003444:	e002      	b.n	800344c <_printf_i+0xc8>
 8003446:	0668      	lsls	r0, r5, #25
 8003448:	d5fb      	bpl.n	8003442 <_printf_i+0xbe>
 800344a:	881b      	ldrh	r3, [r3, #0]
 800344c:	296f      	cmp	r1, #111	; 0x6f
 800344e:	bf14      	ite	ne
 8003450:	220a      	movne	r2, #10
 8003452:	2208      	moveq	r2, #8
 8003454:	4852      	ldr	r0, [pc, #328]	; (80035a0 <_printf_i+0x21c>)
 8003456:	2100      	movs	r1, #0
 8003458:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800345c:	6865      	ldr	r5, [r4, #4]
 800345e:	2d00      	cmp	r5, #0
 8003460:	60a5      	str	r5, [r4, #8]
 8003462:	f2c0 8095 	blt.w	8003590 <_printf_i+0x20c>
 8003466:	6821      	ldr	r1, [r4, #0]
 8003468:	f021 0104 	bic.w	r1, r1, #4
 800346c:	6021      	str	r1, [r4, #0]
 800346e:	2b00      	cmp	r3, #0
 8003470:	d13d      	bne.n	80034ee <_printf_i+0x16a>
 8003472:	2d00      	cmp	r5, #0
 8003474:	f040 808e 	bne.w	8003594 <_printf_i+0x210>
 8003478:	4665      	mov	r5, ip
 800347a:	2a08      	cmp	r2, #8
 800347c:	d10b      	bne.n	8003496 <_printf_i+0x112>
 800347e:	6823      	ldr	r3, [r4, #0]
 8003480:	07db      	lsls	r3, r3, #31
 8003482:	d508      	bpl.n	8003496 <_printf_i+0x112>
 8003484:	6923      	ldr	r3, [r4, #16]
 8003486:	6862      	ldr	r2, [r4, #4]
 8003488:	429a      	cmp	r2, r3
 800348a:	bfde      	ittt	le
 800348c:	2330      	movle	r3, #48	; 0x30
 800348e:	f805 3c01 	strble.w	r3, [r5, #-1]
 8003492:	f105 35ff 	addle.w	r5, r5, #4294967295
 8003496:	ebac 0305 	sub.w	r3, ip, r5
 800349a:	6123      	str	r3, [r4, #16]
 800349c:	f8cd 8000 	str.w	r8, [sp]
 80034a0:	463b      	mov	r3, r7
 80034a2:	aa03      	add	r2, sp, #12
 80034a4:	4621      	mov	r1, r4
 80034a6:	4630      	mov	r0, r6
 80034a8:	f7ff fef6 	bl	8003298 <_printf_common>
 80034ac:	3001      	adds	r0, #1
 80034ae:	d14d      	bne.n	800354c <_printf_i+0x1c8>
 80034b0:	f04f 30ff 	mov.w	r0, #4294967295
 80034b4:	b005      	add	sp, #20
 80034b6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80034ba:	4839      	ldr	r0, [pc, #228]	; (80035a0 <_printf_i+0x21c>)
 80034bc:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 80034c0:	6813      	ldr	r3, [r2, #0]
 80034c2:	6821      	ldr	r1, [r4, #0]
 80034c4:	1d1d      	adds	r5, r3, #4
 80034c6:	681b      	ldr	r3, [r3, #0]
 80034c8:	6015      	str	r5, [r2, #0]
 80034ca:	060a      	lsls	r2, r1, #24
 80034cc:	d50b      	bpl.n	80034e6 <_printf_i+0x162>
 80034ce:	07ca      	lsls	r2, r1, #31
 80034d0:	bf44      	itt	mi
 80034d2:	f041 0120 	orrmi.w	r1, r1, #32
 80034d6:	6021      	strmi	r1, [r4, #0]
 80034d8:	b91b      	cbnz	r3, 80034e2 <_printf_i+0x15e>
 80034da:	6822      	ldr	r2, [r4, #0]
 80034dc:	f022 0220 	bic.w	r2, r2, #32
 80034e0:	6022      	str	r2, [r4, #0]
 80034e2:	2210      	movs	r2, #16
 80034e4:	e7b7      	b.n	8003456 <_printf_i+0xd2>
 80034e6:	064d      	lsls	r5, r1, #25
 80034e8:	bf48      	it	mi
 80034ea:	b29b      	uxthmi	r3, r3
 80034ec:	e7ef      	b.n	80034ce <_printf_i+0x14a>
 80034ee:	4665      	mov	r5, ip
 80034f0:	fbb3 f1f2 	udiv	r1, r3, r2
 80034f4:	fb02 3311 	mls	r3, r2, r1, r3
 80034f8:	5cc3      	ldrb	r3, [r0, r3]
 80034fa:	f805 3d01 	strb.w	r3, [r5, #-1]!
 80034fe:	460b      	mov	r3, r1
 8003500:	2900      	cmp	r1, #0
 8003502:	d1f5      	bne.n	80034f0 <_printf_i+0x16c>
 8003504:	e7b9      	b.n	800347a <_printf_i+0xf6>
 8003506:	6813      	ldr	r3, [r2, #0]
 8003508:	6825      	ldr	r5, [r4, #0]
 800350a:	1d18      	adds	r0, r3, #4
 800350c:	6961      	ldr	r1, [r4, #20]
 800350e:	6010      	str	r0, [r2, #0]
 8003510:	0628      	lsls	r0, r5, #24
 8003512:	681b      	ldr	r3, [r3, #0]
 8003514:	d501      	bpl.n	800351a <_printf_i+0x196>
 8003516:	6019      	str	r1, [r3, #0]
 8003518:	e002      	b.n	8003520 <_printf_i+0x19c>
 800351a:	066a      	lsls	r2, r5, #25
 800351c:	d5fb      	bpl.n	8003516 <_printf_i+0x192>
 800351e:	8019      	strh	r1, [r3, #0]
 8003520:	2300      	movs	r3, #0
 8003522:	4665      	mov	r5, ip
 8003524:	6123      	str	r3, [r4, #16]
 8003526:	e7b9      	b.n	800349c <_printf_i+0x118>
 8003528:	6813      	ldr	r3, [r2, #0]
 800352a:	1d19      	adds	r1, r3, #4
 800352c:	6011      	str	r1, [r2, #0]
 800352e:	681d      	ldr	r5, [r3, #0]
 8003530:	6862      	ldr	r2, [r4, #4]
 8003532:	2100      	movs	r1, #0
 8003534:	4628      	mov	r0, r5
 8003536:	f000 f847 	bl	80035c8 <memchr>
 800353a:	b108      	cbz	r0, 8003540 <_printf_i+0x1bc>
 800353c:	1b40      	subs	r0, r0, r5
 800353e:	6060      	str	r0, [r4, #4]
 8003540:	6863      	ldr	r3, [r4, #4]
 8003542:	6123      	str	r3, [r4, #16]
 8003544:	2300      	movs	r3, #0
 8003546:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800354a:	e7a7      	b.n	800349c <_printf_i+0x118>
 800354c:	6923      	ldr	r3, [r4, #16]
 800354e:	462a      	mov	r2, r5
 8003550:	4639      	mov	r1, r7
 8003552:	4630      	mov	r0, r6
 8003554:	47c0      	blx	r8
 8003556:	3001      	adds	r0, #1
 8003558:	d0aa      	beq.n	80034b0 <_printf_i+0x12c>
 800355a:	6823      	ldr	r3, [r4, #0]
 800355c:	079b      	lsls	r3, r3, #30
 800355e:	d413      	bmi.n	8003588 <_printf_i+0x204>
 8003560:	68e0      	ldr	r0, [r4, #12]
 8003562:	9b03      	ldr	r3, [sp, #12]
 8003564:	4298      	cmp	r0, r3
 8003566:	bfb8      	it	lt
 8003568:	4618      	movlt	r0, r3
 800356a:	e7a3      	b.n	80034b4 <_printf_i+0x130>
 800356c:	2301      	movs	r3, #1
 800356e:	464a      	mov	r2, r9
 8003570:	4639      	mov	r1, r7
 8003572:	4630      	mov	r0, r6
 8003574:	47c0      	blx	r8
 8003576:	3001      	adds	r0, #1
 8003578:	d09a      	beq.n	80034b0 <_printf_i+0x12c>
 800357a:	3501      	adds	r5, #1
 800357c:	68e3      	ldr	r3, [r4, #12]
 800357e:	9a03      	ldr	r2, [sp, #12]
 8003580:	1a9b      	subs	r3, r3, r2
 8003582:	42ab      	cmp	r3, r5
 8003584:	dcf2      	bgt.n	800356c <_printf_i+0x1e8>
 8003586:	e7eb      	b.n	8003560 <_printf_i+0x1dc>
 8003588:	2500      	movs	r5, #0
 800358a:	f104 0919 	add.w	r9, r4, #25
 800358e:	e7f5      	b.n	800357c <_printf_i+0x1f8>
 8003590:	2b00      	cmp	r3, #0
 8003592:	d1ac      	bne.n	80034ee <_printf_i+0x16a>
 8003594:	7803      	ldrb	r3, [r0, #0]
 8003596:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800359a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800359e:	e76c      	b.n	800347a <_printf_i+0xf6>
 80035a0:	0800526a 	.word	0x0800526a
 80035a4:	0800527b 	.word	0x0800527b

080035a8 <_sbrk_r>:
 80035a8:	b538      	push	{r3, r4, r5, lr}
 80035aa:	2300      	movs	r3, #0
 80035ac:	4c05      	ldr	r4, [pc, #20]	; (80035c4 <_sbrk_r+0x1c>)
 80035ae:	4605      	mov	r5, r0
 80035b0:	4608      	mov	r0, r1
 80035b2:	6023      	str	r3, [r4, #0]
 80035b4:	f7ff fbf4 	bl	8002da0 <_sbrk>
 80035b8:	1c43      	adds	r3, r0, #1
 80035ba:	d102      	bne.n	80035c2 <_sbrk_r+0x1a>
 80035bc:	6823      	ldr	r3, [r4, #0]
 80035be:	b103      	cbz	r3, 80035c2 <_sbrk_r+0x1a>
 80035c0:	602b      	str	r3, [r5, #0]
 80035c2:	bd38      	pop	{r3, r4, r5, pc}
 80035c4:	2000011c 	.word	0x2000011c

080035c8 <memchr>:
 80035c8:	b510      	push	{r4, lr}
 80035ca:	b2c9      	uxtb	r1, r1
 80035cc:	4402      	add	r2, r0
 80035ce:	4290      	cmp	r0, r2
 80035d0:	4603      	mov	r3, r0
 80035d2:	d101      	bne.n	80035d8 <memchr+0x10>
 80035d4:	2300      	movs	r3, #0
 80035d6:	e003      	b.n	80035e0 <memchr+0x18>
 80035d8:	781c      	ldrb	r4, [r3, #0]
 80035da:	3001      	adds	r0, #1
 80035dc:	428c      	cmp	r4, r1
 80035de:	d1f6      	bne.n	80035ce <memchr+0x6>
 80035e0:	4618      	mov	r0, r3
 80035e2:	bd10      	pop	{r4, pc}

080035e4 <memcpy>:
 80035e4:	b510      	push	{r4, lr}
 80035e6:	1e43      	subs	r3, r0, #1
 80035e8:	440a      	add	r2, r1
 80035ea:	4291      	cmp	r1, r2
 80035ec:	d100      	bne.n	80035f0 <memcpy+0xc>
 80035ee:	bd10      	pop	{r4, pc}
 80035f0:	f811 4b01 	ldrb.w	r4, [r1], #1
 80035f4:	f803 4f01 	strb.w	r4, [r3, #1]!
 80035f8:	e7f7      	b.n	80035ea <memcpy+0x6>

080035fa <memmove>:
 80035fa:	4288      	cmp	r0, r1
 80035fc:	b510      	push	{r4, lr}
 80035fe:	eb01 0302 	add.w	r3, r1, r2
 8003602:	d807      	bhi.n	8003614 <memmove+0x1a>
 8003604:	1e42      	subs	r2, r0, #1
 8003606:	4299      	cmp	r1, r3
 8003608:	d00a      	beq.n	8003620 <memmove+0x26>
 800360a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800360e:	f802 4f01 	strb.w	r4, [r2, #1]!
 8003612:	e7f8      	b.n	8003606 <memmove+0xc>
 8003614:	4283      	cmp	r3, r0
 8003616:	d9f5      	bls.n	8003604 <memmove+0xa>
 8003618:	1881      	adds	r1, r0, r2
 800361a:	1ad2      	subs	r2, r2, r3
 800361c:	42d3      	cmn	r3, r2
 800361e:	d100      	bne.n	8003622 <memmove+0x28>
 8003620:	bd10      	pop	{r4, pc}
 8003622:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8003626:	f801 4d01 	strb.w	r4, [r1, #-1]!
 800362a:	e7f7      	b.n	800361c <memmove+0x22>

0800362c <__malloc_lock>:
 800362c:	4770      	bx	lr

0800362e <__malloc_unlock>:
 800362e:	4770      	bx	lr

08003630 <_free_r>:
 8003630:	b538      	push	{r3, r4, r5, lr}
 8003632:	4605      	mov	r5, r0
 8003634:	2900      	cmp	r1, #0
 8003636:	d043      	beq.n	80036c0 <_free_r+0x90>
 8003638:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800363c:	1f0c      	subs	r4, r1, #4
 800363e:	2b00      	cmp	r3, #0
 8003640:	bfb8      	it	lt
 8003642:	18e4      	addlt	r4, r4, r3
 8003644:	f7ff fff2 	bl	800362c <__malloc_lock>
 8003648:	4a1e      	ldr	r2, [pc, #120]	; (80036c4 <_free_r+0x94>)
 800364a:	6813      	ldr	r3, [r2, #0]
 800364c:	4610      	mov	r0, r2
 800364e:	b933      	cbnz	r3, 800365e <_free_r+0x2e>
 8003650:	6063      	str	r3, [r4, #4]
 8003652:	6014      	str	r4, [r2, #0]
 8003654:	4628      	mov	r0, r5
 8003656:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800365a:	f7ff bfe8 	b.w	800362e <__malloc_unlock>
 800365e:	42a3      	cmp	r3, r4
 8003660:	d90b      	bls.n	800367a <_free_r+0x4a>
 8003662:	6821      	ldr	r1, [r4, #0]
 8003664:	1862      	adds	r2, r4, r1
 8003666:	4293      	cmp	r3, r2
 8003668:	bf01      	itttt	eq
 800366a:	681a      	ldreq	r2, [r3, #0]
 800366c:	685b      	ldreq	r3, [r3, #4]
 800366e:	1852      	addeq	r2, r2, r1
 8003670:	6022      	streq	r2, [r4, #0]
 8003672:	6063      	str	r3, [r4, #4]
 8003674:	6004      	str	r4, [r0, #0]
 8003676:	e7ed      	b.n	8003654 <_free_r+0x24>
 8003678:	4613      	mov	r3, r2
 800367a:	685a      	ldr	r2, [r3, #4]
 800367c:	b10a      	cbz	r2, 8003682 <_free_r+0x52>
 800367e:	42a2      	cmp	r2, r4
 8003680:	d9fa      	bls.n	8003678 <_free_r+0x48>
 8003682:	6819      	ldr	r1, [r3, #0]
 8003684:	1858      	adds	r0, r3, r1
 8003686:	42a0      	cmp	r0, r4
 8003688:	d10b      	bne.n	80036a2 <_free_r+0x72>
 800368a:	6820      	ldr	r0, [r4, #0]
 800368c:	4401      	add	r1, r0
 800368e:	1858      	adds	r0, r3, r1
 8003690:	4282      	cmp	r2, r0
 8003692:	6019      	str	r1, [r3, #0]
 8003694:	d1de      	bne.n	8003654 <_free_r+0x24>
 8003696:	6810      	ldr	r0, [r2, #0]
 8003698:	6852      	ldr	r2, [r2, #4]
 800369a:	4401      	add	r1, r0
 800369c:	6019      	str	r1, [r3, #0]
 800369e:	605a      	str	r2, [r3, #4]
 80036a0:	e7d8      	b.n	8003654 <_free_r+0x24>
 80036a2:	d902      	bls.n	80036aa <_free_r+0x7a>
 80036a4:	230c      	movs	r3, #12
 80036a6:	602b      	str	r3, [r5, #0]
 80036a8:	e7d4      	b.n	8003654 <_free_r+0x24>
 80036aa:	6820      	ldr	r0, [r4, #0]
 80036ac:	1821      	adds	r1, r4, r0
 80036ae:	428a      	cmp	r2, r1
 80036b0:	bf01      	itttt	eq
 80036b2:	6811      	ldreq	r1, [r2, #0]
 80036b4:	6852      	ldreq	r2, [r2, #4]
 80036b6:	1809      	addeq	r1, r1, r0
 80036b8:	6021      	streq	r1, [r4, #0]
 80036ba:	6062      	str	r2, [r4, #4]
 80036bc:	605c      	str	r4, [r3, #4]
 80036be:	e7c9      	b.n	8003654 <_free_r+0x24>
 80036c0:	bd38      	pop	{r3, r4, r5, pc}
 80036c2:	bf00      	nop
 80036c4:	200000d8 	.word	0x200000d8

080036c8 <_malloc_usable_size_r>:
 80036c8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80036cc:	1f18      	subs	r0, r3, #4
 80036ce:	2b00      	cmp	r3, #0
 80036d0:	bfbc      	itt	lt
 80036d2:	580b      	ldrlt	r3, [r1, r0]
 80036d4:	18c0      	addlt	r0, r0, r3
 80036d6:	4770      	bx	lr

080036d8 <sin>:
 80036d8:	b530      	push	{r4, r5, lr}
 80036da:	4a1a      	ldr	r2, [pc, #104]	; (8003744 <sin+0x6c>)
 80036dc:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 80036e0:	4293      	cmp	r3, r2
 80036e2:	b087      	sub	sp, #28
 80036e4:	dc06      	bgt.n	80036f4 <sin+0x1c>
 80036e6:	2300      	movs	r3, #0
 80036e8:	2200      	movs	r2, #0
 80036ea:	9300      	str	r3, [sp, #0]
 80036ec:	2300      	movs	r3, #0
 80036ee:	f000 ffb3 	bl	8004658 <__kernel_sin>
 80036f2:	e006      	b.n	8003702 <sin+0x2a>
 80036f4:	4a14      	ldr	r2, [pc, #80]	; (8003748 <sin+0x70>)
 80036f6:	4293      	cmp	r3, r2
 80036f8:	dd05      	ble.n	8003706 <sin+0x2e>
 80036fa:	4602      	mov	r2, r0
 80036fc:	460b      	mov	r3, r1
 80036fe:	f7fc fd3b 	bl	8000178 <__aeabi_dsub>
 8003702:	b007      	add	sp, #28
 8003704:	bd30      	pop	{r4, r5, pc}
 8003706:	aa02      	add	r2, sp, #8
 8003708:	f000 f856 	bl	80037b8 <__ieee754_rem_pio2>
 800370c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003710:	f000 0403 	and.w	r4, r0, #3
 8003714:	2c01      	cmp	r4, #1
 8003716:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800371a:	d005      	beq.n	8003728 <sin+0x50>
 800371c:	2c02      	cmp	r4, #2
 800371e:	d006      	beq.n	800372e <sin+0x56>
 8003720:	b964      	cbnz	r4, 800373c <sin+0x64>
 8003722:	2401      	movs	r4, #1
 8003724:	9400      	str	r4, [sp, #0]
 8003726:	e7e2      	b.n	80036ee <sin+0x16>
 8003728:	f000 fb8e 	bl	8003e48 <__kernel_cos>
 800372c:	e7e9      	b.n	8003702 <sin+0x2a>
 800372e:	2401      	movs	r4, #1
 8003730:	9400      	str	r4, [sp, #0]
 8003732:	f000 ff91 	bl	8004658 <__kernel_sin>
 8003736:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 800373a:	e7e2      	b.n	8003702 <sin+0x2a>
 800373c:	f000 fb84 	bl	8003e48 <__kernel_cos>
 8003740:	e7f9      	b.n	8003736 <sin+0x5e>
 8003742:	bf00      	nop
 8003744:	3fe921fb 	.word	0x3fe921fb
 8003748:	7fefffff 	.word	0x7fefffff

0800374c <sinf>:
 800374c:	b507      	push	{r0, r1, r2, lr}
 800374e:	4a19      	ldr	r2, [pc, #100]	; (80037b4 <sinf+0x68>)
 8003750:	f020 4300 	bic.w	r3, r0, #2147483648	; 0x80000000
 8003754:	4293      	cmp	r3, r2
 8003756:	4601      	mov	r1, r0
 8003758:	dc04      	bgt.n	8003764 <sinf+0x18>
 800375a:	2200      	movs	r2, #0
 800375c:	2100      	movs	r1, #0
 800375e:	f001 fb4f 	bl	8004e00 <__kernel_sinf>
 8003762:	e004      	b.n	800376e <sinf+0x22>
 8003764:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8003768:	db04      	blt.n	8003774 <sinf+0x28>
 800376a:	f7fd f983 	bl	8000a74 <__aeabi_fsub>
 800376e:	b003      	add	sp, #12
 8003770:	f85d fb04 	ldr.w	pc, [sp], #4
 8003774:	4669      	mov	r1, sp
 8003776:	f000 fa0f 	bl	8003b98 <__ieee754_rem_pio2f>
 800377a:	f000 0003 	and.w	r0, r0, #3
 800377e:	2801      	cmp	r0, #1
 8003780:	d006      	beq.n	8003790 <sinf+0x44>
 8003782:	2802      	cmp	r0, #2
 8003784:	d009      	beq.n	800379a <sinf+0x4e>
 8003786:	b980      	cbnz	r0, 80037aa <sinf+0x5e>
 8003788:	2201      	movs	r2, #1
 800378a:	9901      	ldr	r1, [sp, #4]
 800378c:	9800      	ldr	r0, [sp, #0]
 800378e:	e7e6      	b.n	800375e <sinf+0x12>
 8003790:	9901      	ldr	r1, [sp, #4]
 8003792:	9800      	ldr	r0, [sp, #0]
 8003794:	f001 f816 	bl	80047c4 <__kernel_cosf>
 8003798:	e7e9      	b.n	800376e <sinf+0x22>
 800379a:	2201      	movs	r2, #1
 800379c:	9901      	ldr	r1, [sp, #4]
 800379e:	9800      	ldr	r0, [sp, #0]
 80037a0:	f001 fb2e 	bl	8004e00 <__kernel_sinf>
 80037a4:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 80037a8:	e7e1      	b.n	800376e <sinf+0x22>
 80037aa:	9901      	ldr	r1, [sp, #4]
 80037ac:	9800      	ldr	r0, [sp, #0]
 80037ae:	f001 f809 	bl	80047c4 <__kernel_cosf>
 80037b2:	e7f7      	b.n	80037a4 <sinf+0x58>
 80037b4:	3f490fd8 	.word	0x3f490fd8

080037b8 <__ieee754_rem_pio2>:
 80037b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80037bc:	4614      	mov	r4, r2
 80037be:	4ac2      	ldr	r2, [pc, #776]	; (8003ac8 <__ieee754_rem_pio2+0x310>)
 80037c0:	f021 4a00 	bic.w	sl, r1, #2147483648	; 0x80000000
 80037c4:	4592      	cmp	sl, r2
 80037c6:	b08d      	sub	sp, #52	; 0x34
 80037c8:	468b      	mov	fp, r1
 80037ca:	dc07      	bgt.n	80037dc <__ieee754_rem_pio2+0x24>
 80037cc:	2200      	movs	r2, #0
 80037ce:	2300      	movs	r3, #0
 80037d0:	e9c4 0100 	strd	r0, r1, [r4]
 80037d4:	e9c4 2302 	strd	r2, r3, [r4, #8]
 80037d8:	2500      	movs	r5, #0
 80037da:	e023      	b.n	8003824 <__ieee754_rem_pio2+0x6c>
 80037dc:	4abb      	ldr	r2, [pc, #748]	; (8003acc <__ieee754_rem_pio2+0x314>)
 80037de:	4592      	cmp	sl, r2
 80037e0:	dc71      	bgt.n	80038c6 <__ieee754_rem_pio2+0x10e>
 80037e2:	a3ab      	add	r3, pc, #684	; (adr r3, 8003a90 <__ieee754_rem_pio2+0x2d8>)
 80037e4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80037e8:	2900      	cmp	r1, #0
 80037ea:	4db9      	ldr	r5, [pc, #740]	; (8003ad0 <__ieee754_rem_pio2+0x318>)
 80037ec:	dd36      	ble.n	800385c <__ieee754_rem_pio2+0xa4>
 80037ee:	f7fc fcc3 	bl	8000178 <__aeabi_dsub>
 80037f2:	45aa      	cmp	sl, r5
 80037f4:	4606      	mov	r6, r0
 80037f6:	460f      	mov	r7, r1
 80037f8:	d018      	beq.n	800382c <__ieee754_rem_pio2+0x74>
 80037fa:	a3a7      	add	r3, pc, #668	; (adr r3, 8003a98 <__ieee754_rem_pio2+0x2e0>)
 80037fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003800:	f7fc fcba 	bl	8000178 <__aeabi_dsub>
 8003804:	4602      	mov	r2, r0
 8003806:	460b      	mov	r3, r1
 8003808:	4630      	mov	r0, r6
 800380a:	e9c4 2300 	strd	r2, r3, [r4]
 800380e:	4639      	mov	r1, r7
 8003810:	f7fc fcb2 	bl	8000178 <__aeabi_dsub>
 8003814:	a3a0      	add	r3, pc, #640	; (adr r3, 8003a98 <__ieee754_rem_pio2+0x2e0>)
 8003816:	e9d3 2300 	ldrd	r2, r3, [r3]
 800381a:	f7fc fcad 	bl	8000178 <__aeabi_dsub>
 800381e:	2501      	movs	r5, #1
 8003820:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8003824:	4628      	mov	r0, r5
 8003826:	b00d      	add	sp, #52	; 0x34
 8003828:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800382c:	a39c      	add	r3, pc, #624	; (adr r3, 8003aa0 <__ieee754_rem_pio2+0x2e8>)
 800382e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003832:	f7fc fca1 	bl	8000178 <__aeabi_dsub>
 8003836:	a39c      	add	r3, pc, #624	; (adr r3, 8003aa8 <__ieee754_rem_pio2+0x2f0>)
 8003838:	e9d3 2300 	ldrd	r2, r3, [r3]
 800383c:	4606      	mov	r6, r0
 800383e:	460f      	mov	r7, r1
 8003840:	f7fc fc9a 	bl	8000178 <__aeabi_dsub>
 8003844:	4602      	mov	r2, r0
 8003846:	460b      	mov	r3, r1
 8003848:	4630      	mov	r0, r6
 800384a:	e9c4 2300 	strd	r2, r3, [r4]
 800384e:	4639      	mov	r1, r7
 8003850:	f7fc fc92 	bl	8000178 <__aeabi_dsub>
 8003854:	a394      	add	r3, pc, #592	; (adr r3, 8003aa8 <__ieee754_rem_pio2+0x2f0>)
 8003856:	e9d3 2300 	ldrd	r2, r3, [r3]
 800385a:	e7de      	b.n	800381a <__ieee754_rem_pio2+0x62>
 800385c:	f7fc fc8e 	bl	800017c <__adddf3>
 8003860:	45aa      	cmp	sl, r5
 8003862:	4606      	mov	r6, r0
 8003864:	460f      	mov	r7, r1
 8003866:	d016      	beq.n	8003896 <__ieee754_rem_pio2+0xde>
 8003868:	a38b      	add	r3, pc, #556	; (adr r3, 8003a98 <__ieee754_rem_pio2+0x2e0>)
 800386a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800386e:	f7fc fc85 	bl	800017c <__adddf3>
 8003872:	4602      	mov	r2, r0
 8003874:	460b      	mov	r3, r1
 8003876:	4630      	mov	r0, r6
 8003878:	e9c4 2300 	strd	r2, r3, [r4]
 800387c:	4639      	mov	r1, r7
 800387e:	f7fc fc7b 	bl	8000178 <__aeabi_dsub>
 8003882:	a385      	add	r3, pc, #532	; (adr r3, 8003a98 <__ieee754_rem_pio2+0x2e0>)
 8003884:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003888:	f7fc fc78 	bl	800017c <__adddf3>
 800388c:	f04f 35ff 	mov.w	r5, #4294967295
 8003890:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8003894:	e7c6      	b.n	8003824 <__ieee754_rem_pio2+0x6c>
 8003896:	a382      	add	r3, pc, #520	; (adr r3, 8003aa0 <__ieee754_rem_pio2+0x2e8>)
 8003898:	e9d3 2300 	ldrd	r2, r3, [r3]
 800389c:	f7fc fc6e 	bl	800017c <__adddf3>
 80038a0:	a381      	add	r3, pc, #516	; (adr r3, 8003aa8 <__ieee754_rem_pio2+0x2f0>)
 80038a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80038a6:	4606      	mov	r6, r0
 80038a8:	460f      	mov	r7, r1
 80038aa:	f7fc fc67 	bl	800017c <__adddf3>
 80038ae:	4602      	mov	r2, r0
 80038b0:	460b      	mov	r3, r1
 80038b2:	4630      	mov	r0, r6
 80038b4:	e9c4 2300 	strd	r2, r3, [r4]
 80038b8:	4639      	mov	r1, r7
 80038ba:	f7fc fc5d 	bl	8000178 <__aeabi_dsub>
 80038be:	a37a      	add	r3, pc, #488	; (adr r3, 8003aa8 <__ieee754_rem_pio2+0x2f0>)
 80038c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80038c4:	e7e0      	b.n	8003888 <__ieee754_rem_pio2+0xd0>
 80038c6:	4a83      	ldr	r2, [pc, #524]	; (8003ad4 <__ieee754_rem_pio2+0x31c>)
 80038c8:	4592      	cmp	sl, r2
 80038ca:	f300 80d2 	bgt.w	8003a72 <__ieee754_rem_pio2+0x2ba>
 80038ce:	f001 fb0d 	bl	8004eec <fabs>
 80038d2:	a377      	add	r3, pc, #476	; (adr r3, 8003ab0 <__ieee754_rem_pio2+0x2f8>)
 80038d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80038d8:	4606      	mov	r6, r0
 80038da:	460f      	mov	r7, r1
 80038dc:	f7fc fe04 	bl	80004e8 <__aeabi_dmul>
 80038e0:	2200      	movs	r2, #0
 80038e2:	4b7d      	ldr	r3, [pc, #500]	; (8003ad8 <__ieee754_rem_pio2+0x320>)
 80038e4:	f7fc fc4a 	bl	800017c <__adddf3>
 80038e8:	f7fd f898 	bl	8000a1c <__aeabi_d2iz>
 80038ec:	4605      	mov	r5, r0
 80038ee:	f7fc fd91 	bl	8000414 <__aeabi_i2d>
 80038f2:	a367      	add	r3, pc, #412	; (adr r3, 8003a90 <__ieee754_rem_pio2+0x2d8>)
 80038f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80038f8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80038fc:	f7fc fdf4 	bl	80004e8 <__aeabi_dmul>
 8003900:	4602      	mov	r2, r0
 8003902:	460b      	mov	r3, r1
 8003904:	4630      	mov	r0, r6
 8003906:	4639      	mov	r1, r7
 8003908:	f7fc fc36 	bl	8000178 <__aeabi_dsub>
 800390c:	a362      	add	r3, pc, #392	; (adr r3, 8003a98 <__ieee754_rem_pio2+0x2e0>)
 800390e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003912:	4606      	mov	r6, r0
 8003914:	460f      	mov	r7, r1
 8003916:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800391a:	f7fc fde5 	bl	80004e8 <__aeabi_dmul>
 800391e:	2d1f      	cmp	r5, #31
 8003920:	4680      	mov	r8, r0
 8003922:	4689      	mov	r9, r1
 8003924:	dc0e      	bgt.n	8003944 <__ieee754_rem_pio2+0x18c>
 8003926:	4b6d      	ldr	r3, [pc, #436]	; (8003adc <__ieee754_rem_pio2+0x324>)
 8003928:	1e6a      	subs	r2, r5, #1
 800392a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800392e:	4553      	cmp	r3, sl
 8003930:	d008      	beq.n	8003944 <__ieee754_rem_pio2+0x18c>
 8003932:	4642      	mov	r2, r8
 8003934:	464b      	mov	r3, r9
 8003936:	4630      	mov	r0, r6
 8003938:	4639      	mov	r1, r7
 800393a:	f7fc fc1d 	bl	8000178 <__aeabi_dsub>
 800393e:	e9c4 0100 	strd	r0, r1, [r4]
 8003942:	e011      	b.n	8003968 <__ieee754_rem_pio2+0x1b0>
 8003944:	464b      	mov	r3, r9
 8003946:	4642      	mov	r2, r8
 8003948:	4630      	mov	r0, r6
 800394a:	4639      	mov	r1, r7
 800394c:	f7fc fc14 	bl	8000178 <__aeabi_dsub>
 8003950:	ea4f 5a2a 	mov.w	sl, sl, asr #20
 8003954:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8003958:	ebaa 0303 	sub.w	r3, sl, r3
 800395c:	2b10      	cmp	r3, #16
 800395e:	dc1f      	bgt.n	80039a0 <__ieee754_rem_pio2+0x1e8>
 8003960:	4602      	mov	r2, r0
 8003962:	460b      	mov	r3, r1
 8003964:	e9c4 2300 	strd	r2, r3, [r4]
 8003968:	e9d4 2a00 	ldrd	r2, sl, [r4]
 800396c:	4630      	mov	r0, r6
 800396e:	4653      	mov	r3, sl
 8003970:	4639      	mov	r1, r7
 8003972:	f7fc fc01 	bl	8000178 <__aeabi_dsub>
 8003976:	4642      	mov	r2, r8
 8003978:	464b      	mov	r3, r9
 800397a:	f7fc fbfd 	bl	8000178 <__aeabi_dsub>
 800397e:	4602      	mov	r2, r0
 8003980:	460b      	mov	r3, r1
 8003982:	f1bb 0f00 	cmp.w	fp, #0
 8003986:	e9c4 2302 	strd	r2, r3, [r4, #8]
 800398a:	f6bf af4b 	bge.w	8003824 <__ieee754_rem_pio2+0x6c>
 800398e:	f10a 4300 	add.w	r3, sl, #2147483648	; 0x80000000
 8003992:	e9c4 3001 	strd	r3, r0, [r4, #4]
 8003996:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 800399a:	60e1      	str	r1, [r4, #12]
 800399c:	426d      	negs	r5, r5
 800399e:	e741      	b.n	8003824 <__ieee754_rem_pio2+0x6c>
 80039a0:	a33f      	add	r3, pc, #252	; (adr r3, 8003aa0 <__ieee754_rem_pio2+0x2e8>)
 80039a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80039a6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80039aa:	f7fc fd9d 	bl	80004e8 <__aeabi_dmul>
 80039ae:	4680      	mov	r8, r0
 80039b0:	4689      	mov	r9, r1
 80039b2:	4602      	mov	r2, r0
 80039b4:	460b      	mov	r3, r1
 80039b6:	4630      	mov	r0, r6
 80039b8:	4639      	mov	r1, r7
 80039ba:	f7fc fbdd 	bl	8000178 <__aeabi_dsub>
 80039be:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80039c2:	4602      	mov	r2, r0
 80039c4:	460b      	mov	r3, r1
 80039c6:	4630      	mov	r0, r6
 80039c8:	4639      	mov	r1, r7
 80039ca:	f7fc fbd5 	bl	8000178 <__aeabi_dsub>
 80039ce:	4642      	mov	r2, r8
 80039d0:	464b      	mov	r3, r9
 80039d2:	f7fc fbd1 	bl	8000178 <__aeabi_dsub>
 80039d6:	a334      	add	r3, pc, #208	; (adr r3, 8003aa8 <__ieee754_rem_pio2+0x2f0>)
 80039d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80039dc:	4606      	mov	r6, r0
 80039de:	460f      	mov	r7, r1
 80039e0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80039e4:	f7fc fd80 	bl	80004e8 <__aeabi_dmul>
 80039e8:	4632      	mov	r2, r6
 80039ea:	463b      	mov	r3, r7
 80039ec:	f7fc fbc4 	bl	8000178 <__aeabi_dsub>
 80039f0:	460b      	mov	r3, r1
 80039f2:	4602      	mov	r2, r0
 80039f4:	4680      	mov	r8, r0
 80039f6:	4689      	mov	r9, r1
 80039f8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80039fc:	f7fc fbbc 	bl	8000178 <__aeabi_dsub>
 8003a00:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8003a04:	ebaa 0a03 	sub.w	sl, sl, r3
 8003a08:	f1ba 0f31 	cmp.w	sl, #49	; 0x31
 8003a0c:	dc06      	bgt.n	8003a1c <__ieee754_rem_pio2+0x264>
 8003a0e:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
 8003a12:	4602      	mov	r2, r0
 8003a14:	460b      	mov	r3, r1
 8003a16:	e9c4 2300 	strd	r2, r3, [r4]
 8003a1a:	e7a5      	b.n	8003968 <__ieee754_rem_pio2+0x1b0>
 8003a1c:	a326      	add	r3, pc, #152	; (adr r3, 8003ab8 <__ieee754_rem_pio2+0x300>)
 8003a1e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003a22:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003a26:	f7fc fd5f 	bl	80004e8 <__aeabi_dmul>
 8003a2a:	4680      	mov	r8, r0
 8003a2c:	4689      	mov	r9, r1
 8003a2e:	4602      	mov	r2, r0
 8003a30:	460b      	mov	r3, r1
 8003a32:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003a36:	f7fc fb9f 	bl	8000178 <__aeabi_dsub>
 8003a3a:	4602      	mov	r2, r0
 8003a3c:	460b      	mov	r3, r1
 8003a3e:	4606      	mov	r6, r0
 8003a40:	460f      	mov	r7, r1
 8003a42:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003a46:	f7fc fb97 	bl	8000178 <__aeabi_dsub>
 8003a4a:	4642      	mov	r2, r8
 8003a4c:	464b      	mov	r3, r9
 8003a4e:	f7fc fb93 	bl	8000178 <__aeabi_dsub>
 8003a52:	a31b      	add	r3, pc, #108	; (adr r3, 8003ac0 <__ieee754_rem_pio2+0x308>)
 8003a54:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003a58:	4680      	mov	r8, r0
 8003a5a:	4689      	mov	r9, r1
 8003a5c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003a60:	f7fc fd42 	bl	80004e8 <__aeabi_dmul>
 8003a64:	4642      	mov	r2, r8
 8003a66:	464b      	mov	r3, r9
 8003a68:	f7fc fb86 	bl	8000178 <__aeabi_dsub>
 8003a6c:	4680      	mov	r8, r0
 8003a6e:	4689      	mov	r9, r1
 8003a70:	e75f      	b.n	8003932 <__ieee754_rem_pio2+0x17a>
 8003a72:	4a1b      	ldr	r2, [pc, #108]	; (8003ae0 <__ieee754_rem_pio2+0x328>)
 8003a74:	4592      	cmp	sl, r2
 8003a76:	dd35      	ble.n	8003ae4 <__ieee754_rem_pio2+0x32c>
 8003a78:	4602      	mov	r2, r0
 8003a7a:	460b      	mov	r3, r1
 8003a7c:	f7fc fb7c 	bl	8000178 <__aeabi_dsub>
 8003a80:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8003a84:	e9c4 0100 	strd	r0, r1, [r4]
 8003a88:	e6a6      	b.n	80037d8 <__ieee754_rem_pio2+0x20>
 8003a8a:	bf00      	nop
 8003a8c:	f3af 8000 	nop.w
 8003a90:	54400000 	.word	0x54400000
 8003a94:	3ff921fb 	.word	0x3ff921fb
 8003a98:	1a626331 	.word	0x1a626331
 8003a9c:	3dd0b461 	.word	0x3dd0b461
 8003aa0:	1a600000 	.word	0x1a600000
 8003aa4:	3dd0b461 	.word	0x3dd0b461
 8003aa8:	2e037073 	.word	0x2e037073
 8003aac:	3ba3198a 	.word	0x3ba3198a
 8003ab0:	6dc9c883 	.word	0x6dc9c883
 8003ab4:	3fe45f30 	.word	0x3fe45f30
 8003ab8:	2e000000 	.word	0x2e000000
 8003abc:	3ba3198a 	.word	0x3ba3198a
 8003ac0:	252049c1 	.word	0x252049c1
 8003ac4:	397b839a 	.word	0x397b839a
 8003ac8:	3fe921fb 	.word	0x3fe921fb
 8003acc:	4002d97b 	.word	0x4002d97b
 8003ad0:	3ff921fb 	.word	0x3ff921fb
 8003ad4:	413921fb 	.word	0x413921fb
 8003ad8:	3fe00000 	.word	0x3fe00000
 8003adc:	0800528c 	.word	0x0800528c
 8003ae0:	7fefffff 	.word	0x7fefffff
 8003ae4:	ea4f 552a 	mov.w	r5, sl, asr #20
 8003ae8:	f2a5 4516 	subw	r5, r5, #1046	; 0x416
 8003aec:	ebaa 5105 	sub.w	r1, sl, r5, lsl #20
 8003af0:	460f      	mov	r7, r1
 8003af2:	4606      	mov	r6, r0
 8003af4:	f7fc ff92 	bl	8000a1c <__aeabi_d2iz>
 8003af8:	f7fc fc8c 	bl	8000414 <__aeabi_i2d>
 8003afc:	4602      	mov	r2, r0
 8003afe:	460b      	mov	r3, r1
 8003b00:	4630      	mov	r0, r6
 8003b02:	4639      	mov	r1, r7
 8003b04:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8003b08:	f7fc fb36 	bl	8000178 <__aeabi_dsub>
 8003b0c:	2200      	movs	r2, #0
 8003b0e:	4b20      	ldr	r3, [pc, #128]	; (8003b90 <__ieee754_rem_pio2+0x3d8>)
 8003b10:	f7fc fcea 	bl	80004e8 <__aeabi_dmul>
 8003b14:	460f      	mov	r7, r1
 8003b16:	4606      	mov	r6, r0
 8003b18:	f7fc ff80 	bl	8000a1c <__aeabi_d2iz>
 8003b1c:	f7fc fc7a 	bl	8000414 <__aeabi_i2d>
 8003b20:	4602      	mov	r2, r0
 8003b22:	460b      	mov	r3, r1
 8003b24:	4630      	mov	r0, r6
 8003b26:	4639      	mov	r1, r7
 8003b28:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8003b2c:	f7fc fb24 	bl	8000178 <__aeabi_dsub>
 8003b30:	2200      	movs	r2, #0
 8003b32:	4b17      	ldr	r3, [pc, #92]	; (8003b90 <__ieee754_rem_pio2+0x3d8>)
 8003b34:	f7fc fcd8 	bl	80004e8 <__aeabi_dmul>
 8003b38:	f04f 0803 	mov.w	r8, #3
 8003b3c:	2600      	movs	r6, #0
 8003b3e:	2700      	movs	r7, #0
 8003b40:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8003b44:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 8003b48:	4632      	mov	r2, r6
 8003b4a:	e979 0102 	ldrd	r0, r1, [r9, #-8]!
 8003b4e:	463b      	mov	r3, r7
 8003b50:	f108 3aff 	add.w	sl, r8, #4294967295
 8003b54:	f7fc ff30 	bl	80009b8 <__aeabi_dcmpeq>
 8003b58:	b9b8      	cbnz	r0, 8003b8a <__ieee754_rem_pio2+0x3d2>
 8003b5a:	4b0e      	ldr	r3, [pc, #56]	; (8003b94 <__ieee754_rem_pio2+0x3dc>)
 8003b5c:	462a      	mov	r2, r5
 8003b5e:	9301      	str	r3, [sp, #4]
 8003b60:	2302      	movs	r3, #2
 8003b62:	4621      	mov	r1, r4
 8003b64:	9300      	str	r3, [sp, #0]
 8003b66:	a806      	add	r0, sp, #24
 8003b68:	4643      	mov	r3, r8
 8003b6a:	f000 fa2b 	bl	8003fc4 <__kernel_rem_pio2>
 8003b6e:	f1bb 0f00 	cmp.w	fp, #0
 8003b72:	4605      	mov	r5, r0
 8003b74:	f6bf ae56 	bge.w	8003824 <__ieee754_rem_pio2+0x6c>
 8003b78:	6863      	ldr	r3, [r4, #4]
 8003b7a:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8003b7e:	6063      	str	r3, [r4, #4]
 8003b80:	68e3      	ldr	r3, [r4, #12]
 8003b82:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8003b86:	60e3      	str	r3, [r4, #12]
 8003b88:	e708      	b.n	800399c <__ieee754_rem_pio2+0x1e4>
 8003b8a:	46d0      	mov	r8, sl
 8003b8c:	e7dc      	b.n	8003b48 <__ieee754_rem_pio2+0x390>
 8003b8e:	bf00      	nop
 8003b90:	41700000 	.word	0x41700000
 8003b94:	0800530c 	.word	0x0800530c

08003b98 <__ieee754_rem_pio2f>:
 8003b98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003b9c:	4a9d      	ldr	r2, [pc, #628]	; (8003e14 <__ieee754_rem_pio2f+0x27c>)
 8003b9e:	f020 4500 	bic.w	r5, r0, #2147483648	; 0x80000000
 8003ba2:	4295      	cmp	r5, r2
 8003ba4:	b087      	sub	sp, #28
 8003ba6:	460c      	mov	r4, r1
 8003ba8:	4607      	mov	r7, r0
 8003baa:	dc04      	bgt.n	8003bb6 <__ieee754_rem_pio2f+0x1e>
 8003bac:	2300      	movs	r3, #0
 8003bae:	6020      	str	r0, [r4, #0]
 8003bb0:	604b      	str	r3, [r1, #4]
 8003bb2:	2600      	movs	r6, #0
 8003bb4:	e01a      	b.n	8003bec <__ieee754_rem_pio2f+0x54>
 8003bb6:	4a98      	ldr	r2, [pc, #608]	; (8003e18 <__ieee754_rem_pio2f+0x280>)
 8003bb8:	4295      	cmp	r5, r2
 8003bba:	dc4b      	bgt.n	8003c54 <__ieee754_rem_pio2f+0xbc>
 8003bbc:	2800      	cmp	r0, #0
 8003bbe:	f025 050f 	bic.w	r5, r5, #15
 8003bc2:	4996      	ldr	r1, [pc, #600]	; (8003e1c <__ieee754_rem_pio2f+0x284>)
 8003bc4:	4e96      	ldr	r6, [pc, #600]	; (8003e20 <__ieee754_rem_pio2f+0x288>)
 8003bc6:	dd23      	ble.n	8003c10 <__ieee754_rem_pio2f+0x78>
 8003bc8:	f7fc ff54 	bl	8000a74 <__aeabi_fsub>
 8003bcc:	42b5      	cmp	r5, r6
 8003bce:	4607      	mov	r7, r0
 8003bd0:	d010      	beq.n	8003bf4 <__ieee754_rem_pio2f+0x5c>
 8003bd2:	4994      	ldr	r1, [pc, #592]	; (8003e24 <__ieee754_rem_pio2f+0x28c>)
 8003bd4:	f7fc ff4e 	bl	8000a74 <__aeabi_fsub>
 8003bd8:	4601      	mov	r1, r0
 8003bda:	6020      	str	r0, [r4, #0]
 8003bdc:	4638      	mov	r0, r7
 8003bde:	f7fc ff49 	bl	8000a74 <__aeabi_fsub>
 8003be2:	4990      	ldr	r1, [pc, #576]	; (8003e24 <__ieee754_rem_pio2f+0x28c>)
 8003be4:	f7fc ff46 	bl	8000a74 <__aeabi_fsub>
 8003be8:	2601      	movs	r6, #1
 8003bea:	6060      	str	r0, [r4, #4]
 8003bec:	4630      	mov	r0, r6
 8003bee:	b007      	add	sp, #28
 8003bf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003bf4:	498c      	ldr	r1, [pc, #560]	; (8003e28 <__ieee754_rem_pio2f+0x290>)
 8003bf6:	f7fc ff3d 	bl	8000a74 <__aeabi_fsub>
 8003bfa:	498c      	ldr	r1, [pc, #560]	; (8003e2c <__ieee754_rem_pio2f+0x294>)
 8003bfc:	4605      	mov	r5, r0
 8003bfe:	f7fc ff39 	bl	8000a74 <__aeabi_fsub>
 8003c02:	4601      	mov	r1, r0
 8003c04:	6020      	str	r0, [r4, #0]
 8003c06:	4628      	mov	r0, r5
 8003c08:	f7fc ff34 	bl	8000a74 <__aeabi_fsub>
 8003c0c:	4987      	ldr	r1, [pc, #540]	; (8003e2c <__ieee754_rem_pio2f+0x294>)
 8003c0e:	e7e9      	b.n	8003be4 <__ieee754_rem_pio2f+0x4c>
 8003c10:	f7fc ff32 	bl	8000a78 <__addsf3>
 8003c14:	42b5      	cmp	r5, r6
 8003c16:	4607      	mov	r7, r0
 8003c18:	d00e      	beq.n	8003c38 <__ieee754_rem_pio2f+0xa0>
 8003c1a:	4982      	ldr	r1, [pc, #520]	; (8003e24 <__ieee754_rem_pio2f+0x28c>)
 8003c1c:	f7fc ff2c 	bl	8000a78 <__addsf3>
 8003c20:	4601      	mov	r1, r0
 8003c22:	6020      	str	r0, [r4, #0]
 8003c24:	4638      	mov	r0, r7
 8003c26:	f7fc ff25 	bl	8000a74 <__aeabi_fsub>
 8003c2a:	497e      	ldr	r1, [pc, #504]	; (8003e24 <__ieee754_rem_pio2f+0x28c>)
 8003c2c:	f7fc ff24 	bl	8000a78 <__addsf3>
 8003c30:	f04f 36ff 	mov.w	r6, #4294967295
 8003c34:	6060      	str	r0, [r4, #4]
 8003c36:	e7d9      	b.n	8003bec <__ieee754_rem_pio2f+0x54>
 8003c38:	497b      	ldr	r1, [pc, #492]	; (8003e28 <__ieee754_rem_pio2f+0x290>)
 8003c3a:	f7fc ff1d 	bl	8000a78 <__addsf3>
 8003c3e:	497b      	ldr	r1, [pc, #492]	; (8003e2c <__ieee754_rem_pio2f+0x294>)
 8003c40:	4605      	mov	r5, r0
 8003c42:	f7fc ff19 	bl	8000a78 <__addsf3>
 8003c46:	4601      	mov	r1, r0
 8003c48:	6020      	str	r0, [r4, #0]
 8003c4a:	4628      	mov	r0, r5
 8003c4c:	f7fc ff12 	bl	8000a74 <__aeabi_fsub>
 8003c50:	4976      	ldr	r1, [pc, #472]	; (8003e2c <__ieee754_rem_pio2f+0x294>)
 8003c52:	e7eb      	b.n	8003c2c <__ieee754_rem_pio2f+0x94>
 8003c54:	4a76      	ldr	r2, [pc, #472]	; (8003e30 <__ieee754_rem_pio2f+0x298>)
 8003c56:	4295      	cmp	r5, r2
 8003c58:	f300 808c 	bgt.w	8003d74 <__ieee754_rem_pio2f+0x1dc>
 8003c5c:	f001 fa3e 	bl	80050dc <fabsf>
 8003c60:	4974      	ldr	r1, [pc, #464]	; (8003e34 <__ieee754_rem_pio2f+0x29c>)
 8003c62:	4680      	mov	r8, r0
 8003c64:	f7fd f810 	bl	8000c88 <__aeabi_fmul>
 8003c68:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
 8003c6c:	f7fc ff04 	bl	8000a78 <__addsf3>
 8003c70:	f7fd f9d0 	bl	8001014 <__aeabi_f2iz>
 8003c74:	4606      	mov	r6, r0
 8003c76:	f7fc ffb3 	bl	8000be0 <__aeabi_i2f>
 8003c7a:	4968      	ldr	r1, [pc, #416]	; (8003e1c <__ieee754_rem_pio2f+0x284>)
 8003c7c:	4682      	mov	sl, r0
 8003c7e:	f7fd f803 	bl	8000c88 <__aeabi_fmul>
 8003c82:	4601      	mov	r1, r0
 8003c84:	4640      	mov	r0, r8
 8003c86:	f7fc fef5 	bl	8000a74 <__aeabi_fsub>
 8003c8a:	4966      	ldr	r1, [pc, #408]	; (8003e24 <__ieee754_rem_pio2f+0x28c>)
 8003c8c:	4680      	mov	r8, r0
 8003c8e:	4650      	mov	r0, sl
 8003c90:	f7fc fffa 	bl	8000c88 <__aeabi_fmul>
 8003c94:	2e1f      	cmp	r6, #31
 8003c96:	4681      	mov	r9, r0
 8003c98:	dc0c      	bgt.n	8003cb4 <__ieee754_rem_pio2f+0x11c>
 8003c9a:	4a67      	ldr	r2, [pc, #412]	; (8003e38 <__ieee754_rem_pio2f+0x2a0>)
 8003c9c:	1e71      	subs	r1, r6, #1
 8003c9e:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8003ca2:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 8003ca6:	4293      	cmp	r3, r2
 8003ca8:	d004      	beq.n	8003cb4 <__ieee754_rem_pio2f+0x11c>
 8003caa:	4649      	mov	r1, r9
 8003cac:	4640      	mov	r0, r8
 8003cae:	f7fc fee1 	bl	8000a74 <__aeabi_fsub>
 8003cb2:	e009      	b.n	8003cc8 <__ieee754_rem_pio2f+0x130>
 8003cb4:	4649      	mov	r1, r9
 8003cb6:	4640      	mov	r0, r8
 8003cb8:	f7fc fedc 	bl	8000a74 <__aeabi_fsub>
 8003cbc:	15ed      	asrs	r5, r5, #23
 8003cbe:	f3c0 53c7 	ubfx	r3, r0, #23, #8
 8003cc2:	1aeb      	subs	r3, r5, r3
 8003cc4:	2b08      	cmp	r3, #8
 8003cc6:	dc01      	bgt.n	8003ccc <__ieee754_rem_pio2f+0x134>
 8003cc8:	6020      	str	r0, [r4, #0]
 8003cca:	e024      	b.n	8003d16 <__ieee754_rem_pio2f+0x17e>
 8003ccc:	4956      	ldr	r1, [pc, #344]	; (8003e28 <__ieee754_rem_pio2f+0x290>)
 8003cce:	4650      	mov	r0, sl
 8003cd0:	f7fc ffda 	bl	8000c88 <__aeabi_fmul>
 8003cd4:	4681      	mov	r9, r0
 8003cd6:	4601      	mov	r1, r0
 8003cd8:	4640      	mov	r0, r8
 8003cda:	f7fc fecb 	bl	8000a74 <__aeabi_fsub>
 8003cde:	4601      	mov	r1, r0
 8003ce0:	4683      	mov	fp, r0
 8003ce2:	4640      	mov	r0, r8
 8003ce4:	f7fc fec6 	bl	8000a74 <__aeabi_fsub>
 8003ce8:	4649      	mov	r1, r9
 8003cea:	f7fc fec3 	bl	8000a74 <__aeabi_fsub>
 8003cee:	4680      	mov	r8, r0
 8003cf0:	494e      	ldr	r1, [pc, #312]	; (8003e2c <__ieee754_rem_pio2f+0x294>)
 8003cf2:	4650      	mov	r0, sl
 8003cf4:	f7fc ffc8 	bl	8000c88 <__aeabi_fmul>
 8003cf8:	4641      	mov	r1, r8
 8003cfa:	f7fc febb 	bl	8000a74 <__aeabi_fsub>
 8003cfe:	4601      	mov	r1, r0
 8003d00:	4681      	mov	r9, r0
 8003d02:	4658      	mov	r0, fp
 8003d04:	f7fc feb6 	bl	8000a74 <__aeabi_fsub>
 8003d08:	f3c0 53c7 	ubfx	r3, r0, #23, #8
 8003d0c:	1aed      	subs	r5, r5, r3
 8003d0e:	2d19      	cmp	r5, #25
 8003d10:	dc15      	bgt.n	8003d3e <__ieee754_rem_pio2f+0x1a6>
 8003d12:	46d8      	mov	r8, fp
 8003d14:	6020      	str	r0, [r4, #0]
 8003d16:	6825      	ldr	r5, [r4, #0]
 8003d18:	4640      	mov	r0, r8
 8003d1a:	4629      	mov	r1, r5
 8003d1c:	f7fc feaa 	bl	8000a74 <__aeabi_fsub>
 8003d20:	4649      	mov	r1, r9
 8003d22:	f7fc fea7 	bl	8000a74 <__aeabi_fsub>
 8003d26:	2f00      	cmp	r7, #0
 8003d28:	6060      	str	r0, [r4, #4]
 8003d2a:	f6bf af5f 	bge.w	8003bec <__ieee754_rem_pio2f+0x54>
 8003d2e:	f105 4500 	add.w	r5, r5, #2147483648	; 0x80000000
 8003d32:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 8003d36:	6025      	str	r5, [r4, #0]
 8003d38:	6060      	str	r0, [r4, #4]
 8003d3a:	4276      	negs	r6, r6
 8003d3c:	e756      	b.n	8003bec <__ieee754_rem_pio2f+0x54>
 8003d3e:	493f      	ldr	r1, [pc, #252]	; (8003e3c <__ieee754_rem_pio2f+0x2a4>)
 8003d40:	4650      	mov	r0, sl
 8003d42:	f7fc ffa1 	bl	8000c88 <__aeabi_fmul>
 8003d46:	4605      	mov	r5, r0
 8003d48:	4601      	mov	r1, r0
 8003d4a:	4658      	mov	r0, fp
 8003d4c:	f7fc fe92 	bl	8000a74 <__aeabi_fsub>
 8003d50:	4601      	mov	r1, r0
 8003d52:	4680      	mov	r8, r0
 8003d54:	4658      	mov	r0, fp
 8003d56:	f7fc fe8d 	bl	8000a74 <__aeabi_fsub>
 8003d5a:	4629      	mov	r1, r5
 8003d5c:	f7fc fe8a 	bl	8000a74 <__aeabi_fsub>
 8003d60:	4605      	mov	r5, r0
 8003d62:	4937      	ldr	r1, [pc, #220]	; (8003e40 <__ieee754_rem_pio2f+0x2a8>)
 8003d64:	4650      	mov	r0, sl
 8003d66:	f7fc ff8f 	bl	8000c88 <__aeabi_fmul>
 8003d6a:	4629      	mov	r1, r5
 8003d6c:	f7fc fe82 	bl	8000a74 <__aeabi_fsub>
 8003d70:	4681      	mov	r9, r0
 8003d72:	e79a      	b.n	8003caa <__ieee754_rem_pio2f+0x112>
 8003d74:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 8003d78:	db05      	blt.n	8003d86 <__ieee754_rem_pio2f+0x1ee>
 8003d7a:	4601      	mov	r1, r0
 8003d7c:	f7fc fe7a 	bl	8000a74 <__aeabi_fsub>
 8003d80:	6060      	str	r0, [r4, #4]
 8003d82:	6020      	str	r0, [r4, #0]
 8003d84:	e715      	b.n	8003bb2 <__ieee754_rem_pio2f+0x1a>
 8003d86:	15ee      	asrs	r6, r5, #23
 8003d88:	3e86      	subs	r6, #134	; 0x86
 8003d8a:	eba5 55c6 	sub.w	r5, r5, r6, lsl #23
 8003d8e:	4628      	mov	r0, r5
 8003d90:	f7fd f940 	bl	8001014 <__aeabi_f2iz>
 8003d94:	f7fc ff24 	bl	8000be0 <__aeabi_i2f>
 8003d98:	4601      	mov	r1, r0
 8003d9a:	9003      	str	r0, [sp, #12]
 8003d9c:	4628      	mov	r0, r5
 8003d9e:	f7fc fe69 	bl	8000a74 <__aeabi_fsub>
 8003da2:	f04f 4187 	mov.w	r1, #1132462080	; 0x43800000
 8003da6:	f7fc ff6f 	bl	8000c88 <__aeabi_fmul>
 8003daa:	4680      	mov	r8, r0
 8003dac:	f7fd f932 	bl	8001014 <__aeabi_f2iz>
 8003db0:	f7fc ff16 	bl	8000be0 <__aeabi_i2f>
 8003db4:	4601      	mov	r1, r0
 8003db6:	9004      	str	r0, [sp, #16]
 8003db8:	4605      	mov	r5, r0
 8003dba:	4640      	mov	r0, r8
 8003dbc:	f7fc fe5a 	bl	8000a74 <__aeabi_fsub>
 8003dc0:	f04f 4187 	mov.w	r1, #1132462080	; 0x43800000
 8003dc4:	f7fc ff60 	bl	8000c88 <__aeabi_fmul>
 8003dc8:	2100      	movs	r1, #0
 8003dca:	9005      	str	r0, [sp, #20]
 8003dcc:	f7fd f8f0 	bl	8000fb0 <__aeabi_fcmpeq>
 8003dd0:	b1e8      	cbz	r0, 8003e0e <__ieee754_rem_pio2f+0x276>
 8003dd2:	2100      	movs	r1, #0
 8003dd4:	4628      	mov	r0, r5
 8003dd6:	f7fd f8eb 	bl	8000fb0 <__aeabi_fcmpeq>
 8003dda:	2800      	cmp	r0, #0
 8003ddc:	bf14      	ite	ne
 8003dde:	2301      	movne	r3, #1
 8003de0:	2302      	moveq	r3, #2
 8003de2:	4a18      	ldr	r2, [pc, #96]	; (8003e44 <__ieee754_rem_pio2f+0x2ac>)
 8003de4:	4621      	mov	r1, r4
 8003de6:	9201      	str	r2, [sp, #4]
 8003de8:	2202      	movs	r2, #2
 8003dea:	a803      	add	r0, sp, #12
 8003dec:	9200      	str	r2, [sp, #0]
 8003dee:	4632      	mov	r2, r6
 8003df0:	f000 fd68 	bl	80048c4 <__kernel_rem_pio2f>
 8003df4:	2f00      	cmp	r7, #0
 8003df6:	4606      	mov	r6, r0
 8003df8:	f6bf aef8 	bge.w	8003bec <__ieee754_rem_pio2f+0x54>
 8003dfc:	6823      	ldr	r3, [r4, #0]
 8003dfe:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8003e02:	6023      	str	r3, [r4, #0]
 8003e04:	6863      	ldr	r3, [r4, #4]
 8003e06:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8003e0a:	6063      	str	r3, [r4, #4]
 8003e0c:	e795      	b.n	8003d3a <__ieee754_rem_pio2f+0x1a2>
 8003e0e:	2303      	movs	r3, #3
 8003e10:	e7e7      	b.n	8003de2 <__ieee754_rem_pio2f+0x24a>
 8003e12:	bf00      	nop
 8003e14:	3f490fd8 	.word	0x3f490fd8
 8003e18:	4016cbe3 	.word	0x4016cbe3
 8003e1c:	3fc90f80 	.word	0x3fc90f80
 8003e20:	3fc90fd0 	.word	0x3fc90fd0
 8003e24:	37354443 	.word	0x37354443
 8003e28:	37354400 	.word	0x37354400
 8003e2c:	2e85a308 	.word	0x2e85a308
 8003e30:	43490f80 	.word	0x43490f80
 8003e34:	3f22f984 	.word	0x3f22f984
 8003e38:	08005414 	.word	0x08005414
 8003e3c:	2e85a300 	.word	0x2e85a300
 8003e40:	248d3132 	.word	0x248d3132
 8003e44:	08005494 	.word	0x08005494

08003e48 <__kernel_cos>:
 8003e48:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003e4c:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
 8003e50:	f1b6 5f79 	cmp.w	r6, #1044381696	; 0x3e400000
 8003e54:	4680      	mov	r8, r0
 8003e56:	460f      	mov	r7, r1
 8003e58:	e9cd 2300 	strd	r2, r3, [sp]
 8003e5c:	da04      	bge.n	8003e68 <__kernel_cos+0x20>
 8003e5e:	f7fc fddd 	bl	8000a1c <__aeabi_d2iz>
 8003e62:	2800      	cmp	r0, #0
 8003e64:	f000 8086 	beq.w	8003f74 <__kernel_cos+0x12c>
 8003e68:	4642      	mov	r2, r8
 8003e6a:	463b      	mov	r3, r7
 8003e6c:	4640      	mov	r0, r8
 8003e6e:	4639      	mov	r1, r7
 8003e70:	f7fc fb3a 	bl	80004e8 <__aeabi_dmul>
 8003e74:	2200      	movs	r2, #0
 8003e76:	4b4e      	ldr	r3, [pc, #312]	; (8003fb0 <__kernel_cos+0x168>)
 8003e78:	4604      	mov	r4, r0
 8003e7a:	460d      	mov	r5, r1
 8003e7c:	f7fc fb34 	bl	80004e8 <__aeabi_dmul>
 8003e80:	a33f      	add	r3, pc, #252	; (adr r3, 8003f80 <__kernel_cos+0x138>)
 8003e82:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003e86:	4682      	mov	sl, r0
 8003e88:	468b      	mov	fp, r1
 8003e8a:	4620      	mov	r0, r4
 8003e8c:	4629      	mov	r1, r5
 8003e8e:	f7fc fb2b 	bl	80004e8 <__aeabi_dmul>
 8003e92:	a33d      	add	r3, pc, #244	; (adr r3, 8003f88 <__kernel_cos+0x140>)
 8003e94:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003e98:	f7fc f970 	bl	800017c <__adddf3>
 8003e9c:	4622      	mov	r2, r4
 8003e9e:	462b      	mov	r3, r5
 8003ea0:	f7fc fb22 	bl	80004e8 <__aeabi_dmul>
 8003ea4:	a33a      	add	r3, pc, #232	; (adr r3, 8003f90 <__kernel_cos+0x148>)
 8003ea6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003eaa:	f7fc f965 	bl	8000178 <__aeabi_dsub>
 8003eae:	4622      	mov	r2, r4
 8003eb0:	462b      	mov	r3, r5
 8003eb2:	f7fc fb19 	bl	80004e8 <__aeabi_dmul>
 8003eb6:	a338      	add	r3, pc, #224	; (adr r3, 8003f98 <__kernel_cos+0x150>)
 8003eb8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003ebc:	f7fc f95e 	bl	800017c <__adddf3>
 8003ec0:	4622      	mov	r2, r4
 8003ec2:	462b      	mov	r3, r5
 8003ec4:	f7fc fb10 	bl	80004e8 <__aeabi_dmul>
 8003ec8:	a335      	add	r3, pc, #212	; (adr r3, 8003fa0 <__kernel_cos+0x158>)
 8003eca:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003ece:	f7fc f953 	bl	8000178 <__aeabi_dsub>
 8003ed2:	4622      	mov	r2, r4
 8003ed4:	462b      	mov	r3, r5
 8003ed6:	f7fc fb07 	bl	80004e8 <__aeabi_dmul>
 8003eda:	a333      	add	r3, pc, #204	; (adr r3, 8003fa8 <__kernel_cos+0x160>)
 8003edc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003ee0:	f7fc f94c 	bl	800017c <__adddf3>
 8003ee4:	4622      	mov	r2, r4
 8003ee6:	462b      	mov	r3, r5
 8003ee8:	f7fc fafe 	bl	80004e8 <__aeabi_dmul>
 8003eec:	4622      	mov	r2, r4
 8003eee:	462b      	mov	r3, r5
 8003ef0:	f7fc fafa 	bl	80004e8 <__aeabi_dmul>
 8003ef4:	e9dd 2300 	ldrd	r2, r3, [sp]
 8003ef8:	4604      	mov	r4, r0
 8003efa:	460d      	mov	r5, r1
 8003efc:	4640      	mov	r0, r8
 8003efe:	4639      	mov	r1, r7
 8003f00:	f7fc faf2 	bl	80004e8 <__aeabi_dmul>
 8003f04:	460b      	mov	r3, r1
 8003f06:	4602      	mov	r2, r0
 8003f08:	4629      	mov	r1, r5
 8003f0a:	4620      	mov	r0, r4
 8003f0c:	f7fc f934 	bl	8000178 <__aeabi_dsub>
 8003f10:	4b28      	ldr	r3, [pc, #160]	; (8003fb4 <__kernel_cos+0x16c>)
 8003f12:	4680      	mov	r8, r0
 8003f14:	429e      	cmp	r6, r3
 8003f16:	4689      	mov	r9, r1
 8003f18:	dc0e      	bgt.n	8003f38 <__kernel_cos+0xf0>
 8003f1a:	4602      	mov	r2, r0
 8003f1c:	460b      	mov	r3, r1
 8003f1e:	4650      	mov	r0, sl
 8003f20:	4659      	mov	r1, fp
 8003f22:	f7fc f929 	bl	8000178 <__aeabi_dsub>
 8003f26:	4602      	mov	r2, r0
 8003f28:	2000      	movs	r0, #0
 8003f2a:	460b      	mov	r3, r1
 8003f2c:	4922      	ldr	r1, [pc, #136]	; (8003fb8 <__kernel_cos+0x170>)
 8003f2e:	f7fc f923 	bl	8000178 <__aeabi_dsub>
 8003f32:	b003      	add	sp, #12
 8003f34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003f38:	2400      	movs	r4, #0
 8003f3a:	4b20      	ldr	r3, [pc, #128]	; (8003fbc <__kernel_cos+0x174>)
 8003f3c:	4622      	mov	r2, r4
 8003f3e:	429e      	cmp	r6, r3
 8003f40:	bfcc      	ite	gt
 8003f42:	4d1f      	ldrgt	r5, [pc, #124]	; (8003fc0 <__kernel_cos+0x178>)
 8003f44:	f5a6 1500 	suble.w	r5, r6, #2097152	; 0x200000
 8003f48:	462b      	mov	r3, r5
 8003f4a:	2000      	movs	r0, #0
 8003f4c:	491a      	ldr	r1, [pc, #104]	; (8003fb8 <__kernel_cos+0x170>)
 8003f4e:	f7fc f913 	bl	8000178 <__aeabi_dsub>
 8003f52:	4622      	mov	r2, r4
 8003f54:	4606      	mov	r6, r0
 8003f56:	460f      	mov	r7, r1
 8003f58:	462b      	mov	r3, r5
 8003f5a:	4650      	mov	r0, sl
 8003f5c:	4659      	mov	r1, fp
 8003f5e:	f7fc f90b 	bl	8000178 <__aeabi_dsub>
 8003f62:	4642      	mov	r2, r8
 8003f64:	464b      	mov	r3, r9
 8003f66:	f7fc f907 	bl	8000178 <__aeabi_dsub>
 8003f6a:	4602      	mov	r2, r0
 8003f6c:	460b      	mov	r3, r1
 8003f6e:	4630      	mov	r0, r6
 8003f70:	4639      	mov	r1, r7
 8003f72:	e7dc      	b.n	8003f2e <__kernel_cos+0xe6>
 8003f74:	2000      	movs	r0, #0
 8003f76:	4910      	ldr	r1, [pc, #64]	; (8003fb8 <__kernel_cos+0x170>)
 8003f78:	e7db      	b.n	8003f32 <__kernel_cos+0xea>
 8003f7a:	bf00      	nop
 8003f7c:	f3af 8000 	nop.w
 8003f80:	be8838d4 	.word	0xbe8838d4
 8003f84:	bda8fae9 	.word	0xbda8fae9
 8003f88:	bdb4b1c4 	.word	0xbdb4b1c4
 8003f8c:	3e21ee9e 	.word	0x3e21ee9e
 8003f90:	809c52ad 	.word	0x809c52ad
 8003f94:	3e927e4f 	.word	0x3e927e4f
 8003f98:	19cb1590 	.word	0x19cb1590
 8003f9c:	3efa01a0 	.word	0x3efa01a0
 8003fa0:	16c15177 	.word	0x16c15177
 8003fa4:	3f56c16c 	.word	0x3f56c16c
 8003fa8:	5555554c 	.word	0x5555554c
 8003fac:	3fa55555 	.word	0x3fa55555
 8003fb0:	3fe00000 	.word	0x3fe00000
 8003fb4:	3fd33332 	.word	0x3fd33332
 8003fb8:	3ff00000 	.word	0x3ff00000
 8003fbc:	3fe90000 	.word	0x3fe90000
 8003fc0:	3fd20000 	.word	0x3fd20000

08003fc4 <__kernel_rem_pio2>:
 8003fc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003fc8:	f5ad 7d19 	sub.w	sp, sp, #612	; 0x264
 8003fcc:	9307      	str	r3, [sp, #28]
 8003fce:	9104      	str	r1, [sp, #16]
 8003fd0:	4bbf      	ldr	r3, [pc, #764]	; (80042d0 <__kernel_rem_pio2+0x30c>)
 8003fd2:	99a2      	ldr	r1, [sp, #648]	; 0x288
 8003fd4:	1ed4      	subs	r4, r2, #3
 8003fd6:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8003fda:	2500      	movs	r5, #0
 8003fdc:	9302      	str	r3, [sp, #8]
 8003fde:	9b07      	ldr	r3, [sp, #28]
 8003fe0:	9008      	str	r0, [sp, #32]
 8003fe2:	3b01      	subs	r3, #1
 8003fe4:	9306      	str	r3, [sp, #24]
 8003fe6:	2318      	movs	r3, #24
 8003fe8:	fb94 f4f3 	sdiv	r4, r4, r3
 8003fec:	f06f 0317 	mvn.w	r3, #23
 8003ff0:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
 8003ff4:	fb04 3303 	mla	r3, r4, r3, r3
 8003ff8:	eb03 0a02 	add.w	sl, r3, r2
 8003ffc:	9a06      	ldr	r2, [sp, #24]
 8003ffe:	9b02      	ldr	r3, [sp, #8]
 8004000:	1aa7      	subs	r7, r4, r2
 8004002:	eb03 0802 	add.w	r8, r3, r2
 8004006:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
 8004008:	2200      	movs	r2, #0
 800400a:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 800400e:	2300      	movs	r3, #0
 8004010:	ae1e      	add	r6, sp, #120	; 0x78
 8004012:	4545      	cmp	r5, r8
 8004014:	dd14      	ble.n	8004040 <__kernel_rem_pio2+0x7c>
 8004016:	2600      	movs	r6, #0
 8004018:	f50d 7bdc 	add.w	fp, sp, #440	; 0x1b8
 800401c:	9b02      	ldr	r3, [sp, #8]
 800401e:	429e      	cmp	r6, r3
 8004020:	dc39      	bgt.n	8004096 <__kernel_rem_pio2+0xd2>
 8004022:	9b08      	ldr	r3, [sp, #32]
 8004024:	f04f 0800 	mov.w	r8, #0
 8004028:	3b08      	subs	r3, #8
 800402a:	9300      	str	r3, [sp, #0]
 800402c:	9b07      	ldr	r3, [sp, #28]
 800402e:	f04f 0900 	mov.w	r9, #0
 8004032:	199d      	adds	r5, r3, r6
 8004034:	ab20      	add	r3, sp, #128	; 0x80
 8004036:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800403a:	9305      	str	r3, [sp, #20]
 800403c:	2700      	movs	r7, #0
 800403e:	e023      	b.n	8004088 <__kernel_rem_pio2+0xc4>
 8004040:	42ef      	cmn	r7, r5
 8004042:	d40b      	bmi.n	800405c <__kernel_rem_pio2+0x98>
 8004044:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 8004048:	e9cd 2300 	strd	r2, r3, [sp]
 800404c:	f7fc f9e2 	bl	8000414 <__aeabi_i2d>
 8004050:	e9dd 2300 	ldrd	r2, r3, [sp]
 8004054:	e9e6 0102 	strd	r0, r1, [r6, #8]!
 8004058:	3501      	adds	r5, #1
 800405a:	e7da      	b.n	8004012 <__kernel_rem_pio2+0x4e>
 800405c:	4610      	mov	r0, r2
 800405e:	4619      	mov	r1, r3
 8004060:	e7f8      	b.n	8004054 <__kernel_rem_pio2+0x90>
 8004062:	9905      	ldr	r1, [sp, #20]
 8004064:	9d00      	ldr	r5, [sp, #0]
 8004066:	e971 2302 	ldrd	r2, r3, [r1, #-8]!
 800406a:	9105      	str	r1, [sp, #20]
 800406c:	e9f5 0102 	ldrd	r0, r1, [r5, #8]!
 8004070:	9500      	str	r5, [sp, #0]
 8004072:	f7fc fa39 	bl	80004e8 <__aeabi_dmul>
 8004076:	4602      	mov	r2, r0
 8004078:	460b      	mov	r3, r1
 800407a:	4640      	mov	r0, r8
 800407c:	4649      	mov	r1, r9
 800407e:	f7fc f87d 	bl	800017c <__adddf3>
 8004082:	4680      	mov	r8, r0
 8004084:	4689      	mov	r9, r1
 8004086:	3701      	adds	r7, #1
 8004088:	9b06      	ldr	r3, [sp, #24]
 800408a:	429f      	cmp	r7, r3
 800408c:	dde9      	ble.n	8004062 <__kernel_rem_pio2+0x9e>
 800408e:	e9eb 8902 	strd	r8, r9, [fp, #8]!
 8004092:	3601      	adds	r6, #1
 8004094:	e7c2      	b.n	800401c <__kernel_rem_pio2+0x58>
 8004096:	9b02      	ldr	r3, [sp, #8]
 8004098:	aa0c      	add	r2, sp, #48	; 0x30
 800409a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800409e:	930b      	str	r3, [sp, #44]	; 0x2c
 80040a0:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
 80040a2:	9f02      	ldr	r7, [sp, #8]
 80040a4:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 80040a8:	930a      	str	r3, [sp, #40]	; 0x28
 80040aa:	2600      	movs	r6, #0
 80040ac:	ab98      	add	r3, sp, #608	; 0x260
 80040ae:	f107 5b00 	add.w	fp, r7, #536870912	; 0x20000000
 80040b2:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80040b6:	f10b 3bff 	add.w	fp, fp, #4294967295
 80040ba:	e953 8928 	ldrd	r8, r9, [r3, #-160]	; 0xa0
 80040be:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80040c2:	ab98      	add	r3, sp, #608	; 0x260
 80040c4:	445b      	add	r3, fp
 80040c6:	f1a3 0498 	sub.w	r4, r3, #152	; 0x98
 80040ca:	1bbb      	subs	r3, r7, r6
 80040cc:	2b00      	cmp	r3, #0
 80040ce:	dc71      	bgt.n	80041b4 <__kernel_rem_pio2+0x1f0>
 80040d0:	4652      	mov	r2, sl
 80040d2:	4640      	mov	r0, r8
 80040d4:	4649      	mov	r1, r9
 80040d6:	f000 ff93 	bl	8005000 <scalbn>
 80040da:	2200      	movs	r2, #0
 80040dc:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 80040e0:	4604      	mov	r4, r0
 80040e2:	460d      	mov	r5, r1
 80040e4:	f7fc fa00 	bl	80004e8 <__aeabi_dmul>
 80040e8:	f000 ff06 	bl	8004ef8 <floor>
 80040ec:	2200      	movs	r2, #0
 80040ee:	4b79      	ldr	r3, [pc, #484]	; (80042d4 <__kernel_rem_pio2+0x310>)
 80040f0:	f7fc f9fa 	bl	80004e8 <__aeabi_dmul>
 80040f4:	4602      	mov	r2, r0
 80040f6:	460b      	mov	r3, r1
 80040f8:	4620      	mov	r0, r4
 80040fa:	4629      	mov	r1, r5
 80040fc:	f7fc f83c 	bl	8000178 <__aeabi_dsub>
 8004100:	460d      	mov	r5, r1
 8004102:	4604      	mov	r4, r0
 8004104:	f7fc fc8a 	bl	8000a1c <__aeabi_d2iz>
 8004108:	9005      	str	r0, [sp, #20]
 800410a:	f7fc f983 	bl	8000414 <__aeabi_i2d>
 800410e:	4602      	mov	r2, r0
 8004110:	460b      	mov	r3, r1
 8004112:	4620      	mov	r0, r4
 8004114:	4629      	mov	r1, r5
 8004116:	f7fc f82f 	bl	8000178 <__aeabi_dsub>
 800411a:	f1ba 0f00 	cmp.w	sl, #0
 800411e:	4680      	mov	r8, r0
 8004120:	4689      	mov	r9, r1
 8004122:	dd6c      	ble.n	80041fe <__kernel_rem_pio2+0x23a>
 8004124:	1e7a      	subs	r2, r7, #1
 8004126:	ab0c      	add	r3, sp, #48	; 0x30
 8004128:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800412c:	f1ca 0118 	rsb	r1, sl, #24
 8004130:	9c05      	ldr	r4, [sp, #20]
 8004132:	fa40 f301 	asr.w	r3, r0, r1
 8004136:	441c      	add	r4, r3
 8004138:	408b      	lsls	r3, r1
 800413a:	1ac0      	subs	r0, r0, r3
 800413c:	ab0c      	add	r3, sp, #48	; 0x30
 800413e:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
 8004142:	f1ca 0317 	rsb	r3, sl, #23
 8004146:	9405      	str	r4, [sp, #20]
 8004148:	fa40 f303 	asr.w	r3, r0, r3
 800414c:	9300      	str	r3, [sp, #0]
 800414e:	9b00      	ldr	r3, [sp, #0]
 8004150:	2b00      	cmp	r3, #0
 8004152:	dd62      	ble.n	800421a <__kernel_rem_pio2+0x256>
 8004154:	2200      	movs	r2, #0
 8004156:	f06f 417f 	mvn.w	r1, #4278190080	; 0xff000000
 800415a:	4614      	mov	r4, r2
 800415c:	9b05      	ldr	r3, [sp, #20]
 800415e:	3301      	adds	r3, #1
 8004160:	9305      	str	r3, [sp, #20]
 8004162:	4297      	cmp	r7, r2
 8004164:	f300 809f 	bgt.w	80042a6 <__kernel_rem_pio2+0x2e2>
 8004168:	f1ba 0f00 	cmp.w	sl, #0
 800416c:	dd07      	ble.n	800417e <__kernel_rem_pio2+0x1ba>
 800416e:	f1ba 0f01 	cmp.w	sl, #1
 8004172:	f000 80bb 	beq.w	80042ec <__kernel_rem_pio2+0x328>
 8004176:	f1ba 0f02 	cmp.w	sl, #2
 800417a:	f000 80c1 	beq.w	8004300 <__kernel_rem_pio2+0x33c>
 800417e:	9b00      	ldr	r3, [sp, #0]
 8004180:	2b02      	cmp	r3, #2
 8004182:	d14a      	bne.n	800421a <__kernel_rem_pio2+0x256>
 8004184:	4642      	mov	r2, r8
 8004186:	464b      	mov	r3, r9
 8004188:	2000      	movs	r0, #0
 800418a:	4953      	ldr	r1, [pc, #332]	; (80042d8 <__kernel_rem_pio2+0x314>)
 800418c:	f7fb fff4 	bl	8000178 <__aeabi_dsub>
 8004190:	4680      	mov	r8, r0
 8004192:	4689      	mov	r9, r1
 8004194:	2c00      	cmp	r4, #0
 8004196:	d040      	beq.n	800421a <__kernel_rem_pio2+0x256>
 8004198:	4652      	mov	r2, sl
 800419a:	2000      	movs	r0, #0
 800419c:	494e      	ldr	r1, [pc, #312]	; (80042d8 <__kernel_rem_pio2+0x314>)
 800419e:	f000 ff2f 	bl	8005000 <scalbn>
 80041a2:	4602      	mov	r2, r0
 80041a4:	460b      	mov	r3, r1
 80041a6:	4640      	mov	r0, r8
 80041a8:	4649      	mov	r1, r9
 80041aa:	f7fb ffe5 	bl	8000178 <__aeabi_dsub>
 80041ae:	4680      	mov	r8, r0
 80041b0:	4689      	mov	r9, r1
 80041b2:	e032      	b.n	800421a <__kernel_rem_pio2+0x256>
 80041b4:	2200      	movs	r2, #0
 80041b6:	4b49      	ldr	r3, [pc, #292]	; (80042dc <__kernel_rem_pio2+0x318>)
 80041b8:	4640      	mov	r0, r8
 80041ba:	4649      	mov	r1, r9
 80041bc:	f7fc f994 	bl	80004e8 <__aeabi_dmul>
 80041c0:	f7fc fc2c 	bl	8000a1c <__aeabi_d2iz>
 80041c4:	f7fc f926 	bl	8000414 <__aeabi_i2d>
 80041c8:	2200      	movs	r2, #0
 80041ca:	4b45      	ldr	r3, [pc, #276]	; (80042e0 <__kernel_rem_pio2+0x31c>)
 80041cc:	e9cd 0100 	strd	r0, r1, [sp]
 80041d0:	f7fc f98a 	bl	80004e8 <__aeabi_dmul>
 80041d4:	4602      	mov	r2, r0
 80041d6:	460b      	mov	r3, r1
 80041d8:	4640      	mov	r0, r8
 80041da:	4649      	mov	r1, r9
 80041dc:	f7fb ffcc 	bl	8000178 <__aeabi_dsub>
 80041e0:	f7fc fc1c 	bl	8000a1c <__aeabi_d2iz>
 80041e4:	ab0c      	add	r3, sp, #48	; 0x30
 80041e6:	f843 0026 	str.w	r0, [r3, r6, lsl #2]
 80041ea:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 80041ee:	e9dd 0100 	ldrd	r0, r1, [sp]
 80041f2:	f7fb ffc3 	bl	800017c <__adddf3>
 80041f6:	3601      	adds	r6, #1
 80041f8:	4680      	mov	r8, r0
 80041fa:	4689      	mov	r9, r1
 80041fc:	e765      	b.n	80040ca <__kernel_rem_pio2+0x106>
 80041fe:	d105      	bne.n	800420c <__kernel_rem_pio2+0x248>
 8004200:	1e7b      	subs	r3, r7, #1
 8004202:	aa0c      	add	r2, sp, #48	; 0x30
 8004204:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8004208:	15c3      	asrs	r3, r0, #23
 800420a:	e79f      	b.n	800414c <__kernel_rem_pio2+0x188>
 800420c:	2200      	movs	r2, #0
 800420e:	4b35      	ldr	r3, [pc, #212]	; (80042e4 <__kernel_rem_pio2+0x320>)
 8004210:	f7fc fbf0 	bl	80009f4 <__aeabi_dcmpge>
 8004214:	2800      	cmp	r0, #0
 8004216:	d143      	bne.n	80042a0 <__kernel_rem_pio2+0x2dc>
 8004218:	9000      	str	r0, [sp, #0]
 800421a:	2200      	movs	r2, #0
 800421c:	2300      	movs	r3, #0
 800421e:	4640      	mov	r0, r8
 8004220:	4649      	mov	r1, r9
 8004222:	f7fc fbc9 	bl	80009b8 <__aeabi_dcmpeq>
 8004226:	2800      	cmp	r0, #0
 8004228:	f000 80c3 	beq.w	80043b2 <__kernel_rem_pio2+0x3ee>
 800422c:	1e7c      	subs	r4, r7, #1
 800422e:	4623      	mov	r3, r4
 8004230:	2200      	movs	r2, #0
 8004232:	9902      	ldr	r1, [sp, #8]
 8004234:	428b      	cmp	r3, r1
 8004236:	da6a      	bge.n	800430e <__kernel_rem_pio2+0x34a>
 8004238:	2a00      	cmp	r2, #0
 800423a:	f000 8084 	beq.w	8004346 <__kernel_rem_pio2+0x382>
 800423e:	ab0c      	add	r3, sp, #48	; 0x30
 8004240:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8004244:	f1aa 0a18 	sub.w	sl, sl, #24
 8004248:	2b00      	cmp	r3, #0
 800424a:	f000 80b0 	beq.w	80043ae <__kernel_rem_pio2+0x3ea>
 800424e:	4652      	mov	r2, sl
 8004250:	2000      	movs	r0, #0
 8004252:	4921      	ldr	r1, [pc, #132]	; (80042d8 <__kernel_rem_pio2+0x314>)
 8004254:	f000 fed4 	bl	8005000 <scalbn>
 8004258:	4625      	mov	r5, r4
 800425a:	4606      	mov	r6, r0
 800425c:	460f      	mov	r7, r1
 800425e:	f04f 0a00 	mov.w	sl, #0
 8004262:	00e3      	lsls	r3, r4, #3
 8004264:	aa98      	add	r2, sp, #608	; 0x260
 8004266:	eb02 0803 	add.w	r8, r2, r3
 800426a:	f8df b070 	ldr.w	fp, [pc, #112]	; 80042dc <__kernel_rem_pio2+0x318>
 800426e:	9306      	str	r3, [sp, #24]
 8004270:	f1a8 0898 	sub.w	r8, r8, #152	; 0x98
 8004274:	2d00      	cmp	r5, #0
 8004276:	f280 80d2 	bge.w	800441e <__kernel_rem_pio2+0x45a>
 800427a:	2500      	movs	r5, #0
 800427c:	9a06      	ldr	r2, [sp, #24]
 800427e:	ab98      	add	r3, sp, #608	; 0x260
 8004280:	189e      	adds	r6, r3, r2
 8004282:	3ea8      	subs	r6, #168	; 0xa8
 8004284:	1b63      	subs	r3, r4, r5
 8004286:	2b00      	cmp	r3, #0
 8004288:	f2c0 80f9 	blt.w	800447e <__kernel_rem_pio2+0x4ba>
 800428c:	f8df 9058 	ldr.w	r9, [pc, #88]	; 80042e8 <__kernel_rem_pio2+0x324>
 8004290:	eba6 08c5 	sub.w	r8, r6, r5, lsl #3
 8004294:	f04f 0a00 	mov.w	sl, #0
 8004298:	f04f 0b00 	mov.w	fp, #0
 800429c:	2700      	movs	r7, #0
 800429e:	e0e2      	b.n	8004466 <__kernel_rem_pio2+0x4a2>
 80042a0:	2302      	movs	r3, #2
 80042a2:	9300      	str	r3, [sp, #0]
 80042a4:	e756      	b.n	8004154 <__kernel_rem_pio2+0x190>
 80042a6:	ab0c      	add	r3, sp, #48	; 0x30
 80042a8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80042ac:	b94c      	cbnz	r4, 80042c2 <__kernel_rem_pio2+0x2fe>
 80042ae:	b12b      	cbz	r3, 80042bc <__kernel_rem_pio2+0x2f8>
 80042b0:	f1c3 7380 	rsb	r3, r3, #16777216	; 0x1000000
 80042b4:	a80c      	add	r0, sp, #48	; 0x30
 80042b6:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 80042ba:	2301      	movs	r3, #1
 80042bc:	3201      	adds	r2, #1
 80042be:	461c      	mov	r4, r3
 80042c0:	e74f      	b.n	8004162 <__kernel_rem_pio2+0x19e>
 80042c2:	1acb      	subs	r3, r1, r3
 80042c4:	a80c      	add	r0, sp, #48	; 0x30
 80042c6:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 80042ca:	4623      	mov	r3, r4
 80042cc:	e7f6      	b.n	80042bc <__kernel_rem_pio2+0x2f8>
 80042ce:	bf00      	nop
 80042d0:	080057f0 	.word	0x080057f0
 80042d4:	40200000 	.word	0x40200000
 80042d8:	3ff00000 	.word	0x3ff00000
 80042dc:	3e700000 	.word	0x3e700000
 80042e0:	41700000 	.word	0x41700000
 80042e4:	3fe00000 	.word	0x3fe00000
 80042e8:	080057a8 	.word	0x080057a8
 80042ec:	1e7a      	subs	r2, r7, #1
 80042ee:	ab0c      	add	r3, sp, #48	; 0x30
 80042f0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80042f4:	f3c3 0316 	ubfx	r3, r3, #0, #23
 80042f8:	a90c      	add	r1, sp, #48	; 0x30
 80042fa:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 80042fe:	e73e      	b.n	800417e <__kernel_rem_pio2+0x1ba>
 8004300:	1e7a      	subs	r2, r7, #1
 8004302:	ab0c      	add	r3, sp, #48	; 0x30
 8004304:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004308:	f3c3 0315 	ubfx	r3, r3, #0, #22
 800430c:	e7f4      	b.n	80042f8 <__kernel_rem_pio2+0x334>
 800430e:	a90c      	add	r1, sp, #48	; 0x30
 8004310:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 8004314:	3b01      	subs	r3, #1
 8004316:	430a      	orrs	r2, r1
 8004318:	e78b      	b.n	8004232 <__kernel_rem_pio2+0x26e>
 800431a:	3401      	adds	r4, #1
 800431c:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 8004320:	2a00      	cmp	r2, #0
 8004322:	d0fa      	beq.n	800431a <__kernel_rem_pio2+0x356>
 8004324:	ab98      	add	r3, sp, #608	; 0x260
 8004326:	449b      	add	fp, r3
 8004328:	9b07      	ldr	r3, [sp, #28]
 800432a:	1c7e      	adds	r6, r7, #1
 800432c:	19dd      	adds	r5, r3, r7
 800432e:	ab98      	add	r3, sp, #608	; 0x260
 8004330:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 8004334:	f1ab 0b98 	sub.w	fp, fp, #152	; 0x98
 8004338:	f5a5 75f4 	sub.w	r5, r5, #488	; 0x1e8
 800433c:	443c      	add	r4, r7
 800433e:	42b4      	cmp	r4, r6
 8004340:	da04      	bge.n	800434c <__kernel_rem_pio2+0x388>
 8004342:	4627      	mov	r7, r4
 8004344:	e6b1      	b.n	80040aa <__kernel_rem_pio2+0xe6>
 8004346:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004348:	2401      	movs	r4, #1
 800434a:	e7e7      	b.n	800431c <__kernel_rem_pio2+0x358>
 800434c:	f105 0308 	add.w	r3, r5, #8
 8004350:	9309      	str	r3, [sp, #36]	; 0x24
 8004352:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004354:	2700      	movs	r7, #0
 8004356:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 800435a:	f7fc f85b 	bl	8000414 <__aeabi_i2d>
 800435e:	f04f 0800 	mov.w	r8, #0
 8004362:	f04f 0900 	mov.w	r9, #0
 8004366:	9b08      	ldr	r3, [sp, #32]
 8004368:	e9c5 0102 	strd	r0, r1, [r5, #8]
 800436c:	3b08      	subs	r3, #8
 800436e:	9300      	str	r3, [sp, #0]
 8004370:	f105 0310 	add.w	r3, r5, #16
 8004374:	9305      	str	r3, [sp, #20]
 8004376:	9b06      	ldr	r3, [sp, #24]
 8004378:	429f      	cmp	r7, r3
 800437a:	dd04      	ble.n	8004386 <__kernel_rem_pio2+0x3c2>
 800437c:	e9eb 8902 	strd	r8, r9, [fp, #8]!
 8004380:	3601      	adds	r6, #1
 8004382:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8004384:	e7db      	b.n	800433e <__kernel_rem_pio2+0x37a>
 8004386:	9905      	ldr	r1, [sp, #20]
 8004388:	9d00      	ldr	r5, [sp, #0]
 800438a:	e971 2302 	ldrd	r2, r3, [r1, #-8]!
 800438e:	9105      	str	r1, [sp, #20]
 8004390:	e9f5 0102 	ldrd	r0, r1, [r5, #8]!
 8004394:	9500      	str	r5, [sp, #0]
 8004396:	f7fc f8a7 	bl	80004e8 <__aeabi_dmul>
 800439a:	4602      	mov	r2, r0
 800439c:	460b      	mov	r3, r1
 800439e:	4640      	mov	r0, r8
 80043a0:	4649      	mov	r1, r9
 80043a2:	f7fb feeb 	bl	800017c <__adddf3>
 80043a6:	3701      	adds	r7, #1
 80043a8:	4680      	mov	r8, r0
 80043aa:	4689      	mov	r9, r1
 80043ac:	e7e3      	b.n	8004376 <__kernel_rem_pio2+0x3b2>
 80043ae:	3c01      	subs	r4, #1
 80043b0:	e745      	b.n	800423e <__kernel_rem_pio2+0x27a>
 80043b2:	f1ca 0200 	rsb	r2, sl, #0
 80043b6:	4640      	mov	r0, r8
 80043b8:	4649      	mov	r1, r9
 80043ba:	f000 fe21 	bl	8005000 <scalbn>
 80043be:	2200      	movs	r2, #0
 80043c0:	4ba3      	ldr	r3, [pc, #652]	; (8004650 <__kernel_rem_pio2+0x68c>)
 80043c2:	4604      	mov	r4, r0
 80043c4:	460d      	mov	r5, r1
 80043c6:	f7fc fb15 	bl	80009f4 <__aeabi_dcmpge>
 80043ca:	b1f8      	cbz	r0, 800440c <__kernel_rem_pio2+0x448>
 80043cc:	2200      	movs	r2, #0
 80043ce:	4ba1      	ldr	r3, [pc, #644]	; (8004654 <__kernel_rem_pio2+0x690>)
 80043d0:	4620      	mov	r0, r4
 80043d2:	4629      	mov	r1, r5
 80043d4:	f7fc f888 	bl	80004e8 <__aeabi_dmul>
 80043d8:	f7fc fb20 	bl	8000a1c <__aeabi_d2iz>
 80043dc:	4606      	mov	r6, r0
 80043de:	f7fc f819 	bl	8000414 <__aeabi_i2d>
 80043e2:	2200      	movs	r2, #0
 80043e4:	4b9a      	ldr	r3, [pc, #616]	; (8004650 <__kernel_rem_pio2+0x68c>)
 80043e6:	f7fc f87f 	bl	80004e8 <__aeabi_dmul>
 80043ea:	460b      	mov	r3, r1
 80043ec:	4602      	mov	r2, r0
 80043ee:	4629      	mov	r1, r5
 80043f0:	4620      	mov	r0, r4
 80043f2:	f7fb fec1 	bl	8000178 <__aeabi_dsub>
 80043f6:	f7fc fb11 	bl	8000a1c <__aeabi_d2iz>
 80043fa:	1c7c      	adds	r4, r7, #1
 80043fc:	ab0c      	add	r3, sp, #48	; 0x30
 80043fe:	f843 0027 	str.w	r0, [r3, r7, lsl #2]
 8004402:	f10a 0a18 	add.w	sl, sl, #24
 8004406:	f843 6024 	str.w	r6, [r3, r4, lsl #2]
 800440a:	e720      	b.n	800424e <__kernel_rem_pio2+0x28a>
 800440c:	4620      	mov	r0, r4
 800440e:	4629      	mov	r1, r5
 8004410:	f7fc fb04 	bl	8000a1c <__aeabi_d2iz>
 8004414:	ab0c      	add	r3, sp, #48	; 0x30
 8004416:	f843 0027 	str.w	r0, [r3, r7, lsl #2]
 800441a:	463c      	mov	r4, r7
 800441c:	e717      	b.n	800424e <__kernel_rem_pio2+0x28a>
 800441e:	ab0c      	add	r3, sp, #48	; 0x30
 8004420:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8004424:	f7fb fff6 	bl	8000414 <__aeabi_i2d>
 8004428:	4632      	mov	r2, r6
 800442a:	463b      	mov	r3, r7
 800442c:	f7fc f85c 	bl	80004e8 <__aeabi_dmul>
 8004430:	4652      	mov	r2, sl
 8004432:	e968 0102 	strd	r0, r1, [r8, #-8]!
 8004436:	465b      	mov	r3, fp
 8004438:	4630      	mov	r0, r6
 800443a:	4639      	mov	r1, r7
 800443c:	f7fc f854 	bl	80004e8 <__aeabi_dmul>
 8004440:	3d01      	subs	r5, #1
 8004442:	4606      	mov	r6, r0
 8004444:	460f      	mov	r7, r1
 8004446:	e715      	b.n	8004274 <__kernel_rem_pio2+0x2b0>
 8004448:	e9f8 2302 	ldrd	r2, r3, [r8, #8]!
 800444c:	e9f9 0102 	ldrd	r0, r1, [r9, #8]!
 8004450:	f7fc f84a 	bl	80004e8 <__aeabi_dmul>
 8004454:	4602      	mov	r2, r0
 8004456:	460b      	mov	r3, r1
 8004458:	4650      	mov	r0, sl
 800445a:	4659      	mov	r1, fp
 800445c:	f7fb fe8e 	bl	800017c <__adddf3>
 8004460:	4682      	mov	sl, r0
 8004462:	468b      	mov	fp, r1
 8004464:	3701      	adds	r7, #1
 8004466:	9b02      	ldr	r3, [sp, #8]
 8004468:	429f      	cmp	r7, r3
 800446a:	dc01      	bgt.n	8004470 <__kernel_rem_pio2+0x4ac>
 800446c:	42bd      	cmp	r5, r7
 800446e:	daeb      	bge.n	8004448 <__kernel_rem_pio2+0x484>
 8004470:	ab48      	add	r3, sp, #288	; 0x120
 8004472:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8004476:	e9c3 ab00 	strd	sl, fp, [r3]
 800447a:	3501      	adds	r5, #1
 800447c:	e702      	b.n	8004284 <__kernel_rem_pio2+0x2c0>
 800447e:	9ba2      	ldr	r3, [sp, #648]	; 0x288
 8004480:	2b03      	cmp	r3, #3
 8004482:	d86c      	bhi.n	800455e <__kernel_rem_pio2+0x59a>
 8004484:	e8df f003 	tbb	[pc, r3]
 8004488:	022f2f59 	.word	0x022f2f59
 800448c:	9a06      	ldr	r2, [sp, #24]
 800448e:	ab48      	add	r3, sp, #288	; 0x120
 8004490:	189d      	adds	r5, r3, r2
 8004492:	46aa      	mov	sl, r5
 8004494:	46a3      	mov	fp, r4
 8004496:	f1bb 0f00 	cmp.w	fp, #0
 800449a:	f300 8087 	bgt.w	80045ac <__kernel_rem_pio2+0x5e8>
 800449e:	46a2      	mov	sl, r4
 80044a0:	f1ba 0f01 	cmp.w	sl, #1
 80044a4:	f300 809f 	bgt.w	80045e6 <__kernel_rem_pio2+0x622>
 80044a8:	2700      	movs	r7, #0
 80044aa:	463e      	mov	r6, r7
 80044ac:	9d06      	ldr	r5, [sp, #24]
 80044ae:	ab48      	add	r3, sp, #288	; 0x120
 80044b0:	3508      	adds	r5, #8
 80044b2:	441d      	add	r5, r3
 80044b4:	2c01      	cmp	r4, #1
 80044b6:	f300 80b3 	bgt.w	8004620 <__kernel_rem_pio2+0x65c>
 80044ba:	9b00      	ldr	r3, [sp, #0]
 80044bc:	9d48      	ldr	r5, [sp, #288]	; 0x120
 80044be:	9849      	ldr	r0, [sp, #292]	; 0x124
 80044c0:	9c4a      	ldr	r4, [sp, #296]	; 0x128
 80044c2:	994b      	ldr	r1, [sp, #300]	; 0x12c
 80044c4:	2b00      	cmp	r3, #0
 80044c6:	f040 80b5 	bne.w	8004634 <__kernel_rem_pio2+0x670>
 80044ca:	4603      	mov	r3, r0
 80044cc:	462a      	mov	r2, r5
 80044ce:	9804      	ldr	r0, [sp, #16]
 80044d0:	e9c0 2300 	strd	r2, r3, [r0]
 80044d4:	4622      	mov	r2, r4
 80044d6:	460b      	mov	r3, r1
 80044d8:	e9c0 2302 	strd	r2, r3, [r0, #8]
 80044dc:	463a      	mov	r2, r7
 80044de:	4633      	mov	r3, r6
 80044e0:	e9c0 2304 	strd	r2, r3, [r0, #16]
 80044e4:	e03b      	b.n	800455e <__kernel_rem_pio2+0x59a>
 80044e6:	f04f 0c00 	mov.w	ip, #0
 80044ea:	4626      	mov	r6, r4
 80044ec:	4667      	mov	r7, ip
 80044ee:	9d06      	ldr	r5, [sp, #24]
 80044f0:	ab48      	add	r3, sp, #288	; 0x120
 80044f2:	3508      	adds	r5, #8
 80044f4:	441d      	add	r5, r3
 80044f6:	2e00      	cmp	r6, #0
 80044f8:	da42      	bge.n	8004580 <__kernel_rem_pio2+0x5bc>
 80044fa:	9b00      	ldr	r3, [sp, #0]
 80044fc:	2b00      	cmp	r3, #0
 80044fe:	d049      	beq.n	8004594 <__kernel_rem_pio2+0x5d0>
 8004500:	f107 4100 	add.w	r1, r7, #2147483648	; 0x80000000
 8004504:	4662      	mov	r2, ip
 8004506:	460b      	mov	r3, r1
 8004508:	9904      	ldr	r1, [sp, #16]
 800450a:	2601      	movs	r6, #1
 800450c:	e9c1 2300 	strd	r2, r3, [r1]
 8004510:	a948      	add	r1, sp, #288	; 0x120
 8004512:	463b      	mov	r3, r7
 8004514:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004518:	f7fb fe2e 	bl	8000178 <__aeabi_dsub>
 800451c:	4684      	mov	ip, r0
 800451e:	460f      	mov	r7, r1
 8004520:	ad48      	add	r5, sp, #288	; 0x120
 8004522:	42b4      	cmp	r4, r6
 8004524:	da38      	bge.n	8004598 <__kernel_rem_pio2+0x5d4>
 8004526:	9b00      	ldr	r3, [sp, #0]
 8004528:	b10b      	cbz	r3, 800452e <__kernel_rem_pio2+0x56a>
 800452a:	f107 4700 	add.w	r7, r7, #2147483648	; 0x80000000
 800452e:	4662      	mov	r2, ip
 8004530:	463b      	mov	r3, r7
 8004532:	9904      	ldr	r1, [sp, #16]
 8004534:	e9c1 2302 	strd	r2, r3, [r1, #8]
 8004538:	e011      	b.n	800455e <__kernel_rem_pio2+0x59a>
 800453a:	2700      	movs	r7, #0
 800453c:	463d      	mov	r5, r7
 800453e:	9b06      	ldr	r3, [sp, #24]
 8004540:	aa98      	add	r2, sp, #608	; 0x260
 8004542:	4413      	add	r3, r2
 8004544:	f5a3 769c 	sub.w	r6, r3, #312	; 0x138
 8004548:	2c00      	cmp	r4, #0
 800454a:	da0f      	bge.n	800456c <__kernel_rem_pio2+0x5a8>
 800454c:	9b00      	ldr	r3, [sp, #0]
 800454e:	b10b      	cbz	r3, 8004554 <__kernel_rem_pio2+0x590>
 8004550:	f105 4500 	add.w	r5, r5, #2147483648	; 0x80000000
 8004554:	463a      	mov	r2, r7
 8004556:	462b      	mov	r3, r5
 8004558:	9904      	ldr	r1, [sp, #16]
 800455a:	e9c1 2300 	strd	r2, r3, [r1]
 800455e:	9b05      	ldr	r3, [sp, #20]
 8004560:	f003 0007 	and.w	r0, r3, #7
 8004564:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
 8004568:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800456c:	4638      	mov	r0, r7
 800456e:	e976 2302 	ldrd	r2, r3, [r6, #-8]!
 8004572:	4629      	mov	r1, r5
 8004574:	f7fb fe02 	bl	800017c <__adddf3>
 8004578:	3c01      	subs	r4, #1
 800457a:	4607      	mov	r7, r0
 800457c:	460d      	mov	r5, r1
 800457e:	e7e3      	b.n	8004548 <__kernel_rem_pio2+0x584>
 8004580:	4660      	mov	r0, ip
 8004582:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
 8004586:	4639      	mov	r1, r7
 8004588:	f7fb fdf8 	bl	800017c <__adddf3>
 800458c:	3e01      	subs	r6, #1
 800458e:	4684      	mov	ip, r0
 8004590:	460f      	mov	r7, r1
 8004592:	e7b0      	b.n	80044f6 <__kernel_rem_pio2+0x532>
 8004594:	4639      	mov	r1, r7
 8004596:	e7b5      	b.n	8004504 <__kernel_rem_pio2+0x540>
 8004598:	4660      	mov	r0, ip
 800459a:	e9f5 2302 	ldrd	r2, r3, [r5, #8]!
 800459e:	4639      	mov	r1, r7
 80045a0:	f7fb fdec 	bl	800017c <__adddf3>
 80045a4:	3601      	adds	r6, #1
 80045a6:	4684      	mov	ip, r0
 80045a8:	460f      	mov	r7, r1
 80045aa:	e7ba      	b.n	8004522 <__kernel_rem_pio2+0x55e>
 80045ac:	e97a 8902 	ldrd	r8, r9, [sl, #-8]!
 80045b0:	e9da 2302 	ldrd	r2, r3, [sl, #8]
 80045b4:	4640      	mov	r0, r8
 80045b6:	4649      	mov	r1, r9
 80045b8:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80045bc:	f7fb fdde 	bl	800017c <__adddf3>
 80045c0:	4602      	mov	r2, r0
 80045c2:	460b      	mov	r3, r1
 80045c4:	4606      	mov	r6, r0
 80045c6:	460f      	mov	r7, r1
 80045c8:	4640      	mov	r0, r8
 80045ca:	4649      	mov	r1, r9
 80045cc:	f7fb fdd4 	bl	8000178 <__aeabi_dsub>
 80045d0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80045d4:	f7fb fdd2 	bl	800017c <__adddf3>
 80045d8:	f10b 3bff 	add.w	fp, fp, #4294967295
 80045dc:	e9ca 0102 	strd	r0, r1, [sl, #8]
 80045e0:	e9ca 6700 	strd	r6, r7, [sl]
 80045e4:	e757      	b.n	8004496 <__kernel_rem_pio2+0x4d2>
 80045e6:	e975 6702 	ldrd	r6, r7, [r5, #-8]!
 80045ea:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 80045ee:	4630      	mov	r0, r6
 80045f0:	4639      	mov	r1, r7
 80045f2:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80045f6:	f7fb fdc1 	bl	800017c <__adddf3>
 80045fa:	4602      	mov	r2, r0
 80045fc:	460b      	mov	r3, r1
 80045fe:	4680      	mov	r8, r0
 8004600:	4689      	mov	r9, r1
 8004602:	4630      	mov	r0, r6
 8004604:	4639      	mov	r1, r7
 8004606:	f7fb fdb7 	bl	8000178 <__aeabi_dsub>
 800460a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800460e:	f7fb fdb5 	bl	800017c <__adddf3>
 8004612:	f10a 3aff 	add.w	sl, sl, #4294967295
 8004616:	e9c5 0102 	strd	r0, r1, [r5, #8]
 800461a:	e9c5 8900 	strd	r8, r9, [r5]
 800461e:	e73f      	b.n	80044a0 <__kernel_rem_pio2+0x4dc>
 8004620:	4638      	mov	r0, r7
 8004622:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
 8004626:	4631      	mov	r1, r6
 8004628:	f7fb fda8 	bl	800017c <__adddf3>
 800462c:	3c01      	subs	r4, #1
 800462e:	4607      	mov	r7, r0
 8004630:	460e      	mov	r6, r1
 8004632:	e73f      	b.n	80044b4 <__kernel_rem_pio2+0x4f0>
 8004634:	9b04      	ldr	r3, [sp, #16]
 8004636:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 800463a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 800463e:	f106 4600 	add.w	r6, r6, #2147483648	; 0x80000000
 8004642:	601d      	str	r5, [r3, #0]
 8004644:	e9c3 0401 	strd	r0, r4, [r3, #4]
 8004648:	e9c3 1703 	strd	r1, r7, [r3, #12]
 800464c:	615e      	str	r6, [r3, #20]
 800464e:	e786      	b.n	800455e <__kernel_rem_pio2+0x59a>
 8004650:	41700000 	.word	0x41700000
 8004654:	3e700000 	.word	0x3e700000

08004658 <__kernel_sin>:
 8004658:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800465c:	b086      	sub	sp, #24
 800465e:	e9cd 2300 	strd	r2, r3, [sp]
 8004662:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8004666:	f1b3 5f79 	cmp.w	r3, #1044381696	; 0x3e400000
 800466a:	4682      	mov	sl, r0
 800466c:	460c      	mov	r4, r1
 800466e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8004670:	da03      	bge.n	800467a <__kernel_sin+0x22>
 8004672:	f7fc f9d3 	bl	8000a1c <__aeabi_d2iz>
 8004676:	2800      	cmp	r0, #0
 8004678:	d050      	beq.n	800471c <__kernel_sin+0xc4>
 800467a:	4652      	mov	r2, sl
 800467c:	4623      	mov	r3, r4
 800467e:	4650      	mov	r0, sl
 8004680:	4621      	mov	r1, r4
 8004682:	f7fb ff31 	bl	80004e8 <__aeabi_dmul>
 8004686:	4606      	mov	r6, r0
 8004688:	460f      	mov	r7, r1
 800468a:	4602      	mov	r2, r0
 800468c:	460b      	mov	r3, r1
 800468e:	4650      	mov	r0, sl
 8004690:	4621      	mov	r1, r4
 8004692:	f7fb ff29 	bl	80004e8 <__aeabi_dmul>
 8004696:	a33e      	add	r3, pc, #248	; (adr r3, 8004790 <__kernel_sin+0x138>)
 8004698:	e9d3 2300 	ldrd	r2, r3, [r3]
 800469c:	4680      	mov	r8, r0
 800469e:	4689      	mov	r9, r1
 80046a0:	4630      	mov	r0, r6
 80046a2:	4639      	mov	r1, r7
 80046a4:	f7fb ff20 	bl	80004e8 <__aeabi_dmul>
 80046a8:	a33b      	add	r3, pc, #236	; (adr r3, 8004798 <__kernel_sin+0x140>)
 80046aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80046ae:	f7fb fd63 	bl	8000178 <__aeabi_dsub>
 80046b2:	4632      	mov	r2, r6
 80046b4:	463b      	mov	r3, r7
 80046b6:	f7fb ff17 	bl	80004e8 <__aeabi_dmul>
 80046ba:	a339      	add	r3, pc, #228	; (adr r3, 80047a0 <__kernel_sin+0x148>)
 80046bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80046c0:	f7fb fd5c 	bl	800017c <__adddf3>
 80046c4:	4632      	mov	r2, r6
 80046c6:	463b      	mov	r3, r7
 80046c8:	f7fb ff0e 	bl	80004e8 <__aeabi_dmul>
 80046cc:	a336      	add	r3, pc, #216	; (adr r3, 80047a8 <__kernel_sin+0x150>)
 80046ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80046d2:	f7fb fd51 	bl	8000178 <__aeabi_dsub>
 80046d6:	4632      	mov	r2, r6
 80046d8:	463b      	mov	r3, r7
 80046da:	f7fb ff05 	bl	80004e8 <__aeabi_dmul>
 80046de:	a334      	add	r3, pc, #208	; (adr r3, 80047b0 <__kernel_sin+0x158>)
 80046e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80046e4:	f7fb fd4a 	bl	800017c <__adddf3>
 80046e8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80046ec:	b9dd      	cbnz	r5, 8004726 <__kernel_sin+0xce>
 80046ee:	4602      	mov	r2, r0
 80046f0:	460b      	mov	r3, r1
 80046f2:	4630      	mov	r0, r6
 80046f4:	4639      	mov	r1, r7
 80046f6:	f7fb fef7 	bl	80004e8 <__aeabi_dmul>
 80046fa:	a32f      	add	r3, pc, #188	; (adr r3, 80047b8 <__kernel_sin+0x160>)
 80046fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004700:	f7fb fd3a 	bl	8000178 <__aeabi_dsub>
 8004704:	4642      	mov	r2, r8
 8004706:	464b      	mov	r3, r9
 8004708:	f7fb feee 	bl	80004e8 <__aeabi_dmul>
 800470c:	4602      	mov	r2, r0
 800470e:	460b      	mov	r3, r1
 8004710:	4650      	mov	r0, sl
 8004712:	4621      	mov	r1, r4
 8004714:	f7fb fd32 	bl	800017c <__adddf3>
 8004718:	4682      	mov	sl, r0
 800471a:	460c      	mov	r4, r1
 800471c:	4650      	mov	r0, sl
 800471e:	4621      	mov	r1, r4
 8004720:	b006      	add	sp, #24
 8004722:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004726:	2200      	movs	r2, #0
 8004728:	e9dd 0100 	ldrd	r0, r1, [sp]
 800472c:	4b24      	ldr	r3, [pc, #144]	; (80047c0 <__kernel_sin+0x168>)
 800472e:	f7fb fedb 	bl	80004e8 <__aeabi_dmul>
 8004732:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8004736:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800473a:	4640      	mov	r0, r8
 800473c:	4649      	mov	r1, r9
 800473e:	f7fb fed3 	bl	80004e8 <__aeabi_dmul>
 8004742:	4602      	mov	r2, r0
 8004744:	460b      	mov	r3, r1
 8004746:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800474a:	f7fb fd15 	bl	8000178 <__aeabi_dsub>
 800474e:	4632      	mov	r2, r6
 8004750:	463b      	mov	r3, r7
 8004752:	f7fb fec9 	bl	80004e8 <__aeabi_dmul>
 8004756:	e9dd 2300 	ldrd	r2, r3, [sp]
 800475a:	f7fb fd0d 	bl	8000178 <__aeabi_dsub>
 800475e:	a316      	add	r3, pc, #88	; (adr r3, 80047b8 <__kernel_sin+0x160>)
 8004760:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004764:	4606      	mov	r6, r0
 8004766:	460f      	mov	r7, r1
 8004768:	4640      	mov	r0, r8
 800476a:	4649      	mov	r1, r9
 800476c:	f7fb febc 	bl	80004e8 <__aeabi_dmul>
 8004770:	4602      	mov	r2, r0
 8004772:	460b      	mov	r3, r1
 8004774:	4630      	mov	r0, r6
 8004776:	4639      	mov	r1, r7
 8004778:	f7fb fd00 	bl	800017c <__adddf3>
 800477c:	4602      	mov	r2, r0
 800477e:	460b      	mov	r3, r1
 8004780:	4650      	mov	r0, sl
 8004782:	4621      	mov	r1, r4
 8004784:	f7fb fcf8 	bl	8000178 <__aeabi_dsub>
 8004788:	e7c6      	b.n	8004718 <__kernel_sin+0xc0>
 800478a:	bf00      	nop
 800478c:	f3af 8000 	nop.w
 8004790:	5acfd57c 	.word	0x5acfd57c
 8004794:	3de5d93a 	.word	0x3de5d93a
 8004798:	8a2b9ceb 	.word	0x8a2b9ceb
 800479c:	3e5ae5e6 	.word	0x3e5ae5e6
 80047a0:	57b1fe7d 	.word	0x57b1fe7d
 80047a4:	3ec71de3 	.word	0x3ec71de3
 80047a8:	19c161d5 	.word	0x19c161d5
 80047ac:	3f2a01a0 	.word	0x3f2a01a0
 80047b0:	1110f8a6 	.word	0x1110f8a6
 80047b4:	3f811111 	.word	0x3f811111
 80047b8:	55555549 	.word	0x55555549
 80047bc:	3fc55555 	.word	0x3fc55555
 80047c0:	3fe00000 	.word	0x3fe00000

080047c4 <__kernel_cosf>:
 80047c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80047c8:	f020 4400 	bic.w	r4, r0, #2147483648	; 0x80000000
 80047cc:	f1b4 5f48 	cmp.w	r4, #838860800	; 0x32000000
 80047d0:	4606      	mov	r6, r0
 80047d2:	4688      	mov	r8, r1
 80047d4:	da03      	bge.n	80047de <__kernel_cosf+0x1a>
 80047d6:	f7fc fc1d 	bl	8001014 <__aeabi_f2iz>
 80047da:	2800      	cmp	r0, #0
 80047dc:	d05c      	beq.n	8004898 <__kernel_cosf+0xd4>
 80047de:	4631      	mov	r1, r6
 80047e0:	4630      	mov	r0, r6
 80047e2:	f7fc fa51 	bl	8000c88 <__aeabi_fmul>
 80047e6:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
 80047ea:	4605      	mov	r5, r0
 80047ec:	f7fc fa4c 	bl	8000c88 <__aeabi_fmul>
 80047f0:	492b      	ldr	r1, [pc, #172]	; (80048a0 <__kernel_cosf+0xdc>)
 80047f2:	4607      	mov	r7, r0
 80047f4:	4628      	mov	r0, r5
 80047f6:	f7fc fa47 	bl	8000c88 <__aeabi_fmul>
 80047fa:	492a      	ldr	r1, [pc, #168]	; (80048a4 <__kernel_cosf+0xe0>)
 80047fc:	f7fc f93c 	bl	8000a78 <__addsf3>
 8004800:	4629      	mov	r1, r5
 8004802:	f7fc fa41 	bl	8000c88 <__aeabi_fmul>
 8004806:	4928      	ldr	r1, [pc, #160]	; (80048a8 <__kernel_cosf+0xe4>)
 8004808:	f7fc f934 	bl	8000a74 <__aeabi_fsub>
 800480c:	4629      	mov	r1, r5
 800480e:	f7fc fa3b 	bl	8000c88 <__aeabi_fmul>
 8004812:	4926      	ldr	r1, [pc, #152]	; (80048ac <__kernel_cosf+0xe8>)
 8004814:	f7fc f930 	bl	8000a78 <__addsf3>
 8004818:	4629      	mov	r1, r5
 800481a:	f7fc fa35 	bl	8000c88 <__aeabi_fmul>
 800481e:	4924      	ldr	r1, [pc, #144]	; (80048b0 <__kernel_cosf+0xec>)
 8004820:	f7fc f928 	bl	8000a74 <__aeabi_fsub>
 8004824:	4629      	mov	r1, r5
 8004826:	f7fc fa2f 	bl	8000c88 <__aeabi_fmul>
 800482a:	4922      	ldr	r1, [pc, #136]	; (80048b4 <__kernel_cosf+0xf0>)
 800482c:	f7fc f924 	bl	8000a78 <__addsf3>
 8004830:	4629      	mov	r1, r5
 8004832:	f7fc fa29 	bl	8000c88 <__aeabi_fmul>
 8004836:	4629      	mov	r1, r5
 8004838:	f7fc fa26 	bl	8000c88 <__aeabi_fmul>
 800483c:	4641      	mov	r1, r8
 800483e:	4605      	mov	r5, r0
 8004840:	4630      	mov	r0, r6
 8004842:	f7fc fa21 	bl	8000c88 <__aeabi_fmul>
 8004846:	4601      	mov	r1, r0
 8004848:	4628      	mov	r0, r5
 800484a:	f7fc f913 	bl	8000a74 <__aeabi_fsub>
 800484e:	4b1a      	ldr	r3, [pc, #104]	; (80048b8 <__kernel_cosf+0xf4>)
 8004850:	4605      	mov	r5, r0
 8004852:	429c      	cmp	r4, r3
 8004854:	dc0a      	bgt.n	800486c <__kernel_cosf+0xa8>
 8004856:	4601      	mov	r1, r0
 8004858:	4638      	mov	r0, r7
 800485a:	f7fc f90b 	bl	8000a74 <__aeabi_fsub>
 800485e:	4601      	mov	r1, r0
 8004860:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 8004864:	f7fc f906 	bl	8000a74 <__aeabi_fsub>
 8004868:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800486c:	4b13      	ldr	r3, [pc, #76]	; (80048bc <__kernel_cosf+0xf8>)
 800486e:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 8004872:	429c      	cmp	r4, r3
 8004874:	bfcc      	ite	gt
 8004876:	4c12      	ldrgt	r4, [pc, #72]	; (80048c0 <__kernel_cosf+0xfc>)
 8004878:	f104 447f 	addle.w	r4, r4, #4278190080	; 0xff000000
 800487c:	4621      	mov	r1, r4
 800487e:	f7fc f8f9 	bl	8000a74 <__aeabi_fsub>
 8004882:	4621      	mov	r1, r4
 8004884:	4606      	mov	r6, r0
 8004886:	4638      	mov	r0, r7
 8004888:	f7fc f8f4 	bl	8000a74 <__aeabi_fsub>
 800488c:	4629      	mov	r1, r5
 800488e:	f7fc f8f1 	bl	8000a74 <__aeabi_fsub>
 8004892:	4601      	mov	r1, r0
 8004894:	4630      	mov	r0, r6
 8004896:	e7e5      	b.n	8004864 <__kernel_cosf+0xa0>
 8004898:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 800489c:	e7e4      	b.n	8004868 <__kernel_cosf+0xa4>
 800489e:	bf00      	nop
 80048a0:	ad47d74e 	.word	0xad47d74e
 80048a4:	310f74f6 	.word	0x310f74f6
 80048a8:	3493f27c 	.word	0x3493f27c
 80048ac:	37d00d01 	.word	0x37d00d01
 80048b0:	3ab60b61 	.word	0x3ab60b61
 80048b4:	3d2aaaab 	.word	0x3d2aaaab
 80048b8:	3e999999 	.word	0x3e999999
 80048bc:	3f480000 	.word	0x3f480000
 80048c0:	3e900000 	.word	0x3e900000

080048c4 <__kernel_rem_pio2f>:
 80048c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80048c8:	b0d9      	sub	sp, #356	; 0x164
 80048ca:	9304      	str	r3, [sp, #16]
 80048cc:	9101      	str	r1, [sp, #4]
 80048ce:	4bc3      	ldr	r3, [pc, #780]	; (8004bdc <__kernel_rem_pio2f+0x318>)
 80048d0:	9962      	ldr	r1, [sp, #392]	; 0x188
 80048d2:	1ed4      	subs	r4, r2, #3
 80048d4:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80048d8:	2500      	movs	r5, #0
 80048da:	9302      	str	r3, [sp, #8]
 80048dc:	9b04      	ldr	r3, [sp, #16]
 80048de:	f04f 0a00 	mov.w	sl, #0
 80048e2:	3b01      	subs	r3, #1
 80048e4:	9303      	str	r3, [sp, #12]
 80048e6:	2308      	movs	r3, #8
 80048e8:	fb94 f4f3 	sdiv	r4, r4, r3
 80048ec:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
 80048f0:	1c66      	adds	r6, r4, #1
 80048f2:	eba2 06c6 	sub.w	r6, r2, r6, lsl #3
 80048f6:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 80048fa:	eb03 0802 	add.w	r8, r3, r2
 80048fe:	9b63      	ldr	r3, [sp, #396]	; 0x18c
 8004900:	1aa7      	subs	r7, r4, r2
 8004902:	9005      	str	r0, [sp, #20]
 8004904:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 8004908:	f10d 0b70 	add.w	fp, sp, #112	; 0x70
 800490c:	4545      	cmp	r5, r8
 800490e:	dd7f      	ble.n	8004a10 <__kernel_rem_pio2f+0x14c>
 8004910:	f04f 0800 	mov.w	r8, #0
 8004914:	f04f 0a00 	mov.w	sl, #0
 8004918:	f06f 0b03 	mvn.w	fp, #3
 800491c:	9b04      	ldr	r3, [sp, #16]
 800491e:	aa1c      	add	r2, sp, #112	; 0x70
 8004920:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8004924:	ab44      	add	r3, sp, #272	; 0x110
 8004926:	9a02      	ldr	r2, [sp, #8]
 8004928:	4590      	cmp	r8, r2
 800492a:	f340 8097 	ble.w	8004a5c <__kernel_rem_pio2f+0x198>
 800492e:	4613      	mov	r3, r2
 8004930:	aa08      	add	r2, sp, #32
 8004932:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8004936:	9307      	str	r3, [sp, #28]
 8004938:	9b63      	ldr	r3, [sp, #396]	; 0x18c
 800493a:	9f02      	ldr	r7, [sp, #8]
 800493c:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8004940:	9306      	str	r3, [sp, #24]
 8004942:	46ba      	mov	sl, r7
 8004944:	f04f 4887 	mov.w	r8, #1132462080	; 0x43800000
 8004948:	ab58      	add	r3, sp, #352	; 0x160
 800494a:	eb03 0387 	add.w	r3, r3, r7, lsl #2
 800494e:	f853 4c50 	ldr.w	r4, [r3, #-80]
 8004952:	ad07      	add	r5, sp, #28
 8004954:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 8004958:	f1ba 0f00 	cmp.w	sl, #0
 800495c:	f300 8081 	bgt.w	8004a62 <__kernel_rem_pio2f+0x19e>
 8004960:	4631      	mov	r1, r6
 8004962:	4620      	mov	r0, r4
 8004964:	f000 fbfe 	bl	8005164 <scalbnf>
 8004968:	f04f 5178 	mov.w	r1, #1040187392	; 0x3e000000
 800496c:	4604      	mov	r4, r0
 800496e:	f7fc f98b 	bl	8000c88 <__aeabi_fmul>
 8004972:	f000 fbb7 	bl	80050e4 <floorf>
 8004976:	f04f 4182 	mov.w	r1, #1090519040	; 0x41000000
 800497a:	f7fc f985 	bl	8000c88 <__aeabi_fmul>
 800497e:	4601      	mov	r1, r0
 8004980:	4620      	mov	r0, r4
 8004982:	f7fc f877 	bl	8000a74 <__aeabi_fsub>
 8004986:	4604      	mov	r4, r0
 8004988:	f7fc fb44 	bl	8001014 <__aeabi_f2iz>
 800498c:	4681      	mov	r9, r0
 800498e:	f7fc f927 	bl	8000be0 <__aeabi_i2f>
 8004992:	4601      	mov	r1, r0
 8004994:	4620      	mov	r0, r4
 8004996:	f7fc f86d 	bl	8000a74 <__aeabi_fsub>
 800499a:	2e00      	cmp	r6, #0
 800499c:	4604      	mov	r4, r0
 800499e:	dd7e      	ble.n	8004a9e <__kernel_rem_pio2f+0x1da>
 80049a0:	1e7b      	subs	r3, r7, #1
 80049a2:	aa08      	add	r2, sp, #32
 80049a4:	f852 5023 	ldr.w	r5, [r2, r3, lsl #2]
 80049a8:	f1c6 0208 	rsb	r2, r6, #8
 80049ac:	fa45 f002 	asr.w	r0, r5, r2
 80049b0:	4481      	add	r9, r0
 80049b2:	4090      	lsls	r0, r2
 80049b4:	1a2d      	subs	r5, r5, r0
 80049b6:	aa08      	add	r2, sp, #32
 80049b8:	f1c6 0007 	rsb	r0, r6, #7
 80049bc:	f842 5023 	str.w	r5, [r2, r3, lsl #2]
 80049c0:	4105      	asrs	r5, r0
 80049c2:	2d00      	cmp	r5, #0
 80049c4:	dd79      	ble.n	8004aba <__kernel_rem_pio2f+0x1f6>
 80049c6:	2200      	movs	r2, #0
 80049c8:	4690      	mov	r8, r2
 80049ca:	f109 0901 	add.w	r9, r9, #1
 80049ce:	4297      	cmp	r7, r2
 80049d0:	f300 80ae 	bgt.w	8004b30 <__kernel_rem_pio2f+0x26c>
 80049d4:	2e00      	cmp	r6, #0
 80049d6:	dd05      	ble.n	80049e4 <__kernel_rem_pio2f+0x120>
 80049d8:	2e01      	cmp	r6, #1
 80049da:	f000 80c0 	beq.w	8004b5e <__kernel_rem_pio2f+0x29a>
 80049de:	2e02      	cmp	r6, #2
 80049e0:	f000 80c7 	beq.w	8004b72 <__kernel_rem_pio2f+0x2ae>
 80049e4:	2d02      	cmp	r5, #2
 80049e6:	d168      	bne.n	8004aba <__kernel_rem_pio2f+0x1f6>
 80049e8:	4621      	mov	r1, r4
 80049ea:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 80049ee:	f7fc f841 	bl	8000a74 <__aeabi_fsub>
 80049f2:	4604      	mov	r4, r0
 80049f4:	f1b8 0f00 	cmp.w	r8, #0
 80049f8:	d05f      	beq.n	8004aba <__kernel_rem_pio2f+0x1f6>
 80049fa:	4631      	mov	r1, r6
 80049fc:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 8004a00:	f000 fbb0 	bl	8005164 <scalbnf>
 8004a04:	4601      	mov	r1, r0
 8004a06:	4620      	mov	r0, r4
 8004a08:	f7fc f834 	bl	8000a74 <__aeabi_fsub>
 8004a0c:	4604      	mov	r4, r0
 8004a0e:	e054      	b.n	8004aba <__kernel_rem_pio2f+0x1f6>
 8004a10:	42ef      	cmn	r7, r5
 8004a12:	d407      	bmi.n	8004a24 <__kernel_rem_pio2f+0x160>
 8004a14:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 8004a18:	f7fc f8e2 	bl	8000be0 <__aeabi_i2f>
 8004a1c:	f84b 0025 	str.w	r0, [fp, r5, lsl #2]
 8004a20:	3501      	adds	r5, #1
 8004a22:	e773      	b.n	800490c <__kernel_rem_pio2f+0x48>
 8004a24:	4650      	mov	r0, sl
 8004a26:	e7f9      	b.n	8004a1c <__kernel_rem_pio2f+0x158>
 8004a28:	fb0b 5207 	mla	r2, fp, r7, r5
 8004a2c:	9306      	str	r3, [sp, #24]
 8004a2e:	9b05      	ldr	r3, [sp, #20]
 8004a30:	f852 0c04 	ldr.w	r0, [r2, #-4]
 8004a34:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
 8004a38:	f7fc f926 	bl	8000c88 <__aeabi_fmul>
 8004a3c:	4601      	mov	r1, r0
 8004a3e:	4648      	mov	r0, r9
 8004a40:	f7fc f81a 	bl	8000a78 <__addsf3>
 8004a44:	4681      	mov	r9, r0
 8004a46:	9b06      	ldr	r3, [sp, #24]
 8004a48:	3701      	adds	r7, #1
 8004a4a:	9a03      	ldr	r2, [sp, #12]
 8004a4c:	4297      	cmp	r7, r2
 8004a4e:	ddeb      	ble.n	8004a28 <__kernel_rem_pio2f+0x164>
 8004a50:	f843 9028 	str.w	r9, [r3, r8, lsl #2]
 8004a54:	3504      	adds	r5, #4
 8004a56:	f108 0801 	add.w	r8, r8, #1
 8004a5a:	e764      	b.n	8004926 <__kernel_rem_pio2f+0x62>
 8004a5c:	46d1      	mov	r9, sl
 8004a5e:	2700      	movs	r7, #0
 8004a60:	e7f3      	b.n	8004a4a <__kernel_rem_pio2f+0x186>
 8004a62:	f04f 516e 	mov.w	r1, #998244352	; 0x3b800000
 8004a66:	4620      	mov	r0, r4
 8004a68:	f7fc f90e 	bl	8000c88 <__aeabi_fmul>
 8004a6c:	f7fc fad2 	bl	8001014 <__aeabi_f2iz>
 8004a70:	f7fc f8b6 	bl	8000be0 <__aeabi_i2f>
 8004a74:	4641      	mov	r1, r8
 8004a76:	4683      	mov	fp, r0
 8004a78:	f7fc f906 	bl	8000c88 <__aeabi_fmul>
 8004a7c:	4601      	mov	r1, r0
 8004a7e:	4620      	mov	r0, r4
 8004a80:	f7fb fff8 	bl	8000a74 <__aeabi_fsub>
 8004a84:	f7fc fac6 	bl	8001014 <__aeabi_f2iz>
 8004a88:	f10a 3aff 	add.w	sl, sl, #4294967295
 8004a8c:	f845 0f04 	str.w	r0, [r5, #4]!
 8004a90:	f859 102a 	ldr.w	r1, [r9, sl, lsl #2]
 8004a94:	4658      	mov	r0, fp
 8004a96:	f7fb ffef 	bl	8000a78 <__addsf3>
 8004a9a:	4604      	mov	r4, r0
 8004a9c:	e75c      	b.n	8004958 <__kernel_rem_pio2f+0x94>
 8004a9e:	d105      	bne.n	8004aac <__kernel_rem_pio2f+0x1e8>
 8004aa0:	1e7b      	subs	r3, r7, #1
 8004aa2:	aa08      	add	r2, sp, #32
 8004aa4:	f852 5023 	ldr.w	r5, [r2, r3, lsl #2]
 8004aa8:	122d      	asrs	r5, r5, #8
 8004aaa:	e78a      	b.n	80049c2 <__kernel_rem_pio2f+0xfe>
 8004aac:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
 8004ab0:	f7fc fa9c 	bl	8000fec <__aeabi_fcmpge>
 8004ab4:	2800      	cmp	r0, #0
 8004ab6:	d139      	bne.n	8004b2c <__kernel_rem_pio2f+0x268>
 8004ab8:	4605      	mov	r5, r0
 8004aba:	2100      	movs	r1, #0
 8004abc:	4620      	mov	r0, r4
 8004abe:	f7fc fa77 	bl	8000fb0 <__aeabi_fcmpeq>
 8004ac2:	2800      	cmp	r0, #0
 8004ac4:	f000 80a0 	beq.w	8004c08 <__kernel_rem_pio2f+0x344>
 8004ac8:	1e7c      	subs	r4, r7, #1
 8004aca:	4623      	mov	r3, r4
 8004acc:	2200      	movs	r2, #0
 8004ace:	9902      	ldr	r1, [sp, #8]
 8004ad0:	428b      	cmp	r3, r1
 8004ad2:	da55      	bge.n	8004b80 <__kernel_rem_pio2f+0x2bc>
 8004ad4:	2a00      	cmp	r2, #0
 8004ad6:	d07e      	beq.n	8004bd6 <__kernel_rem_pio2f+0x312>
 8004ad8:	ab08      	add	r3, sp, #32
 8004ada:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8004ade:	3e08      	subs	r6, #8
 8004ae0:	2b00      	cmp	r3, #0
 8004ae2:	f000 808f 	beq.w	8004c04 <__kernel_rem_pio2f+0x340>
 8004ae6:	4631      	mov	r1, r6
 8004ae8:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 8004aec:	f000 fb3a 	bl	8005164 <scalbnf>
 8004af0:	46a0      	mov	r8, r4
 8004af2:	4682      	mov	sl, r0
 8004af4:	f04f 566e 	mov.w	r6, #998244352	; 0x3b800000
 8004af8:	af44      	add	r7, sp, #272	; 0x110
 8004afa:	f1b8 0f00 	cmp.w	r8, #0
 8004afe:	f280 80b5 	bge.w	8004c6c <__kernel_rem_pio2f+0x3a8>
 8004b02:	f04f 0a00 	mov.w	sl, #0
 8004b06:	2300      	movs	r3, #0
 8004b08:	00a6      	lsls	r6, r4, #2
 8004b0a:	4a35      	ldr	r2, [pc, #212]	; (8004be0 <__kernel_rem_pio2f+0x31c>)
 8004b0c:	4437      	add	r7, r6
 8004b0e:	eba4 010a 	sub.w	r1, r4, sl
 8004b12:	2900      	cmp	r1, #0
 8004b14:	f280 80db 	bge.w	8004cce <__kernel_rem_pio2f+0x40a>
 8004b18:	9b62      	ldr	r3, [sp, #392]	; 0x188
 8004b1a:	2b03      	cmp	r3, #3
 8004b1c:	f200 80ff 	bhi.w	8004d1e <__kernel_rem_pio2f+0x45a>
 8004b20:	e8df f013 	tbh	[pc, r3, lsl #1]
 8004b24:	01200102 	.word	0x01200102
 8004b28:	00d90120 	.word	0x00d90120
 8004b2c:	2502      	movs	r5, #2
 8004b2e:	e74a      	b.n	80049c6 <__kernel_rem_pio2f+0x102>
 8004b30:	ab08      	add	r3, sp, #32
 8004b32:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004b36:	f1b8 0f00 	cmp.w	r8, #0
 8004b3a:	d109      	bne.n	8004b50 <__kernel_rem_pio2f+0x28c>
 8004b3c:	b12b      	cbz	r3, 8004b4a <__kernel_rem_pio2f+0x286>
 8004b3e:	f5c3 7380 	rsb	r3, r3, #256	; 0x100
 8004b42:	a908      	add	r1, sp, #32
 8004b44:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 8004b48:	2301      	movs	r3, #1
 8004b4a:	3201      	adds	r2, #1
 8004b4c:	4698      	mov	r8, r3
 8004b4e:	e73e      	b.n	80049ce <__kernel_rem_pio2f+0x10a>
 8004b50:	f1c3 03ff 	rsb	r3, r3, #255	; 0xff
 8004b54:	a908      	add	r1, sp, #32
 8004b56:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 8004b5a:	4643      	mov	r3, r8
 8004b5c:	e7f5      	b.n	8004b4a <__kernel_rem_pio2f+0x286>
 8004b5e:	1e7a      	subs	r2, r7, #1
 8004b60:	ab08      	add	r3, sp, #32
 8004b62:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004b66:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8004b6a:	a908      	add	r1, sp, #32
 8004b6c:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 8004b70:	e738      	b.n	80049e4 <__kernel_rem_pio2f+0x120>
 8004b72:	1e7a      	subs	r2, r7, #1
 8004b74:	ab08      	add	r3, sp, #32
 8004b76:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004b7a:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8004b7e:	e7f4      	b.n	8004b6a <__kernel_rem_pio2f+0x2a6>
 8004b80:	a908      	add	r1, sp, #32
 8004b82:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 8004b86:	3b01      	subs	r3, #1
 8004b88:	430a      	orrs	r2, r1
 8004b8a:	e7a0      	b.n	8004ace <__kernel_rem_pio2f+0x20a>
 8004b8c:	3301      	adds	r3, #1
 8004b8e:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 8004b92:	2900      	cmp	r1, #0
 8004b94:	d0fa      	beq.n	8004b8c <__kernel_rem_pio2f+0x2c8>
 8004b96:	f06f 0803 	mvn.w	r8, #3
 8004b9a:	9a04      	ldr	r2, [sp, #16]
 8004b9c:	1c7d      	adds	r5, r7, #1
 8004b9e:	18bc      	adds	r4, r7, r2
 8004ba0:	aa1c      	add	r2, sp, #112	; 0x70
 8004ba2:	eb02 0484 	add.w	r4, r2, r4, lsl #2
 8004ba6:	441f      	add	r7, r3
 8004ba8:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 8004bac:	42af      	cmp	r7, r5
 8004bae:	f6ff aec8 	blt.w	8004942 <__kernel_rem_pio2f+0x7e>
 8004bb2:	9b06      	ldr	r3, [sp, #24]
 8004bb4:	f04f 0a00 	mov.w	sl, #0
 8004bb8:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8004bbc:	f7fc f810 	bl	8000be0 <__aeabi_i2f>
 8004bc0:	f04f 0b00 	mov.w	fp, #0
 8004bc4:	6020      	str	r0, [r4, #0]
 8004bc6:	9b03      	ldr	r3, [sp, #12]
 8004bc8:	459a      	cmp	sl, r3
 8004bca:	dd0b      	ble.n	8004be4 <__kernel_rem_pio2f+0x320>
 8004bcc:	f849 b025 	str.w	fp, [r9, r5, lsl #2]
 8004bd0:	3404      	adds	r4, #4
 8004bd2:	3501      	adds	r5, #1
 8004bd4:	e7ea      	b.n	8004bac <__kernel_rem_pio2f+0x2e8>
 8004bd6:	9a07      	ldr	r2, [sp, #28]
 8004bd8:	2301      	movs	r3, #1
 8004bda:	e7d8      	b.n	8004b8e <__kernel_rem_pio2f+0x2ca>
 8004bdc:	0800582c 	.word	0x0800582c
 8004be0:	08005800 	.word	0x08005800
 8004be4:	fb08 f30a 	mul.w	r3, r8, sl
 8004be8:	9a05      	ldr	r2, [sp, #20]
 8004bea:	58e0      	ldr	r0, [r4, r3]
 8004bec:	f852 102a 	ldr.w	r1, [r2, sl, lsl #2]
 8004bf0:	f7fc f84a 	bl	8000c88 <__aeabi_fmul>
 8004bf4:	4601      	mov	r1, r0
 8004bf6:	4658      	mov	r0, fp
 8004bf8:	f7fb ff3e 	bl	8000a78 <__addsf3>
 8004bfc:	f10a 0a01 	add.w	sl, sl, #1
 8004c00:	4683      	mov	fp, r0
 8004c02:	e7e0      	b.n	8004bc6 <__kernel_rem_pio2f+0x302>
 8004c04:	3c01      	subs	r4, #1
 8004c06:	e767      	b.n	8004ad8 <__kernel_rem_pio2f+0x214>
 8004c08:	4271      	negs	r1, r6
 8004c0a:	4620      	mov	r0, r4
 8004c0c:	f000 faaa 	bl	8005164 <scalbnf>
 8004c10:	f04f 4187 	mov.w	r1, #1132462080	; 0x43800000
 8004c14:	4604      	mov	r4, r0
 8004c16:	f7fc f9e9 	bl	8000fec <__aeabi_fcmpge>
 8004c1a:	b1f8      	cbz	r0, 8004c5c <__kernel_rem_pio2f+0x398>
 8004c1c:	f04f 516e 	mov.w	r1, #998244352	; 0x3b800000
 8004c20:	4620      	mov	r0, r4
 8004c22:	f7fc f831 	bl	8000c88 <__aeabi_fmul>
 8004c26:	f7fc f9f5 	bl	8001014 <__aeabi_f2iz>
 8004c2a:	f7fb ffd9 	bl	8000be0 <__aeabi_i2f>
 8004c2e:	f04f 4187 	mov.w	r1, #1132462080	; 0x43800000
 8004c32:	4680      	mov	r8, r0
 8004c34:	f7fc f828 	bl	8000c88 <__aeabi_fmul>
 8004c38:	4601      	mov	r1, r0
 8004c3a:	4620      	mov	r0, r4
 8004c3c:	f7fb ff1a 	bl	8000a74 <__aeabi_fsub>
 8004c40:	f7fc f9e8 	bl	8001014 <__aeabi_f2iz>
 8004c44:	ab08      	add	r3, sp, #32
 8004c46:	f843 0027 	str.w	r0, [r3, r7, lsl #2]
 8004c4a:	4640      	mov	r0, r8
 8004c4c:	f7fc f9e2 	bl	8001014 <__aeabi_f2iz>
 8004c50:	1c7c      	adds	r4, r7, #1
 8004c52:	ab08      	add	r3, sp, #32
 8004c54:	3608      	adds	r6, #8
 8004c56:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8004c5a:	e744      	b.n	8004ae6 <__kernel_rem_pio2f+0x222>
 8004c5c:	4620      	mov	r0, r4
 8004c5e:	f7fc f9d9 	bl	8001014 <__aeabi_f2iz>
 8004c62:	ab08      	add	r3, sp, #32
 8004c64:	f843 0027 	str.w	r0, [r3, r7, lsl #2]
 8004c68:	463c      	mov	r4, r7
 8004c6a:	e73c      	b.n	8004ae6 <__kernel_rem_pio2f+0x222>
 8004c6c:	ab08      	add	r3, sp, #32
 8004c6e:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
 8004c72:	f7fb ffb5 	bl	8000be0 <__aeabi_i2f>
 8004c76:	4651      	mov	r1, sl
 8004c78:	f7fc f806 	bl	8000c88 <__aeabi_fmul>
 8004c7c:	4631      	mov	r1, r6
 8004c7e:	f847 0028 	str.w	r0, [r7, r8, lsl #2]
 8004c82:	4650      	mov	r0, sl
 8004c84:	f7fc f800 	bl	8000c88 <__aeabi_fmul>
 8004c88:	f108 38ff 	add.w	r8, r8, #4294967295
 8004c8c:	4682      	mov	sl, r0
 8004c8e:	e734      	b.n	8004afa <__kernel_rem_pio2f+0x236>
 8004c90:	f852 0028 	ldr.w	r0, [r2, r8, lsl #2]
 8004c94:	f857 1028 	ldr.w	r1, [r7, r8, lsl #2]
 8004c98:	9304      	str	r3, [sp, #16]
 8004c9a:	9203      	str	r2, [sp, #12]
 8004c9c:	f7fb fff4 	bl	8000c88 <__aeabi_fmul>
 8004ca0:	4601      	mov	r1, r0
 8004ca2:	4658      	mov	r0, fp
 8004ca4:	f7fb fee8 	bl	8000a78 <__addsf3>
 8004ca8:	e9dd 2303 	ldrd	r2, r3, [sp, #12]
 8004cac:	4683      	mov	fp, r0
 8004cae:	f108 0801 	add.w	r8, r8, #1
 8004cb2:	9902      	ldr	r1, [sp, #8]
 8004cb4:	4588      	cmp	r8, r1
 8004cb6:	dc01      	bgt.n	8004cbc <__kernel_rem_pio2f+0x3f8>
 8004cb8:	45c2      	cmp	sl, r8
 8004cba:	dae9      	bge.n	8004c90 <__kernel_rem_pio2f+0x3cc>
 8004cbc:	a958      	add	r1, sp, #352	; 0x160
 8004cbe:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8004cc2:	f841 bca0 	str.w	fp, [r1, #-160]
 8004cc6:	f10a 0a01 	add.w	sl, sl, #1
 8004cca:	3f04      	subs	r7, #4
 8004ccc:	e71f      	b.n	8004b0e <__kernel_rem_pio2f+0x24a>
 8004cce:	469b      	mov	fp, r3
 8004cd0:	f04f 0800 	mov.w	r8, #0
 8004cd4:	e7ed      	b.n	8004cb2 <__kernel_rem_pio2f+0x3ee>
 8004cd6:	f10d 0ac0 	add.w	sl, sp, #192	; 0xc0
 8004cda:	4456      	add	r6, sl
 8004cdc:	4637      	mov	r7, r6
 8004cde:	46a0      	mov	r8, r4
 8004ce0:	f1b8 0f00 	cmp.w	r8, #0
 8004ce4:	dc4a      	bgt.n	8004d7c <__kernel_rem_pio2f+0x4b8>
 8004ce6:	4627      	mov	r7, r4
 8004ce8:	2f01      	cmp	r7, #1
 8004cea:	dc60      	bgt.n	8004dae <__kernel_rem_pio2f+0x4ea>
 8004cec:	2000      	movs	r0, #0
 8004cee:	2c01      	cmp	r4, #1
 8004cf0:	dc74      	bgt.n	8004ddc <__kernel_rem_pio2f+0x518>
 8004cf2:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8004cf4:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8004cf6:	2d00      	cmp	r5, #0
 8004cf8:	d176      	bne.n	8004de8 <__kernel_rem_pio2f+0x524>
 8004cfa:	9901      	ldr	r1, [sp, #4]
 8004cfc:	600a      	str	r2, [r1, #0]
 8004cfe:	460a      	mov	r2, r1
 8004d00:	604b      	str	r3, [r1, #4]
 8004d02:	6090      	str	r0, [r2, #8]
 8004d04:	e00b      	b.n	8004d1e <__kernel_rem_pio2f+0x45a>
 8004d06:	f856 1024 	ldr.w	r1, [r6, r4, lsl #2]
 8004d0a:	f7fb feb5 	bl	8000a78 <__addsf3>
 8004d0e:	3c01      	subs	r4, #1
 8004d10:	2c00      	cmp	r4, #0
 8004d12:	daf8      	bge.n	8004d06 <__kernel_rem_pio2f+0x442>
 8004d14:	b10d      	cbz	r5, 8004d1a <__kernel_rem_pio2f+0x456>
 8004d16:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 8004d1a:	9b01      	ldr	r3, [sp, #4]
 8004d1c:	6018      	str	r0, [r3, #0]
 8004d1e:	f009 0007 	and.w	r0, r9, #7
 8004d22:	b059      	add	sp, #356	; 0x164
 8004d24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004d28:	2000      	movs	r0, #0
 8004d2a:	ae30      	add	r6, sp, #192	; 0xc0
 8004d2c:	e7f0      	b.n	8004d10 <__kernel_rem_pio2f+0x44c>
 8004d2e:	f857 1026 	ldr.w	r1, [r7, r6, lsl #2]
 8004d32:	f7fb fea1 	bl	8000a78 <__addsf3>
 8004d36:	3e01      	subs	r6, #1
 8004d38:	2e00      	cmp	r6, #0
 8004d3a:	daf8      	bge.n	8004d2e <__kernel_rem_pio2f+0x46a>
 8004d3c:	b1b5      	cbz	r5, 8004d6c <__kernel_rem_pio2f+0x4a8>
 8004d3e:	f100 4300 	add.w	r3, r0, #2147483648	; 0x80000000
 8004d42:	9a01      	ldr	r2, [sp, #4]
 8004d44:	af58      	add	r7, sp, #352	; 0x160
 8004d46:	4601      	mov	r1, r0
 8004d48:	6013      	str	r3, [r2, #0]
 8004d4a:	f857 0da0 	ldr.w	r0, [r7, #-160]!
 8004d4e:	f7fb fe91 	bl	8000a74 <__aeabi_fsub>
 8004d52:	2601      	movs	r6, #1
 8004d54:	42b4      	cmp	r4, r6
 8004d56:	da0b      	bge.n	8004d70 <__kernel_rem_pio2f+0x4ac>
 8004d58:	b10d      	cbz	r5, 8004d5e <__kernel_rem_pio2f+0x49a>
 8004d5a:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 8004d5e:	9b01      	ldr	r3, [sp, #4]
 8004d60:	6058      	str	r0, [r3, #4]
 8004d62:	e7dc      	b.n	8004d1e <__kernel_rem_pio2f+0x45a>
 8004d64:	4626      	mov	r6, r4
 8004d66:	2000      	movs	r0, #0
 8004d68:	af30      	add	r7, sp, #192	; 0xc0
 8004d6a:	e7e5      	b.n	8004d38 <__kernel_rem_pio2f+0x474>
 8004d6c:	4603      	mov	r3, r0
 8004d6e:	e7e8      	b.n	8004d42 <__kernel_rem_pio2f+0x47e>
 8004d70:	f857 1026 	ldr.w	r1, [r7, r6, lsl #2]
 8004d74:	f7fb fe80 	bl	8000a78 <__addsf3>
 8004d78:	3601      	adds	r6, #1
 8004d7a:	e7eb      	b.n	8004d54 <__kernel_rem_pio2f+0x490>
 8004d7c:	f857 2d04 	ldr.w	r2, [r7, #-4]!
 8004d80:	f108 38ff 	add.w	r8, r8, #4294967295
 8004d84:	687b      	ldr	r3, [r7, #4]
 8004d86:	4610      	mov	r0, r2
 8004d88:	4619      	mov	r1, r3
 8004d8a:	9303      	str	r3, [sp, #12]
 8004d8c:	9202      	str	r2, [sp, #8]
 8004d8e:	f7fb fe73 	bl	8000a78 <__addsf3>
 8004d92:	9a02      	ldr	r2, [sp, #8]
 8004d94:	4601      	mov	r1, r0
 8004d96:	4683      	mov	fp, r0
 8004d98:	4610      	mov	r0, r2
 8004d9a:	f7fb fe6b 	bl	8000a74 <__aeabi_fsub>
 8004d9e:	9b03      	ldr	r3, [sp, #12]
 8004da0:	4619      	mov	r1, r3
 8004da2:	f7fb fe69 	bl	8000a78 <__addsf3>
 8004da6:	f8c7 b000 	str.w	fp, [r7]
 8004daa:	6078      	str	r0, [r7, #4]
 8004dac:	e798      	b.n	8004ce0 <__kernel_rem_pio2f+0x41c>
 8004dae:	f856 3d04 	ldr.w	r3, [r6, #-4]!
 8004db2:	3f01      	subs	r7, #1
 8004db4:	f8d6 b004 	ldr.w	fp, [r6, #4]
 8004db8:	4618      	mov	r0, r3
 8004dba:	4659      	mov	r1, fp
 8004dbc:	9302      	str	r3, [sp, #8]
 8004dbe:	f7fb fe5b 	bl	8000a78 <__addsf3>
 8004dc2:	9b02      	ldr	r3, [sp, #8]
 8004dc4:	4601      	mov	r1, r0
 8004dc6:	4680      	mov	r8, r0
 8004dc8:	4618      	mov	r0, r3
 8004dca:	f7fb fe53 	bl	8000a74 <__aeabi_fsub>
 8004dce:	4659      	mov	r1, fp
 8004dd0:	f7fb fe52 	bl	8000a78 <__addsf3>
 8004dd4:	f8c6 8000 	str.w	r8, [r6]
 8004dd8:	6070      	str	r0, [r6, #4]
 8004dda:	e785      	b.n	8004ce8 <__kernel_rem_pio2f+0x424>
 8004ddc:	f85a 1024 	ldr.w	r1, [sl, r4, lsl #2]
 8004de0:	f7fb fe4a 	bl	8000a78 <__addsf3>
 8004de4:	3c01      	subs	r4, #1
 8004de6:	e782      	b.n	8004cee <__kernel_rem_pio2f+0x42a>
 8004de8:	9901      	ldr	r1, [sp, #4]
 8004dea:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8004dee:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8004df2:	600a      	str	r2, [r1, #0]
 8004df4:	604b      	str	r3, [r1, #4]
 8004df6:	460a      	mov	r2, r1
 8004df8:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 8004dfc:	e781      	b.n	8004d02 <__kernel_rem_pio2f+0x43e>
 8004dfe:	bf00      	nop

08004e00 <__kernel_sinf>:
 8004e00:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004e04:	f020 4300 	bic.w	r3, r0, #2147483648	; 0x80000000
 8004e08:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 8004e0c:	4604      	mov	r4, r0
 8004e0e:	460f      	mov	r7, r1
 8004e10:	4691      	mov	r9, r2
 8004e12:	da03      	bge.n	8004e1c <__kernel_sinf+0x1c>
 8004e14:	f7fc f8fe 	bl	8001014 <__aeabi_f2iz>
 8004e18:	2800      	cmp	r0, #0
 8004e1a:	d035      	beq.n	8004e88 <__kernel_sinf+0x88>
 8004e1c:	4621      	mov	r1, r4
 8004e1e:	4620      	mov	r0, r4
 8004e20:	f7fb ff32 	bl	8000c88 <__aeabi_fmul>
 8004e24:	4605      	mov	r5, r0
 8004e26:	4601      	mov	r1, r0
 8004e28:	4620      	mov	r0, r4
 8004e2a:	f7fb ff2d 	bl	8000c88 <__aeabi_fmul>
 8004e2e:	4929      	ldr	r1, [pc, #164]	; (8004ed4 <__kernel_sinf+0xd4>)
 8004e30:	4606      	mov	r6, r0
 8004e32:	4628      	mov	r0, r5
 8004e34:	f7fb ff28 	bl	8000c88 <__aeabi_fmul>
 8004e38:	4927      	ldr	r1, [pc, #156]	; (8004ed8 <__kernel_sinf+0xd8>)
 8004e3a:	f7fb fe1b 	bl	8000a74 <__aeabi_fsub>
 8004e3e:	4629      	mov	r1, r5
 8004e40:	f7fb ff22 	bl	8000c88 <__aeabi_fmul>
 8004e44:	4925      	ldr	r1, [pc, #148]	; (8004edc <__kernel_sinf+0xdc>)
 8004e46:	f7fb fe17 	bl	8000a78 <__addsf3>
 8004e4a:	4629      	mov	r1, r5
 8004e4c:	f7fb ff1c 	bl	8000c88 <__aeabi_fmul>
 8004e50:	4923      	ldr	r1, [pc, #140]	; (8004ee0 <__kernel_sinf+0xe0>)
 8004e52:	f7fb fe0f 	bl	8000a74 <__aeabi_fsub>
 8004e56:	4629      	mov	r1, r5
 8004e58:	f7fb ff16 	bl	8000c88 <__aeabi_fmul>
 8004e5c:	4921      	ldr	r1, [pc, #132]	; (8004ee4 <__kernel_sinf+0xe4>)
 8004e5e:	f7fb fe0b 	bl	8000a78 <__addsf3>
 8004e62:	4680      	mov	r8, r0
 8004e64:	f1b9 0f00 	cmp.w	r9, #0
 8004e68:	d111      	bne.n	8004e8e <__kernel_sinf+0x8e>
 8004e6a:	4601      	mov	r1, r0
 8004e6c:	4628      	mov	r0, r5
 8004e6e:	f7fb ff0b 	bl	8000c88 <__aeabi_fmul>
 8004e72:	491d      	ldr	r1, [pc, #116]	; (8004ee8 <__kernel_sinf+0xe8>)
 8004e74:	f7fb fdfe 	bl	8000a74 <__aeabi_fsub>
 8004e78:	4631      	mov	r1, r6
 8004e7a:	f7fb ff05 	bl	8000c88 <__aeabi_fmul>
 8004e7e:	4601      	mov	r1, r0
 8004e80:	4620      	mov	r0, r4
 8004e82:	f7fb fdf9 	bl	8000a78 <__addsf3>
 8004e86:	4604      	mov	r4, r0
 8004e88:	4620      	mov	r0, r4
 8004e8a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004e8e:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
 8004e92:	4638      	mov	r0, r7
 8004e94:	f7fb fef8 	bl	8000c88 <__aeabi_fmul>
 8004e98:	4641      	mov	r1, r8
 8004e9a:	4681      	mov	r9, r0
 8004e9c:	4630      	mov	r0, r6
 8004e9e:	f7fb fef3 	bl	8000c88 <__aeabi_fmul>
 8004ea2:	4601      	mov	r1, r0
 8004ea4:	4648      	mov	r0, r9
 8004ea6:	f7fb fde5 	bl	8000a74 <__aeabi_fsub>
 8004eaa:	4629      	mov	r1, r5
 8004eac:	f7fb feec 	bl	8000c88 <__aeabi_fmul>
 8004eb0:	4639      	mov	r1, r7
 8004eb2:	f7fb fddf 	bl	8000a74 <__aeabi_fsub>
 8004eb6:	490c      	ldr	r1, [pc, #48]	; (8004ee8 <__kernel_sinf+0xe8>)
 8004eb8:	4605      	mov	r5, r0
 8004eba:	4630      	mov	r0, r6
 8004ebc:	f7fb fee4 	bl	8000c88 <__aeabi_fmul>
 8004ec0:	4601      	mov	r1, r0
 8004ec2:	4628      	mov	r0, r5
 8004ec4:	f7fb fdd8 	bl	8000a78 <__addsf3>
 8004ec8:	4601      	mov	r1, r0
 8004eca:	4620      	mov	r0, r4
 8004ecc:	f7fb fdd2 	bl	8000a74 <__aeabi_fsub>
 8004ed0:	e7d9      	b.n	8004e86 <__kernel_sinf+0x86>
 8004ed2:	bf00      	nop
 8004ed4:	2f2ec9d3 	.word	0x2f2ec9d3
 8004ed8:	32d72f34 	.word	0x32d72f34
 8004edc:	3638ef1b 	.word	0x3638ef1b
 8004ee0:	39500d01 	.word	0x39500d01
 8004ee4:	3c088889 	.word	0x3c088889
 8004ee8:	3e2aaaab 	.word	0x3e2aaaab

08004eec <fabs>:
 8004eec:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8004ef0:	4619      	mov	r1, r3
 8004ef2:	4770      	bx	lr
 8004ef4:	0000      	movs	r0, r0
	...

08004ef8 <floor>:
 8004ef8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004efc:	f3c1 580a 	ubfx	r8, r1, #20, #11
 8004f00:	f2a8 36ff 	subw	r6, r8, #1023	; 0x3ff
 8004f04:	2e13      	cmp	r6, #19
 8004f06:	4607      	mov	r7, r0
 8004f08:	460b      	mov	r3, r1
 8004f0a:	460c      	mov	r4, r1
 8004f0c:	4605      	mov	r5, r0
 8004f0e:	dc35      	bgt.n	8004f7c <floor+0x84>
 8004f10:	2e00      	cmp	r6, #0
 8004f12:	da16      	bge.n	8004f42 <floor+0x4a>
 8004f14:	a336      	add	r3, pc, #216	; (adr r3, 8004ff0 <floor+0xf8>)
 8004f16:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004f1a:	f7fb f92f 	bl	800017c <__adddf3>
 8004f1e:	2200      	movs	r2, #0
 8004f20:	2300      	movs	r3, #0
 8004f22:	f7fb fd71 	bl	8000a08 <__aeabi_dcmpgt>
 8004f26:	b148      	cbz	r0, 8004f3c <floor+0x44>
 8004f28:	2c00      	cmp	r4, #0
 8004f2a:	da5b      	bge.n	8004fe4 <floor+0xec>
 8004f2c:	2500      	movs	r5, #0
 8004f2e:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 8004f32:	4a31      	ldr	r2, [pc, #196]	; (8004ff8 <floor+0x100>)
 8004f34:	433b      	orrs	r3, r7
 8004f36:	42ab      	cmp	r3, r5
 8004f38:	bf18      	it	ne
 8004f3a:	4614      	movne	r4, r2
 8004f3c:	4623      	mov	r3, r4
 8004f3e:	462f      	mov	r7, r5
 8004f40:	e026      	b.n	8004f90 <floor+0x98>
 8004f42:	4a2e      	ldr	r2, [pc, #184]	; (8004ffc <floor+0x104>)
 8004f44:	fa42 f806 	asr.w	r8, r2, r6
 8004f48:	ea01 0208 	and.w	r2, r1, r8
 8004f4c:	4302      	orrs	r2, r0
 8004f4e:	d01f      	beq.n	8004f90 <floor+0x98>
 8004f50:	a327      	add	r3, pc, #156	; (adr r3, 8004ff0 <floor+0xf8>)
 8004f52:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004f56:	f7fb f911 	bl	800017c <__adddf3>
 8004f5a:	2200      	movs	r2, #0
 8004f5c:	2300      	movs	r3, #0
 8004f5e:	f7fb fd53 	bl	8000a08 <__aeabi_dcmpgt>
 8004f62:	2800      	cmp	r0, #0
 8004f64:	d0ea      	beq.n	8004f3c <floor+0x44>
 8004f66:	2c00      	cmp	r4, #0
 8004f68:	bfbe      	ittt	lt
 8004f6a:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 8004f6e:	fa43 f606 	asrlt.w	r6, r3, r6
 8004f72:	19a4      	addlt	r4, r4, r6
 8004f74:	ea24 0408 	bic.w	r4, r4, r8
 8004f78:	2500      	movs	r5, #0
 8004f7a:	e7df      	b.n	8004f3c <floor+0x44>
 8004f7c:	2e33      	cmp	r6, #51	; 0x33
 8004f7e:	dd0b      	ble.n	8004f98 <floor+0xa0>
 8004f80:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8004f84:	d104      	bne.n	8004f90 <floor+0x98>
 8004f86:	4602      	mov	r2, r0
 8004f88:	f7fb f8f8 	bl	800017c <__adddf3>
 8004f8c:	4607      	mov	r7, r0
 8004f8e:	460b      	mov	r3, r1
 8004f90:	4638      	mov	r0, r7
 8004f92:	4619      	mov	r1, r3
 8004f94:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004f98:	f04f 32ff 	mov.w	r2, #4294967295
 8004f9c:	f2a8 4813 	subw	r8, r8, #1043	; 0x413
 8004fa0:	fa22 f808 	lsr.w	r8, r2, r8
 8004fa4:	ea18 0f00 	tst.w	r8, r0
 8004fa8:	d0f2      	beq.n	8004f90 <floor+0x98>
 8004faa:	a311      	add	r3, pc, #68	; (adr r3, 8004ff0 <floor+0xf8>)
 8004fac:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004fb0:	f7fb f8e4 	bl	800017c <__adddf3>
 8004fb4:	2200      	movs	r2, #0
 8004fb6:	2300      	movs	r3, #0
 8004fb8:	f7fb fd26 	bl	8000a08 <__aeabi_dcmpgt>
 8004fbc:	2800      	cmp	r0, #0
 8004fbe:	d0bd      	beq.n	8004f3c <floor+0x44>
 8004fc0:	2c00      	cmp	r4, #0
 8004fc2:	da02      	bge.n	8004fca <floor+0xd2>
 8004fc4:	2e14      	cmp	r6, #20
 8004fc6:	d103      	bne.n	8004fd0 <floor+0xd8>
 8004fc8:	3401      	adds	r4, #1
 8004fca:	ea25 0508 	bic.w	r5, r5, r8
 8004fce:	e7b5      	b.n	8004f3c <floor+0x44>
 8004fd0:	2301      	movs	r3, #1
 8004fd2:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 8004fd6:	fa03 f606 	lsl.w	r6, r3, r6
 8004fda:	4435      	add	r5, r6
 8004fdc:	42bd      	cmp	r5, r7
 8004fde:	bf38      	it	cc
 8004fe0:	18e4      	addcc	r4, r4, r3
 8004fe2:	e7f2      	b.n	8004fca <floor+0xd2>
 8004fe4:	2500      	movs	r5, #0
 8004fe6:	462c      	mov	r4, r5
 8004fe8:	e7a8      	b.n	8004f3c <floor+0x44>
 8004fea:	bf00      	nop
 8004fec:	f3af 8000 	nop.w
 8004ff0:	8800759c 	.word	0x8800759c
 8004ff4:	7e37e43c 	.word	0x7e37e43c
 8004ff8:	bff00000 	.word	0xbff00000
 8004ffc:	000fffff 	.word	0x000fffff

08005000 <scalbn>:
 8005000:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005002:	4616      	mov	r6, r2
 8005004:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8005008:	4604      	mov	r4, r0
 800500a:	460d      	mov	r5, r1
 800500c:	460b      	mov	r3, r1
 800500e:	b982      	cbnz	r2, 8005032 <scalbn+0x32>
 8005010:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8005014:	4303      	orrs	r3, r0
 8005016:	d034      	beq.n	8005082 <scalbn+0x82>
 8005018:	4b2d      	ldr	r3, [pc, #180]	; (80050d0 <scalbn+0xd0>)
 800501a:	2200      	movs	r2, #0
 800501c:	f7fb fa64 	bl	80004e8 <__aeabi_dmul>
 8005020:	4b2c      	ldr	r3, [pc, #176]	; (80050d4 <scalbn+0xd4>)
 8005022:	4604      	mov	r4, r0
 8005024:	429e      	cmp	r6, r3
 8005026:	460d      	mov	r5, r1
 8005028:	da0d      	bge.n	8005046 <scalbn+0x46>
 800502a:	a325      	add	r3, pc, #148	; (adr r3, 80050c0 <scalbn+0xc0>)
 800502c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005030:	e01c      	b.n	800506c <scalbn+0x6c>
 8005032:	f240 77ff 	movw	r7, #2047	; 0x7ff
 8005036:	42ba      	cmp	r2, r7
 8005038:	d109      	bne.n	800504e <scalbn+0x4e>
 800503a:	4602      	mov	r2, r0
 800503c:	f7fb f89e 	bl	800017c <__adddf3>
 8005040:	4604      	mov	r4, r0
 8005042:	460d      	mov	r5, r1
 8005044:	e01d      	b.n	8005082 <scalbn+0x82>
 8005046:	460b      	mov	r3, r1
 8005048:	f3c1 520a 	ubfx	r2, r1, #20, #11
 800504c:	3a36      	subs	r2, #54	; 0x36
 800504e:	f240 71fe 	movw	r1, #2046	; 0x7fe
 8005052:	4432      	add	r2, r6
 8005054:	428a      	cmp	r2, r1
 8005056:	dd0c      	ble.n	8005072 <scalbn+0x72>
 8005058:	4622      	mov	r2, r4
 800505a:	462b      	mov	r3, r5
 800505c:	a11a      	add	r1, pc, #104	; (adr r1, 80050c8 <scalbn+0xc8>)
 800505e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8005062:	f000 f8cb 	bl	80051fc <copysign>
 8005066:	a318      	add	r3, pc, #96	; (adr r3, 80050c8 <scalbn+0xc8>)
 8005068:	e9d3 2300 	ldrd	r2, r3, [r3]
 800506c:	f7fb fa3c 	bl	80004e8 <__aeabi_dmul>
 8005070:	e7e6      	b.n	8005040 <scalbn+0x40>
 8005072:	2a00      	cmp	r2, #0
 8005074:	dd08      	ble.n	8005088 <scalbn+0x88>
 8005076:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 800507a:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 800507e:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8005082:	4620      	mov	r0, r4
 8005084:	4629      	mov	r1, r5
 8005086:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005088:	f112 0f35 	cmn.w	r2, #53	; 0x35
 800508c:	da0b      	bge.n	80050a6 <scalbn+0xa6>
 800508e:	f24c 3350 	movw	r3, #50000	; 0xc350
 8005092:	429e      	cmp	r6, r3
 8005094:	4622      	mov	r2, r4
 8005096:	462b      	mov	r3, r5
 8005098:	dce0      	bgt.n	800505c <scalbn+0x5c>
 800509a:	a109      	add	r1, pc, #36	; (adr r1, 80050c0 <scalbn+0xc0>)
 800509c:	e9d1 0100 	ldrd	r0, r1, [r1]
 80050a0:	f000 f8ac 	bl	80051fc <copysign>
 80050a4:	e7c1      	b.n	800502a <scalbn+0x2a>
 80050a6:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 80050aa:	3236      	adds	r2, #54	; 0x36
 80050ac:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 80050b0:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 80050b4:	4620      	mov	r0, r4
 80050b6:	4629      	mov	r1, r5
 80050b8:	2200      	movs	r2, #0
 80050ba:	4b07      	ldr	r3, [pc, #28]	; (80050d8 <scalbn+0xd8>)
 80050bc:	e7d6      	b.n	800506c <scalbn+0x6c>
 80050be:	bf00      	nop
 80050c0:	c2f8f359 	.word	0xc2f8f359
 80050c4:	01a56e1f 	.word	0x01a56e1f
 80050c8:	8800759c 	.word	0x8800759c
 80050cc:	7e37e43c 	.word	0x7e37e43c
 80050d0:	43500000 	.word	0x43500000
 80050d4:	ffff3cb0 	.word	0xffff3cb0
 80050d8:	3c900000 	.word	0x3c900000

080050dc <fabsf>:
 80050dc:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 80050e0:	4770      	bx	lr
	...

080050e4 <floorf>:
 80050e4:	b570      	push	{r4, r5, r6, lr}
 80050e6:	f020 4600 	bic.w	r6, r0, #2147483648	; 0x80000000
 80050ea:	0df5      	lsrs	r5, r6, #23
 80050ec:	3d7f      	subs	r5, #127	; 0x7f
 80050ee:	2d16      	cmp	r5, #22
 80050f0:	4601      	mov	r1, r0
 80050f2:	4604      	mov	r4, r0
 80050f4:	dc26      	bgt.n	8005144 <floorf+0x60>
 80050f6:	2d00      	cmp	r5, #0
 80050f8:	da0e      	bge.n	8005118 <floorf+0x34>
 80050fa:	4917      	ldr	r1, [pc, #92]	; (8005158 <floorf+0x74>)
 80050fc:	f7fb fcbc 	bl	8000a78 <__addsf3>
 8005100:	2100      	movs	r1, #0
 8005102:	f7fb ff7d 	bl	8001000 <__aeabi_fcmpgt>
 8005106:	b128      	cbz	r0, 8005114 <floorf+0x30>
 8005108:	2c00      	cmp	r4, #0
 800510a:	da23      	bge.n	8005154 <floorf+0x70>
 800510c:	4b13      	ldr	r3, [pc, #76]	; (800515c <floorf+0x78>)
 800510e:	2e00      	cmp	r6, #0
 8005110:	bf18      	it	ne
 8005112:	461c      	movne	r4, r3
 8005114:	4621      	mov	r1, r4
 8005116:	e01b      	b.n	8005150 <floorf+0x6c>
 8005118:	4e11      	ldr	r6, [pc, #68]	; (8005160 <floorf+0x7c>)
 800511a:	412e      	asrs	r6, r5
 800511c:	4230      	tst	r0, r6
 800511e:	d017      	beq.n	8005150 <floorf+0x6c>
 8005120:	490d      	ldr	r1, [pc, #52]	; (8005158 <floorf+0x74>)
 8005122:	f7fb fca9 	bl	8000a78 <__addsf3>
 8005126:	2100      	movs	r1, #0
 8005128:	f7fb ff6a 	bl	8001000 <__aeabi_fcmpgt>
 800512c:	2800      	cmp	r0, #0
 800512e:	d0f1      	beq.n	8005114 <floorf+0x30>
 8005130:	2c00      	cmp	r4, #0
 8005132:	bfbe      	ittt	lt
 8005134:	f44f 0300 	movlt.w	r3, #8388608	; 0x800000
 8005138:	fa43 f505 	asrlt.w	r5, r3, r5
 800513c:	1964      	addlt	r4, r4, r5
 800513e:	ea24 0406 	bic.w	r4, r4, r6
 8005142:	e7e7      	b.n	8005114 <floorf+0x30>
 8005144:	f1b6 4fff 	cmp.w	r6, #2139095040	; 0x7f800000
 8005148:	d302      	bcc.n	8005150 <floorf+0x6c>
 800514a:	f7fb fc95 	bl	8000a78 <__addsf3>
 800514e:	4601      	mov	r1, r0
 8005150:	4608      	mov	r0, r1
 8005152:	bd70      	pop	{r4, r5, r6, pc}
 8005154:	2400      	movs	r4, #0
 8005156:	e7dd      	b.n	8005114 <floorf+0x30>
 8005158:	7149f2ca 	.word	0x7149f2ca
 800515c:	bf800000 	.word	0xbf800000
 8005160:	007fffff 	.word	0x007fffff

08005164 <scalbnf>:
 8005164:	f030 4300 	bics.w	r3, r0, #2147483648	; 0x80000000
 8005168:	b510      	push	{r4, lr}
 800516a:	4602      	mov	r2, r0
 800516c:	460c      	mov	r4, r1
 800516e:	4601      	mov	r1, r0
 8005170:	d027      	beq.n	80051c2 <scalbnf+0x5e>
 8005172:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8005176:	d303      	bcc.n	8005180 <scalbnf+0x1c>
 8005178:	f7fb fc7e 	bl	8000a78 <__addsf3>
 800517c:	4602      	mov	r2, r0
 800517e:	e020      	b.n	80051c2 <scalbnf+0x5e>
 8005180:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8005184:	d215      	bcs.n	80051b2 <scalbnf+0x4e>
 8005186:	f04f 4198 	mov.w	r1, #1275068416	; 0x4c000000
 800518a:	f7fb fd7d 	bl	8000c88 <__aeabi_fmul>
 800518e:	4b18      	ldr	r3, [pc, #96]	; (80051f0 <scalbnf+0x8c>)
 8005190:	4602      	mov	r2, r0
 8005192:	429c      	cmp	r4, r3
 8005194:	db22      	blt.n	80051dc <scalbnf+0x78>
 8005196:	f3c0 53c7 	ubfx	r3, r0, #23, #8
 800519a:	3b19      	subs	r3, #25
 800519c:	4423      	add	r3, r4
 800519e:	2bfe      	cmp	r3, #254	; 0xfe
 80051a0:	dd09      	ble.n	80051b6 <scalbnf+0x52>
 80051a2:	4611      	mov	r1, r2
 80051a4:	4813      	ldr	r0, [pc, #76]	; (80051f4 <scalbnf+0x90>)
 80051a6:	f000 f832 	bl	800520e <copysignf>
 80051aa:	4912      	ldr	r1, [pc, #72]	; (80051f4 <scalbnf+0x90>)
 80051ac:	f7fb fd6c 	bl	8000c88 <__aeabi_fmul>
 80051b0:	e7e4      	b.n	800517c <scalbnf+0x18>
 80051b2:	0ddb      	lsrs	r3, r3, #23
 80051b4:	e7f2      	b.n	800519c <scalbnf+0x38>
 80051b6:	2b00      	cmp	r3, #0
 80051b8:	dd05      	ble.n	80051c6 <scalbnf+0x62>
 80051ba:	f020 40ff 	bic.w	r0, r0, #2139095040	; 0x7f800000
 80051be:	ea40 52c3 	orr.w	r2, r0, r3, lsl #23
 80051c2:	4610      	mov	r0, r2
 80051c4:	bd10      	pop	{r4, pc}
 80051c6:	f113 0f16 	cmn.w	r3, #22
 80051ca:	da09      	bge.n	80051e0 <scalbnf+0x7c>
 80051cc:	f24c 3350 	movw	r3, #50000	; 0xc350
 80051d0:	429c      	cmp	r4, r3
 80051d2:	4611      	mov	r1, r2
 80051d4:	dce6      	bgt.n	80051a4 <scalbnf+0x40>
 80051d6:	4808      	ldr	r0, [pc, #32]	; (80051f8 <scalbnf+0x94>)
 80051d8:	f000 f819 	bl	800520e <copysignf>
 80051dc:	4906      	ldr	r1, [pc, #24]	; (80051f8 <scalbnf+0x94>)
 80051de:	e7e5      	b.n	80051ac <scalbnf+0x48>
 80051e0:	3319      	adds	r3, #25
 80051e2:	f020 40ff 	bic.w	r0, r0, #2139095040	; 0x7f800000
 80051e6:	f04f 514c 	mov.w	r1, #855638016	; 0x33000000
 80051ea:	ea40 50c3 	orr.w	r0, r0, r3, lsl #23
 80051ee:	e7dd      	b.n	80051ac <scalbnf+0x48>
 80051f0:	ffff3cb0 	.word	0xffff3cb0
 80051f4:	7149f2ca 	.word	0x7149f2ca
 80051f8:	0da24260 	.word	0x0da24260

080051fc <copysign>:
 80051fc:	b530      	push	{r4, r5, lr}
 80051fe:	f021 4200 	bic.w	r2, r1, #2147483648	; 0x80000000
 8005202:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8005206:	ea42 0503 	orr.w	r5, r2, r3
 800520a:	4629      	mov	r1, r5
 800520c:	bd30      	pop	{r4, r5, pc}

0800520e <copysignf>:
 800520e:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8005212:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 8005216:	4308      	orrs	r0, r1
 8005218:	4770      	bx	lr
	...

0800521c <_init>:
 800521c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800521e:	bf00      	nop
 8005220:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005222:	bc08      	pop	{r3}
 8005224:	469e      	mov	lr, r3
 8005226:	4770      	bx	lr

08005228 <_fini>:
 8005228:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800522a:	bf00      	nop
 800522c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800522e:	bc08      	pop	{r3}
 8005230:	469e      	mov	lr, r3
 8005232:	4770      	bx	lr
